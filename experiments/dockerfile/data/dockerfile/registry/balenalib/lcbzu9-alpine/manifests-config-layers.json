{
    "manifests": {
        "20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ad4779905e4e84a624a48e4411fe21496102734010a1a907f2c671e0f9a57607",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559cf85a6ec24cb0c9e36b8498ad9f3a8a47f138170b68da473815c59ce5726",
                    "size": 884480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3ec480f7d069aa69e1c1527f32e5cd2db1e399048456bad62c2b80e5fac05e",
                    "size": 473
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:759be42bc6f2d7a8c1446262014f7d0b4ba400a988d1af43d1acab425ba521de",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea60fc98d6e2f6956d9b5e7c60170dd2536fecb1052a824887b5f625bee4c172",
                    "size": 884481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fce9fb9b5870d34b579942ae51d48ec44dfea6817b29cf3e2dd8f2cbf7006e24",
                    "size": 474
                }
            ]
        },
        "20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e1d1f033a8d3f54dbf6ed0c33f1f5f285ed4573c3a4090070c7d5ebf4f10601",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf66be63e26b49489b5f56887a457c0c29b3af79dd7afeefcc729ff6b8fb80f2",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d77102ebb29657f310216c6cc482b7d5da67f49e162184e858debaab47ae13bb",
                    "size": 473
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:921e6f3636a47d0c89baad03633d2c0e97228db6a878895a973ccf899f62fb2f",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c89bf05306684e554ecf7a39fa3851839aa2f8b54244ffe3d3b8931b65e130",
                    "size": 884505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1cfe278c1abb1d712bf2000913f586f33fbc4a49451f2d125fccfad094c655",
                    "size": 473
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a9efea883450cc6b1d920bef7c6d83608536e6b78e98315e69d7edb2c469c3e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f55c432133cc4c1516de98914531bfe44751efbdb2950646d6d0199909204ce0",
                    "size": 884628
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b966c85e12e067169cbe26ba52f3822299cd7b7a88f27244c4a6bcbeb60e741",
                    "size": 473
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:752bf72f6a7eabb6706bfc74318ee8dfbdb74b7eea701adce773807bb68fc28f",
                "size": 6355
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9b8c3a40a24b7df4c643c0946b1ab3cab238152df896ea6f599b2730762404f",
                    "size": 5645873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d3c3f71b47459b19ca08e92e87b0916a670d257d0bec83c9a8d0b3ede17a5b7",
                    "size": 471
                }
            ]
        },
        "3.12-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e66f10e843bf0ee77fecca93519bcf0d809294ea05011b98f9462e5ba75a37e5",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57df70169f79c255e8b1ad2d73f572282dc16ea6ad47b15c89078e6cfd267def",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:331583ae3fdecf2583625cf32faf3ed7dfdf0e2cda80561a55ea0fcbe2669fc9",
                    "size": 11646781
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18c49974fa7440da020d3abe10b4d31bf181e18358753a76fefe45bfdda935e4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94fb3f37674efd5eea1381c57e3163849ca7566f82a6c09bda258840a685aa1b",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b55c0ed0b2423a72099052bfc587fb8d779773b5d65df3af657fc40cd723cb9",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c38c6eb69c70a394dc539985169400b80c203db92c70e25c18ef9c30e196d52d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c01b719d483377c69c84d0222af72084997f13ee46e8b825fe7cfc2bbe9027",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:124e41ae37206be7e28a6051ed86cbc3f907d4866d6f465d1fdbf5c7f49dc531",
                    "size": 5645860
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed143140a0f5146115ce86928994fb7563bb3109e2a3e0aad0e01f3748eec0f",
                    "size": 471
                }
            ]
        },
        "3.12-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06fd34847ddaaf860a773cfb49fbc6df33fbb69b91dbe726b2a1e4ea09d6a92a",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f5d21639880576a697503a23ddaae8ae707e5863298069f5887df3026cf4eb",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b85bac4b624bad15aedac874f6971810dc8e0ec2805c3af37ce92a43e685404",
                    "size": 11646807
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc574c555be827a0dbde5edb8516586374b42dd10feadeaea82ce0c5ce4bf79f",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f955f49063d83cbaaebb17c33a84d247f084374e0aed5093fae500d7afec4b2",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2eba88ef1a5a378dd9bf149cdc479facfcef2a66eb2b85b927908ff99ccd94",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b123b2b26ce703a3e3738b56b5285b45575e08f81724d259fafc7576fb4ed01",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:287b29ce00c7179bf7689bd4d5146a522b7d6fb4cfc8489e33848cd46b659b8f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65ba823082e5ba6a6f36c6b03a84460ce89a4d56c0ea4b7db63f1d1e0b4306b",
                    "size": 5645872
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce4f2ec732764764cdd6a39f46abe39514dafdc7fbbf50001d39d2b5a7a804d9",
                    "size": 473
                }
            ]
        },
        "3.12-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b1b47670fc4e305ec9b67366ae2e5b74789249363ea0fd0192a7d7176c0963a4",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b681113aff97ff779a8c0dfd1d02dde5c56887e6e6f5d2f3bfa122ebc4f70d5",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8952bddd3e502c3818ddb6dc533f657be4f51205b480dcb681579377843f2452",
                    "size": 11646806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7dc85ef81fce9a9832ebbdb634d652f591cc52d16334c35e474c8426a553752",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef809ebdd563db5edcb85a8c5c6f5da5d59299b952d5196edab6e40cb12d991d",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:749c8b08096215dd7c5497725e347e6748060e71a1e3a9e461734289a7c9d240",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:117fe0028f822493b2df9a7b5e677e82a16022c7b4c8c54edcecf8ba0e4716ff",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08568fcac9fdbfc32cf6f436adc0207c50fc84165c6709e42b3fd37f05ba95",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3704327274fdbab6e410e9ab8dd8c24042a364d5eb05b6ebccedfdd2635d8f4e",
                    "size": 5645869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:013ecceb4d450ba3a397a9d61809e6e5b1c2ce81c44f6a5b004ec6589e463b2d",
                    "size": 473
                }
            ]
        },
        "3.12-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bd643fe5275b2dee2c3ba4c356e6a2aa828177693da53f1dcbb03b0557878987",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06ec9137a42a38d1f061b0a0cbf54ecb684dd44f4ee5157007fe6a9e747f8e53",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8dada1054b17fb20bb79832b925c8b9dce622edca348fd2377bd653981a043",
                    "size": 11646785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45ee405c7c3d08ff739dc4b829196eb9370ad227c1bdd5af58964bc3d24b3f26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:729cf9b2c0bb97fd71fc186195cc0d1c482929c03f976d5cc07d990c1724af5c",
                    "size": 5645872
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5752d1f295de83232e05ab8d11385f139eec076c197197ff3ec8690af735c179",
                    "size": 472
                }
            ]
        },
        "3.12-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:64c1c45982ec2f5a1111a9303a811bc3b5864521af4827e6492787014012c7dd",
                "size": 6355
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eebfc98a8c641639d549ccf1ac478d8f076d9a32316453f3b0fba242c52131dd",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:592a0df72b23acf32b600cb56a00e37340811c535c6160fdbf838cbb2b74a933",
                    "size": 11646763
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12bac0bcbb3d24985664b5d29e2b20644967bab5df252f5be1941f76cd5d82bd",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4930b1fa170111e82d9685f1b45341cfcfb75835f45973cf73e2ecd66e7bee5d",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0048025b1f07896335092b0274365a0d170e96d8f7e508deedea11d10cd23583",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:167cabc231b87d69dc9d4f58a73f14b3d9c0e2039cd3775564151fbc2619912f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:703f4f84c606628c706c68af54d17ae66e58e753f9a498335bd1bf831a994726",
                    "size": 5645870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1749c3542c760e59c1240c15cb20e621a78de3acd17c881d5b0d080a12f74f89",
                    "size": 472
                }
            ]
        },
        "3.12-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:752bf72f6a7eabb6706bfc74318ee8dfbdb74b7eea701adce773807bb68fc28f",
                "size": 6355
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9b8c3a40a24b7df4c643c0946b1ab3cab238152df896ea6f599b2730762404f",
                    "size": 5645873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d3c3f71b47459b19ca08e92e87b0916a670d257d0bec83c9a8d0b3ede17a5b7",
                    "size": 471
                }
            ]
        },
        "3.12-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:75650a65df266cf28ea727720a7affaa242472a8dbb40023e9f8cb2da99c4e55",
                "size": 6977
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e385c4fb875fde349d76c4bcd65c042675a12567f31bbf56dfb9941e6aa07ea9",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7ea170833cd7f7e667e607ddfdd87807de3b423144b3b5a6c7d55621ce97c56",
                    "size": 11646767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aafab088444c3e02c37a93625088342329a002b269e642918265382ac6728da",
                    "size": 144486928
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c66805e01748fbaaa45e04315f3756760941fa1b0088a1215b1bc339e5e5806",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1e0098d5e4668d3ba2e2a0e0de59b43db2d079323313ab74a070980b32b2201",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9158b3e2849fdd9d1d337201c10967ad29da3b95e3c7ad282fbeecad994d93d",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2984b60387162319205bdb2b27d6be3e4b03f044434c54ad3b028bf176f1fe57",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd3d6d27fecfc4e110c53634356d78f1b9d28331ea6e0fbc0e13f7abed5ee88c",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98d6f119bec70f1d83065f559cfea293a3d00f40e792cf65b2664d9615fb50e7",
                    "size": 5579543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dac5f27613df66b2982fadc8e7544e634357f41037cbc4383e877fb82414c07",
                    "size": 470
                }
            ]
        },
        "3.12-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e0db4809e49e575bbeebc55aed68d3b6d2535d274351ad5bf6204f5c8d31557c",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f1b11b7c50cc4d3b819ad72480b99de9119ce2c2870ceca069961d9c2328b1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17316e3346384171d40984a484f9ef74d6f8f2206089898f44db882c0072ec58",
                    "size": 11646792
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b63cccb5bd53e2398c39dac86aecba9abf4f6f1f6ec86f2c4de6c63f77e83eb",
                    "size": 144486990
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d43a683caeaa82518c0e3970fb685d51794c5846f869a8461736d887ccd05f13",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5759f4e513e6afd62f0569822c636fb26f6b36a69336441e289f246e7d5fe7f3",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc91630791e5c4ae8f3c1b7ec61025b835f70168d263751245bb784fc1932563",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2de7ecb64f2f6022b61a4687d8a8fd37f2a5c74526e7c058cc5acee029738e9",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23370a332a0d07b4af8f297c8e8059cf51c2614480e569e58668be4699cbbc4c",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:486916607ebc14fa5af0267b0440a8fb8274b860ae1be38ca5992da1616742cf",
                    "size": 5579539
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38a1f9f9dcb1070e35027310d86163c114e4f5bc78d3a5a70ad25ed3fa75889d",
                    "size": 472
                }
            ]
        },
        "3.12-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ffe68f4f62bb3964ea98362fe1bd71842be68fad83bae9a48176675ad20e6d7e",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faa6680d91e4e87f3458d7196bdb80c1b70211257317e9007ff47193b84fab9d",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb986990b4225e80e4b26fefb1247cd87dbf78c638ef1127d23d282cfb71da10",
                    "size": 11646770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0545dd4fe6e4cc05ced59fa6efaff1196fab28acec924314ef586b579ddd73b9",
                    "size": 144487634
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef8019c1f5bac3f812515391c0c6ae45bfd526278986cdb43b33a555d8c80f6b",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ae1939392ea2f6c1a67d9a6e65ac7df50a25fa256bac404ada017bb35463596",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acec54700053d5a2bb9ba38b69950b3d1d334f6e73c89125f5cd5525d3135a2c",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7fb094b6536c1e59f359960f19f31113ab516f0dda186b9eb4062cb0ff0d300",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e20de00f3c53d05f3ec149ffe9207abb57ea30a42800835cf9e72731cb297587",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:146268ef6372d3828d55fe07a41b902b2220f0d7d92583eaa3166026773a0782",
                    "size": 5579536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac2d595e6c39e230106fd838bfbfebb5c925183ab5d03f3b74e78471bf8de894",
                    "size": 472
                }
            ]
        },
        "3.12-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c26f75a0c9c3fe2d2b8dc4c0784e1c83cf02fda51ad61c15253ca20b578163b6",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c33bbc7691aa35ec7f32057e1e5c25ea4c9f4a10c684cfdf06ee6c1e8498ba1",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:253e371becd85aa864bddfd03947de39a1fa41075f4b7aa7f87892b61e4df93b",
                    "size": 11646769
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86743d5f658bdf89bc2db9b7bbcb81a2937d9dd3d82361441d14c74bb03ccbc1",
                    "size": 144487399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6f7ee3b2555c2c90bb9769bcb14fe18fd794d3e8cd5b1c3629c970d602d4fee",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48036375f087bedcb51515e43ad34ae367fa2eecae8afde5666e53d0718fcf04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fc806d48fb860fb1d27e5189aa5054125bd06231753f3ac89c4dedc2ea4d785",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47c730ea44aa2528150346e0a0304af25ec01f3ca6b0112f75c413a602a936e",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f28c514d13140ca7dc0785f5e48b383d64c6a5b2b7ae1af24346bb09a8b1740f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7dc62d6c2eb3b4ba6215ac0f685b072d33c33ffd4613abca567008cdc5a12a4a",
                    "size": 5579546
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7f5504f0f7a7a05489b7bae8042e4b8677f6ca86e8f6b299631af11bb9036e3",
                    "size": 473
                }
            ]
        },
        "3.12-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1b9ade29fb76c6b3c75c4beac33a3c72bca1adf483cad6523809d42228f27e13",
                "size": 6990
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31e0e36d7430ca5b6ed386d443bdbb9dc9085d98c989976de34a95004d97ecde",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09004e22ad5be314c0592a7fbe1d041f06a993e8409535c36fe6bdd0c2dd308d",
                    "size": 11646772
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8d5634be0ef1f3d996a89c26dffda363fb025b48a5eb34fb0276b721f0cd350",
                    "size": 144487206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2636221cd77e46ef754dbc09c0a0bfb26c5f48f11d3c7321d5818829dc83c2c0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcd131edf9347d7068c3e51c0b2095b0e8816d0f315fff672ab302d53b929f92",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e7077edc86783797d47b29076264541d863fd341528e24cdb1eecb9df7bfd0b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c91504e0b366db70d7be1ee8405436c3f5b96f37e858eeb4c2008b3dbd3df8e8",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a68217816122a4e723ef54ba49f542d82f3c201437b4b3648ad9f4093468f0bb",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29c336405990ca56cc1c8c4229d2b2ed856e7805ccf3e57f2c4aef6f7d8bfc15",
                    "size": 5579554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a9e7c3246901b176b132f750b3e1a3b8cddc4369c1bbf069b1be4786f6f1399",
                    "size": 472
                }
            ]
        },
        "3.12-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6c9aa9448e5efcf415255d844a30984a1e39221552488677d5710855eacf04c2",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abad444e3ab99d8193cb1464d3e168e6d927aa26744379376f44d6eadcafd2f5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02d03406b7451004f6f6737ddb1214c9296566a5691fe5365df5804935955c27",
                    "size": 11646806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b2cff2c17f7280362420094ccb5705d3568192b51c9cdfe6e85b7fda7c831e",
                    "size": 144487064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebd6f214a875a49edaa66310dbadf42215404478ec815e66219d4ef5d11ae77f",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2adacd31655677a073e13bf6cee48d4387e0f2444128ec966d774e65eef98a1b",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd316ce456a3f35fba9c25c9105d0adabbe4374be279c37ff1a79e98528548f3",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ecd1c991211daeef6cda926dc0c56c82aefedf9e259e31cc5e39b188f13ac89",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d11fce11eb7a62726f94c1db85025a680282de14b577a57969b637c26ddd0ac6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df74e7119d4abf0aa81041413a2de5203cca0fb2c4b129aa63a11a50532951b3",
                    "size": 5579544
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88b60b2e18b8f36150adf7c8036503e933b451dec937e2c7386c8a57755e11de",
                    "size": 472
                }
            ]
        },
        "3.12-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:75650a65df266cf28ea727720a7affaa242472a8dbb40023e9f8cb2da99c4e55",
                "size": 6977
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e385c4fb875fde349d76c4bcd65c042675a12567f31bbf56dfb9941e6aa07ea9",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7ea170833cd7f7e667e607ddfdd87807de3b423144b3b5a6c7d55621ce97c56",
                    "size": 11646767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aafab088444c3e02c37a93625088342329a002b269e642918265382ac6728da",
                    "size": 144486928
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c66805e01748fbaaa45e04315f3756760941fa1b0088a1215b1bc339e5e5806",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1e0098d5e4668d3ba2e2a0e0de59b43db2d079323313ab74a070980b32b2201",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9158b3e2849fdd9d1d337201c10967ad29da3b95e3c7ad282fbeecad994d93d",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2984b60387162319205bdb2b27d6be3e4b03f044434c54ad3b028bf176f1fe57",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd3d6d27fecfc4e110c53634356d78f1b9d28331ea6e0fbc0e13f7abed5ee88c",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98d6f119bec70f1d83065f559cfea293a3d00f40e792cf65b2664d9615fb50e7",
                    "size": 5579543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dac5f27613df66b2982fadc8e7544e634357f41037cbc4383e877fb82414c07",
                    "size": 470
                }
            ]
        },
        "3.12-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:752bf72f6a7eabb6706bfc74318ee8dfbdb74b7eea701adce773807bb68fc28f",
                "size": 6355
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9b8c3a40a24b7df4c643c0946b1ab3cab238152df896ea6f599b2730762404f",
                    "size": 5645873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d3c3f71b47459b19ca08e92e87b0916a670d257d0bec83c9a8d0b3ede17a5b7",
                    "size": 471
                }
            ]
        },
        "3.12-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e66f10e843bf0ee77fecca93519bcf0d809294ea05011b98f9462e5ba75a37e5",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57df70169f79c255e8b1ad2d73f572282dc16ea6ad47b15c89078e6cfd267def",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:331583ae3fdecf2583625cf32faf3ed7dfdf0e2cda80561a55ea0fcbe2669fc9",
                    "size": 11646781
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18c49974fa7440da020d3abe10b4d31bf181e18358753a76fefe45bfdda935e4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94fb3f37674efd5eea1381c57e3163849ca7566f82a6c09bda258840a685aa1b",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b55c0ed0b2423a72099052bfc587fb8d779773b5d65df3af657fc40cd723cb9",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c38c6eb69c70a394dc539985169400b80c203db92c70e25c18ef9c30e196d52d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c01b719d483377c69c84d0222af72084997f13ee46e8b825fe7cfc2bbe9027",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:124e41ae37206be7e28a6051ed86cbc3f907d4866d6f465d1fdbf5c7f49dc531",
                    "size": 5645860
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ed143140a0f5146115ce86928994fb7563bb3109e2a3e0aad0e01f3748eec0f",
                    "size": 471
                }
            ]
        },
        "3.12-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06fd34847ddaaf860a773cfb49fbc6df33fbb69b91dbe726b2a1e4ea09d6a92a",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f5d21639880576a697503a23ddaae8ae707e5863298069f5887df3026cf4eb",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b85bac4b624bad15aedac874f6971810dc8e0ec2805c3af37ce92a43e685404",
                    "size": 11646807
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc574c555be827a0dbde5edb8516586374b42dd10feadeaea82ce0c5ce4bf79f",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f955f49063d83cbaaebb17c33a84d247f084374e0aed5093fae500d7afec4b2",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2eba88ef1a5a378dd9bf149cdc479facfcef2a66eb2b85b927908ff99ccd94",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b123b2b26ce703a3e3738b56b5285b45575e08f81724d259fafc7576fb4ed01",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:287b29ce00c7179bf7689bd4d5146a522b7d6fb4cfc8489e33848cd46b659b8f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65ba823082e5ba6a6f36c6b03a84460ce89a4d56c0ea4b7db63f1d1e0b4306b",
                    "size": 5645872
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce4f2ec732764764cdd6a39f46abe39514dafdc7fbbf50001d39d2b5a7a804d9",
                    "size": 473
                }
            ]
        },
        "3.12-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b1b47670fc4e305ec9b67366ae2e5b74789249363ea0fd0192a7d7176c0963a4",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b681113aff97ff779a8c0dfd1d02dde5c56887e6e6f5d2f3bfa122ebc4f70d5",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8952bddd3e502c3818ddb6dc533f657be4f51205b480dcb681579377843f2452",
                    "size": 11646806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7dc85ef81fce9a9832ebbdb634d652f591cc52d16334c35e474c8426a553752",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef809ebdd563db5edcb85a8c5c6f5da5d59299b952d5196edab6e40cb12d991d",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:749c8b08096215dd7c5497725e347e6748060e71a1e3a9e461734289a7c9d240",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:117fe0028f822493b2df9a7b5e677e82a16022c7b4c8c54edcecf8ba0e4716ff",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08568fcac9fdbfc32cf6f436adc0207c50fc84165c6709e42b3fd37f05ba95",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3704327274fdbab6e410e9ab8dd8c24042a364d5eb05b6ebccedfdd2635d8f4e",
                    "size": 5645869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:013ecceb4d450ba3a397a9d61809e6e5b1c2ce81c44f6a5b004ec6589e463b2d",
                    "size": 473
                }
            ]
        },
        "3.12-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bd643fe5275b2dee2c3ba4c356e6a2aa828177693da53f1dcbb03b0557878987",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06ec9137a42a38d1f061b0a0cbf54ecb684dd44f4ee5157007fe6a9e747f8e53",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8dada1054b17fb20bb79832b925c8b9dce622edca348fd2377bd653981a043",
                    "size": 11646785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45ee405c7c3d08ff739dc4b829196eb9370ad227c1bdd5af58964bc3d24b3f26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:729cf9b2c0bb97fd71fc186195cc0d1c482929c03f976d5cc07d990c1724af5c",
                    "size": 5645872
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5752d1f295de83232e05ab8d11385f139eec076c197197ff3ec8690af735c179",
                    "size": 472
                }
            ]
        },
        "3.12-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:64c1c45982ec2f5a1111a9303a811bc3b5864521af4827e6492787014012c7dd",
                "size": 6355
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eebfc98a8c641639d549ccf1ac478d8f076d9a32316453f3b0fba242c52131dd",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:592a0df72b23acf32b600cb56a00e37340811c535c6160fdbf838cbb2b74a933",
                    "size": 11646763
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12bac0bcbb3d24985664b5d29e2b20644967bab5df252f5be1941f76cd5d82bd",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4930b1fa170111e82d9685f1b45341cfcfb75835f45973cf73e2ecd66e7bee5d",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0048025b1f07896335092b0274365a0d170e96d8f7e508deedea11d10cd23583",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:167cabc231b87d69dc9d4f58a73f14b3d9c0e2039cd3775564151fbc2619912f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:703f4f84c606628c706c68af54d17ae66e58e753f9a498335bd1bf831a994726",
                    "size": 5645870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1749c3542c760e59c1240c15cb20e621a78de3acd17c881d5b0d080a12f74f89",
                    "size": 472
                }
            ]
        },
        "3.12-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:752bf72f6a7eabb6706bfc74318ee8dfbdb74b7eea701adce773807bb68fc28f",
                "size": 6355
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9b8c3a40a24b7df4c643c0946b1ab3cab238152df896ea6f599b2730762404f",
                    "size": 5645873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d3c3f71b47459b19ca08e92e87b0916a670d257d0bec83c9a8d0b3ede17a5b7",
                    "size": 471
                }
            ]
        },
        "3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7dbd65deeb27e8c03de14a06264bbeaf17a4d78114970aa9be260fa65110c1b4",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04cb8b191ca36d7e59650e854e8e9328c9db1a120edcbbd9bf4c54128f5acbd4",
                    "size": 5997542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c3412eeac66727d475c1d8aa7ce47ae3e0393854e88f92cd3e3c58c9fb07383",
                    "size": 472
                }
            ]
        },
        "3.13-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:33e82e4f59ac09febca9dc55fc3a7b41554abf5a3048cce3578ad78628736ab8",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ad63a55f3a9b0ded878531ba3eb2d8db9b5542eaad550770a2812793d909a63",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55325ef02f97e4a1860aaf4e97695883614199971ccd40e5d6a2d334ebbad508",
                    "size": 11829456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d59e9cc882a334bc8822d533de4c22d08d7761d6c860071f63e1ca73d22fc987",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc08d7a2944ce31115e97577d5320a0ba42b4e059d75700d8923ee164046a7fb",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30f60e961fdb4840a9fd01e09d3298028e12832a1650f0fe147df77d10137e78",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6622316dfbebf37c571b8ab27586dc08169756376a3828952f0a0103f0db737",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf57c997fd019e993eec8bb622d717ed0ca8f24fb6dce33319a0cf318c7745e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bae733c261af9644954ea83ee2fc328e3a7146b4e93cd1da1e47c27606d095fd",
                    "size": 5997522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca3a9035f193cc2b4a8320a2f0d5b55f6e001899062c4201d1c1ff9ac6e329f1",
                    "size": 472
                }
            ]
        },
        "3.13-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:624505d79f2b5c05e0d1ad1c230f73b2b90b3584e150252d3ac45334f5247e47",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba73bf37fca931d22417924659470eaadafe35dd6964c5116bba84805222d99",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e74d83d175547c93efb27e86d4547e786bfe8355ec583d9149c7add761a0b3d6",
                    "size": 11829450
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96e6b6c7997054d9ed92aa563f92f5125572b41e893e2e1b90b12d69a3987d07",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d2abba1e9c1c2cf063701dfffadcfeccb9a98f642420ae6c4be9a196c1f0285",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01237e01f7abe039487019a7ec6134259d26dc61a42d233220cf4a24f1a134cc",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca9999b755944d3c3ddf330813898d19cf76c7a4f37529ffe451e41fc9ba2754",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d00fa509e9a00947bdc9b9afba37bc6b3e33a6da1d843a79dfd350632df872af",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d2c1e699991259dbce90701ef75b89bd3ee2609e4871cbae6e7f2b241cb187b",
                    "size": 5997540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:746ffffbec0fc85d1a727b0d209241a138037708061b25945c20f54c6600bb16",
                    "size": 473
                }
            ]
        },
        "3.13-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8477c5228f5636037c03059340b84f123e7505daa832cf3c04c7da40cd5db0e6",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6a3856a935382e7f1bcec58c558f21fea204e9321d3148ff647575df1fdb2a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4be93ebb917c0dbadd603be3cf1432dab2b12236c259cf6d07775d147007e3a8",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ae4fc435b68f62864aaa62e9b38ad5a079fc2dfd768398414d9ea6b60f496c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d9c6f38bad40530c399d52fecee388f3188ba5338f94f0079118616533a9878",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:842c56d4fe10b6aaa236404397cb7361320d8ceb6a2952bf9cece04eb89bdd18",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1050170667955bd922992fbe8943fdac43d57b036fc616a0d1e1d98105636f50",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aae68febd84301ec6c17925daaa340d1ad4d424626a26452ad2f6e8f8b07267",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5821787aefc3466dc785c152057c3269915b9a3f0e772c7d3ac149f3eb8976b9",
                    "size": 5997541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c8953e472cbf0d1e05f26148039c5ffdb27169dbc081f4e6d4df76644e35d08",
                    "size": 472
                }
            ]
        },
        "3.13-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:acc33a684baf4323a45b7c916b9966d3dde1c5d15dc2de221af75a6ce5d96fc2",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7b7dff4d7b0ca3b62b06675e2a10fad2706ca93ccd7ce1653b5a7da4b6face7",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b84ddb3e8faf4c5a64cee05240a95180581fb4a5758135cc9e28f33a197c4a",
                    "size": 11829435
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bd39bd5c34b28ed6e443da4eeafa7a8c2cd8899c5bbc18d0ea123056d6924d",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e109629768a3e6123c8607e909ceabf59eef87ef1de06c4db64db76cf6033644",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f57b9f90640aa0b0357735c1da315192379aae0433fb7c5a637196e9ced96565",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13bff14a96141bbd630c32255b8c67e843e31b1a6e4da1077eff8e59708c8301",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eb6415e56cb89e9cdb7be3fa141dbafbdb271625a4260fe8f47da2d14ab361",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94faf6162905c11c45c20d1f6254319ff475fcd966f837b6b607ba8b2b558d43",
                    "size": 5997554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f79d3141868efb51f1ae94f9b8512ec945e163cb47d65d9019b4389a5529f7ff",
                    "size": 472
                }
            ]
        },
        "3.13-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9cb5c7e4543954704c650825854b3d2ccc8af71bc19da4ef8b186d56afe37684",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdf05e2a170856ff94e90caad7b09aecddb6d55e0612413b6cf518015d8afb19",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd91c62ba520b245490c7b89d96a49fd3ffa94c5f24c09c18cb952acce17acd5",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff214b1a2f1b5c42d0fef5b895d11aa4d572bac2419ba020f0b3ccbd863c7329",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d66958d834cf2ecfe2e49f9aae128ccadda398bab951d7d5d8be9001b4eeef20",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:838b6e80ac7e815bfda3645c85bd77bc221c005cafd6c6044a8581d4c3f7f63a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02e8af2d1da91451b61756d409461b1e538aa00e7f8abf76d0a61c6594757eb2",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af0829589ebb195babe2156c0c9b4c339d38e80a49ddfed80489f7acc1d181a9",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1152c489d5f2a59b0670e86447a9f233f764b72a6b030113f087b675a2752cb7",
                    "size": 5997522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbd472f7fd1c1ff812d340409b5ba0e0ef6a6853745b218fb11cda3010f8118",
                    "size": 471
                }
            ]
        },
        "3.13-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7dbd65deeb27e8c03de14a06264bbeaf17a4d78114970aa9be260fa65110c1b4",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04cb8b191ca36d7e59650e854e8e9328c9db1a120edcbbd9bf4c54128f5acbd4",
                    "size": 5997542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c3412eeac66727d475c1d8aa7ce47ae3e0393854e88f92cd3e3c58c9fb07383",
                    "size": 472
                }
            ]
        },
        "3.13-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9c52c52a07137e98c2fc01dd459198e3757c340afaa4f856c3355c2771e37c9c",
                "size": 6977
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a717fc1000e6dd5f742d0365f0c8c14ef99cd757f18444d3bbf72342cf516b0e",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f70881215963773c4c3c866c6040cd2e3bf6e8b9a7efa2a9b7b2d67e628ad5f",
                    "size": 11829445
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c49e180c507b1516c21d331e996d73ce2803e8758a94f44163d1a982069f6b70",
                    "size": 142943056
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bb5253ab12a8f5c4935d035918776a3eb07e9b8bcd649d388bbaf904de0e76d",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed449a082c3486604d5b1bcb2b195d3e25ee985afcc0965def978ebc0d2927b2",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:727723045027acebcf3eab8df617f2a21577546f366c52b496495e3b16c9b332",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e63ecb042c7ed1a8aeeff19f114882f05c5fbfd73d32fb97b37612631fb11550",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb1f5882cc47488e9f93bbf0b99fab20cdf4252375bcefa718c75100ae0f1553",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08c257b69d7262b0b8901f5dfce06b85b14cdae9971130d198545dbea439133d",
                    "size": 5906477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e71e0c9472e9f73b8b0187dee10ce3a3b1e18a23ea0aec60bafeda59f5d5587",
                    "size": 472
                }
            ]
        },
        "3.13-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:73a9fdad9edd6c9ecf9a5424a6dc5758ab976f4199e4a9d6a38b90634aee0797",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f97d72f0e2a7b8fdc12a5dccb2f6fc90dd225ed248029d817a9f09e4daec9b9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:014c1b0bf7973f7c860691c4bced2a007bc1126391837850bde3dad50be81a48",
                    "size": 11829545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e78164993226354f3b0856cfa53bbd78814900e806b532fa59d8979009142d93",
                    "size": 142942880
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0cbcd898a75352934ae8b89da20dcfa30b3f881b1c109d0128653c8e02909c1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c8a4bcc43f671a910dba36503af02bc81c5b4087b419ee3dfe4cf6fc994f258",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37a801f32fe05686e459640da4406d42f9089c3254f54dd67bfe80523f1c5cb1",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:394a6434a5a9a353a4bfbbdb5ffc7b75bd37d800d52b084940ee6fa1f596e530",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b54380e3ecfaa54cab230759dfff7e08f43aeff5df22191ca18bb2b328fac180",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbcbb28f163924c0503b2c82654c19d725d580b4df499c0b3809f49c8e307c2",
                    "size": 5906461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6bbc11819075dc5445a4dd08cd35eee3003f58b30bc21de12efbee4de3b9880",
                    "size": 471
                }
            ]
        },
        "3.13-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:84918b4fff73e90091974941e4f6b6124bd0313a53d28df412081a37591ab651",
                "size": 6989
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cc7b59df135d0a3b711ae15264a00c371b2e0a7422bc4c27ba331b8d977b342",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02c24f6d03f584b560abeba4a06bdc872bc4168984f7638802841497f936433e",
                    "size": 11829462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb5dd3c279c916b7601e9e830f33d1e99d5a0d248a9cf257da4239bc6b455621",
                    "size": 142942831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f685a41cc2ebe27ba02c6efa0b9c7d6807a9d8376f63e8f3bfddedfc356d665e",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:781f7e361f810d9ed54c8aec5322d5b7165cf9373bdef65ac5b72b5650d6090c",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8f6520fddfd0ea94c23fa2b3ad2977460e85406d72e6108ee854e4681607a52",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a63e59c8552bdb06ed2cb5b05633324d571628f75fbae8e53970ba99e10b6da",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ba9afc5dc87c0b8926c8d2388739cde9acfe89a3ff625952165766f618bfad3",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8529ca6ee146c332873d715750e1707c6eebe6718465685d7f3be7240e227524",
                    "size": 5906455
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3951be6fabe36601243aff29556990a6041af21186a966399a7b0c9de267878",
                    "size": 473
                }
            ]
        },
        "3.13-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23145274ac76feed4442603307f96e2a844f7c0f05d42deadfed3ca72120655c",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6a3856a935382e7f1bcec58c558f21fea204e9321d3148ff647575df1fdb2a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235b11473c5dd6c66852abd3f80ae282bddc7c32176030e6d0200c20f88451aa",
                    "size": 11829458
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a42feefc68bc63df2670dd9ed953b1c104e997128986d0dd2776f88cf55dfdd2",
                    "size": 142943749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:205f2013dcf6ff43306121a5ee1408f29ce97c8f1e32459ea39e073841421350",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:daa8bbaf2edbd46e598dcd42ebdc32d463fb40c6de3a4377fcc66d8fb27c7d1d",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1cabed412c9ca166001574581eb7c08287460111f9d4f17167f552eacf1fcb9",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ba2e013660226b184c84dfc184717bb72755f3721456f073394eb262273e53d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1085ef1c12293f21888c473b17d48b17facdf1d6bbfbc6a9142331a2ea5c30ef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3887dc497692c55cb8e80e5bc40fa1fd009932b25c90e33426c32e778b869c47",
                    "size": 5906482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c48cfc8e0d637bd7acf163bf3f6fc13fb057d3ad6e8aa3eeca9b7746fbd083b",
                    "size": 472
                }
            ]
        },
        "3.13-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e4afd67833e1d7a66b38b9f3a7c73779a86817838ca9e7044f23ffe32785c98e",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feefb2766995547d31e748c36b41418782d2d0c1e7ed101342c24ca685673147",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:102e18d89a076588025e8e9913006f1074d7e4bce8349bdc74cf456402329332",
                    "size": 11829418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc24c7bdc1cc2e560671595b8c635c063f0a503e1d2f54c114d9c17dde0829fa",
                    "size": 142943059
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225331917a07141ab86ac605c14cd2921c095b78458ef1fd9f1aedc34d224638",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aaee1da272a7ec7183eec7c0de464fc0525f36ad451e1f2ab85a174d78dab4c4",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba839ec8303d27868a3dc89fd24aae3ef1430577928f4df9e948ff314741c89",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afe5b4734d31cc9e0f7cf7a50772c84d2c6bd59bb0a463cb3c5ab9f11a7642d2",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8923443e775084320f0a77eca642cc3c8edc38e7ed3b5e7e30b764f1a737da70",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:003bec0136321beab55eb368830f459db3691c3dcffa011dde6f041e36e5ca0c",
                    "size": 5906479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5fa6bdcbbf4ea5e797ae0ce4159c1267ecf4b4654ae9a82a2e5e5619caa0e6c",
                    "size": 472
                }
            ]
        },
        "3.13-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ed7e31382f6f9e43851c9d1cf19382761e40a8f1a35df9c5ee419655100e3f4",
                "size": 6973
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdf05e2a170856ff94e90caad7b09aecddb6d55e0612413b6cf518015d8afb19",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28a4b3974d16735824f16a18886a555c9eb97ac5480b976aeaf024966b77aa09",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:893a53e78ebf3aaf0b4916afcb4b2ff9563e2252873448ed33aa459d989609f6",
                    "size": 142943234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1be9cd4424df5dcf1944ff9d2dea5793af21f138750875740bb2793bbf87c84c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2786ffcae5195c03e84dbc9b5b47f9b3e7d44f73f29188595fcd69659463115c",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:024c95d75c3f33703d87e666fa70fe640268ce6e2e3d7321a81e6abb11c2751b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3177b04f0eec382fe700ae3e77a1b1f5a6851f2d70dded862174158bfec5d62",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e997af7df3fe8d07a8ed1cfb8d8fe2ea51cc88f42cacfd185bbf5751a5cb9baa",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0944592fa42f0398c4ac4bb2f12a715613c4d1220f1f5ead5dddef23955ce649",
                    "size": 5906447
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:566f368b7d1fcbc3e407d8ce4c3a9478a7d33720c2c6fc404420d0eb7309ae89",
                    "size": 472
                }
            ]
        },
        "3.13-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9c52c52a07137e98c2fc01dd459198e3757c340afaa4f856c3355c2771e37c9c",
                "size": 6977
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a717fc1000e6dd5f742d0365f0c8c14ef99cd757f18444d3bbf72342cf516b0e",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f70881215963773c4c3c866c6040cd2e3bf6e8b9a7efa2a9b7b2d67e628ad5f",
                    "size": 11829445
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c49e180c507b1516c21d331e996d73ce2803e8758a94f44163d1a982069f6b70",
                    "size": 142943056
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bb5253ab12a8f5c4935d035918776a3eb07e9b8bcd649d388bbaf904de0e76d",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed449a082c3486604d5b1bcb2b195d3e25ee985afcc0965def978ebc0d2927b2",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:727723045027acebcf3eab8df617f2a21577546f366c52b496495e3b16c9b332",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e63ecb042c7ed1a8aeeff19f114882f05c5fbfd73d32fb97b37612631fb11550",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb1f5882cc47488e9f93bbf0b99fab20cdf4252375bcefa718c75100ae0f1553",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08c257b69d7262b0b8901f5dfce06b85b14cdae9971130d198545dbea439133d",
                    "size": 5906477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e71e0c9472e9f73b8b0187dee10ce3a3b1e18a23ea0aec60bafeda59f5d5587",
                    "size": 472
                }
            ]
        },
        "3.13-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7dbd65deeb27e8c03de14a06264bbeaf17a4d78114970aa9be260fa65110c1b4",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04cb8b191ca36d7e59650e854e8e9328c9db1a120edcbbd9bf4c54128f5acbd4",
                    "size": 5997542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c3412eeac66727d475c1d8aa7ce47ae3e0393854e88f92cd3e3c58c9fb07383",
                    "size": 472
                }
            ]
        },
        "3.13-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:33e82e4f59ac09febca9dc55fc3a7b41554abf5a3048cce3578ad78628736ab8",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ad63a55f3a9b0ded878531ba3eb2d8db9b5542eaad550770a2812793d909a63",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55325ef02f97e4a1860aaf4e97695883614199971ccd40e5d6a2d334ebbad508",
                    "size": 11829456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d59e9cc882a334bc8822d533de4c22d08d7761d6c860071f63e1ca73d22fc987",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc08d7a2944ce31115e97577d5320a0ba42b4e059d75700d8923ee164046a7fb",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30f60e961fdb4840a9fd01e09d3298028e12832a1650f0fe147df77d10137e78",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6622316dfbebf37c571b8ab27586dc08169756376a3828952f0a0103f0db737",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf57c997fd019e993eec8bb622d717ed0ca8f24fb6dce33319a0cf318c7745e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bae733c261af9644954ea83ee2fc328e3a7146b4e93cd1da1e47c27606d095fd",
                    "size": 5997522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca3a9035f193cc2b4a8320a2f0d5b55f6e001899062c4201d1c1ff9ac6e329f1",
                    "size": 472
                }
            ]
        },
        "3.13-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:624505d79f2b5c05e0d1ad1c230f73b2b90b3584e150252d3ac45334f5247e47",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba73bf37fca931d22417924659470eaadafe35dd6964c5116bba84805222d99",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e74d83d175547c93efb27e86d4547e786bfe8355ec583d9149c7add761a0b3d6",
                    "size": 11829450
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96e6b6c7997054d9ed92aa563f92f5125572b41e893e2e1b90b12d69a3987d07",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d2abba1e9c1c2cf063701dfffadcfeccb9a98f642420ae6c4be9a196c1f0285",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01237e01f7abe039487019a7ec6134259d26dc61a42d233220cf4a24f1a134cc",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca9999b755944d3c3ddf330813898d19cf76c7a4f37529ffe451e41fc9ba2754",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d00fa509e9a00947bdc9b9afba37bc6b3e33a6da1d843a79dfd350632df872af",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d2c1e699991259dbce90701ef75b89bd3ee2609e4871cbae6e7f2b241cb187b",
                    "size": 5997540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:746ffffbec0fc85d1a727b0d209241a138037708061b25945c20f54c6600bb16",
                    "size": 473
                }
            ]
        },
        "3.13-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8477c5228f5636037c03059340b84f123e7505daa832cf3c04c7da40cd5db0e6",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6a3856a935382e7f1bcec58c558f21fea204e9321d3148ff647575df1fdb2a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4be93ebb917c0dbadd603be3cf1432dab2b12236c259cf6d07775d147007e3a8",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ae4fc435b68f62864aaa62e9b38ad5a079fc2dfd768398414d9ea6b60f496c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d9c6f38bad40530c399d52fecee388f3188ba5338f94f0079118616533a9878",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:842c56d4fe10b6aaa236404397cb7361320d8ceb6a2952bf9cece04eb89bdd18",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1050170667955bd922992fbe8943fdac43d57b036fc616a0d1e1d98105636f50",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aae68febd84301ec6c17925daaa340d1ad4d424626a26452ad2f6e8f8b07267",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5821787aefc3466dc785c152057c3269915b9a3f0e772c7d3ac149f3eb8976b9",
                    "size": 5997541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c8953e472cbf0d1e05f26148039c5ffdb27169dbc081f4e6d4df76644e35d08",
                    "size": 472
                }
            ]
        },
        "3.13-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:acc33a684baf4323a45b7c916b9966d3dde1c5d15dc2de221af75a6ce5d96fc2",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7b7dff4d7b0ca3b62b06675e2a10fad2706ca93ccd7ce1653b5a7da4b6face7",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b84ddb3e8faf4c5a64cee05240a95180581fb4a5758135cc9e28f33a197c4a",
                    "size": 11829435
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bd39bd5c34b28ed6e443da4eeafa7a8c2cd8899c5bbc18d0ea123056d6924d",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e109629768a3e6123c8607e909ceabf59eef87ef1de06c4db64db76cf6033644",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f57b9f90640aa0b0357735c1da315192379aae0433fb7c5a637196e9ced96565",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13bff14a96141bbd630c32255b8c67e843e31b1a6e4da1077eff8e59708c8301",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eb6415e56cb89e9cdb7be3fa141dbafbdb271625a4260fe8f47da2d14ab361",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94faf6162905c11c45c20d1f6254319ff475fcd966f837b6b607ba8b2b558d43",
                    "size": 5997554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f79d3141868efb51f1ae94f9b8512ec945e163cb47d65d9019b4389a5529f7ff",
                    "size": 472
                }
            ]
        },
        "3.13-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9cb5c7e4543954704c650825854b3d2ccc8af71bc19da4ef8b186d56afe37684",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdf05e2a170856ff94e90caad7b09aecddb6d55e0612413b6cf518015d8afb19",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd91c62ba520b245490c7b89d96a49fd3ffa94c5f24c09c18cb952acce17acd5",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff214b1a2f1b5c42d0fef5b895d11aa4d572bac2419ba020f0b3ccbd863c7329",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d66958d834cf2ecfe2e49f9aae128ccadda398bab951d7d5d8be9001b4eeef20",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:838b6e80ac7e815bfda3645c85bd77bc221c005cafd6c6044a8581d4c3f7f63a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02e8af2d1da91451b61756d409461b1e538aa00e7f8abf76d0a61c6594757eb2",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af0829589ebb195babe2156c0c9b4c339d38e80a49ddfed80489f7acc1d181a9",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1152c489d5f2a59b0670e86447a9f233f764b72a6b030113f087b675a2752cb7",
                    "size": 5997522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbbd472f7fd1c1ff812d340409b5ba0e0ef6a6853745b218fb11cda3010f8118",
                    "size": 471
                }
            ]
        },
        "3.13-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7dbd65deeb27e8c03de14a06264bbeaf17a4d78114970aa9be260fa65110c1b4",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04cb8b191ca36d7e59650e854e8e9328c9db1a120edcbbd9bf4c54128f5acbd4",
                    "size": 5997542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c3412eeac66727d475c1d8aa7ce47ae3e0393854e88f92cd3e3c58c9fb07383",
                    "size": 472
                }
            ]
        },
        "3.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0ff9b75e576a2784c1ee1386101fdbe4cd081bc12c50e833ca0563868905565e",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e4b4e9aad7d019e824ce12f5a9270db3698825c9068c73e00da75bb55fdc7fd",
                    "size": 6156848
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48d9ff980cf63e0adef325ce5f6f876e9ea90d3832cc3f3b698f703da364d836",
                    "size": 473
                }
            ]
        },
        "3.14-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:41ae459a2b66ff4656629dc0b0cc7aa3d764c54bc1b264472bbee51027e31718",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3e019542d4c075aa3ab2ebb99d48d90b7aa85a18da982fb9e1b585be1ae7042",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff50c9f4cbd0a856e30b7f8ba7858ce7bcf938021d26aa898e160b914f50b3f7",
                    "size": 11933644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf08f293122c11b8f0611b7c91385c4e151416604abf65027ab75f534b6327e2",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23b0d9dc6a2d4dd7cb659598e8d1c21f04c59b1a80c09749c421688d26b930db",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7997ed7d91de9e13125b1afab357bbf5813822da5123c47aadfab98048afd70",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc87641c952af7e4718ad8bae2f2180a3ec0db907eb9c4bf34016d6cdb70825d",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c999afd360f3c135576ace7c857657d86d64b785c6ec7e80012c0b5113d959cd",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48dc1f58a4262c9ac0b5e402b91d3fb593458f6162c0fda0df6f009d5c7594f4",
                    "size": 6156849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6e6e9b3867f799fb7a228bdfd619d1f38b3db422bc15e84239c9de408404011",
                    "size": 472
                }
            ]
        },
        "3.14-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1fbe8868ffda11a2437c17145106636122e7501a7f9d9b47b339cf6abedfdef",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3373df445985af73ddd06238647fc7f004783fe10274b7424afdf4880218dd9a",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb4e962564be1f1daa2eaeac45cc8c4cebd43c03ef151394c558353194f496ab",
                    "size": 11933722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a750124f32053684168391e76b159c38a158b99e821b427b0841b04c22ea7c7",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff091ae71af9e6ed73b8c425d345595650ca5fed002d30a225ce86841a67e066",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05866235279722aae42930108a431b459c17e18019b59ce6902f18c2d8293643",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c2265aa49aa12c893b91a843a3b5f18c0116b9380b730d383572fb1e47be9d1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:778575c4a6bd018533d25043ead49ececb1f12addacc9603260ccfc0363d38e9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f00c4ea7401c539f71a1db7f7c26e1bab83beca9c74a12dd2ebdb84ffc79f49",
                    "size": 6156849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1bf33a2fa229cc2bffbeefc2abde1bfb5b9c2d8aeb4238c3cd736849578a7",
                    "size": 473
                }
            ]
        },
        "3.14-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6e1e8eaf225db5fc7bf50824dccf8e606a0819200bd59217d641085842b6fa2e",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:874b0760e04e1a2f3a969c2a1bdcfa0fcdea0ee7ad24a44b4e43cabe88260db1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1235c64e591ee2dbb14511fb2364f87559a531eee054da7d75a460146772887",
                    "size": 11933715
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e470c7a812c20b863d17609453f2c03fc44fa470142474a4851e9bdad061a1a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c28e097f4a5ed6275ffcb28492a77437e7576d0e13515a4a070f510c1d1008a",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27e632313f045080c79b21a89ac1b2a61ff6195e4b2f2a1d18479d7ab204c7f1",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09088fe1b55bf15d16cb700141d745d688547db922ae6ea566ae30617163d58f",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b395e5243ccb742296d74f5588f2d18028ee87f968e5f99798901f804f347c3",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebcdf5a26e079f07795160b199544fe1cfd52c0240758e03ed43525aa0b38897",
                    "size": 6156852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00b9e5ef7928a9e787c354f936632d54722e07ab32ee9db44cf18c71067a7e0e",
                    "size": 472
                }
            ]
        },
        "3.14-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e27e7a17b7fd8e0b15f31e0171d4181dd2513086aff6ebf1c4c317311ff8ff19",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:470f75f2feb39fa6814961d838b570afaa54c999fe81eb0a28e89f042ee5d057",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f79ef40a4e0e4076bc8523a500e9509a9a576d3f7fdd56a9b3a56acfbb3c3963",
                    "size": 11933736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3d9ed71ff56a74ce089cdbe7a5074c484ad013793f7843843876bec4c65aed8",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:238f0803248ea66724b16cc5056b421e9ec84f3c40d2306175f6274592226536",
                    "size": 6156842
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0cb1826a732f0dc6b189b0a5dd833645de9039857f44c9b71f97c6751bfb8b",
                    "size": 473
                }
            ]
        },
        "3.14-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8fb779845a57da2135f8584b9176de639a69637383ed5903e453a4f268f035e5",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c6d2202ccc1f07c74e3e6d3e93726bdf224008e0d273fed4945256cc25c5541",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1690c3202c76e519f10794b2ad599e0cf9e50e8f5cb67c78aa2430b7409454aa",
                    "size": 11933704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1f8b99f92412e88d34664d1d6565edaa6726b493f612860e7e90ae2ccc11566",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2f326a64ee2c0aae403b253cb89835dad6ce743cad49b52b55c9ba7641a4eb6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33e1ac5c9dde7028724a99bf48dc9aca694d176c08abc552c52d588dd1620d2f",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:060469c82e64529f533578d035a46d1d047c13783ad58da7126579b4809b0008",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b3e3106cfa9ce5e491ce40c38b8049351c65a419042498f4514415f0b95a22f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2410f2de8c13c3ee09f88659996783b9103eb8d2ef502c1d10be020a934dcd9c",
                    "size": 6156858
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c130941a120b3989f7d5d39e907d5bcfe9fca9b228af893202ae4f54422898f",
                    "size": 471
                }
            ]
        },
        "3.14-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0ff9b75e576a2784c1ee1386101fdbe4cd081bc12c50e833ca0563868905565e",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e4b4e9aad7d019e824ce12f5a9270db3698825c9068c73e00da75bb55fdc7fd",
                    "size": 6156848
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48d9ff980cf63e0adef325ce5f6f876e9ea90d3832cc3f3b698f703da364d836",
                    "size": 473
                }
            ]
        },
        "3.14-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4ac5a7db8d8047de3fda8df64bbe14766ecd90a19fd2c92f7c3c5399654d871",
                "size": 6977
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9817e75eba8a378b1dc86ab617240a921b644373927805508a1be612c62db7db",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc0c3c456b3cb0f1a28a31f20698cdd6df3c0fc43b38d8a8bc1edab4a6162d89",
                    "size": 11933673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82a2c2ee23cd72bb20773d3d551d202ab41b90be1345309d6f99c416af2fbe39",
                    "size": 144710646
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab0e261444a55065fe35990632c5c1132282f8d551ac5898b505007f3ad69d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac5fa035dddc8c1a588fca443bf195667e02d1388cf94bc5f86bf79eaf2c2ccc",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2a2ddb3023e90ce6c77b7fbff59a7f307e6f62c6e78bd3db017cb7d2cae56ae",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc97a02158264e56f7a3bc0e26ade8ce319b47b30c416708a604a4767677b9ed",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376fe09919853a6e7d5ddf600a4157e20f3bf1819c1aaac22ea79f5f7fcb5fdf",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:375c8fa23e2fb33f467fee3ee3dcc497d807003dc100a27751bd09e7c9e09899",
                    "size": 6049796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ede308887498ae06cc68586b412645554b63af1d3577e25750ac548160dbba4",
                    "size": 472
                }
            ]
        },
        "3.14-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e82797df70620bacb938c5f08f4c0436d05bbc3166c9ecc35da35edf28b64905",
                "size": 6990
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06f4a79271c125cc53d1db66175ff6afd7c2561aeaaa38a3a730f58d8c5a0a9d",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a88f1aafb24daad64c4d44c072034eeb564a0748beb8bc093ac8987fdacc5c",
                    "size": 11933720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c245907f4c396d7edcdfa0350ed68bb9d43863ca78064f08ee504991f34560d",
                    "size": 144710332
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cfb6b794313d147f82f593427a374907bbfee59b47c7f3c8fdcc76ee49fc968",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b300a20ef5e420eef25c91cc0655c37369303d4da0ab9edbbc5bbd4b8e3ea881",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b2899db88ae0d1b0810701020c17648f3415b7937b011a38d488bb92de1509",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c20910808369526021f13f0c606a6c626146e251f3841445863c5d239f39b387",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:129e08b4282b9a887f26d2e2c8bf1eb508d943ee3b6a5bedd62d15815d41d62d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e7baea77fbfa410a6a3939cc3f68cc2d88fc20f0c038c9d3c64bf9d13ab8fb",
                    "size": 6049805
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b66590a703d56f63c20813be197317fff8c741fb3b731df4fb29f449b0fe54ad",
                    "size": 472
                }
            ]
        },
        "3.14-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1b37ee32f6eb4c187faa8df51ac8d01c972b1729957572ac790a8e9ed6623d00",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b5a88aeecc003ac42a1a503722037032b74162149660ac3f86813cd6f9186af",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9e0c9689f130678377a8538d1ab6a24f315af6048a13c90cf2db593602a070f",
                    "size": 11933721
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a36a504e6ba63ffaa3411c8df287f25b70e86dae9fb3a94bc7a0a8c0dd1286dc",
                    "size": 144710465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7627492b5e2fb77f57e413a3def0a31e7f7a7e61e7edbb8881f719d0fb6914a6",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5647295fa0cbf4e2c24dd542264d9f16853625f9ee8993e8b82f7bf3f0aaa6a5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4018fdebb5ef9d8624fb060527ea2a4eca76e07cb6d029c1728d724c80eec40",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e747968ea39f5246cad5a66b3bdb6b92574069d2c0ef557f3f74b3fe4875872",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6582ba2425bc147b560fc95998588259b268f0d77bb546b4de6158bf33a30008",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cfa89a15204dcb8678d9741f827224b67a81ab21430110cb9029eab1ef7f688",
                    "size": 6049806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f89388b383fa8fddcfc6980c03fe5d8e595cb607d3b9aa0aa87998f136b905",
                    "size": 473
                }
            ]
        },
        "3.14-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2031718169fd9d4226765343905efdac5b07c19ee5f292802d0d205ef4c5424f",
                "size": 6987
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b07954b6b3c46de9bf961e497e618ba3d04871b4b6abdc05c4fd83f26759c6",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a506bbc3f98b636091069cd176c9120b394ef133617560fe68714bbc4d5743",
                    "size": 11933730
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8aa5784d1934fada4992e11061a69159be56f52f3fdcadb93ac5f6d0946f4df5",
                    "size": 144710549
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f261367a1e3dcb8bcd7b3c6f2ceaf553d70839baf94f78ebbef3489cfb63ccf",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:372a108cf50bd19fc41386435ee07e6abb4810c889ba1a7181bf624b399a2837",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d81c87dd3abaa0b1cc2438f61774265665aebbe1ffbcb2d1bc898ec7536c6aa4",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2d84c5aed10fe727a90835df213fc70ddda7dada0d4eedd899b2b61af58f0b8",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:143436346cfe60975cf54122a48112ffd17c2f8de655cd1b52728a605828b819",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c37e5385bfe6ba55e85319bf9cbbdebda403ddbe7a98d01b1adb3ea805d4912",
                    "size": 6049820
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3f3765b1faf18a35e09f0bc0c99a28db052e1922907d3a520e69c37fcbd0977",
                    "size": 473
                }
            ]
        },
        "3.14-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c822f311552f75b9ceb424c0e126e79d67a1daaeb04ceac720ef930ba3bd433",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf91a7cd90029ebc3679dd7d79c0ca595fe404241dbbaf9dafb23ac90d1947a8",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8ff3f3fd9e404e5bcf2476b41b4fc9e9aa76fd178434033da3a0867d2af55d",
                    "size": 11933635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f8eec2451156bf9ecfb2a8277ae130015a2945f6d04c522e7b71d792bb3bd08",
                    "size": 144710197
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c73366dd453878bc63a0b70c715a8655264ae2a632b4bc16975b40fb88634268",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f341f06d5bd55b16e22bb782911a9fbc17d5e5c53f2d907f752db57715a8a242",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:daceab6e001797bdc740c6d2a0b33ce127f2325e95c89b2d6602858f8513cd83",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:576072d4c0567904902d1eee7bb46f3baaae89baed746b9fb452661fdcb7edd4",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d965778656b237de1c24863d3a3a4375c239184f2a8c1ff8af98fe5b01bfdf9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da55eb3acb9ecc03d13fb6b9a97323086b68fa361ed369c44c961a540f3a9cce",
                    "size": 6049794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1466cb37cccf3ef66c35c2666728a7f60889690332cee75f11f0c59e24a809e5",
                    "size": 470
                }
            ]
        },
        "3.14-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aa8d7818adc365c934b8e0e1e7bab003c7fe0ea6aa2b5e83f5f752ef5f945225",
                "size": 6970
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d57f3a893e488366205ce83d4465af40134322aaf387254a48b46e801a48085",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b35a775d0f5f716f88bc3f63a8a0ed6d23a6807ae10c6259dd3c0bfd755f79f",
                    "size": 11933701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57ac736c091aede0d36be400f6b2aa590bd2d17c38e2a472784153a4dba1c332",
                    "size": 144710089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbcdc13afea54901c6eecb09db625cfe86edf379a2ef22522401fb5f02f0b4a7",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12dfe0824cc246db40760b476ea8d25cce9bb16a77ddcc513eece2e3eb2482",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af7f1e9babcd5dd414528b125f1021db2af546ffea2b79e81bd25c0923f57778",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfca359b2ee31fd80ea61fb94f5c014ceb3a6108cd17f3e2aebea12d78799f82",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba10de9f8aaa72c532a5e0a2ee9779b245896df56a15a0c30e5a4fb52d9cc192",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1878e3ad0579cc29822f5a50c4e0a31b60c9646d741a48176457db722f551bf",
                    "size": 6049799
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80606c0c162ef3edb5392f257a77be1dbbd966782770e19b3e6c1f8752c2784a",
                    "size": 471
                }
            ]
        },
        "3.14-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4ac5a7db8d8047de3fda8df64bbe14766ecd90a19fd2c92f7c3c5399654d871",
                "size": 6977
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9817e75eba8a378b1dc86ab617240a921b644373927805508a1be612c62db7db",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc0c3c456b3cb0f1a28a31f20698cdd6df3c0fc43b38d8a8bc1edab4a6162d89",
                    "size": 11933673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82a2c2ee23cd72bb20773d3d551d202ab41b90be1345309d6f99c416af2fbe39",
                    "size": 144710646
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab0e261444a55065fe35990632c5c1132282f8d551ac5898b505007f3ad69d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac5fa035dddc8c1a588fca443bf195667e02d1388cf94bc5f86bf79eaf2c2ccc",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2a2ddb3023e90ce6c77b7fbff59a7f307e6f62c6e78bd3db017cb7d2cae56ae",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc97a02158264e56f7a3bc0e26ade8ce319b47b30c416708a604a4767677b9ed",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376fe09919853a6e7d5ddf600a4157e20f3bf1819c1aaac22ea79f5f7fcb5fdf",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:375c8fa23e2fb33f467fee3ee3dcc497d807003dc100a27751bd09e7c9e09899",
                    "size": 6049796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ede308887498ae06cc68586b412645554b63af1d3577e25750ac548160dbba4",
                    "size": 472
                }
            ]
        },
        "3.14-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0ff9b75e576a2784c1ee1386101fdbe4cd081bc12c50e833ca0563868905565e",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e4b4e9aad7d019e824ce12f5a9270db3698825c9068c73e00da75bb55fdc7fd",
                    "size": 6156848
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48d9ff980cf63e0adef325ce5f6f876e9ea90d3832cc3f3b698f703da364d836",
                    "size": 473
                }
            ]
        },
        "3.14-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:41ae459a2b66ff4656629dc0b0cc7aa3d764c54bc1b264472bbee51027e31718",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3e019542d4c075aa3ab2ebb99d48d90b7aa85a18da982fb9e1b585be1ae7042",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff50c9f4cbd0a856e30b7f8ba7858ce7bcf938021d26aa898e160b914f50b3f7",
                    "size": 11933644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf08f293122c11b8f0611b7c91385c4e151416604abf65027ab75f534b6327e2",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23b0d9dc6a2d4dd7cb659598e8d1c21f04c59b1a80c09749c421688d26b930db",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7997ed7d91de9e13125b1afab357bbf5813822da5123c47aadfab98048afd70",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc87641c952af7e4718ad8bae2f2180a3ec0db907eb9c4bf34016d6cdb70825d",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c999afd360f3c135576ace7c857657d86d64b785c6ec7e80012c0b5113d959cd",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48dc1f58a4262c9ac0b5e402b91d3fb593458f6162c0fda0df6f009d5c7594f4",
                    "size": 6156849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6e6e9b3867f799fb7a228bdfd619d1f38b3db422bc15e84239c9de408404011",
                    "size": 472
                }
            ]
        },
        "3.14-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1fbe8868ffda11a2437c17145106636122e7501a7f9d9b47b339cf6abedfdef",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3373df445985af73ddd06238647fc7f004783fe10274b7424afdf4880218dd9a",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb4e962564be1f1daa2eaeac45cc8c4cebd43c03ef151394c558353194f496ab",
                    "size": 11933722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a750124f32053684168391e76b159c38a158b99e821b427b0841b04c22ea7c7",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff091ae71af9e6ed73b8c425d345595650ca5fed002d30a225ce86841a67e066",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05866235279722aae42930108a431b459c17e18019b59ce6902f18c2d8293643",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c2265aa49aa12c893b91a843a3b5f18c0116b9380b730d383572fb1e47be9d1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:778575c4a6bd018533d25043ead49ececb1f12addacc9603260ccfc0363d38e9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f00c4ea7401c539f71a1db7f7c26e1bab83beca9c74a12dd2ebdb84ffc79f49",
                    "size": 6156849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1bf33a2fa229cc2bffbeefc2abde1bfb5b9c2d8aeb4238c3cd736849578a7",
                    "size": 473
                }
            ]
        },
        "3.14-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6e1e8eaf225db5fc7bf50824dccf8e606a0819200bd59217d641085842b6fa2e",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:874b0760e04e1a2f3a969c2a1bdcfa0fcdea0ee7ad24a44b4e43cabe88260db1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1235c64e591ee2dbb14511fb2364f87559a531eee054da7d75a460146772887",
                    "size": 11933715
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e470c7a812c20b863d17609453f2c03fc44fa470142474a4851e9bdad061a1a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c28e097f4a5ed6275ffcb28492a77437e7576d0e13515a4a070f510c1d1008a",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27e632313f045080c79b21a89ac1b2a61ff6195e4b2f2a1d18479d7ab204c7f1",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09088fe1b55bf15d16cb700141d745d688547db922ae6ea566ae30617163d58f",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b395e5243ccb742296d74f5588f2d18028ee87f968e5f99798901f804f347c3",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebcdf5a26e079f07795160b199544fe1cfd52c0240758e03ed43525aa0b38897",
                    "size": 6156852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00b9e5ef7928a9e787c354f936632d54722e07ab32ee9db44cf18c71067a7e0e",
                    "size": 472
                }
            ]
        },
        "3.14-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e27e7a17b7fd8e0b15f31e0171d4181dd2513086aff6ebf1c4c317311ff8ff19",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:470f75f2feb39fa6814961d838b570afaa54c999fe81eb0a28e89f042ee5d057",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f79ef40a4e0e4076bc8523a500e9509a9a576d3f7fdd56a9b3a56acfbb3c3963",
                    "size": 11933736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3d9ed71ff56a74ce089cdbe7a5074c484ad013793f7843843876bec4c65aed8",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:238f0803248ea66724b16cc5056b421e9ec84f3c40d2306175f6274592226536",
                    "size": 6156842
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0cb1826a732f0dc6b189b0a5dd833645de9039857f44c9b71f97c6751bfb8b",
                    "size": 473
                }
            ]
        },
        "3.14-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8fb779845a57da2135f8584b9176de639a69637383ed5903e453a4f268f035e5",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c6d2202ccc1f07c74e3e6d3e93726bdf224008e0d273fed4945256cc25c5541",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1690c3202c76e519f10794b2ad599e0cf9e50e8f5cb67c78aa2430b7409454aa",
                    "size": 11933704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1f8b99f92412e88d34664d1d6565edaa6726b493f612860e7e90ae2ccc11566",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2f326a64ee2c0aae403b253cb89835dad6ce743cad49b52b55c9ba7641a4eb6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33e1ac5c9dde7028724a99bf48dc9aca694d176c08abc552c52d588dd1620d2f",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:060469c82e64529f533578d035a46d1d047c13783ad58da7126579b4809b0008",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b3e3106cfa9ce5e491ce40c38b8049351c65a419042498f4514415f0b95a22f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2410f2de8c13c3ee09f88659996783b9103eb8d2ef502c1d10be020a934dcd9c",
                    "size": 6156858
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c130941a120b3989f7d5d39e907d5bcfe9fca9b228af893202ae4f54422898f",
                    "size": 471
                }
            ]
        },
        "3.14-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0ff9b75e576a2784c1ee1386101fdbe4cd081bc12c50e833ca0563868905565e",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e4b4e9aad7d019e824ce12f5a9270db3698825c9068c73e00da75bb55fdc7fd",
                    "size": 6156848
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48d9ff980cf63e0adef325ce5f6f876e9ea90d3832cc3f3b698f703da364d836",
                    "size": 473
                }
            ]
        },
        "3.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:25bec58cb4c9472482dec69baeba50f895102884f0ed03d97eb1b6a0f6eb22ab",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:654e47de949b02a9798ad5e12413e443e1d38973ae1c92e2b401f0718c117e3e",
                    "size": 5727004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e614a59fe7da0fb7664a0ab3b7eb6e9886c847a987a1c6b574f1dc209fa4a6fe",
                    "size": 473
                }
            ]
        },
        "3.15-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8601a04557146fd844e7c10e5bbfc63994cf453766d8df06f44ab09a63b69955",
                "size": 6369
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d691a5a46cedd8527fd3e60b3bc0052b91b48c414dc2b3c4ff0b01a02b64b8e4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4cc92e93f29bb5f6f215e6d2f1555a2695f5cb7bb2c902bd757ce101beb3e53",
                    "size": 9952899
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d94702a83dce09930a8f9959acf61d8cd72cfca6cfc600305d8320d046a4db2a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76bc20413af6b566811f1dba1492ecc69a39de34e9500c47851ed5f0533e332d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8fa307f30ab9d5ff9dd9eec2aa700caeec1a2996be44ad04691a848efc0a903",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dc0820a32d254c7903f2536ec89ccc4c830e1be278b2a54cfd85e60ee75a5fa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:995943bea25538149e74e0ed402399504471395793c56a17ca1a4ce3c2a9162d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8462349768e07d13caaf8249a52ab5f76933b47be98f44eede66737fe2b30eab",
                    "size": 5726995
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61104b9d37b957808461bb1fa734792d328d0d130815ff99c55507d95305069c",
                    "size": 471
                }
            ]
        },
        "3.15-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9922b1bdd757900c45ec51c7296d3314a4e8b96d67f0175872c86469575710ba",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3006944965a3237107ee50067fdb57e1ea77cd474fd7758abe54a119593656cf",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88ea5cd40bca2b5cc0c4fcedbff7144e36f35bde67fa8fb15ce94ea33bb4aaff",
                    "size": 9952940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b2ed38f6fb7989f25d0d57d2575abef779d2a44488a5a5dc48242a12b3822c1",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b33d495fa5dd1a250c03f8f3390f7068327d65233ca171fefb7250817b1df729",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983d59751c08f0e7fe0e44fd9190f955481817b2a0e6219f7082227634661a4f",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc6a9960f01e916f50d615a4f9b05f101e5051cade840094d8be4be1c5f7f91",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb61f6882f7d9db086d7eff166c517106dafffb3ffcd7c69c3553ec5366800",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680f2a965848ed314b4ff1ebcf8f97ea457158f65ec640654dcb5fc25d06668b",
                    "size": 5727015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744b6c39892f91daf165f50a44704fc4aff32154960fefda18e633eb9f1d4280",
                    "size": 472
                }
            ]
        },
        "3.15-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b1a7448e8114fcdbeacd79c76a6e9cec805877a988959c14f235d8f673e488b2",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62fb8ad7a38967ab576e8168014131c990ba46dfbda2a02fc6a7540684c72f31",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbd5a0146658fb21c4225577c6b26a9d1eb9fe3d108526c453370337a605bc79",
                    "size": 9956964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa0b54e93328dec57a5b41c2369958d19c82b86c5cb31ad2ce55a15d58a53d8d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dbdf0a09eaa76418e4eb1a7e7c93f3906317e76a2fd41f00ebd5a6fe112d9a",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:462e6bb5e055fd7af945fdd37db35d3dd84e9e423da198e8ff21b143544c3e26",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b038b34098182abc668dd5d1a4a8c34a70c720e28187251ceeb558f2ce1ca1f4",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19443ca816e858793e428029d7abf405161fc800b98333e3da3ae3a251c03f42",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cfb6a311c47efe18cecbec8829eb174d1d19c82c6b87cb2ce62775de13675a9",
                    "size": 5727032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:917e78d7be2f7c35b76b3f055a82462337c766f1db5fa267de1eb2e747e67c63",
                    "size": 473
                }
            ]
        },
        "3.15-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28a81b6a5223e65df7f6d5e522fd724d66fc6ddb8822621df92d3754668d9cb2",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d8eda9fb54d23233f708a38b505274577dbd7f67b007394a6d91f8690278aa",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821f6d62b05b323745863f914297bd4992193f0b66fb9fa6c3fbdbdefee4bf9b",
                    "size": 9956943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1abedffdcdec697e2ac9346deafd319cde06447781d1c1d3f9c2365833a169f7",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77c4f4ead2ed98e48ec202311ec33e3b51ee06a280cd1201133b455fd14df86e",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a98348760bbc42a3a2bb9fc6be8a50a4d95af91dbfbb7220486e0731e3f9295",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:769a0333d30ae0c37745d388c54a75deae5e65dea2f71d68acdc10038474c3e3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1623852bcaaa2b61e15c0d498ee2463149d126aa28fb6b1a9872f40039cf6e15",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3178d0d6cb0d96d6054cf5486b2601f5a5bcfcd98ecbc7f9d4d69b4bc405efa",
                    "size": 5727009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40d0078f96874d45d582d4d2ca66dcb4bab1c7da3ddd847ae7e3ccb1937a08ad",
                    "size": 471
                }
            ]
        },
        "3.15-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d915f5494ed4bde1f8398d7a81da87c98d017ac4ba3c7dc4841ff678dd45d3e5",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7748051d821608f52ff76f68d165ac3f6256d8e3ae4b0fa6b3d2315393dd0f6d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054f3419e5b62fb53998b07b8832aa7cc0e3065b0f809fa328d43940633fa265",
                    "size": 9956944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc9a664b877e8c949bcabb8aa30c664bc8dc9c7f8a0953d16a6b1962bdc769c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd610dda84529e521f8dc15260614f9929ba2b95dfcc843a6dacd573cd4646",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddb2d865600689e01ac1185fb06e7fb28f7be8ae5c6902ba0a8d2fa39e2634f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29f5ad57dedc5ba2ecdb01c3d73405037d61ca97a6c625f0a02672b5fbabfbc3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c647d5d713782561a979830d5d60620a7fd8e8530b3503a3d81aceb6a0d6b26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96421c3722a9406463229df9b7968dec6614798a27f5dbd8c893efef21e01928",
                    "size": 5727020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f3bf1c142bce043a63123992a7df3493c264ba86eefe3a1fd8924d9a8c459cb",
                    "size": 472
                }
            ]
        },
        "3.15-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:25bec58cb4c9472482dec69baeba50f895102884f0ed03d97eb1b6a0f6eb22ab",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:654e47de949b02a9798ad5e12413e443e1d38973ae1c92e2b401f0718c117e3e",
                    "size": 5727004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e614a59fe7da0fb7664a0ab3b7eb6e9886c847a987a1c6b574f1dc209fa4a6fe",
                    "size": 473
                }
            ]
        },
        "3.15-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f73f14c112027cf4e04efa3b3045288d70f263f607d2c836f387834bb06c487d",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fbe6841c31b01356b232b39f9081caf9552499187eeb932cf485808c8fe6454",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cd5143c1569b8a6a61a0ec6acc1082d564aea857aecacacd60fe2f7ac716437",
                    "size": 9956950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baeac6085034d7da7acc48a8ef785fda44dd79cd99e48bdf6766443960788110",
                    "size": 148535732
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc5b11c3626e813b55830d00aef5ac9d60c133b620035826383974913a4180f3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb3c65b20e86a5902f979ece6e472e66c2216d4da24c8f94f5f613a15b78050",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a34f9d774008f6311b3a8704db9f2b0a8f43491bc757964581882e421d446d98",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e42113596e7077dee8359a0ce8b22f0adbb5992a061695876cc2437c21f43514",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bd5549ea346ffb71888f58f1667df9d73c48fe7bc611e6353410e3cd5197232",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:880a2f6790c2fe52b128f6570dab0ff07f1907708333506e4b96f840eda19652",
                    "size": 6058834
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:051e7657f3d94b9dddfec7edc8801ee1eebd3ff5eae4f9b7aa7ce1c540a4feb0",
                    "size": 472
                }
            ]
        },
        "3.15-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37ff23c4a4d0e0611b35679214e8f8f517d99347ddf9f74f51219b8e4ef50341",
                "size": 6990
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c008b83093c98d30a1821c7ec5e5570336dcbed6de4bb9548825446a45d6606a",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:255787a45a99b57e6e71e8230f6013c86cf9d457908c4678d40ea974e7252bef",
                    "size": 9952893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4c2549cfb5404695b9f33043bc4225be109ad5c7dcda9c56d41cc85d8559f3c",
                    "size": 148535648
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afe1e8ee9239790e2cbaf0ab5bb157f3578c13bb1ba20efdc8a50f3881bd2db7",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:538591d3bc2db27c515b841dba98b11ca9e72ae2056a812e19414902898d1cc5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4bec0c1bdc19dfb084615e84239cff53bae00fbeb171f3e88f3b4848aa370b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6c1a1f677ef78e2497a887aac4fb91b834c0e445fc9826c357b0b5c481d025c",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6d215af60bb93935cae6fbf686dcc049df186e9afc4ae14ae5bdcf3fa8d9c5a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:041ba001d1ce5b6c3375c1bd57d6a575d1b65f2dbccfa7068a2060395f163ed4",
                    "size": 6058850
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a31ae74149a075e354331a628037c5516d2731afb8f92820d689bc703c90245b",
                    "size": 472
                }
            ]
        },
        "3.15-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ed0ffab123190d0611eb9ff5365c416c460842154d33cbf9e183d30acd2a86a",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3006944965a3237107ee50067fdb57e1ea77cd474fd7758abe54a119593656cf",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26850367d7dd32632fd9d1aa5af3323067fed807baaa9fd0c7622a0c2812604a",
                    "size": 9952967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:945f8c988824f752e2167e72c2c127886a579d7230b3862cfa986975e7293585",
                    "size": 148535743
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e602b5d420af495f5110001ce7afdc1e814088bc8ba6a50d74d24dd36430cf6a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ae7417506ccec04d6cbf970765d7b69a555b35fd8aaeeea19e0b06c5c95518c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce6cd968d4f6a35e77c6564a72a405887ed1b5c8a843defbc9e2ba7975978cf2",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53ead9f12c1878c0daabee838966fbfb1a466b336ca78cc0c31a4de2c30a725f",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a82644a58e4ce0df52a11b5a6e15cc775a62a6356ac1e05ccc525ad766317be",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f9085c835b4bc90dbd525ee11f060f211abe0e9690d07aa8c37adb36ed84779",
                    "size": 6058833
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9645dfba033b4fce711501dc2175fcd6015b6d16a571496a42888ab039ed627",
                    "size": 472
                }
            ]
        },
        "3.15-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f08d64d85b1c489ab78e436f61a6cdc187ee2aecc1827d5242488dbb6cb9fd88",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f2f007116935504a5ec8443608ffb8680bf7c5ca7cbb5eee5501896b254d85d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b93728f552a5597c4a0c2582ab0e72dafc1d0d393e48ca696d667433f623a159",
                    "size": 9956973
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:381a5d997f354d694406bb69c5ee03ff3a4153c57eb714131d8d3137220f2e4f",
                    "size": 148535465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00857f05f91a00e1901a73ca95cbbac84bb0898648e3d2aa7db98ee9c371f4f3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44e979976bd3e16064f4925d8c6bea03996baae2e1cbe01f2469dd42812350ee",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ad7e7091c40a88ca73941a906ea042dcd42774e62587600e6e6cc887a108188",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5433532c7f0193678c94d0c2ca697d54128eb8ca3d126de1030615d5c7ae7dba",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:882dadbbd0465613555b06c6030ffe2f8c6ce4866b72d3ec171613508f17caef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:621ff19f47bfa244cb01a86e12804bb7b400b782e9024aed23ae52bf9f576724",
                    "size": 6058840
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52a406832f063ea22c35ce06b135acaf8a657ec48704dd9e4cda307cc113b191",
                    "size": 473
                }
            ]
        },
        "3.15-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:724d315a9b0ed32f7bc2d9b2cb84f63704c16ba517d49354de8de0d5df170827",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d71921f9e137f7c75683939b463d279ebd7d5d1fe5c50f8adbead3a6005844e1",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11fd22177201502505bdd9195bf66c5d0451f779116b358c0f49d1a4b9648928",
                    "size": 9956942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:881fd783cd5ae97849dfbed69557f03f6e43837af47b3ed2ace78c2568b8fdc3",
                    "size": 148535474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb708fcb80464ca1109c4f476ad409c12122d64e20e7fe3e48d0b0e562eae5c9",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30a8f64c1851193f1c6d6149d952460ac6da6904a159c4ad0b62c4857ca9f5a4",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4fcb30d980e0d2232bbb63df7f47a73021fb33b09a2fad9ef86da1486fbd771",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2e3dedd2ee72d2f486f87868edefdc91473e3d2e578cd9e109dcbbbaf58c24e",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe8e61455a84122f7959783d101da9100d4f6b244f1bd1f0845734f1d662af54",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df350aa6c6bf173e305c0c590bb5845f2a67b14345197039f49918d6a07af302",
                    "size": 6058821
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c630a98bb24ed8d32043fdee8d4a1e38568377a954dcd6d17edd707600aac3",
                    "size": 472
                }
            ]
        },
        "3.15-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ddf399fd3d782a997f037ba8abb8a6d2974d6abe6d8b8aa768b502110e23000e",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92fe7d047bf3acedc716bf8ba02768ea8af0a9052e425343dbd9bd07beead7b",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb21378fd6e730a1eb280e88d787ec7cfffdbcc1de7224af2cfae36df49496e2",
                    "size": 9956893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0373d4844e3a2ac5e8e786d0f9c05e43f1cd9e46f7f0eed2025426f648157691",
                    "size": 148534993
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3201c0112dd62db6db199c0dfbd2d38eca94bf57e1fc418334d3f1fad7cc605",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10d0fed5b4374a3d022384650b024ec4ef63497b41a961e587b836bb0b760848",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17614f178e73602c453cbfbad24104378d94ffc43c9f62d0f7596bb49d8b2cf9",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69a22b33f54b70e3db8f0dd2a886661ab686764f61ea379c2d86814bbef7dcf",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81c5bed32754a10f09b805cc125c687d540a240b3f43d8efe98cb8b5bf0514bb",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05203a09bc00202a3824cb24c81ebc36505037b6edb8691dc17e7e4c7a437ecd",
                    "size": 6058824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1fbb31f518b20ada258ddd5a3fece36346eeb0da34ebaf5a04b53026aa7a83c",
                    "size": 472
                }
            ]
        },
        "3.15-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f73f14c112027cf4e04efa3b3045288d70f263f607d2c836f387834bb06c487d",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fbe6841c31b01356b232b39f9081caf9552499187eeb932cf485808c8fe6454",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cd5143c1569b8a6a61a0ec6acc1082d564aea857aecacacd60fe2f7ac716437",
                    "size": 9956950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baeac6085034d7da7acc48a8ef785fda44dd79cd99e48bdf6766443960788110",
                    "size": 148535732
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc5b11c3626e813b55830d00aef5ac9d60c133b620035826383974913a4180f3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb3c65b20e86a5902f979ece6e472e66c2216d4da24c8f94f5f613a15b78050",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a34f9d774008f6311b3a8704db9f2b0a8f43491bc757964581882e421d446d98",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e42113596e7077dee8359a0ce8b22f0adbb5992a061695876cc2437c21f43514",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bd5549ea346ffb71888f58f1667df9d73c48fe7bc611e6353410e3cd5197232",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:880a2f6790c2fe52b128f6570dab0ff07f1907708333506e4b96f840eda19652",
                    "size": 6058834
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:051e7657f3d94b9dddfec7edc8801ee1eebd3ff5eae4f9b7aa7ce1c540a4feb0",
                    "size": 472
                }
            ]
        },
        "3.15-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:25bec58cb4c9472482dec69baeba50f895102884f0ed03d97eb1b6a0f6eb22ab",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:654e47de949b02a9798ad5e12413e443e1d38973ae1c92e2b401f0718c117e3e",
                    "size": 5727004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e614a59fe7da0fb7664a0ab3b7eb6e9886c847a987a1c6b574f1dc209fa4a6fe",
                    "size": 473
                }
            ]
        },
        "3.15-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8601a04557146fd844e7c10e5bbfc63994cf453766d8df06f44ab09a63b69955",
                "size": 6369
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d691a5a46cedd8527fd3e60b3bc0052b91b48c414dc2b3c4ff0b01a02b64b8e4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4cc92e93f29bb5f6f215e6d2f1555a2695f5cb7bb2c902bd757ce101beb3e53",
                    "size": 9952899
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d94702a83dce09930a8f9959acf61d8cd72cfca6cfc600305d8320d046a4db2a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76bc20413af6b566811f1dba1492ecc69a39de34e9500c47851ed5f0533e332d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8fa307f30ab9d5ff9dd9eec2aa700caeec1a2996be44ad04691a848efc0a903",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dc0820a32d254c7903f2536ec89ccc4c830e1be278b2a54cfd85e60ee75a5fa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:995943bea25538149e74e0ed402399504471395793c56a17ca1a4ce3c2a9162d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8462349768e07d13caaf8249a52ab5f76933b47be98f44eede66737fe2b30eab",
                    "size": 5726995
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61104b9d37b957808461bb1fa734792d328d0d130815ff99c55507d95305069c",
                    "size": 471
                }
            ]
        },
        "3.15-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9922b1bdd757900c45ec51c7296d3314a4e8b96d67f0175872c86469575710ba",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3006944965a3237107ee50067fdb57e1ea77cd474fd7758abe54a119593656cf",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88ea5cd40bca2b5cc0c4fcedbff7144e36f35bde67fa8fb15ce94ea33bb4aaff",
                    "size": 9952940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b2ed38f6fb7989f25d0d57d2575abef779d2a44488a5a5dc48242a12b3822c1",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b33d495fa5dd1a250c03f8f3390f7068327d65233ca171fefb7250817b1df729",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983d59751c08f0e7fe0e44fd9190f955481817b2a0e6219f7082227634661a4f",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc6a9960f01e916f50d615a4f9b05f101e5051cade840094d8be4be1c5f7f91",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb61f6882f7d9db086d7eff166c517106dafffb3ffcd7c69c3553ec5366800",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680f2a965848ed314b4ff1ebcf8f97ea457158f65ec640654dcb5fc25d06668b",
                    "size": 5727015
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744b6c39892f91daf165f50a44704fc4aff32154960fefda18e633eb9f1d4280",
                    "size": 472
                }
            ]
        },
        "3.15-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b1a7448e8114fcdbeacd79c76a6e9cec805877a988959c14f235d8f673e488b2",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62fb8ad7a38967ab576e8168014131c990ba46dfbda2a02fc6a7540684c72f31",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbd5a0146658fb21c4225577c6b26a9d1eb9fe3d108526c453370337a605bc79",
                    "size": 9956964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa0b54e93328dec57a5b41c2369958d19c82b86c5cb31ad2ce55a15d58a53d8d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dbdf0a09eaa76418e4eb1a7e7c93f3906317e76a2fd41f00ebd5a6fe112d9a",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:462e6bb5e055fd7af945fdd37db35d3dd84e9e423da198e8ff21b143544c3e26",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b038b34098182abc668dd5d1a4a8c34a70c720e28187251ceeb558f2ce1ca1f4",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19443ca816e858793e428029d7abf405161fc800b98333e3da3ae3a251c03f42",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cfb6a311c47efe18cecbec8829eb174d1d19c82c6b87cb2ce62775de13675a9",
                    "size": 5727032
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:917e78d7be2f7c35b76b3f055a82462337c766f1db5fa267de1eb2e747e67c63",
                    "size": 473
                }
            ]
        },
        "3.15-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28a81b6a5223e65df7f6d5e522fd724d66fc6ddb8822621df92d3754668d9cb2",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d8eda9fb54d23233f708a38b505274577dbd7f67b007394a6d91f8690278aa",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821f6d62b05b323745863f914297bd4992193f0b66fb9fa6c3fbdbdefee4bf9b",
                    "size": 9956943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1abedffdcdec697e2ac9346deafd319cde06447781d1c1d3f9c2365833a169f7",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77c4f4ead2ed98e48ec202311ec33e3b51ee06a280cd1201133b455fd14df86e",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a98348760bbc42a3a2bb9fc6be8a50a4d95af91dbfbb7220486e0731e3f9295",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:769a0333d30ae0c37745d388c54a75deae5e65dea2f71d68acdc10038474c3e3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1623852bcaaa2b61e15c0d498ee2463149d126aa28fb6b1a9872f40039cf6e15",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3178d0d6cb0d96d6054cf5486b2601f5a5bcfcd98ecbc7f9d4d69b4bc405efa",
                    "size": 5727009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40d0078f96874d45d582d4d2ca66dcb4bab1c7da3ddd847ae7e3ccb1937a08ad",
                    "size": 471
                }
            ]
        },
        "3.15-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d915f5494ed4bde1f8398d7a81da87c98d017ac4ba3c7dc4841ff678dd45d3e5",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7748051d821608f52ff76f68d165ac3f6256d8e3ae4b0fa6b3d2315393dd0f6d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054f3419e5b62fb53998b07b8832aa7cc0e3065b0f809fa328d43940633fa265",
                    "size": 9956944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc9a664b877e8c949bcabb8aa30c664bc8dc9c7f8a0953d16a6b1962bdc769c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd610dda84529e521f8dc15260614f9929ba2b95dfcc843a6dacd573cd4646",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddb2d865600689e01ac1185fb06e7fb28f7be8ae5c6902ba0a8d2fa39e2634f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29f5ad57dedc5ba2ecdb01c3d73405037d61ca97a6c625f0a02672b5fbabfbc3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c647d5d713782561a979830d5d60620a7fd8e8530b3503a3d81aceb6a0d6b26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96421c3722a9406463229df9b7968dec6614798a27f5dbd8c893efef21e01928",
                    "size": 5727020
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f3bf1c142bce043a63123992a7df3493c264ba86eefe3a1fd8924d9a8c459cb",
                    "size": 472
                }
            ]
        },
        "3.15-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:25bec58cb4c9472482dec69baeba50f895102884f0ed03d97eb1b6a0f6eb22ab",
                "size": 6352
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:654e47de949b02a9798ad5e12413e443e1d38973ae1c92e2b401f0718c117e3e",
                    "size": 5727004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e614a59fe7da0fb7664a0ab3b7eb6e9886c847a987a1c6b574f1dc209fa4a6fe",
                    "size": 473
                }
            ]
        },
        "3.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cb86279f0aaf494b9eb4388cb5cfef31cf9c5999b42acfa277f9d5bf303b09f1",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c764718aab13dbaae1319bcb4bf46e4f10dc07ceb7caac238904364e5ad8852",
                    "size": 5732434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49a2ceb2c494ee5aef623c3e430f37e7a1a040e3540a084f3ae4d37af34609d1",
                    "size": 473
                }
            ]
        },
        "3.16-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:166835810fe3bcb5df6bc4e9dca0f4b46c0ed7893d807745d84da25064238ff8",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6654383931c67b9dd1ab1983e332e7e82d6bf4982cec5f880b8902f289cc1a8e",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdd7f9ae194ead383b19b8648b698701dd81ed168b5adbba0b85d8edd689e015",
                    "size": 9857078
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d13fc81cdf01d33ce83526ce5c031f037d0bd83ec5e2985f403d3e56ffc7eaef",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18a42b0e3fcb6758d8bd1b3528c254bacedae087bb9a9aafe0a6e9d211ccb614",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de66cef89e80515f0e450702fedbb251fd2b0833e805418bda12a0b581099b30",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:236eed5320309506b86502b0487a3b318f920ef0765f6099bd759a805fd55f19",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10ebecaef7b0abb5fafa8e667b5781d5c2b1ec163bba5fffce88d7b15f721de4",
                    "size": 5732331
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a44f78c147b1b09a750a0d2e9e98ed107f8002447bae322de60d52f6bd7312c7",
                    "size": 472
                }
            ]
        },
        "3.16-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e1dc64aacdfd29d15954ec8fe4fa533e0ba17df913451bbc406dfdff431007e",
                "size": 6369
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a7609c0ee09dd016b6fe805ad8a902da6476ca57e585013d85b495d520a835",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a734658b6cd840b42fc743aaebd342c7151547ab0a1b5195acaa74d8da6af3f",
                    "size": 9857047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583406f282426467923f5406f29b14cac9b226906e1e60f473dc4d686585dfaa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c8c128e390ce35bc1f5a0b2907588b0e858172df6cd319296be12e5b185d9c5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af60a88bfbfe20548166abed5157a3c994259a1f3e9575f61533050f1d6667b5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b67d126c80f95b9b8ac8cdee5344cbf7d15fde8f8b6d9b11b9287862d14315c1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ff6540c7df0a3fb7a85771367a2b6da71a16dbd0b4a017883aaeb3cb00bee9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d499097c31f162ff670182e74c73ba8a6fabf30ce908de99c33530e4070a9d9f",
                    "size": 5732338
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fa5242874e00d5f9e08423c531c432900973ec2d48fc7f9150e81798ab6bf14",
                    "size": 472
                }
            ]
        },
        "3.16-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3388ce2d933e0e959b90827b590763ce5c4432ebde8b90156624b170ec8720b5",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1637239cec4fef326b57e9ebe5efc0d2e0496abc0572bbedea806e4eea26cd54",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d4f43756210d1c9d34dd62349d09c8ad3d2226b024b6f70256a3d3bb36c745c",
                    "size": 9858568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f0db151a97fd6eda660e4897e9142acbafe0f9aaa53144222fd955085777c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e89fac2335587bd9d1a7f0132de0987d63bfc9dd489a17e9423bdefa22a571",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cb6627b8c44ae0f0bd5a7339eb4529cb8d75a004565e4ddda377037617db126",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:267c10f98303caae89fb749ba189d6ca723949d29bb128ca61738b99948c65e6",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fbb060c7fb4bbadec8930435cd1746223774dce0ea3221d09e3478a229de4a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6134e0623fbfc5dd1b2c556ace2a3ed6105cecabe156618fa5d9283feedef3b",
                    "size": 5732344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0dea44af12d91eb9895c6457aabf0d3add376e4681c8b9ab0e3105dc473830b",
                    "size": 473
                }
            ]
        },
        "3.16-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:36c9a98395a19a070229a7ac1e9279a3c2b1bc05f07b61907916178ef43c462a",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ea011993d4670bbfe20dae79f0ceca79389b64e9ae0945d1bcbee5df0f96985",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d364ca32c59fba10f9af8548c9ada2478c093f0911725d32a025efed9981cb38",
                    "size": 9859358
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a7d8e854fc8bd472a01b7817cfe7d9a9dca1e8f787486572693fa0a8fa047ca",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a66da6c8d188332739bf69c9af835f69971ca03ed74b33b7039611731201b3e",
                    "size": 5732326
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d07d872ae05366fa6d73a455a76434b004db294c90367f84b56eae353ff960f7",
                    "size": 470
                }
            ]
        },
        "3.16-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90ad767d50ef551dc3d77a6a147dbbb69f048c562cb27ba42dad7f761e38f31e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790e45397078834742b7a9bebe166bfddb3de7b912e50958a7987b76fe7101e2",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f81ce58a1911ae5cf3561eec9735d1c27be22b1253dfab6b19b928be6043ce3e",
                    "size": 9870218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4c410d423fd46114ee767a0873e47736da6fa0ffb6d38e9e3cbe9819c2cd561",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6763c72dfabd180dbb25af25b57246cdd8368b08f857ed12095119dfd66606",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c68b6de5418baf0639cb2ebe8a1eaf7c2e3aff5c2925300d454d2b5fb1e6c3e3",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9ca1417089f6a8b0315d8018748c1651c5201c17344f6ad80edfdb5cf9a44c3",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:374e4f032c3a6e30a4660a86e842e40cb5a4c635da8383a4a8ed6b03f59e8115",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6e25dab9022f88cee7fe03dac56ff763df5864b8f0420070863213e0b58e298",
                    "size": 5732404
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694cd0b5d92579bc5d6522f891623456c12af42fedbac55d9cbb5b34efce99b6",
                    "size": 472
                }
            ]
        },
        "3.16-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cb86279f0aaf494b9eb4388cb5cfef31cf9c5999b42acfa277f9d5bf303b09f1",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c764718aab13dbaae1319bcb4bf46e4f10dc07ceb7caac238904364e5ad8852",
                    "size": 5732434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49a2ceb2c494ee5aef623c3e430f37e7a1a040e3540a084f3ae4d37af34609d1",
                    "size": 473
                }
            ]
        },
        "3.16-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cae61fb314c3ec52556104ab9058fa53a223878602342bcd9ed1dbaf8bf3594c",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a8baa8941a2b3684f3c46df1c694161440fcc92bfa75f14bb5a1ed6c69b90e2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3b429d25b7c48011ec28cb885737158ad164475041b0c690c36ab1fc4639fb0",
                    "size": 9870172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd814bbd2a9bbf83a40c8f7f2de31fc44982762e5b45f7a7b20c09ecd412320e",
                    "size": 155925275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790cac1d59509f2eea8adade0cd2ae9b5c4fd8fd04ec7271546f65cc7eb1b725",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c02843d2cf0f61e021993be0c2e6dd9305d07462f9cadc4937c5cda767ad958c",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1c1f1f812b5871d49bc075374d40b64b5a566dd6f21dda400fd166556487b4a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d39a162e38056d60f93855a6442e5b430a4a74fd2ba99a20bc134650080d303",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70b72452545897744cc413bf44d11d165b7af0911672b2c4232ace110b4ef7bb",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8570f9bebf969ed882713be775d060a239b140f7d5c6911061c72ce05e65ed3b",
                    "size": 6059427
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1f0a002f7c63aeffef4d771d06b3ab41808565484ee23dfc20e7634f3a9c51",
                    "size": 473
                }
            ]
        },
        "3.16-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7db39a2eedd20b0b9674d9de99d238d1a7986e5fe74d304de79cb3b98920fae3",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6654383931c67b9dd1ab1983e332e7e82d6bf4982cec5f880b8902f289cc1a8e",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33e9c22ce4576ac3c3ad87d83282c4d3a6a5a843021513fef859bf3c86919ca3",
                    "size": 9857077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a7ebada011dc412ca8f7083de244d2972d2c1c456bad4253a4aef6ccd8d766c",
                    "size": 155928558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b58fdc146c22628220cda69c3099312b0c5c8ed4ef3c3d6b1fa5e97d7813cf5e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13c5d88f2d83a0322107a0afb7728addb6ff80164059d456c2c65ec8bb1c69f9",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7854f496cdce7710894b54a3f12293d00d63e9f9e02df5f253fe9518564195a",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34ba86528f02c7bdc23b336abc6670df5b2c9d8b9bf95a2ac4e93ba4b93a1d68",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c18439735d346fd4c0aa22e27b9413ece0362dd8c90e06c8bf6227fbc17c5a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:605107dbb7e9c2453be1d8c2298f58ea6bb4e0671b080f39421ce7657c552372",
                    "size": 6059135
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ee0de0df7e72c48f4295008694f99dab833878b35e5e0d7056556eb0ab74a27",
                    "size": 472
                }
            ]
        },
        "3.16-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4fc99785b938c60b6efe2ff67a1eff5e840240d225ef7043262c3d408c9b5404",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71d54ee96fec533da52c9a394234f693989cf893c90c2c210a5762c0b72b4650",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235cda4fc181baef5b5221155b4caac3961892670dee061e1902d1a4204c6f41",
                    "size": 9857058
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbad46840c724ada40a555c905d3e2fa6c1f2f340ebaf0816010780fa660040c",
                    "size": 155928545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6125ae83ae1eb076075b126da0dc4032cccd2dcf7e18bb9dc0f134153c973663",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:887f67b8d8f35bbe1ec9aac60d400649e6c948a7f3b932c0d903d6c0168c37f5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6630d15dddb011e8536ff6d4260356b143abd445e53da30d8e0cc4dedf90b045",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b15060ee1e3bd42e2cc00c167983faf5cff3eec701afa3017fe49596054f93f",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b78599b29504eb26fb74554496545f3805c1f18a2db53787af105cc61ff457",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5b11ba4f8115933716e3f08665dd8eb976006e602b23ae8bc175a167dd0cb6f",
                    "size": 6059146
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:621a829df711460220610364e5f6b7a44df0070bedb7fff70f7ff426f1b593b4",
                    "size": 470
                }
            ]
        },
        "3.16-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:91dc9599872f25f7e9f55725071cf548ec31eb543ee247494f4aed057215831a",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:317d2c975e0eb3498cad471d05e5cdaba97bc8d6ff1ed1cf4d18f809eafa6404",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee5bbe03c5b96b0ac9682eba1f3e28f144b99de8f25375da79b648ac0875ef6d",
                    "size": 9858538
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a32672ae5f0d27d37c298cff9398982fecb7c030c294f8cc986a220aa3be8d35",
                    "size": 155928277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac00c93aa4ff297c1b490d5a13cb4916f50730cdd367792277f7342d2cb78470",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14d633831a5188f0ba72146ae08328c2a2fa9362633ff7c10ab3afefd0fb797a",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020bb9a941eff143fb7cf9698fe799420ae1f86b6379492bdd884bd5523e5a30",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:961a9c49bf85972ce6ff3cab8920128b27839146683921b80110ae1c57d7e10f",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfe581e4ca2c6df6491cddf782e786df722d5b690138521ebb6f737aa1f5f962",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20be56e36c3d3a599706dbcc8ac7c20ca2375aa87449576c86d2ac6c3f6319",
                    "size": 6059146
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20ecf1e55b082225dd8bfedfefbf7b78b6c2a793abfcbaf5663127947e6c9f7b",
                    "size": 473
                }
            ]
        },
        "3.16-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2fe191f07a5ede7899c140aea6f50bbfd66bf5e2cb63c2c6ec0f34246662c8a9",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5068c840180d206d3909dbe70073229a49763f3700c7fcf1505d6bc59a3509d4",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a134b044ab60c8a587bc4dd770a4847af1c505b76e6ec047d00a56df7f7c09d",
                    "size": 9859397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11ff7af6af70c496478e44cd17b56801bc9d4a863c470be53b7a939ed8ca08d7",
                    "size": 155926760
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:936eac338ccc0a87c1f6749a005ce39c48e4ab7594988d3c907a41551a3ef20e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b3b1490426563b18923f72763c4e316545d98a18bedd3807530e0edd2f6a212",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99f2eb9eff0876ffc54f920b8d12648d2e6f568658e8ae167e1c059c40dbc3d9",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa71df7ea930d9fbcf3245eb433a4987e9ce8833f2bd9d956f00400649c22aa6",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8df1fc629c43d4b7f3774eeca81a9074a27098b939aecfbe6693481900be8142",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bac302b08f4b91907be33b2cd2a36b06fc8b26f61304ecbc2b61f999464e15d",
                    "size": 6059144
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98e1dafb0e17b22b619e64b849f0348a8b3b44acd58abd213943e34dce332dbe",
                    "size": 472
                }
            ]
        },
        "3.16-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5b432fd0df7694c6fe3c0cf322d1648da717e495127bed7d6fe862ad10114b0b",
                "size": 6974
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dd380060057693a384511e5ed8a398468e2a5e4c1e8b4f5b33c7ef9dba25bed",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bda8a1aac911c5a2c50484d58c1084caca2c9e62413ceaaad956b6490f57843",
                    "size": 9870219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46695987f0b476c28e2e8a5008e732d7c14cc900093d57f868d4218924296fe1",
                    "size": 155924724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31e70baac289c133095f4d43b35383c6024f8365e3eab30f8cc17cef709c52e4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d65b21f159a98dbe07f5e97dd126e1532bec80ef462dac47a2b4256059558a61",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c1093a775a93f1db54946feb0a52a4ecf705a3e588fd8a9d31c6e2a5a04ffe0",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7de1477ba06cc97a13db18ee6faee9a3def9f7183817db5e596936e4999dbdc4",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62195266f2f22c3cc72f27719c940aaea66bfed3f08a198fab7f87bbada9a3a9",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2aa4e12b50c123d9e9a6586ce8d7ea303b9c4aedd1392cffcc305fca888ba033",
                    "size": 6059414
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5596a135f2c836e14d3050a5a87e92c51c61c23721202e2329407a705ec72caf",
                    "size": 469
                }
            ]
        },
        "3.16-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cae61fb314c3ec52556104ab9058fa53a223878602342bcd9ed1dbaf8bf3594c",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a8baa8941a2b3684f3c46df1c694161440fcc92bfa75f14bb5a1ed6c69b90e2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3b429d25b7c48011ec28cb885737158ad164475041b0c690c36ab1fc4639fb0",
                    "size": 9870172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd814bbd2a9bbf83a40c8f7f2de31fc44982762e5b45f7a7b20c09ecd412320e",
                    "size": 155925275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790cac1d59509f2eea8adade0cd2ae9b5c4fd8fd04ec7271546f65cc7eb1b725",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c02843d2cf0f61e021993be0c2e6dd9305d07462f9cadc4937c5cda767ad958c",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1c1f1f812b5871d49bc075374d40b64b5a566dd6f21dda400fd166556487b4a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d39a162e38056d60f93855a6442e5b430a4a74fd2ba99a20bc134650080d303",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70b72452545897744cc413bf44d11d165b7af0911672b2c4232ace110b4ef7bb",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8570f9bebf969ed882713be775d060a239b140f7d5c6911061c72ce05e65ed3b",
                    "size": 6059427
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1f0a002f7c63aeffef4d771d06b3ab41808565484ee23dfc20e7634f3a9c51",
                    "size": 473
                }
            ]
        },
        "3.16-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cb86279f0aaf494b9eb4388cb5cfef31cf9c5999b42acfa277f9d5bf303b09f1",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c764718aab13dbaae1319bcb4bf46e4f10dc07ceb7caac238904364e5ad8852",
                    "size": 5732434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49a2ceb2c494ee5aef623c3e430f37e7a1a040e3540a084f3ae4d37af34609d1",
                    "size": 473
                }
            ]
        },
        "3.16-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:166835810fe3bcb5df6bc4e9dca0f4b46c0ed7893d807745d84da25064238ff8",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6654383931c67b9dd1ab1983e332e7e82d6bf4982cec5f880b8902f289cc1a8e",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdd7f9ae194ead383b19b8648b698701dd81ed168b5adbba0b85d8edd689e015",
                    "size": 9857078
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d13fc81cdf01d33ce83526ce5c031f037d0bd83ec5e2985f403d3e56ffc7eaef",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18a42b0e3fcb6758d8bd1b3528c254bacedae087bb9a9aafe0a6e9d211ccb614",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de66cef89e80515f0e450702fedbb251fd2b0833e805418bda12a0b581099b30",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:236eed5320309506b86502b0487a3b318f920ef0765f6099bd759a805fd55f19",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10ebecaef7b0abb5fafa8e667b5781d5c2b1ec163bba5fffce88d7b15f721de4",
                    "size": 5732331
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a44f78c147b1b09a750a0d2e9e98ed107f8002447bae322de60d52f6bd7312c7",
                    "size": 472
                }
            ]
        },
        "3.16-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e1dc64aacdfd29d15954ec8fe4fa533e0ba17df913451bbc406dfdff431007e",
                "size": 6369
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a7609c0ee09dd016b6fe805ad8a902da6476ca57e585013d85b495d520a835",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a734658b6cd840b42fc743aaebd342c7151547ab0a1b5195acaa74d8da6af3f",
                    "size": 9857047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583406f282426467923f5406f29b14cac9b226906e1e60f473dc4d686585dfaa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c8c128e390ce35bc1f5a0b2907588b0e858172df6cd319296be12e5b185d9c5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af60a88bfbfe20548166abed5157a3c994259a1f3e9575f61533050f1d6667b5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b67d126c80f95b9b8ac8cdee5344cbf7d15fde8f8b6d9b11b9287862d14315c1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ff6540c7df0a3fb7a85771367a2b6da71a16dbd0b4a017883aaeb3cb00bee9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d499097c31f162ff670182e74c73ba8a6fabf30ce908de99c33530e4070a9d9f",
                    "size": 5732338
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fa5242874e00d5f9e08423c531c432900973ec2d48fc7f9150e81798ab6bf14",
                    "size": 472
                }
            ]
        },
        "3.16-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3388ce2d933e0e959b90827b590763ce5c4432ebde8b90156624b170ec8720b5",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1637239cec4fef326b57e9ebe5efc0d2e0496abc0572bbedea806e4eea26cd54",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d4f43756210d1c9d34dd62349d09c8ad3d2226b024b6f70256a3d3bb36c745c",
                    "size": 9858568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f0db151a97fd6eda660e4897e9142acbafe0f9aaa53144222fd955085777c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e89fac2335587bd9d1a7f0132de0987d63bfc9dd489a17e9423bdefa22a571",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cb6627b8c44ae0f0bd5a7339eb4529cb8d75a004565e4ddda377037617db126",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:267c10f98303caae89fb749ba189d6ca723949d29bb128ca61738b99948c65e6",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fbb060c7fb4bbadec8930435cd1746223774dce0ea3221d09e3478a229de4a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6134e0623fbfc5dd1b2c556ace2a3ed6105cecabe156618fa5d9283feedef3b",
                    "size": 5732344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0dea44af12d91eb9895c6457aabf0d3add376e4681c8b9ab0e3105dc473830b",
                    "size": 473
                }
            ]
        },
        "3.16-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:36c9a98395a19a070229a7ac1e9279a3c2b1bc05f07b61907916178ef43c462a",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ea011993d4670bbfe20dae79f0ceca79389b64e9ae0945d1bcbee5df0f96985",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d364ca32c59fba10f9af8548c9ada2478c093f0911725d32a025efed9981cb38",
                    "size": 9859358
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a7d8e854fc8bd472a01b7817cfe7d9a9dca1e8f787486572693fa0a8fa047ca",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a66da6c8d188332739bf69c9af835f69971ca03ed74b33b7039611731201b3e",
                    "size": 5732326
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d07d872ae05366fa6d73a455a76434b004db294c90367f84b56eae353ff960f7",
                    "size": 470
                }
            ]
        },
        "3.16-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90ad767d50ef551dc3d77a6a147dbbb69f048c562cb27ba42dad7f761e38f31e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790e45397078834742b7a9bebe166bfddb3de7b912e50958a7987b76fe7101e2",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f81ce58a1911ae5cf3561eec9735d1c27be22b1253dfab6b19b928be6043ce3e",
                    "size": 9870218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4c410d423fd46114ee767a0873e47736da6fa0ffb6d38e9e3cbe9819c2cd561",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6763c72dfabd180dbb25af25b57246cdd8368b08f857ed12095119dfd66606",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c68b6de5418baf0639cb2ebe8a1eaf7c2e3aff5c2925300d454d2b5fb1e6c3e3",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9ca1417089f6a8b0315d8018748c1651c5201c17344f6ad80edfdb5cf9a44c3",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:374e4f032c3a6e30a4660a86e842e40cb5a4c635da8383a4a8ed6b03f59e8115",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6e25dab9022f88cee7fe03dac56ff763df5864b8f0420070863213e0b58e298",
                    "size": 5732404
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694cd0b5d92579bc5d6522f891623456c12af42fedbac55d9cbb5b34efce99b6",
                    "size": 472
                }
            ]
        },
        "3.16-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cb86279f0aaf494b9eb4388cb5cfef31cf9c5999b42acfa277f9d5bf303b09f1",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c764718aab13dbaae1319bcb4bf46e4f10dc07ceb7caac238904364e5ad8852",
                    "size": 5732434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49a2ceb2c494ee5aef623c3e430f37e7a1a040e3540a084f3ae4d37af34609d1",
                    "size": 473
                }
            ]
        },
        "3.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b38a07e7f7b74e8ea56465bcc2aa0351c4436a170edc9be21c236346956e1039",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79fe6230c6a25a3abda9048dd19ce3cb666284a122201657ff3e2a0b245068e9",
                    "size": 875681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81956ba825e5fe3d04844cd8044cae2d36d9734c7977dba5e1f391c1c6da55b9",
                    "size": 473
                }
            ]
        },
        "3.17-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:47dd84a1a7063deeedecc256f3ac930482bc5bc601852d8b98e2f747af60efa3",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78fad2f7ed8d86285314cd766ca3117bdd175ed4ca0dd8b33af665acf257718c",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e9928902f0b5920d4470ad5157e478ae5c00753e2548772ed9d64a784cf3356",
                    "size": 9984069
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f46ab6f8895865df76b57474f3d9e371bbd6ef44464c05d497f09a0646e71eeb",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d304f3525fd1d17276ccea7f9d40fea878f3d8222daa31ba796ca0aa89ea46f6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfce4e515012c3c00ac40c58ac73ce053cdb7f77ae6ab48ddaeaf6d0bc16c91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:193ea19b7479c8bfac6650e8043ad290acced4f7a52f58ecb11d05b801231c98",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa24e8b94391bb5130433959f413cb9c0cbd962abad5625299e2f3c865eb46c2",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5226efdeb2afac29ca08915fe289b4a2b8dd9bd14a4e1a3906acf6e1f6e92e5f",
                    "size": 875328
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b9ebab32566f840b2b2e1d414811701d4403bf45c9826aea3184583fa5c624e",
                    "size": 472
                }
            ]
        },
        "3.17-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1736b8acc8605169b53f329235f7d9681b15f52de9869fea23c2b5256a932414",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1441f0b0da088710147ec046158bb930fbfa283e38afd790c450ad2223776f7",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b0ce6f0ba41e7539f2fb44791c838600729a420631ec8bf67c5df68804d3f56",
                    "size": 9984105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8296b85813b8ac492522697e80c4b5f2d412ecf25fb089a50ae53aa4fa25fdf",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8eac589e6b7b597f20eb9eabcf0af77b16da1bccf66e4160afa71fdfbcd1fe5d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eaddf98128a51ecb0a32bd1d4afdabec28a2db55d8e3d8db8b77662cbae85f",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33367fc93247d5c1561ade193a09eaf8e46247dfc341cfc3ade8652f31943fd7",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4534dd8632eba3ee85e9cd0c323609f285da15a626e32409a6fa96fca88046b2",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcf9a026c77fc3412a3956d30d7e65199337db240e47b9ff66b37d28788fc41a",
                    "size": 875344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf93c8ac78831cf84352bf0b3539b14fcde6775585252e457c42695c4421258",
                    "size": 472
                }
            ]
        },
        "3.17-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:428d06c8d42ee2278d1d3208bae9f01293d00c644dcb6684f1485b06dd76715c",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52adcadab17af2222c8233a697cea18eba996d1279acfbb1e81009f3162c18a1",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e50938f4eb532aff415b6b8d23050e4476f542ab3bbc4ec6145086b4651d390",
                    "size": 9985719
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ec60f658c13231e2651f511a4e73d4e3ed3e2a3ef4662ad3cfec3c578e32d6",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd7f67f73414ec4ab9d1164b1d03270862ee1a0930ceb37a97f8888a3886897",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3099dfec4e8260bfe6cb5ef040c8da5df2167c44e75e5155032570225cf7d47",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:506e0ea0dc9309928aa14d9312ce547bcb934858640c9ce4f4cb463993caaab6",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c446c32bb9522dc8c82d58c5afa1ba9239631b1ffc9cc7d6f8c61201e1a79a82",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56c3120d4699300f505d1bc0dc5ca58614a6f9bcb5cf3ee82bdfb5eb9dde447e",
                    "size": 875354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c7b1c4570490ff3c935d0c5a58a6e685aea310c8178a02b20e49516795eb0d",
                    "size": 473
                }
            ]
        },
        "3.17-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff5277e20da40dc6d58806fbc74d8caad1286a7ef30a1f7126da1a70b2dee603",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44323e4a0a641e0d1e80ef76d8233cb227b65d77d3305be618a985c72b7286e8",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf3bb5b0dfa479a0b0952c68789c44972f69dd6567974c70a00b284344a00d04",
                    "size": 9986371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c489e5f046bf7937ede46206cf1d7359833005d639a172f524ec651761405a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78ae1335d339483d5ca32cc2b5610b948557bd3ff101ed4259584018fb724b23",
                    "size": 875346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec33a9b510937883b03af347dcd1ed626c78312d364b13d323fa16a993724e8a",
                    "size": 473
                }
            ]
        },
        "3.17-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1f83d165cd8593e1e95230e8537196b8a3078712b44898a9073b13747867c06b",
                "size": 6351
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22acf3a6c2b5ab10b9ae9f9eb0421c8ba9a8b396ebee5a12d860baa3c8b2e64e",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb0d3cd191fba3f286ccbc15e5374017df73a7b2bdb3c0fced878f07a3c8b1d",
                    "size": 9994959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76f8e926438b08969366ca0435cda05613e5729f1fb42a3cad791c520142a0e3",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb4d66cf77a4f89914476003b23c46b8874d935e48843c1005fa5e90fa98012",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc6f7a3aeeb3c549ffd6cc920242156d9dd3036b166bf80d285aa58698902ada",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4374f0897231c2303868c9c7dca68a222d6c71b825dbd18959aba13c98763271",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536746e2e6e159e4bafb713c5152ed842c6ce300a5ce5a312f3ef6bbe78e3323",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48a4012fe06b4c3ccdcd321fe257543d32d07b2f4d6cae99d265443dbaf7d52e",
                    "size": 875685
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efb78a941861ba2b24e80cee60dfae0d6337400b07bde40033c1f08509efaace",
                    "size": 472
                }
            ]
        },
        "3.17-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b38a07e7f7b74e8ea56465bcc2aa0351c4436a170edc9be21c236346956e1039",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79fe6230c6a25a3abda9048dd19ce3cb666284a122201657ff3e2a0b245068e9",
                    "size": 875681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81956ba825e5fe3d04844cd8044cae2d36d9734c7977dba5e1f391c1c6da55b9",
                    "size": 473
                }
            ]
        },
        "3.17-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c9332b7bdb2d00ba0b4096d576647e5eb4d3a7ce2ccc0399108ca24abc87f48",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e39809f5a05261c683fe8793c77d9fd1c43ec691df62913b51c6306d1300b48",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce14e2419439926ebcba84e1456378a8c69a9d9e716fb45c51f187af6e9091fa",
                    "size": 9994983
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89d9b4f84c95fecd0976fbdf98428ac25af49e2d5729fdffa9a27f8c7d04d60",
                    "size": 165683525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:974b43a02b3be5445f7ee9b0089200aae76ee24780547ff5ed5ef06d23a6317e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d3ef60d558c226df3cd42fc4d17faea6113f5801d531d84272cfb44dc89d005",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ffc7362baaf83c7bb505b8c8758964ee1b087cd92ab0f2c9298cba4111122ba",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e94d9b90ca67e791359fc5140ccd71c97e9843f8e7337ce1538cc77c1a2a42ca",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6e8b993e635c04496efd29b59592c3558c3541c2bd2e515f75714a039b33087",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96451cf45ee00c3eaafc20914d8f143a9983139eb749555321313990ffc42dfa",
                    "size": 1203113
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26329669a6396df65dfb404e8c596bc2fa6fb5dec5d812ac0061f55d98c90d0d",
                    "size": 472
                }
            ]
        },
        "3.17-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3ef645a0663849dc74fc2651aedf72a973a6ffbbacefea687cdec34a9cf2680f",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b936778d84a8f5ff55dcab465b65452c78359ae2b671cbbae0b6a6d3c4e08ea7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74dec865add1f5c0f1f5161e2e22aacb7309d626c7b823b9d7ada0e1fb4a74b0",
                    "size": 9984104
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8b15e1579f54dafe253c721f70868a8cec0049f500c434e9eb49a478782a9e5",
                    "size": 163652214
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:007e0ba8a825e38205dba3208c899b99ff4bc5faa2ef5e1625d4fbb56ae9f515",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24113c2123298f5d249e9554c43684ef6a0870cc1ad340c2073eca0395de6007",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd3153e57f5e44936d5ded5b2583d1ac8e190dc8df60e7b8d294c34f624fbb08",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6b56fc72b5e5190360690226039c2d38708eaeb25afa60f13f02fb36743970",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8971f4f965bd2831aa21ccd4bd445f61bce33550a2b6cb0718eb8f7a95a121b5",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1891f8a5963eb852b0b25f3b4ab1cea2ade674b9de59f03188f86056495206b2",
                    "size": 1202705
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f04f4cb03b9e4bbf548d4ff4950d32df44411d9181ef6d7a5b07f22a45d6fff",
                    "size": 472
                }
            ]
        },
        "3.17-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f42ecd990001c10287b648b3d22db5719b87b345269fb83c8727d08b1e93164e",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0694aecf0a258c6b898d30138984bf5864725e46f0abfbd894dc0fcef0e9ffa5",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4da9f55f180b42c0f2a21383ef0757c0d7605c261eee2dd47640bd96cb727b0",
                    "size": 9984103
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3606af060a53b70a8f129da9a97bd3161784a71211571c914d9ab37b6b7e9d7f",
                    "size": 163651080
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6166412876407111f7188cad3e7ed29766fc827ad93fccff05a767e8a3ff9ee2",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20f19de6e688c8be61b1eaa4153871f19bdefcb0c895f788cd5f3ad5a37d2e6a",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6ff827da76e61509810b879c93b1b36ab84d21c0501478a0fe0fe3026a58076",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfc21d1ea15883c509a783476668e7c20e23b6d9485c580f4dba72edb0aa1542",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5e0815b838bae7cc746ec647f752b9d6be95f1b0bf592914e79efac8cbda53",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6181ebb540cc5658394781b6de1635ad0916812adb2b4dbd378d0a3ed2baafe",
                    "size": 1202708
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec033b14f92060cf9d611979289555f7e8456bb52ecd929bb8cda33676954ca",
                    "size": 472
                }
            ]
        },
        "3.17-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5de1d14054e399eb3613c1a805660c219520ecda7ce426af21ddc60d634ac04c",
                "size": 6990
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9becd229e81df8c7a913b245b000d1287b9ff9f8be9596713e622494a24ced1d",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed807d8797202cd5284b8cb79855a357576e896668fdc631ff1a8ca0b9f0dd08",
                    "size": 9985732
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aee6f0246aee6bd94082072897270d07082a3408041f1edf76b8bb6592ac908f",
                    "size": 163656785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c960cfb239058b46e3c060ed907204583b4070c2e631e4178b1cc64e64cef48d",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37a5918d8cb440752679ecfe68478ba9bf379a2310c0b52927844c52f019a2a9",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1007ac68a45fac8de0836894dc06efcd77b100096897d0c89a557e8ef363339b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:263b3abc9f5b9ec2eebc655886f415616c0d8d774e4f0cb5eb621e3cba761176",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62c574e1f0b4ccd0cc89a34ad7f5b1a618326c4bdea9994bd30874cd01d71909",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:196726b1276b4d73d90702299526abf8a270bace77e47bb15530b53175d83fae",
                    "size": 1202719
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22c6835b74a3292f40c101d7d6a658c5262ab129c4b5b68b3fa2641349b76999",
                    "size": 473
                }
            ]
        },
        "3.17-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3bcd2984c3dead8d3183824776573e281f4cb27cb83397e43d36f32c61305de4",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24a666e6f5de204fe311300eae17c00bd7f4b439172c00716a40963f99682135",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb540c35895f9ef64ea41fe3bf1ea5bcf812204cf6b895dc7ea14864fe95649c",
                    "size": 9986304
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2cfdf40a27891cf8120cd5a863036b9f336f1e262c7d972ccd5cc2ed4f724ca",
                    "size": 163656311
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96cbcdae419adb00e227b755a72a60ac748494d63b0e00885c091b3d453a5840",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be25a6620ba9870c97a1e2f79a4ea784dda801cb1a9da62eece577b2588d75d4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b7f7d2b02e9d3f947eb7f080f03b7a98fd0d2844009c1d0f5ea1830e3681ce0",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2d791c59eb6770616a13cdb0d1cf2a29b7b38b6d1f076018f3247ca59e2dc8b",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f80f5efc0a0a083392cb90e8d705d8c207925c8d2e2a2cf1db2da4fe9293955",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030e5d44d5fa21801a2d9a836888cd904b7e2007bc62a4a1818fe6ce83cf72d1",
                    "size": 1202715
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1893af2cf5c4dfd29a9edaed15f6b6e42fded5511f067f85863f13f0b1f1e84c",
                    "size": 472
                }
            ]
        },
        "3.17-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:82f3864196784c810224580758ed1da4bf071022ca2da963e34ebb3c133f28a6",
                "size": 6976
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22acf3a6c2b5ab10b9ae9f9eb0421c8ba9a8b396ebee5a12d860baa3c8b2e64e",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c724fc71975cf321a34ed04080bfca4dc495af9e176abfa1115ef3e711d9b4d6",
                    "size": 9994959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6318746594ec63e2fdb46bc65f6d8008362ca70708908ce7a3d5cfa7e7eac491",
                    "size": 163652795
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7c328ff64654504eef2a6027819ba30d5aa87c6f0795aa973f0a84baab39a8a",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfd70961b19f5eddc18d6e1dec6bcd557c3c3fb9abf728a2059d467d66e2abde",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52ae5ebe2d4d2fcf97d3b10f1f93441547bc1355bee478dba685b04ed006d1a7",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68fb27f97cc2bb64cfa9226f02624fda8cf57ecd54e8926544beaa6dd12fba50",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88de0b2d1d5770482e0bc0cf5c90d37d2311675ce45afb862d68307516fcb9dc",
                    "size": 1203114
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa669df2f6f6de2333140d5a59b771fa1724beb31fd579374b9c4fa79eff03c0",
                    "size": 472
                }
            ]
        },
        "3.17-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c9332b7bdb2d00ba0b4096d576647e5eb4d3a7ce2ccc0399108ca24abc87f48",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e39809f5a05261c683fe8793c77d9fd1c43ec691df62913b51c6306d1300b48",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce14e2419439926ebcba84e1456378a8c69a9d9e716fb45c51f187af6e9091fa",
                    "size": 9994983
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89d9b4f84c95fecd0976fbdf98428ac25af49e2d5729fdffa9a27f8c7d04d60",
                    "size": 165683525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:974b43a02b3be5445f7ee9b0089200aae76ee24780547ff5ed5ef06d23a6317e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d3ef60d558c226df3cd42fc4d17faea6113f5801d531d84272cfb44dc89d005",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ffc7362baaf83c7bb505b8c8758964ee1b087cd92ab0f2c9298cba4111122ba",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e94d9b90ca67e791359fc5140ccd71c97e9843f8e7337ce1538cc77c1a2a42ca",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6e8b993e635c04496efd29b59592c3558c3541c2bd2e515f75714a039b33087",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96451cf45ee00c3eaafc20914d8f143a9983139eb749555321313990ffc42dfa",
                    "size": 1203113
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26329669a6396df65dfb404e8c596bc2fa6fb5dec5d812ac0061f55d98c90d0d",
                    "size": 472
                }
            ]
        },
        "3.17-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b38a07e7f7b74e8ea56465bcc2aa0351c4436a170edc9be21c236346956e1039",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79fe6230c6a25a3abda9048dd19ce3cb666284a122201657ff3e2a0b245068e9",
                    "size": 875681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81956ba825e5fe3d04844cd8044cae2d36d9734c7977dba5e1f391c1c6da55b9",
                    "size": 473
                }
            ]
        },
        "3.17-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:47dd84a1a7063deeedecc256f3ac930482bc5bc601852d8b98e2f747af60efa3",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78fad2f7ed8d86285314cd766ca3117bdd175ed4ca0dd8b33af665acf257718c",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e9928902f0b5920d4470ad5157e478ae5c00753e2548772ed9d64a784cf3356",
                    "size": 9984069
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f46ab6f8895865df76b57474f3d9e371bbd6ef44464c05d497f09a0646e71eeb",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d304f3525fd1d17276ccea7f9d40fea878f3d8222daa31ba796ca0aa89ea46f6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfce4e515012c3c00ac40c58ac73ce053cdb7f77ae6ab48ddaeaf6d0bc16c91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:193ea19b7479c8bfac6650e8043ad290acced4f7a52f58ecb11d05b801231c98",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa24e8b94391bb5130433959f413cb9c0cbd962abad5625299e2f3c865eb46c2",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5226efdeb2afac29ca08915fe289b4a2b8dd9bd14a4e1a3906acf6e1f6e92e5f",
                    "size": 875328
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b9ebab32566f840b2b2e1d414811701d4403bf45c9826aea3184583fa5c624e",
                    "size": 472
                }
            ]
        },
        "3.17-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1736b8acc8605169b53f329235f7d9681b15f52de9869fea23c2b5256a932414",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1441f0b0da088710147ec046158bb930fbfa283e38afd790c450ad2223776f7",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b0ce6f0ba41e7539f2fb44791c838600729a420631ec8bf67c5df68804d3f56",
                    "size": 9984105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8296b85813b8ac492522697e80c4b5f2d412ecf25fb089a50ae53aa4fa25fdf",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8eac589e6b7b597f20eb9eabcf0af77b16da1bccf66e4160afa71fdfbcd1fe5d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eaddf98128a51ecb0a32bd1d4afdabec28a2db55d8e3d8db8b77662cbae85f",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33367fc93247d5c1561ade193a09eaf8e46247dfc341cfc3ade8652f31943fd7",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4534dd8632eba3ee85e9cd0c323609f285da15a626e32409a6fa96fca88046b2",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcf9a026c77fc3412a3956d30d7e65199337db240e47b9ff66b37d28788fc41a",
                    "size": 875344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf93c8ac78831cf84352bf0b3539b14fcde6775585252e457c42695c4421258",
                    "size": 472
                }
            ]
        },
        "3.17-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:428d06c8d42ee2278d1d3208bae9f01293d00c644dcb6684f1485b06dd76715c",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52adcadab17af2222c8233a697cea18eba996d1279acfbb1e81009f3162c18a1",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e50938f4eb532aff415b6b8d23050e4476f542ab3bbc4ec6145086b4651d390",
                    "size": 9985719
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ec60f658c13231e2651f511a4e73d4e3ed3e2a3ef4662ad3cfec3c578e32d6",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd7f67f73414ec4ab9d1164b1d03270862ee1a0930ceb37a97f8888a3886897",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3099dfec4e8260bfe6cb5ef040c8da5df2167c44e75e5155032570225cf7d47",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:506e0ea0dc9309928aa14d9312ce547bcb934858640c9ce4f4cb463993caaab6",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c446c32bb9522dc8c82d58c5afa1ba9239631b1ffc9cc7d6f8c61201e1a79a82",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56c3120d4699300f505d1bc0dc5ca58614a6f9bcb5cf3ee82bdfb5eb9dde447e",
                    "size": 875354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c7b1c4570490ff3c935d0c5a58a6e685aea310c8178a02b20e49516795eb0d",
                    "size": 473
                }
            ]
        },
        "3.17-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff5277e20da40dc6d58806fbc74d8caad1286a7ef30a1f7126da1a70b2dee603",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44323e4a0a641e0d1e80ef76d8233cb227b65d77d3305be618a985c72b7286e8",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf3bb5b0dfa479a0b0952c68789c44972f69dd6567974c70a00b284344a00d04",
                    "size": 9986371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c489e5f046bf7937ede46206cf1d7359833005d639a172f524ec651761405a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78ae1335d339483d5ca32cc2b5610b948557bd3ff101ed4259584018fb724b23",
                    "size": 875346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec33a9b510937883b03af347dcd1ed626c78312d364b13d323fa16a993724e8a",
                    "size": 473
                }
            ]
        },
        "3.17-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1f83d165cd8593e1e95230e8537196b8a3078712b44898a9073b13747867c06b",
                "size": 6351
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22acf3a6c2b5ab10b9ae9f9eb0421c8ba9a8b396ebee5a12d860baa3c8b2e64e",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb0d3cd191fba3f286ccbc15e5374017df73a7b2bdb3c0fced878f07a3c8b1d",
                    "size": 9994959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76f8e926438b08969366ca0435cda05613e5729f1fb42a3cad791c520142a0e3",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb4d66cf77a4f89914476003b23c46b8874d935e48843c1005fa5e90fa98012",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc6f7a3aeeb3c549ffd6cc920242156d9dd3036b166bf80d285aa58698902ada",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4374f0897231c2303868c9c7dca68a222d6c71b825dbd18959aba13c98763271",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536746e2e6e159e4bafb713c5152ed842c6ce300a5ce5a312f3ef6bbe78e3323",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48a4012fe06b4c3ccdcd321fe257543d32d07b2f4d6cae99d265443dbaf7d52e",
                    "size": 875685
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efb78a941861ba2b24e80cee60dfae0d6337400b07bde40033c1f08509efaace",
                    "size": 472
                }
            ]
        },
        "3.17-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b38a07e7f7b74e8ea56465bcc2aa0351c4436a170edc9be21c236346956e1039",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79fe6230c6a25a3abda9048dd19ce3cb666284a122201657ff3e2a0b245068e9",
                    "size": 875681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81956ba825e5fe3d04844cd8044cae2d36d9734c7977dba5e1f391c1c6da55b9",
                    "size": 473
                }
            ]
        },
        "3.18": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "3.18-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ad4779905e4e84a624a48e4411fe21496102734010a1a907f2c671e0f9a57607",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559cf85a6ec24cb0c9e36b8498ad9f3a8a47f138170b68da473815c59ce5726",
                    "size": 884480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3ec480f7d069aa69e1c1527f32e5cd2db1e399048456bad62c2b80e5fac05e",
                    "size": 473
                }
            ]
        },
        "3.18-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:759be42bc6f2d7a8c1446262014f7d0b4ba400a988d1af43d1acab425ba521de",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea60fc98d6e2f6956d9b5e7c60170dd2536fecb1052a824887b5f625bee4c172",
                    "size": 884481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fce9fb9b5870d34b579942ae51d48ec44dfea6817b29cf3e2dd8f2cbf7006e24",
                    "size": 474
                }
            ]
        },
        "3.18-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e1d1f033a8d3f54dbf6ed0c33f1f5f285ed4573c3a4090070c7d5ebf4f10601",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf66be63e26b49489b5f56887a457c0c29b3af79dd7afeefcc729ff6b8fb80f2",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d77102ebb29657f310216c6cc482b7d5da67f49e162184e858debaab47ae13bb",
                    "size": 473
                }
            ]
        },
        "3.18-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:921e6f3636a47d0c89baad03633d2c0e97228db6a878895a973ccf899f62fb2f",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c89bf05306684e554ecf7a39fa3851839aa2f8b54244ffe3d3b8931b65e130",
                    "size": 884505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1cfe278c1abb1d712bf2000913f586f33fbc4a49451f2d125fccfad094c655",
                    "size": 473
                }
            ]
        },
        "3.18-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a9efea883450cc6b1d920bef7c6d83608536e6b78e98315e69d7edb2c469c3e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f55c432133cc4c1516de98914531bfe44751efbdb2950646d6d0199909204ce0",
                    "size": 884628
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b966c85e12e067169cbe26ba52f3822299cd7b7a88f27244c4a6bcbeb60e741",
                    "size": 473
                }
            ]
        },
        "3.18-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "3.18-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23cc91631963fe3c8e9e1a200ba5a9ef9f4f5333a58c2e5e29a09cc9ff588c0b",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c208d9be7d7f180cb356e84ea636611e37867cd089aa7e4f72d2159f77228529",
                    "size": 1195373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4197526cf8aa2d535947749717078385fec40932ad2b1d02dc0dd486ae6795c6",
                    "size": 472
                }
            ]
        },
        "3.18-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06bed4514ee30fef395a5ee96a456ea4d2017c381c2659e82318607192d5759e",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc030cd98997fc27d4e223db44b62df17de32e3eef80da80bfc2c7a4c61b025f",
                    "size": 10597554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad08d71779ba951d6928c5789d2ec8b02c6b1da9a15fffa16fcf30378692d4e",
                    "size": 165880166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b240156dcf35b97e783d8d379c7fd74258f35371c496a437412fe62778724285",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1966a18f76f02e402f9ff73562d5bd740d82f9359bb5cb79cfe9e7ee1b93cf4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10414772caf13db59b65a43b5f06c2b0e3e84528ca82a43c5465b72c50d339b1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5404c2746878a14d1b632e36ca055ea19c6a949dea5b253685e8dc3e492c0b",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b563a7401927debff603d2cd8f3b819d858400087111570881d0404ffaef87de",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab7f72c7d95d4e6c526b4c75d67e6643427a5722653f382d5d823fc4f5a7adcb",
                    "size": 1195102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dec388001c45deff5987a7f06d3fb3232d63aa4353597511cbd93a9723e18996",
                    "size": 472
                }
            ]
        },
        "3.18-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bcb50ea0ca4e15258ba15f0751065faa62da31fd4259cfc3a79e1ff0dedab605",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9580d64997527049db109fbd0f1b4600f5cac83f73bba5789c9bb0eafae65b2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe6a33f67913d09734e2512647f60213bbe9a0f931199b644438fe8b81d1c081",
                    "size": 10597562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf97d8276b2ed6b100d3f791881ebd69c78add5359a6d7c32349f5f81387762",
                    "size": 165880055
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7007a2dcfe4283464b3035107d5f811b008d8325863af0f3a4a54c0fba28613f",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca14b2c68306c8603eb6fb04857ed95d304cd83b05552bd5567b496d4175e3",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35a11f009f4751074d7c6936e8c9f57679beed7af17a6d489b929a055a42210",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4ab360fe8c4cd5f2a32b2f0172460e9655a23853a8438ea90dd2967d7fbcd17",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327af6353b537d02a20cd65b8e7daa77462eb1d2855495a6111ac9bfe348faa8",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbac279e996b798129173b7df0879b972797c62fdf0d0a299770b107fc7a3dfe",
                    "size": 1195094
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9ef65b39c34b62cfb6b4e6d9aa8acd5c5f398f3edc7005eca153cd37b6799e0",
                    "size": 472
                }
            ]
        },
        "3.18-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06f139f002c08b72fca9e8f8bea8469ebf3e7ef257054d8364f9c4e981f811ec",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:033ee34af43afb8e325a5cf2bf60d624f4f67f26d8064d0919c79d865dce6577",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d90e8ee7ddb3e34d96b286570fe350c56625bc236cbadffece9506151fd0938e",
                    "size": 10624102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b159afaf942782b9452913e14196bf1c8245a5af5fe6fec9876cbf4ce73ae763",
                    "size": 165857735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3325d1d73bdb9b44152c9144255fff61fd0e7f31cad56b581f6ac4bbc55c042",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:439682e3b05010101d9631031da9fef4db5f0932288b287cbd57fcff8c933e04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab6fa4cb6abfa6d479d358e719c0d25d2cf25928e3346d9284574b9963e371",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ccc4b87d165393642cfd6b8fd7281ac264a726e0b5b0274be02704715c3d858",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547f4ff0f1db9e3b2e2e8e6d27a41ef77dc1c3189b0ad0ee97c2d0e5e107cde9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994b93a3744208000bc72a853b99ec0655b17bcd5b881984e420c95f10a5d7b9",
                    "size": 1195126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3f66f5b6bd2065788f343b12c762dc0832ebd690132141c091c79269885369",
                    "size": 474
                }
            ]
        },
        "3.18-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d275253f7c91208d4ee92bb2a031e19bab136909615d03d8d21153c9b8451f98",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94bd2f56af27640e137ade6570344fb1e23229df35e929b6bbfa71f25626fdf3",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d3b946b8da7f7261c78d90b94ce6351b10999cf60897f5f77dc7d76a064ce3",
                    "size": 10614236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71646f2f944c680ef1fa23349374fc958ce4043fc6fdeed743b9e5072fa83486",
                    "size": 165909050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2cd8dc22032572e3a90e1b749f5ac49753a8af82cee35ccd69b68308865a634",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bac4ec520ae9edcbbe76a74db69a9472d032d765f8bbde4309be6d6b65a280b8",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f9f1cf1d2b814e9efe2a04fd1326c7dcfc1e9e21918a8694a81418580ab7eb8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fe10b0add71e565a6ecb5d0b086d7b1a3f6ee780b887c48d76dd3054f7dce81",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5553496e58811583a1ee01100a7fdab45a5d02f79fa504277920bb9ec9f6ba89",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cd87ac57b15bfb86f82b779aa9daca75851c24143266c4b65c11beba6d279b5",
                    "size": 1195142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4a49d3d4062befc602de12bd4ae7dd2b0c832c236959e9e7d0a00b17496eb6a",
                    "size": 473
                }
            ]
        },
        "3.18-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e704b0b493765f150afcc221409228cdc520862af861eb6161d85641a294c592",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f71a12cdac6781df2d7244c2ca86cfe562442e74b5218cfa87bdacfa5d9fa05",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ecd74d87e971ec7f9da7815b13066c62e7b65b0c6513cf771ae6490fcb6c9ae",
                    "size": 10634542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a08bf201604136a3b80ae1cbbf3a84a72dad40ca8ca484c34189fa457f497e5",
                    "size": 165911595
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b272a866877981093153daf8f9c649194b9977ca550cf6c8893aca5bfa3d03b",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342eb67824ea458754fe72055a64845f6f263c265a596fbc31ffe7efa319f03e",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3ba0b18df29744091ca06f7afd32b987df7fa4de085e5fb75dbc4cbb656246b",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2084d3b1fb7e1cd23db9ff7edd4529e3b3de97d37c9c2932d315d4db578e94ee",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b27a7c7e2a4dc346cf07a8dc5f35dd0a676356579c0c22990b472099b4b2756",
                    "size": 1195362
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3cc0169124ec8f3c640497ecd0c200e4e2c8708904082c80c872e7b0e30302d",
                    "size": 473
                }
            ]
        },
        "3.18-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23cc91631963fe3c8e9e1a200ba5a9ef9f4f5333a58c2e5e29a09cc9ff588c0b",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c208d9be7d7f180cb356e84ea636611e37867cd089aa7e4f72d2159f77228529",
                    "size": 1195373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4197526cf8aa2d535947749717078385fec40932ad2b1d02dc0dd486ae6795c6",
                    "size": 472
                }
            ]
        },
        "3.18-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "3.18-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ad4779905e4e84a624a48e4411fe21496102734010a1a907f2c671e0f9a57607",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559cf85a6ec24cb0c9e36b8498ad9f3a8a47f138170b68da473815c59ce5726",
                    "size": 884480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3ec480f7d069aa69e1c1527f32e5cd2db1e399048456bad62c2b80e5fac05e",
                    "size": 473
                }
            ]
        },
        "3.18-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:759be42bc6f2d7a8c1446262014f7d0b4ba400a988d1af43d1acab425ba521de",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea60fc98d6e2f6956d9b5e7c60170dd2536fecb1052a824887b5f625bee4c172",
                    "size": 884481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fce9fb9b5870d34b579942ae51d48ec44dfea6817b29cf3e2dd8f2cbf7006e24",
                    "size": 474
                }
            ]
        },
        "3.18-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e1d1f033a8d3f54dbf6ed0c33f1f5f285ed4573c3a4090070c7d5ebf4f10601",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf66be63e26b49489b5f56887a457c0c29b3af79dd7afeefcc729ff6b8fb80f2",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d77102ebb29657f310216c6cc482b7d5da67f49e162184e858debaab47ae13bb",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:921e6f3636a47d0c89baad03633d2c0e97228db6a878895a973ccf899f62fb2f",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c89bf05306684e554ecf7a39fa3851839aa2f8b54244ffe3d3b8931b65e130",
                    "size": 884505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1cfe278c1abb1d712bf2000913f586f33fbc4a49451f2d125fccfad094c655",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a9efea883450cc6b1d920bef7c6d83608536e6b78e98315e69d7edb2c469c3e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f55c432133cc4c1516de98914531bfe44751efbdb2950646d6d0199909204ce0",
                    "size": 884628
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b966c85e12e067169cbe26ba52f3822299cd7b7a88f27244c4a6bcbeb60e741",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23cc91631963fe3c8e9e1a200ba5a9ef9f4f5333a58c2e5e29a09cc9ff588c0b",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c208d9be7d7f180cb356e84ea636611e37867cd089aa7e4f72d2159f77228529",
                    "size": 1195373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4197526cf8aa2d535947749717078385fec40932ad2b1d02dc0dd486ae6795c6",
                    "size": 472
                }
            ]
        },
        "build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06bed4514ee30fef395a5ee96a456ea4d2017c381c2659e82318607192d5759e",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc030cd98997fc27d4e223db44b62df17de32e3eef80da80bfc2c7a4c61b025f",
                    "size": 10597554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad08d71779ba951d6928c5789d2ec8b02c6b1da9a15fffa16fcf30378692d4e",
                    "size": 165880166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b240156dcf35b97e783d8d379c7fd74258f35371c496a437412fe62778724285",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1966a18f76f02e402f9ff73562d5bd740d82f9359bb5cb79cfe9e7ee1b93cf4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10414772caf13db59b65a43b5f06c2b0e3e84528ca82a43c5465b72c50d339b1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5404c2746878a14d1b632e36ca055ea19c6a949dea5b253685e8dc3e492c0b",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b563a7401927debff603d2cd8f3b819d858400087111570881d0404ffaef87de",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab7f72c7d95d4e6c526b4c75d67e6643427a5722653f382d5d823fc4f5a7adcb",
                    "size": 1195102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dec388001c45deff5987a7f06d3fb3232d63aa4353597511cbd93a9723e18996",
                    "size": 472
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bcb50ea0ca4e15258ba15f0751065faa62da31fd4259cfc3a79e1ff0dedab605",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9580d64997527049db109fbd0f1b4600f5cac83f73bba5789c9bb0eafae65b2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe6a33f67913d09734e2512647f60213bbe9a0f931199b644438fe8b81d1c081",
                    "size": 10597562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf97d8276b2ed6b100d3f791881ebd69c78add5359a6d7c32349f5f81387762",
                    "size": 165880055
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7007a2dcfe4283464b3035107d5f811b008d8325863af0f3a4a54c0fba28613f",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca14b2c68306c8603eb6fb04857ed95d304cd83b05552bd5567b496d4175e3",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35a11f009f4751074d7c6936e8c9f57679beed7af17a6d489b929a055a42210",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4ab360fe8c4cd5f2a32b2f0172460e9655a23853a8438ea90dd2967d7fbcd17",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327af6353b537d02a20cd65b8e7daa77462eb1d2855495a6111ac9bfe348faa8",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbac279e996b798129173b7df0879b972797c62fdf0d0a299770b107fc7a3dfe",
                    "size": 1195094
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9ef65b39c34b62cfb6b4e6d9aa8acd5c5f398f3edc7005eca153cd37b6799e0",
                    "size": 472
                }
            ]
        },
        "build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06f139f002c08b72fca9e8f8bea8469ebf3e7ef257054d8364f9c4e981f811ec",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:033ee34af43afb8e325a5cf2bf60d624f4f67f26d8064d0919c79d865dce6577",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d90e8ee7ddb3e34d96b286570fe350c56625bc236cbadffece9506151fd0938e",
                    "size": 10624102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b159afaf942782b9452913e14196bf1c8245a5af5fe6fec9876cbf4ce73ae763",
                    "size": 165857735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3325d1d73bdb9b44152c9144255fff61fd0e7f31cad56b581f6ac4bbc55c042",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:439682e3b05010101d9631031da9fef4db5f0932288b287cbd57fcff8c933e04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab6fa4cb6abfa6d479d358e719c0d25d2cf25928e3346d9284574b9963e371",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ccc4b87d165393642cfd6b8fd7281ac264a726e0b5b0274be02704715c3d858",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547f4ff0f1db9e3b2e2e8e6d27a41ef77dc1c3189b0ad0ee97c2d0e5e107cde9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994b93a3744208000bc72a853b99ec0655b17bcd5b881984e420c95f10a5d7b9",
                    "size": 1195126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3f66f5b6bd2065788f343b12c762dc0832ebd690132141c091c79269885369",
                    "size": 474
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d275253f7c91208d4ee92bb2a031e19bab136909615d03d8d21153c9b8451f98",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94bd2f56af27640e137ade6570344fb1e23229df35e929b6bbfa71f25626fdf3",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d3b946b8da7f7261c78d90b94ce6351b10999cf60897f5f77dc7d76a064ce3",
                    "size": 10614236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71646f2f944c680ef1fa23349374fc958ce4043fc6fdeed743b9e5072fa83486",
                    "size": 165909050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2cd8dc22032572e3a90e1b749f5ac49753a8af82cee35ccd69b68308865a634",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bac4ec520ae9edcbbe76a74db69a9472d032d765f8bbde4309be6d6b65a280b8",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f9f1cf1d2b814e9efe2a04fd1326c7dcfc1e9e21918a8694a81418580ab7eb8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fe10b0add71e565a6ecb5d0b086d7b1a3f6ee780b887c48d76dd3054f7dce81",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5553496e58811583a1ee01100a7fdab45a5d02f79fa504277920bb9ec9f6ba89",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cd87ac57b15bfb86f82b779aa9daca75851c24143266c4b65c11beba6d279b5",
                    "size": 1195142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4a49d3d4062befc602de12bd4ae7dd2b0c832c236959e9e7d0a00b17496eb6a",
                    "size": 473
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e704b0b493765f150afcc221409228cdc520862af861eb6161d85641a294c592",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f71a12cdac6781df2d7244c2ca86cfe562442e74b5218cfa87bdacfa5d9fa05",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ecd74d87e971ec7f9da7815b13066c62e7b65b0c6513cf771ae6490fcb6c9ae",
                    "size": 10634542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a08bf201604136a3b80ae1cbbf3a84a72dad40ca8ca484c34189fa457f497e5",
                    "size": 165911595
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b272a866877981093153daf8f9c649194b9977ca550cf6c8893aca5bfa3d03b",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342eb67824ea458754fe72055a64845f6f263c265a596fbc31ffe7efa319f03e",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3ba0b18df29744091ca06f7afd32b987df7fa4de085e5fb75dbc4cbb656246b",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2084d3b1fb7e1cd23db9ff7edd4529e3b3de97d37c9c2932d315d4db578e94ee",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b27a7c7e2a4dc346cf07a8dc5f35dd0a676356579c0c22990b472099b4b2756",
                    "size": 1195362
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3cc0169124ec8f3c640497ecd0c200e4e2c8708904082c80c872e7b0e30302d",
                    "size": 473
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23cc91631963fe3c8e9e1a200ba5a9ef9f4f5333a58c2e5e29a09cc9ff588c0b",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c208d9be7d7f180cb356e84ea636611e37867cd089aa7e4f72d2159f77228529",
                    "size": 1195373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4197526cf8aa2d535947749717078385fec40932ad2b1d02dc0dd486ae6795c6",
                    "size": 472
                }
            ]
        },
        "edge": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3a4c63dc10ecf323b3d35bd50c168fd38372253aeb9d6416b9937fbe730bb84c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ce233a64eb20e436c462f432a0181aeec6c16e8314e66a6fb78fb5a94c59da8",
                    "size": 886846
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31518bf62a511e6a79d3522182a6734f661dd0b1cc47e2b959df3914a2617af4",
                    "size": 471
                }
            ]
        },
        "edge-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b1a8643d73b191291b5b8256ad38d1d0f42fbf5b5ca4fdad3e7ea5114448e2f",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3831b080b6fa8af0b2e7def36f5216a1c63898785a5bcdf3702726e7934b090",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43033d12a219875aacbf76a4e575b4d72af8c94a96692b9e7e71c13f482528cf",
                    "size": 10665454
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa45a57004b9aa80e6c0ce33b3ea8bf3d43c2a5911603709d13e956ad002f26c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f44ae1185f842ac3510366338e4f7c5e2dab64c0e9e5ebdffb946a6b7551f0da",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:713124318346c6a25ba80001895a32f84782bb408525d9c6b012344f50d821bd",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c622264e1b506d9e8edbd003eea5a12efdae84aaa2cd05ff679da5a3785f41ab",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a53d7e57142a1fa68ae194c2d7754aa19b40a0093b91766fa03f9da02b831a",
                    "size": 1894795
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45f0b4d31b592e1e81559e7a44b9d76b08112ac042aabca017dbdc2c20563a98",
                    "size": 471
                }
            ]
        },
        "edge-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b4c09101e41b08486e94efe0aeecbe7bbbb76dba819afbd0c037f68ae7ee6dc",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7770c9d594ca58b6264ebb81a9fe6da679ebad300e2cc66e80cf8cb302f6b0d6",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10db905dbaa3479d2ac1c3adb6291db933e22367c60dde8b4784782c7e458f69",
                    "size": 10665916
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cb1a5e1843c81106ca97d5d53a65bd2a235f292c33652013275bd47b45618",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34e8d19346beffb54783d61835eb6123e3a0e4b8101f55dc19643828bd39df27",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d54b8cc1a30b86c108d489d6e63fc038f5ee6d2b8dd5df47389e84a7f476a9",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e747bc193dea99f7798a9df19b20026a0f7cb1c5506f904cc1eebb8ac055654",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f825442a1d6048501d3eb772838516baf30bd7345213a1c2088ef4239f9fa7cb",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1b39811266cc505753bc3eb6fe27d57d3d43e863ec8f4d8f006d25d1e0e3940",
                    "size": 1895355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9015e16c25cb4777792e7291f39986d7c0b25157e81398d708f67ff0151f47da",
                    "size": 472
                }
            ]
        },
        "edge-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:63acc6799863432ce43d362ef496c07bddbb2e4456253670495f20c930dcf6dd",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04544e0368dbd7aaddd508fc631a1755b04b605f1e1b619898fe0499a56cd4e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e3e08c1a4af3d5be813094fd751a73e1a0fa1a7e4bbf7ad192221fac1c3e59",
                    "size": 10800995
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9bf7d090967c0655fcc7adddb99cb110427334313fda2dfac578ad1ab74b26",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84effd567536f0bdb572668ebd4fe6bb013f0f182ea8fbbec6d6bcd61d3a7652",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99bec92ad15917d6b8016c350446ae987f57c0c3fa7d2762f70dcf3ff626cf64",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf702351217ad4a757cbe0497e738dce6cdb6892078ad170bfc9fd34f12c66f9",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69da3efb85b0eca3a3fb3946d6a2e8385fd52c79f00964c86df3650713c13022",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dd138cb9e69876b6fffa71d0045ca0ce788d28f7c34f95c24f6c22922861c18",
                    "size": 875441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b342c6cd73f6594880a4e7254260ce34da2292922199b1639ff2d908c8ca1ca",
                    "size": 473
                }
            ]
        },
        "edge-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18ec27535fbe28d63654f852135af07188af249ac29a7f0a0fb10b5fe9e02102",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90d28348cbe275b9a1a73141aeaa36605bd158e178cc537f3e0129f88499f01b",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08855058175279477e99cf779d73ad580a76f562361cd8def9e045431689e667",
                    "size": 10823226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adac77d36848be52061186b4ad4aa6a2d1c1b033e58a33d291ebabb0af5f735c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:806d5be8998f0e9cc5a6e77cccfc007a4e58641261e0bbe661e809f3c753d255",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8da8f689228d39cf42919890dae5cf9ca13b8624050932fc644c378de2bda85",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1efef3e196af52c238851354cfed09fce72349f4cb9f65192c214315274256b",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ec19ab6ee03c55fc6f11b965346c9759472d5e43fcbbb6a287722be4c7cc17a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1e5c75cefa3156ce45fa6c7b6b3977d7449979947745f6586562a17eb8a6bde",
                    "size": 876438
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4f3a41bfa131ff0895bd90b4612bd33c1ccc57fe4542da8b84212f862db5d9b",
                    "size": 471
                }
            ]
        },
        "edge-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bc4368bae2c17a6aceb05fe90d3641f1e96b6b2a4d4b64f33d555604896f5df7",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4d595d7546ac9bacb35a5f1aca6bd051f51e35a6b78094047232984de41519a",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57303db7ddac80d3f9f603c4fbbfbd9ec17ed9edff1cbc145eaaa4b7f3ed167c",
                    "size": 10845987
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7942ceee14be497ff20ff252bd004d23df4a8fb56a12b407e07b8d5cbb92f364",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0742c680de31e49a71279ba4a977c454825e513ba34d50dfcfff16083b1ceba3",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740a7baaa028469281c794e030cb04cfe1b5663ed662793f74a465ab57aae652",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b953218b0ce9c1d64ef5d75884daefcfbbe48cd34be155fd4a3d78d7937acf87",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24783ab2d58617524ed229aa011cee782734d2464f9f11d55e7d9495dcef656f",
                    "size": 876657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73fec7cdd46a8ce18945f9d0cb9adc070b55dec6565217f2cd07c9f9ad9ac5f0",
                    "size": 471
                }
            ]
        },
        "edge-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3a4c63dc10ecf323b3d35bd50c168fd38372253aeb9d6416b9937fbe730bb84c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ce233a64eb20e436c462f432a0181aeec6c16e8314e66a6fb78fb5a94c59da8",
                    "size": 886846
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31518bf62a511e6a79d3522182a6734f661dd0b1cc47e2b959df3914a2617af4",
                    "size": 471
                }
            ]
        },
        "edge-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2c8f05ba0c847b0704c3e1d71de49e212f2525245e90c1be65c0a81aef1da136",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbde216597a992bc9ef41ed75ad3b30f71304f2b0bc41dc1603825cd158d834e",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b690dc64953f7b38ee8879e811aa5d579c31bb5a391d91a427adc3eedf28e693",
                    "size": 10869500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5afd8409ef8497f67653defbd974815e854db3c1f30398e4a19a28a6abbfbf2",
                    "size": 137142720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1311712d81c5aade41f5a89b8224b8aa2554e69a00e07db6eb1be74a070cd504",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7face9f85f497b94f30b52ac765dbe06ab867c808b557b1306315fbc64926780",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d7c0f9bf4fd5c961a6a60dc16abb201174da8b0fd40bab1f37e5ec8a75c1189",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c76caf7cbcf4b442e0890e741905ba344f22abdc4665c4d2a7c091d6f4cfabd3",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:525bde4021ddf2c0b6ad48e819e7e547f505262d68915916c435bd7528b41887",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1e51b241bab34ff7f4e9490933087e9e7ff381141e54819d8ac0afc0ea710de",
                    "size": 1189448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c227b0adbbe4775bf518b5fd4fdb661b51f1c21271004e2ef8be69beb0a1589",
                    "size": 471
                }
            ]
        },
        "edge-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8dd6bccab389c78e53b6b4e32b2f4687ddb8f97f5b803d6481a6970df8ecd00e",
                "size": 6991
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ad25e0ed0bcb8bbb52fdd1abb0c2d3c20c33f1eff59f9286efc2dc2f7f703c",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80f04c558faf84fde6edb2cae1a551524b353b55cf71d872348da99ca08f80c3",
                    "size": 10665444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc4701ab5e6cd1036b66e3e8c574c7c6b5f0eb1e97764b6e916a1038f17e34c7",
                    "size": 134684538
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:375ae2c81acfd437a2238a331cde917cfbf351092ef6d899f2efb5a2be2ae89b",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5da985d38aeedfe30c54eb50bc0c76c81317db40439b7343f93e0b7fd5bb22a",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a17262afef6d7e74d93444c3f59516f5fc47d21dbf4cca3fd63a4dacc5603aa3",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83a7658ae7027e1f72bc5fe58829e586f30cb42ab296a14f3a6d54b8301a96e1",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6854c4f7e5e2984ac70c028fd0adf2ccc88d4e348a7adca305c8362ee8f50298",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fe132acbd5ad5f3fdf4fd53ee86ee4351ca35c0d76584f572f1adcc8b9238eb",
                    "size": 2131688
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdae35d5ced8525c9c4faf7402bd6eea2a7776d52e14fc54147d54f151282ffa",
                    "size": 470
                }
            ]
        },
        "edge-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e4c9281ef5ccb645931dd5d201c95bb8a72393c4f49b4f9b272c935f4178c416",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf12141682e86badbed362f09ab7a78855d687991f4a41cfba616c58b25cee9b",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2677a956502207e91c57e5b6aafe69255c278a22fdcda4143d2047f55b70d801",
                    "size": 10665933
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a83767128ce0366ef0088f3eddf7cb5697037a0ec55067382d283f85279af68",
                    "size": 134681922
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3de57b3acf91786a1d0021e21adb8cb05c54418f24096614507a0eeb50381230",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f6c9e222b77044024c439ae4b68dd4082701564f9f75cfbb73d662ad7f019fb",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a8720adbefbbf2b503a062d5551164a10ec3bf85b80eff5979e5012e17648bc",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc01e38a6cc5e5390274da6bb6f521f916e569b38ee5c48de6a3d179fe6cdfcc",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bffd06ae7a89010a3f3d29fab7aa64dc207c1277b7344c1c6194ff0ec040faed",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:383899ede82ed5eec8f4b4276a364feaa82db4e61812e99e148905d7be716b3a",
                    "size": 2132241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108ec8cd5cc0ec53bd1ad24edfd464d27cdfcb645f487e5270f42fa4df67a6b5",
                    "size": 472
                }
            ]
        },
        "edge-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:93eb45e21a1672cd5608d04b1abcd3f29b5c127e23f171a7d7a7f9321e81cebc",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3acae7e03eab8df87c97c57c68b779334222c51ef1d2bde82c0f2a5bc1414b53",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad95dbb20b67bc024225b04aa5ce83c3e530a2ef8030783b197489222c604d80",
                    "size": 10801044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24be3c2cfc174b47c4b81657d6b3dd56ffd1fde034c9cba383260d109a1ef5b3",
                    "size": 134315537
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726bf9e5cab3243865674126f262dcf7bd47714ab954258ee9ca1d1f22cdb892",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37efd167c62d085e9c88a53cd15ac9dc0e89921fd57d99352af1e73f2fb6a717",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8becf60c2d739c68ee396475635cce8cce78136a9cae08b15e6a059b931d77fd",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2394f543877fed0ac57d4b1b6783f6407030f5a1637c9f2d612dc23194bc549d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef39544e47e1ce1919e4abea3bda8ebd914a0d1c43e1ac1771006f97d434ca8e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5feb20910c1c8764e7ca45f87a7c610c1e5e1bdb0fa78f1a79a003895b3394f7",
                    "size": 1167974
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:770848f3b56df5316e489668390816518938cc0d17ed2baaf2b877ef75c8273d",
                    "size": 471
                }
            ]
        },
        "edge-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2896a1f6f98110619be9b9e5937b592f79c22bede200bd4a3c395b5939e271e9",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be0cabc60953f5be4369239120c600e69da1c2342201b1301e346d8629f37bb8",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9204d3718755cd374808a7083ef6d6449b70520d84adeeae3fe1e7665a8b10a3",
                    "size": 10823270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51d5d5cffc968043b01905eab36b35da378e369af8d2b1016ac75b1749354e11",
                    "size": 134871400
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e59525355e454ad611374e563b30ea0c8444edf7760973cd2d09e50481da3d31",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b0df53e5b53573d38b1d9c064a2cbeee9b57edfb6791498872002c618837ca5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d920bc3225c1df872c7b50849f82306c2382ebb27a5fd1f3d70195000419e32d",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce80c06b5519213c804effd5ef283d626c6908259704c581d0624ed3440cbfe5",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c48ff8b9bbf3bfcf87a6ea2026e3c92e49cf117cc0376d875206ed4e1c6afff0",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6321f8b4747adc2bcbe428ba8c74f5c989db18bf79da773a092ca77c83e1533",
                    "size": 1170145
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:841de6d143b90ddec3b2ef9d01fabd0d7caa657906b71930668421dd0e48e3b1",
                    "size": 471
                }
            ]
        },
        "edge-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:66477dd7c896c7d6ae10c370efa77a1b3e4734ff831b9f8e12d69b48dc8674c1",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050e80e3e60625ad4c3a17c47dd77bee705faee35cd8435e48be35e414b09e93",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc96e9f2b4b77892dd713072b248307a989972529b90c73b6f720baf205cd51d",
                    "size": 10846079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aae387020c272d1747c22de8e9f819d3d0bd18617dabec8f41d6975c8036e0d5",
                    "size": 134846177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511ef11601e3b489292317acfdfd372d5aaa7fedf5e8fde4eb0657b4700a432b",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:919cf1658ca0ee4d16b7639a8522508c4dce987323384cfd8d504c52b17be8e3",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2e8373b5e0a44c75b8e2fa26c0f456378449243031dfc77422e5923ef58fc1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d894358b03487749bd4ee99d7889be133aba776d3239be4ac549a01da4386f45",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28f3d653ede7950ba3e0448e11ddb290418ddcca5b3724307afad7e84884b420",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4b61b38f3d50c3c3e0af3164accde79adc0dfb5716ef3217babd29e5c7ceb77",
                    "size": 1176492
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef4ac6f4339dd1065447fd0bd3b487d368e17464024f5bdec1ec5fdf5d9632bb",
                    "size": 471
                }
            ]
        },
        "edge-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2c8f05ba0c847b0704c3e1d71de49e212f2525245e90c1be65c0a81aef1da136",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbde216597a992bc9ef41ed75ad3b30f71304f2b0bc41dc1603825cd158d834e",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b690dc64953f7b38ee8879e811aa5d579c31bb5a391d91a427adc3eedf28e693",
                    "size": 10869500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5afd8409ef8497f67653defbd974815e854db3c1f30398e4a19a28a6abbfbf2",
                    "size": 137142720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1311712d81c5aade41f5a89b8224b8aa2554e69a00e07db6eb1be74a070cd504",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7face9f85f497b94f30b52ac765dbe06ab867c808b557b1306315fbc64926780",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d7c0f9bf4fd5c961a6a60dc16abb201174da8b0fd40bab1f37e5ec8a75c1189",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c76caf7cbcf4b442e0890e741905ba344f22abdc4665c4d2a7c091d6f4cfabd3",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:525bde4021ddf2c0b6ad48e819e7e547f505262d68915916c435bd7528b41887",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1e51b241bab34ff7f4e9490933087e9e7ff381141e54819d8ac0afc0ea710de",
                    "size": 1189448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c227b0adbbe4775bf518b5fd4fdb661b51f1c21271004e2ef8be69beb0a1589",
                    "size": 471
                }
            ]
        },
        "edge-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3a4c63dc10ecf323b3d35bd50c168fd38372253aeb9d6416b9937fbe730bb84c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ce233a64eb20e436c462f432a0181aeec6c16e8314e66a6fb78fb5a94c59da8",
                    "size": 886846
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31518bf62a511e6a79d3522182a6734f661dd0b1cc47e2b959df3914a2617af4",
                    "size": 471
                }
            ]
        },
        "edge-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b1a8643d73b191291b5b8256ad38d1d0f42fbf5b5ca4fdad3e7ea5114448e2f",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3831b080b6fa8af0b2e7def36f5216a1c63898785a5bcdf3702726e7934b090",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43033d12a219875aacbf76a4e575b4d72af8c94a96692b9e7e71c13f482528cf",
                    "size": 10665454
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa45a57004b9aa80e6c0ce33b3ea8bf3d43c2a5911603709d13e956ad002f26c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f44ae1185f842ac3510366338e4f7c5e2dab64c0e9e5ebdffb946a6b7551f0da",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:713124318346c6a25ba80001895a32f84782bb408525d9c6b012344f50d821bd",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c622264e1b506d9e8edbd003eea5a12efdae84aaa2cd05ff679da5a3785f41ab",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a53d7e57142a1fa68ae194c2d7754aa19b40a0093b91766fa03f9da02b831a",
                    "size": 1894795
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45f0b4d31b592e1e81559e7a44b9d76b08112ac042aabca017dbdc2c20563a98",
                    "size": 471
                }
            ]
        },
        "edge-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b4c09101e41b08486e94efe0aeecbe7bbbb76dba819afbd0c037f68ae7ee6dc",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7770c9d594ca58b6264ebb81a9fe6da679ebad300e2cc66e80cf8cb302f6b0d6",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10db905dbaa3479d2ac1c3adb6291db933e22367c60dde8b4784782c7e458f69",
                    "size": 10665916
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cb1a5e1843c81106ca97d5d53a65bd2a235f292c33652013275bd47b45618",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34e8d19346beffb54783d61835eb6123e3a0e4b8101f55dc19643828bd39df27",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d54b8cc1a30b86c108d489d6e63fc038f5ee6d2b8dd5df47389e84a7f476a9",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e747bc193dea99f7798a9df19b20026a0f7cb1c5506f904cc1eebb8ac055654",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f825442a1d6048501d3eb772838516baf30bd7345213a1c2088ef4239f9fa7cb",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1b39811266cc505753bc3eb6fe27d57d3d43e863ec8f4d8f006d25d1e0e3940",
                    "size": 1895355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9015e16c25cb4777792e7291f39986d7c0b25157e81398d708f67ff0151f47da",
                    "size": 472
                }
            ]
        },
        "edge-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:63acc6799863432ce43d362ef496c07bddbb2e4456253670495f20c930dcf6dd",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04544e0368dbd7aaddd508fc631a1755b04b605f1e1b619898fe0499a56cd4e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e3e08c1a4af3d5be813094fd751a73e1a0fa1a7e4bbf7ad192221fac1c3e59",
                    "size": 10800995
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9bf7d090967c0655fcc7adddb99cb110427334313fda2dfac578ad1ab74b26",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84effd567536f0bdb572668ebd4fe6bb013f0f182ea8fbbec6d6bcd61d3a7652",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99bec92ad15917d6b8016c350446ae987f57c0c3fa7d2762f70dcf3ff626cf64",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf702351217ad4a757cbe0497e738dce6cdb6892078ad170bfc9fd34f12c66f9",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69da3efb85b0eca3a3fb3946d6a2e8385fd52c79f00964c86df3650713c13022",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dd138cb9e69876b6fffa71d0045ca0ce788d28f7c34f95c24f6c22922861c18",
                    "size": 875441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b342c6cd73f6594880a4e7254260ce34da2292922199b1639ff2d908c8ca1ca",
                    "size": 473
                }
            ]
        },
        "edge-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18ec27535fbe28d63654f852135af07188af249ac29a7f0a0fb10b5fe9e02102",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90d28348cbe275b9a1a73141aeaa36605bd158e178cc537f3e0129f88499f01b",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08855058175279477e99cf779d73ad580a76f562361cd8def9e045431689e667",
                    "size": 10823226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adac77d36848be52061186b4ad4aa6a2d1c1b033e58a33d291ebabb0af5f735c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:806d5be8998f0e9cc5a6e77cccfc007a4e58641261e0bbe661e809f3c753d255",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8da8f689228d39cf42919890dae5cf9ca13b8624050932fc644c378de2bda85",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1efef3e196af52c238851354cfed09fce72349f4cb9f65192c214315274256b",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ec19ab6ee03c55fc6f11b965346c9759472d5e43fcbbb6a287722be4c7cc17a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1e5c75cefa3156ce45fa6c7b6b3977d7449979947745f6586562a17eb8a6bde",
                    "size": 876438
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4f3a41bfa131ff0895bd90b4612bd33c1ccc57fe4542da8b84212f862db5d9b",
                    "size": 471
                }
            ]
        },
        "edge-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bc4368bae2c17a6aceb05fe90d3641f1e96b6b2a4d4b64f33d555604896f5df7",
                "size": 6357
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4d595d7546ac9bacb35a5f1aca6bd051f51e35a6b78094047232984de41519a",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57303db7ddac80d3f9f603c4fbbfbd9ec17ed9edff1cbc145eaaa4b7f3ed167c",
                    "size": 10845987
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7942ceee14be497ff20ff252bd004d23df4a8fb56a12b407e07b8d5cbb92f364",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0742c680de31e49a71279ba4a977c454825e513ba34d50dfcfff16083b1ceba3",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740a7baaa028469281c794e030cb04cfe1b5663ed662793f74a465ab57aae652",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b953218b0ce9c1d64ef5d75884daefcfbbe48cd34be155fd4a3d78d7937acf87",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24783ab2d58617524ed229aa011cee782734d2464f9f11d55e7d9495dcef656f",
                    "size": 876657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73fec7cdd46a8ce18945f9d0cb9adc070b55dec6565217f2cd07c9f9ad9ac5f0",
                    "size": 471
                }
            ]
        },
        "edge-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3a4c63dc10ecf323b3d35bd50c168fd38372253aeb9d6416b9937fbe730bb84c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ce233a64eb20e436c462f432a0181aeec6c16e8314e66a6fb78fb5a94c59da8",
                    "size": 886846
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31518bf62a511e6a79d3522182a6734f661dd0b1cc47e2b959df3914a2617af4",
                    "size": 471
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "latest-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ad4779905e4e84a624a48e4411fe21496102734010a1a907f2c671e0f9a57607",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559cf85a6ec24cb0c9e36b8498ad9f3a8a47f138170b68da473815c59ce5726",
                    "size": 884480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3ec480f7d069aa69e1c1527f32e5cd2db1e399048456bad62c2b80e5fac05e",
                    "size": 473
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:759be42bc6f2d7a8c1446262014f7d0b4ba400a988d1af43d1acab425ba521de",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea60fc98d6e2f6956d9b5e7c60170dd2536fecb1052a824887b5f625bee4c172",
                    "size": 884481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fce9fb9b5870d34b579942ae51d48ec44dfea6817b29cf3e2dd8f2cbf7006e24",
                    "size": 474
                }
            ]
        },
        "latest-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e1d1f033a8d3f54dbf6ed0c33f1f5f285ed4573c3a4090070c7d5ebf4f10601",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf66be63e26b49489b5f56887a457c0c29b3af79dd7afeefcc729ff6b8fb80f2",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d77102ebb29657f310216c6cc482b7d5da67f49e162184e858debaab47ae13bb",
                    "size": 473
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:921e6f3636a47d0c89baad03633d2c0e97228db6a878895a973ccf899f62fb2f",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c89bf05306684e554ecf7a39fa3851839aa2f8b54244ffe3d3b8931b65e130",
                    "size": 884505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1cfe278c1abb1d712bf2000913f586f33fbc4a49451f2d125fccfad094c655",
                    "size": 473
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a9efea883450cc6b1d920bef7c6d83608536e6b78e98315e69d7edb2c469c3e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f55c432133cc4c1516de98914531bfe44751efbdb2950646d6d0199909204ce0",
                    "size": 884628
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b966c85e12e067169cbe26ba52f3822299cd7b7a88f27244c4a6bcbeb60e741",
                    "size": 473
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23cc91631963fe3c8e9e1a200ba5a9ef9f4f5333a58c2e5e29a09cc9ff588c0b",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c208d9be7d7f180cb356e84ea636611e37867cd089aa7e4f72d2159f77228529",
                    "size": 1195373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4197526cf8aa2d535947749717078385fec40932ad2b1d02dc0dd486ae6795c6",
                    "size": 472
                }
            ]
        },
        "latest-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06bed4514ee30fef395a5ee96a456ea4d2017c381c2659e82318607192d5759e",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc030cd98997fc27d4e223db44b62df17de32e3eef80da80bfc2c7a4c61b025f",
                    "size": 10597554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad08d71779ba951d6928c5789d2ec8b02c6b1da9a15fffa16fcf30378692d4e",
                    "size": 165880166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b240156dcf35b97e783d8d379c7fd74258f35371c496a437412fe62778724285",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1966a18f76f02e402f9ff73562d5bd740d82f9359bb5cb79cfe9e7ee1b93cf4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10414772caf13db59b65a43b5f06c2b0e3e84528ca82a43c5465b72c50d339b1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5404c2746878a14d1b632e36ca055ea19c6a949dea5b253685e8dc3e492c0b",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b563a7401927debff603d2cd8f3b819d858400087111570881d0404ffaef87de",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab7f72c7d95d4e6c526b4c75d67e6643427a5722653f382d5d823fc4f5a7adcb",
                    "size": 1195102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dec388001c45deff5987a7f06d3fb3232d63aa4353597511cbd93a9723e18996",
                    "size": 472
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bcb50ea0ca4e15258ba15f0751065faa62da31fd4259cfc3a79e1ff0dedab605",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9580d64997527049db109fbd0f1b4600f5cac83f73bba5789c9bb0eafae65b2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe6a33f67913d09734e2512647f60213bbe9a0f931199b644438fe8b81d1c081",
                    "size": 10597562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf97d8276b2ed6b100d3f791881ebd69c78add5359a6d7c32349f5f81387762",
                    "size": 165880055
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7007a2dcfe4283464b3035107d5f811b008d8325863af0f3a4a54c0fba28613f",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca14b2c68306c8603eb6fb04857ed95d304cd83b05552bd5567b496d4175e3",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35a11f009f4751074d7c6936e8c9f57679beed7af17a6d489b929a055a42210",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4ab360fe8c4cd5f2a32b2f0172460e9655a23853a8438ea90dd2967d7fbcd17",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327af6353b537d02a20cd65b8e7daa77462eb1d2855495a6111ac9bfe348faa8",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbac279e996b798129173b7df0879b972797c62fdf0d0a299770b107fc7a3dfe",
                    "size": 1195094
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9ef65b39c34b62cfb6b4e6d9aa8acd5c5f398f3edc7005eca153cd37b6799e0",
                    "size": 472
                }
            ]
        },
        "latest-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:06f139f002c08b72fca9e8f8bea8469ebf3e7ef257054d8364f9c4e981f811ec",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:033ee34af43afb8e325a5cf2bf60d624f4f67f26d8064d0919c79d865dce6577",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d90e8ee7ddb3e34d96b286570fe350c56625bc236cbadffece9506151fd0938e",
                    "size": 10624102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b159afaf942782b9452913e14196bf1c8245a5af5fe6fec9876cbf4ce73ae763",
                    "size": 165857735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3325d1d73bdb9b44152c9144255fff61fd0e7f31cad56b581f6ac4bbc55c042",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:439682e3b05010101d9631031da9fef4db5f0932288b287cbd57fcff8c933e04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab6fa4cb6abfa6d479d358e719c0d25d2cf25928e3346d9284574b9963e371",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ccc4b87d165393642cfd6b8fd7281ac264a726e0b5b0274be02704715c3d858",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547f4ff0f1db9e3b2e2e8e6d27a41ef77dc1c3189b0ad0ee97c2d0e5e107cde9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:994b93a3744208000bc72a853b99ec0655b17bcd5b881984e420c95f10a5d7b9",
                    "size": 1195126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3f66f5b6bd2065788f343b12c762dc0832ebd690132141c091c79269885369",
                    "size": 474
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d275253f7c91208d4ee92bb2a031e19bab136909615d03d8d21153c9b8451f98",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94bd2f56af27640e137ade6570344fb1e23229df35e929b6bbfa71f25626fdf3",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d3b946b8da7f7261c78d90b94ce6351b10999cf60897f5f77dc7d76a064ce3",
                    "size": 10614236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71646f2f944c680ef1fa23349374fc958ce4043fc6fdeed743b9e5072fa83486",
                    "size": 165909050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2cd8dc22032572e3a90e1b749f5ac49753a8af82cee35ccd69b68308865a634",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bac4ec520ae9edcbbe76a74db69a9472d032d765f8bbde4309be6d6b65a280b8",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f9f1cf1d2b814e9efe2a04fd1326c7dcfc1e9e21918a8694a81418580ab7eb8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fe10b0add71e565a6ecb5d0b086d7b1a3f6ee780b887c48d76dd3054f7dce81",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5553496e58811583a1ee01100a7fdab45a5d02f79fa504277920bb9ec9f6ba89",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cd87ac57b15bfb86f82b779aa9daca75851c24143266c4b65c11beba6d279b5",
                    "size": 1195142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4a49d3d4062befc602de12bd4ae7dd2b0c832c236959e9e7d0a00b17496eb6a",
                    "size": 473
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e704b0b493765f150afcc221409228cdc520862af861eb6161d85641a294c592",
                "size": 6979
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f71a12cdac6781df2d7244c2ca86cfe562442e74b5218cfa87bdacfa5d9fa05",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ecd74d87e971ec7f9da7815b13066c62e7b65b0c6513cf771ae6490fcb6c9ae",
                    "size": 10634542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a08bf201604136a3b80ae1cbbf3a84a72dad40ca8ca484c34189fa457f497e5",
                    "size": 165911595
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b272a866877981093153daf8f9c649194b9977ca550cf6c8893aca5bfa3d03b",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342eb67824ea458754fe72055a64845f6f263c265a596fbc31ffe7efa319f03e",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3ba0b18df29744091ca06f7afd32b987df7fa4de085e5fb75dbc4cbb656246b",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2084d3b1fb7e1cd23db9ff7edd4529e3b3de97d37c9c2932d315d4db578e94ee",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b27a7c7e2a4dc346cf07a8dc5f35dd0a676356579c0c22990b472099b4b2756",
                    "size": 1195362
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3cc0169124ec8f3c640497ecd0c200e4e2c8708904082c80c872e7b0e30302d",
                    "size": 473
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23cc91631963fe3c8e9e1a200ba5a9ef9f4f5333a58c2e5e29a09cc9ff588c0b",
                "size": 6978
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c208d9be7d7f180cb356e84ea636611e37867cd089aa7e4f72d2159f77228529",
                    "size": 1195373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4197526cf8aa2d535947749717078385fec40932ad2b1d02dc0dd486ae6795c6",
                    "size": 472
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "latest-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ad4779905e4e84a624a48e4411fe21496102734010a1a907f2c671e0f9a57607",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559cf85a6ec24cb0c9e36b8498ad9f3a8a47f138170b68da473815c59ce5726",
                    "size": 884480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3ec480f7d069aa69e1c1527f32e5cd2db1e399048456bad62c2b80e5fac05e",
                    "size": 473
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:759be42bc6f2d7a8c1446262014f7d0b4ba400a988d1af43d1acab425ba521de",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea60fc98d6e2f6956d9b5e7c60170dd2536fecb1052a824887b5f625bee4c172",
                    "size": 884481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fce9fb9b5870d34b579942ae51d48ec44dfea6817b29cf3e2dd8f2cbf7006e24",
                    "size": 474
                }
            ]
        },
        "latest-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e1d1f033a8d3f54dbf6ed0c33f1f5f285ed4573c3a4090070c7d5ebf4f10601",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf66be63e26b49489b5f56887a457c0c29b3af79dd7afeefcc729ff6b8fb80f2",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d77102ebb29657f310216c6cc482b7d5da67f49e162184e858debaab47ae13bb",
                    "size": 473
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:921e6f3636a47d0c89baad03633d2c0e97228db6a878895a973ccf899f62fb2f",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c89bf05306684e554ecf7a39fa3851839aa2f8b54244ffe3d3b8931b65e130",
                    "size": 884505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1cfe278c1abb1d712bf2000913f586f33fbc4a49451f2d125fccfad094c655",
                    "size": 473
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a9efea883450cc6b1d920bef7c6d83608536e6b78e98315e69d7edb2c469c3e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f55c432133cc4c1516de98914531bfe44751efbdb2950646d6d0199909204ce0",
                    "size": 884628
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b966c85e12e067169cbe26ba52f3822299cd7b7a88f27244c4a6bcbeb60e741",
                    "size": 473
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        },
        "run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ad4779905e4e84a624a48e4411fe21496102734010a1a907f2c671e0f9a57607",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559cf85a6ec24cb0c9e36b8498ad9f3a8a47f138170b68da473815c59ce5726",
                    "size": 884480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c3ec480f7d069aa69e1c1527f32e5cd2db1e399048456bad62c2b80e5fac05e",
                    "size": 473
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:759be42bc6f2d7a8c1446262014f7d0b4ba400a988d1af43d1acab425ba521de",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea60fc98d6e2f6956d9b5e7c60170dd2536fecb1052a824887b5f625bee4c172",
                    "size": 884481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fce9fb9b5870d34b579942ae51d48ec44dfea6817b29cf3e2dd8f2cbf7006e24",
                    "size": 474
                }
            ]
        },
        "run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e1d1f033a8d3f54dbf6ed0c33f1f5f285ed4573c3a4090070c7d5ebf4f10601",
                "size": 6368
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf66be63e26b49489b5f56887a457c0c29b3af79dd7afeefcc729ff6b8fb80f2",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d77102ebb29657f310216c6cc482b7d5da67f49e162184e858debaab47ae13bb",
                    "size": 473
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:921e6f3636a47d0c89baad03633d2c0e97228db6a878895a973ccf899f62fb2f",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c89bf05306684e554ecf7a39fa3851839aa2f8b54244ffe3d3b8931b65e130",
                    "size": 884505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1cfe278c1abb1d712bf2000913f586f33fbc4a49451f2d125fccfad094c655",
                    "size": 473
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a9efea883450cc6b1d920bef7c6d83608536e6b78e98315e69d7edb2c469c3e",
                "size": 6356
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f55c432133cc4c1516de98914531bfe44751efbdb2950646d6d0199909204ce0",
                    "size": 884628
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b966c85e12e067169cbe26ba52f3822299cd7b7a88f27244c4a6bcbeb60e741",
                    "size": 473
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0af63c4c6e268fd10d19119ae9e52ce88c4dad4fcf0402aca376e5b08a44780c",
                "size": 6353
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53d4cd62660ff75fa10c56530c36b5846c484187b62ff4ad58884aa4d9e6e2a7",
                    "size": 884629
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404a1a964975b4f2663fc8819e768f45d74a21d454d47cae885cbdcaa411db5f",
                    "size": 474
                }
            ]
        }
    },
    "tags": [
        "20231127",
        "20231204",
        "20240201",
        "20240304",
        "20240401",
        "20240429",
        "3.12",
        "3.12-20231127",
        "3.12-20231204",
        "3.12-20240201",
        "3.12-20240304",
        "3.12-20240401",
        "3.12-20240429",
        "3.12-build",
        "3.12-build-20231127",
        "3.12-build-20231204",
        "3.12-build-20240201",
        "3.12-build-20240304",
        "3.12-build-20240401",
        "3.12-build-20240429",
        "3.12-run",
        "3.12-run-20231127",
        "3.12-run-20231204",
        "3.12-run-20240201",
        "3.12-run-20240304",
        "3.12-run-20240401",
        "3.12-run-20240429",
        "3.13",
        "3.13-20231127",
        "3.13-20231204",
        "3.13-20240201",
        "3.13-20240304",
        "3.13-20240401",
        "3.13-20240429",
        "3.13-build",
        "3.13-build-20231127",
        "3.13-build-20231204",
        "3.13-build-20240201",
        "3.13-build-20240304",
        "3.13-build-20240401",
        "3.13-build-20240429",
        "3.13-run",
        "3.13-run-20231127",
        "3.13-run-20231204",
        "3.13-run-20240201",
        "3.13-run-20240304",
        "3.13-run-20240401",
        "3.13-run-20240429",
        "3.14",
        "3.14-20231127",
        "3.14-20231204",
        "3.14-20240201",
        "3.14-20240304",
        "3.14-20240401",
        "3.14-20240429",
        "3.14-build",
        "3.14-build-20231127",
        "3.14-build-20231204",
        "3.14-build-20240201",
        "3.14-build-20240304",
        "3.14-build-20240401",
        "3.14-build-20240429",
        "3.14-run",
        "3.14-run-20231127",
        "3.14-run-20231204",
        "3.14-run-20240201",
        "3.14-run-20240304",
        "3.14-run-20240401",
        "3.14-run-20240429",
        "3.15",
        "3.15-20231127",
        "3.15-20231204",
        "3.15-20240201",
        "3.15-20240304",
        "3.15-20240401",
        "3.15-20240429",
        "3.15-build",
        "3.15-build-20231127",
        "3.15-build-20231204",
        "3.15-build-20240201",
        "3.15-build-20240304",
        "3.15-build-20240401",
        "3.15-build-20240429",
        "3.15-run",
        "3.15-run-20231127",
        "3.15-run-20231204",
        "3.15-run-20240201",
        "3.15-run-20240304",
        "3.15-run-20240401",
        "3.15-run-20240429",
        "3.16",
        "3.16-20231127",
        "3.16-20231204",
        "3.16-20240201",
        "3.16-20240304",
        "3.16-20240401",
        "3.16-20240429",
        "3.16-build",
        "3.16-build-20231127",
        "3.16-build-20231204",
        "3.16-build-20240201",
        "3.16-build-20240304",
        "3.16-build-20240401",
        "3.16-build-20240429",
        "3.16-run",
        "3.16-run-20231127",
        "3.16-run-20231204",
        "3.16-run-20240201",
        "3.16-run-20240304",
        "3.16-run-20240401",
        "3.16-run-20240429",
        "3.17",
        "3.17-20231127",
        "3.17-20231204",
        "3.17-20240201",
        "3.17-20240304",
        "3.17-20240401",
        "3.17-20240429",
        "3.17-build",
        "3.17-build-20231127",
        "3.17-build-20231204",
        "3.17-build-20240201",
        "3.17-build-20240304",
        "3.17-build-20240401",
        "3.17-build-20240429",
        "3.17-run",
        "3.17-run-20231127",
        "3.17-run-20231204",
        "3.17-run-20240201",
        "3.17-run-20240304",
        "3.17-run-20240401",
        "3.17-run-20240429",
        "3.18",
        "3.18-20231127",
        "3.18-20231204",
        "3.18-20240201",
        "3.18-20240304",
        "3.18-20240401",
        "3.18-20240429",
        "3.18-build",
        "3.18-build-20231127",
        "3.18-build-20231204",
        "3.18-build-20240201",
        "3.18-build-20240304",
        "3.18-build-20240401",
        "3.18-build-20240429",
        "3.18-run",
        "3.18-run-20231127",
        "3.18-run-20231204",
        "3.18-run-20240201",
        "3.18-run-20240304",
        "3.18-run-20240401",
        "3.18-run-20240429",
        "build",
        "build-20231127",
        "build-20231204",
        "build-20240201",
        "build-20240304",
        "build-20240401",
        "build-20240429",
        "edge",
        "edge-20231127",
        "edge-20231204",
        "edge-20240201",
        "edge-20240304",
        "edge-20240401",
        "edge-20240429",
        "edge-build",
        "edge-build-20231127",
        "edge-build-20231204",
        "edge-build-20240201",
        "edge-build-20240304",
        "edge-build-20240401",
        "edge-build-20240429",
        "edge-run",
        "edge-run-20231127",
        "edge-run-20231204",
        "edge-run-20240201",
        "edge-run-20240304",
        "edge-run-20240401",
        "edge-run-20240429",
        "latest",
        "latest-20231127",
        "latest-20231204",
        "latest-20240201",
        "latest-20240304",
        "latest-20240401",
        "latest-20240429",
        "latest-build",
        "latest-build-20231127",
        "latest-build-20231204",
        "latest-build-20240201",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20231127",
        "latest-run-20231204",
        "latest-run-20240201",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240429",
        "run",
        "run-20231127",
        "run-20231204",
        "run-20240201",
        "run-20240304",
        "run-20240401",
        "run-20240429"
    ],
    "configs": {
        "20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:09.767497232Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.767497232Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b52b843951a0f07cf6b173c6bfbf62f8c51489714675aa0271b04dd9b341f7d3",
                    "sha256:d8a5c9d6ad410d9f6a452ea0ea55097edc5595fb1734ac17e7f29fc35d335f10"
                ]
            },
            "variant": "v8"
        },
        "20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.098700842Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.098700842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:b9c0e0c93ad059698b8dc074921d7cea72bf64e39c68e538afbf9f94d49538d2",
                    "sha256:29f5248f1ff2c219f0e1e0418efa5f1b23071af283887ac85a8c7e0ff680aa59"
                ]
            },
            "variant": "v8"
        },
        "20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.52731808Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.52731808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:901a3a9a6dddc257c387188f78132b6f46efb6037c051e47509195857fb24c77",
                    "sha256:8e59f9a9fe21f10dc2fc7bc0886f787a03ce7982c7c47b194ba5261516c91549"
                ]
            },
            "variant": "v8"
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.484232268Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.484232268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:bc9a1952b4fd781924d0ab3870a4df9315179bcb1bee93e38ca53ef6e87b1cfa",
                    "sha256:a048d7174748598c7b8eb2b1987c6aa6694529f8f9edbe6a8ecf83459bd1af3f"
                ]
            },
            "variant": "v8"
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:09.330507181Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.330507181Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:6a695ef343462f2b737cb52ed54a976cdfd02906bdf7f2fee5734525c55566ba",
                    "sha256:61a5dcae2dbb87850aea248654aa233d0196bffa31e30eeee60a4c11009c83b8"
                ]
            },
            "variant": "v8"
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "3.12": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:06.76031266Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.76031266Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:5f4d094abd87c18c6a09ea779bb9cabf812648a30c25314823e6bc36803aa102",
                    "sha256:ebbeacbf0d0bd82d4dd56b17b295e62ad389203ab3ed1400ce644211a8694cfa"
                ]
            },
            "variant": "v8"
        },
        "3.12-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:06.541528223Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.964514877Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.884234985Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.893657341Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:58.464040655Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:58.573042753Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.427460595Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:06.427460595Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.541528223Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:a5b2d84231cb49047e21c341b2b2f865fbd472a19534714b3ed2f1af4734fbba",
                    "sha256:0eae052f40dc29f2255645515bdffafb35a97ffa3ac334db9213d6f3294dbd87",
                    "sha256:98a85f136bc6ad9a1fa2ec0b422d1f7339d9cf6acdfc4762de115252c10c3d8d",
                    "sha256:3bebbbdb0478c895789760d8232bac4b6295108ddb5201ec4e6f263a4e7ece64",
                    "sha256:a3bec3cb520934c4f3fdd9bf9fbffcfef4203be8999d2b6c23337a48de59da88",
                    "sha256:c1c3ecb70549b72f53e3855bed52be6413e9f1ff99c4f3256490668bf18c7c74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2429c8b839dae6579c6088b8970b6aa53650e3829fe4c16938d3b54c5982f425",
                    "sha256:98f7e573fda41b6d0b0a21b1007e8ff9e167c270e093e3f3c502b1524c67c1a9",
                    "sha256:bf2c4c997dab0ade71dcbc19e8bde797aec0b9862f5a8cc960797e1dcb2f380c"
                ]
            },
            "variant": "v8"
        },
        "3.12-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:22.314398571Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:47.394549332Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.209047991Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.217582661Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.842175856Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.95907778Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:22.210678484Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:22.210678484Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:22.314398571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:0b3c5898be9ce9028c12e6d3da8baea3f2990bd8dbaf90d8d388ef711bc0f9b3",
                    "sha256:26dc65654abf30fcdf82b59a1c73d90391cd2dbeae5c1c1bb4d998b69c8b48c9",
                    "sha256:46956f605c1647c6e9937752e67e786dc42d2af8566ef2b0f778b6507ab1c652",
                    "sha256:0b6bbfe5ff95f5e7a83bcaf23bbb42ca6d23949033832b861cf97f27e62b3ebf",
                    "sha256:13f355db23cf796472c87a95eb074c951ae8b7c36736423db05e4882c5f5af2a",
                    "sha256:9294a66c9c9db832569559d6e394d7f860cc9a46013139e4ef367ed6047c0fae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d74112973233879b541ba90a036afe8411715a078a6bc5cb9306a234a3fe300a",
                    "sha256:5d3bf60668313b885adfc23b5c5539782064ac08ff6b7026ecbdcb5a8d3f80c5",
                    "sha256:65dca198fdfd5809211f7e7bac5b265ebb21b660454d269cb4560eaa7392c308"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:38.128690096Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:39.949012498Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.427262796Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.453029838Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.01925081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.099711458Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:38.047646736Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:38.047646736Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:38.128690096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:89d8efdd504d9f2fadb2b1f0df5adff77b8ec12f01370b1895d8a7a954a750b3",
                    "sha256:6ed779304d72f427061166e5701f017bf33c12afcd617cd7a6550c7245517608",
                    "sha256:5b71eae92d9fae27d8f85ed2a43d2d8a04af22dd0b46b8a248cb9739492eb388",
                    "sha256:ab752fe64d69515f5613043a57c7bcadadad80f07bdae29d5e25922a148cbb2a",
                    "sha256:9395fb388b4c3c75548dce27fcb2d3c28088b725bac2ba0838147d8ace749b43",
                    "sha256:aa5cee052ee3673f60c8c26d0caaf5802c92d681614fe5a225aceacf73b3bfa4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b1883183c859953b5b2c80dae8f407817de7f3595a51448b86c1a52775c8fea",
                    "sha256:15f8c825b6e15fba7967b679e7fce38e7fe1793d10bd06474ddb7592947b32a5",
                    "sha256:0b753580ac393020fee055cd3d1306cf8d45a6acb6eb77b462056556de0667d7"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:10.808705689Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.187487124Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.945580538Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.955510726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.54347434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.627679546Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:10.720110889Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:10.720110889Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:10.808705689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:6dc952d308da28d1a8478c1971e9b22a8801943d0df69bce478229ee054d09ef",
                    "sha256:19824869b955baa1311534a5013ea34b4cc7d094074689e28554e4d3bd49a338",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a70efab3e8ac0316c97eb99ce320d48d8ba29182146478a477214f0e5c4d819",
                    "sha256:9590a8daeecdcdf964669fe7d66c47657d3e8277492a110670092d5ed8f2a301",
                    "sha256:f84b395b97ed1dc4448fb5d5ad4d429f84a5817c0814fc9367b832fd80011266"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:12.005590903Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.051114059Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.637825364Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.667069431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.208930134Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.288845915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.93094992Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:11.93094992Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.005590903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:c194541055416c9b27c5a9fa9af6fed6e2bf1b8396183c510d7930b4ecb04937",
                    "sha256:3efdc4fd0bfce3b2dbe4826879fcc937c42771716cb3aa5b6e859766e2fcc211",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:dfca87d870c26b8fce6eb62db5bad3213c7dd6951ae1bd381eaee4d5888ee594",
                    "sha256:734157304bdb05f3e2441b26d8970e9cddb60f550c82e1ef444c38092c8cb667",
                    "sha256:592d5d4de6cf241517de8069434aabbfea47636eedb78d69c91168c2b81c8614",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:95a47e9fe272cae8079ccc10063d57572373872e408df9229f27fb2157831147",
                    "sha256:7d38dc8608b35ce590336b37f3d93b7fdb1ca2ff28d1f5a68362477f7b5898fd",
                    "sha256:53d45bb129f34da87e3bb89075c437da6882c6b8094f0ebf2a164ffbc9a44fb4"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:06.76031266Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.76031266Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:5f4d094abd87c18c6a09ea779bb9cabf812648a30c25314823e6bc36803aa102",
                    "sha256:ebbeacbf0d0bd82d4dd56b17b295e62ad389203ab3ed1400ce644211a8694cfa"
                ]
            },
            "variant": "v8"
        },
        "3.12-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:03.803042472Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.702676093Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.071468958Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.728190657Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.765102603Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.241036859Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.336576806Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:03.726737597Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:03.726737597Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:03.803042472Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:9bbe355a7c34ac989ef11665c4fe070a07f4dee23c66818c368395864b85a6d2",
                    "sha256:a1320a697a9f47be74dc7e8d6a6531cbd56bf5b348ee85093a93aa699ec83641",
                    "sha256:2ef1dc2b8b653b03f13cf28ce48df440f5f0cafc043e273217bfb2b877d370a0",
                    "sha256:4d47a8c0edbdbba8f50facaa55d18ee32e3ff41394f7fa4cd312ef5cf1254403",
                    "sha256:c692b9f4ac81ef8699cc5d6e72c90e5ed1755e99ab4ab76b94019e61327b9474",
                    "sha256:daf36de3cc49824eafe7055efd6fb22f9f1b5983e77c19f5a11cf21bfcce9384",
                    "sha256:4290a86a8107fc4f77fe1bbad7e16cfdc39f67b342049d985c3f94f3811bdaea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3305c9ec9792089640e44f7fbe491ad47f9581a433083cc592a5550e7f8438de",
                    "sha256:3e0887c25073a021e61e313500faef5b952ac4ea6008f84aee50565197ea38fd",
                    "sha256:c907f3bd7d92ac1e088d1984b5651a92b55244d6d5d1e24e3348aa175a1fdde1"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:14.906269305Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:53.316103473Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:53.316103473Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:53.316103473Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.986416826Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:18.696457317Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.709231677Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.709231677Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:19.719811209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.729731566Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.739797471Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.739797471Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:20.224602203Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:20.353170032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:14.789738502Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:14.789738502Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:14.906269305Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:9c7422b18b56e09ff0a6ced3c017c383caec45d5ab69c8f7624f0f9ff85bdefa",
                    "sha256:d281157bb738bd82d2ac71548567fa0d16dbcac31ba69093138461087d273886",
                    "sha256:808079f3e251b158068d8ecc599d0a24b0eeb0c697239edeeef63cce3759323b",
                    "sha256:6c624d8b5acdddc979457c8d9c4d696d53e58c02146c9d9f0b92e6df614a46f5",
                    "sha256:73a46a9453eccbe7e5c31ebb2550866e9da391b9ab5fb0101cbdd81bdb3b53b7",
                    "sha256:474429173c06f0cf98e3616b7728cbe1653eb3e943d57244e1e3eeea5a63157c",
                    "sha256:922ced96ffc5a6ea8b6e9d16bd1e61c1c8ea07e7cf483d213f23ffa7d0030140",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c0c49733b00a92997a069b5472841fcc694729955989ff8e9bc16bbf7ae0b01a",
                    "sha256:21c4c38525b69f2348496c11e16603413846bb8ebf1fa3fba7a1be65851b8cd3",
                    "sha256:2e30a12fcc8a1682f1fc82ebf8f7e631ceea321b13f30cb89f6355c9075aa732"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:38.272693859Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:37.931938139Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:37.931938139Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:37.931938139Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:40.948164783Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:00.840943293Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.489796261Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.489796261Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:01.498384889Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.506362927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.515032128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.515032128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:01.971997762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:02.075280365Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:38.144224049Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:38.144224049Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:38.272693859Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:878df8539362f022dbf637e99b194bc736bcdd394846e508cea5dc299add646e",
                    "sha256:c8fc766a6d2ae091d5b9a261348275486de43b97304aea78acfbb6c79af7a103",
                    "sha256:a14206a31e44c4d4feb57833d34c3bd09030da513d3490c90ea224adf8cbcee3",
                    "sha256:248465e3e59d120eda0805a8dadf8c70e3379bced1cf57043433eb3ba051a964",
                    "sha256:63b948a52144654dc1a406613efe16120fe01167372670a401170f5eba226700",
                    "sha256:d7c36254ca015c9da8938f91175a891671cc43d6ea58da22c32bff1efb85a609",
                    "sha256:f92119e0494a413378fa89101e54124ffc5fa1140a43b67b7ba667f9bce4d4b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f96805330dd6097e665d885e821359e45e87c701a254ec9ee850e7c3b95481f0",
                    "sha256:fe1dae7281249b4b83fa479167adb8c14185bab600bbaf731ce27a529f1ef733",
                    "sha256:970ddc2d113fe16db3287115b447b5b1ae38b67840f945169ae2a7080f04a1e3"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:36.209989816Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.286621893Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.286621893Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.286621893Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.451398062Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:57.778512097Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.242994454Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.242994454Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:58.253038776Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.305574982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.318789317Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.318789317Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:58.762925474Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.858734677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:36.13066165Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:36.13066165Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:36.209989816Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:a6a07255d881e3ff48b8d1da057a9c6d1242064a37d8853727d902b699dc2804",
                    "sha256:72aef7904220805eb347d4aff8d18fabe576390c155d8f7d640d3465dad9373a",
                    "sha256:33c1c9e14762c82f48799983f5bec8e604c9e624e2f64641be961e00b08a9ac8",
                    "sha256:48f0ca393abec099513169d4520473f3e87b13e1d75ba83fc028e8f1652b813b",
                    "sha256:f1cc64e52ebc8a3ec43c16fb6e0b4019aa53f9619d1d331655c58f12da6c1141",
                    "sha256:60bf40f6226b426337e62d5de0c93a8594cbfd059137d3e0d42925051b2fbf3c",
                    "sha256:d2f8d9b62d14f6fed2dec8532db621d76853a2faa6891f4b6bbcc16c8103bd9c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:eb245992d18bd063981c8384e03a412a1b4b27799fd2247870a8c8ddd898fed1",
                    "sha256:829f4186e86be38dce9a90fcac5977f9e776f328d7d2f47de15c6fb76ea4565d",
                    "sha256:c35be6b06bb9913dfe0420b4874fff2c6bd17c946dafce1fba1b824d0b1b59c3"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:04.215143255Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:03.88128869Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:03.88128869Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:03.88128869Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.27561676Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:24.794066817Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.312090396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.312090396Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:25.322987615Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.359138065Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.367943527Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.367943527Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:25.832685351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.925618925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:04.130925098Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:04.130925098Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:04.215143255Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:3541ccb864521f306e6d94fdd25f1cf068236583b88a50cfbfeb9c436678e709",
                    "sha256:21b9904769ac83052b46f797b672c4b25d689fd4c40d1c26f2d7c366817ee990",
                    "sha256:554f0be06818b8264eb7c6655716513f5ee6ab5a14f575f5a87381e39075aa29",
                    "sha256:ae018abf42b419e8d5c29c288245d4da167137707f1d3afa6588406340296a0d",
                    "sha256:8166558bb079b0c6bf6a354d9d1439bc45cac473c2786c38f5529dd680510699",
                    "sha256:a9550925deb67cb14e9cf775c24eab89e64066c55b7a1085acd2d9d661db47cf",
                    "sha256:295aad41d8b40faa2a3b31289179a73ebed9ef74d610c599f7d3fd57a8056cc4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15a58994f6008159b2b6580204f02012a4670a59312bd996d2799fb7be900237",
                    "sha256:c7b7c523362cfed13dc2cbf3f02f18d2853c620a96387ba79e097a4d2a6ec8a8",
                    "sha256:9a4252e2ab4f337ece070de53336f14e004687dca114f0aede13cc4bff378435"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:14.217056641Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:39.422028286Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:39.422028286Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:39.422028286Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:43.71908829Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.392593336Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.877169798Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.877169798Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:04.888110321Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.914515996Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.928173036Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.928173036Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:05.374058862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:05.456279011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:14.086972688Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:14.086972688Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:14.217056641Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:271fd6e90a9e5c65a4cd9d46ca2448a010bd9ddb5a1212f87eb36ae6910b0e77",
                    "sha256:a9335d73c48f66c552a09bb9ee35a7cbd0adaf0d2b4f13c63eafbbdf9b5fa529",
                    "sha256:3c9e5b9fdae562c6ab10e03a05e00b8b585949288ca7761d6d69c2bfa63e2efc",
                    "sha256:50eea92b0ac6bafb43ebf6cc63a6f294b0bb9818bccf901670216bb359791082",
                    "sha256:dd49d536f7fd96ece4ef699dfa9071f040374bcc6f3c9515dcafe1636a63cbe8",
                    "sha256:bc9aae1acee18c0a489575ebd589b3396a1170d1ff56d6e84a485ca3e5a2d92b",
                    "sha256:7f39ffe00b175f92e32ac9ce38e59b4af55c89726d1e87d81dd01c8c56322875",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a6a813196da06a0d8d43fd9115549d9864485311f0b1382290555361bd0bfbc",
                    "sha256:99a283093a45eddd564052b7eefbc985da1abccc622fd72284da880551809441",
                    "sha256:abf72458fd9f9bb2f7929678bd1e02a9d2b1329327c35654a23454bf007280bc"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:03.803042472Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.702676093Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.071468958Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.728190657Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.765102603Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.241036859Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.336576806Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:03.726737597Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:03.726737597Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:03.803042472Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:9bbe355a7c34ac989ef11665c4fe070a07f4dee23c66818c368395864b85a6d2",
                    "sha256:a1320a697a9f47be74dc7e8d6a6531cbd56bf5b348ee85093a93aa699ec83641",
                    "sha256:2ef1dc2b8b653b03f13cf28ce48df440f5f0cafc043e273217bfb2b877d370a0",
                    "sha256:4d47a8c0edbdbba8f50facaa55d18ee32e3ff41394f7fa4cd312ef5cf1254403",
                    "sha256:c692b9f4ac81ef8699cc5d6e72c90e5ed1755e99ab4ab76b94019e61327b9474",
                    "sha256:daf36de3cc49824eafe7055efd6fb22f9f1b5983e77c19f5a11cf21bfcce9384",
                    "sha256:4290a86a8107fc4f77fe1bbad7e16cfdc39f67b342049d985c3f94f3811bdaea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3305c9ec9792089640e44f7fbe491ad47f9581a433083cc592a5550e7f8438de",
                    "sha256:3e0887c25073a021e61e313500faef5b952ac4ea6008f84aee50565197ea38fd",
                    "sha256:c907f3bd7d92ac1e088d1984b5651a92b55244d6d5d1e24e3348aa175a1fdde1"
                ]
            },
            "variant": "v8"
        },
        "3.12-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:06.76031266Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.76031266Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:5f4d094abd87c18c6a09ea779bb9cabf812648a30c25314823e6bc36803aa102",
                    "sha256:ebbeacbf0d0bd82d4dd56b17b295e62ad389203ab3ed1400ce644211a8694cfa"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:06.541528223Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.964514877Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.884234985Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.893657341Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:58.464040655Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:58.573042753Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.427460595Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:06.427460595Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.541528223Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:a5b2d84231cb49047e21c341b2b2f865fbd472a19534714b3ed2f1af4734fbba",
                    "sha256:0eae052f40dc29f2255645515bdffafb35a97ffa3ac334db9213d6f3294dbd87",
                    "sha256:98a85f136bc6ad9a1fa2ec0b422d1f7339d9cf6acdfc4762de115252c10c3d8d",
                    "sha256:3bebbbdb0478c895789760d8232bac4b6295108ddb5201ec4e6f263a4e7ece64",
                    "sha256:a3bec3cb520934c4f3fdd9bf9fbffcfef4203be8999d2b6c23337a48de59da88",
                    "sha256:c1c3ecb70549b72f53e3855bed52be6413e9f1ff99c4f3256490668bf18c7c74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2429c8b839dae6579c6088b8970b6aa53650e3829fe4c16938d3b54c5982f425",
                    "sha256:98f7e573fda41b6d0b0a21b1007e8ff9e167c270e093e3f3c502b1524c67c1a9",
                    "sha256:bf2c4c997dab0ade71dcbc19e8bde797aec0b9862f5a8cc960797e1dcb2f380c"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:22.314398571Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:47.394549332Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.209047991Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.217582661Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.842175856Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.95907778Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:22.210678484Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:22.210678484Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:22.314398571Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:0b3c5898be9ce9028c12e6d3da8baea3f2990bd8dbaf90d8d388ef711bc0f9b3",
                    "sha256:26dc65654abf30fcdf82b59a1c73d90391cd2dbeae5c1c1bb4d998b69c8b48c9",
                    "sha256:46956f605c1647c6e9937752e67e786dc42d2af8566ef2b0f778b6507ab1c652",
                    "sha256:0b6bbfe5ff95f5e7a83bcaf23bbb42ca6d23949033832b861cf97f27e62b3ebf",
                    "sha256:13f355db23cf796472c87a95eb074c951ae8b7c36736423db05e4882c5f5af2a",
                    "sha256:9294a66c9c9db832569559d6e394d7f860cc9a46013139e4ef367ed6047c0fae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d74112973233879b541ba90a036afe8411715a078a6bc5cb9306a234a3fe300a",
                    "sha256:5d3bf60668313b885adfc23b5c5539782064ac08ff6b7026ecbdcb5a8d3f80c5",
                    "sha256:65dca198fdfd5809211f7e7bac5b265ebb21b660454d269cb4560eaa7392c308"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:38.128690096Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:39.949012498Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.427262796Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.453029838Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.01925081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.099711458Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:38.047646736Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:38.047646736Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:38.128690096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:89d8efdd504d9f2fadb2b1f0df5adff77b8ec12f01370b1895d8a7a954a750b3",
                    "sha256:6ed779304d72f427061166e5701f017bf33c12afcd617cd7a6550c7245517608",
                    "sha256:5b71eae92d9fae27d8f85ed2a43d2d8a04af22dd0b46b8a248cb9739492eb388",
                    "sha256:ab752fe64d69515f5613043a57c7bcadadad80f07bdae29d5e25922a148cbb2a",
                    "sha256:9395fb388b4c3c75548dce27fcb2d3c28088b725bac2ba0838147d8ace749b43",
                    "sha256:aa5cee052ee3673f60c8c26d0caaf5802c92d681614fe5a225aceacf73b3bfa4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b1883183c859953b5b2c80dae8f407817de7f3595a51448b86c1a52775c8fea",
                    "sha256:15f8c825b6e15fba7967b679e7fce38e7fe1793d10bd06474ddb7592947b32a5",
                    "sha256:0b753580ac393020fee055cd3d1306cf8d45a6acb6eb77b462056556de0667d7"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:10.808705689Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.187487124Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.945580538Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.955510726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.54347434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.627679546Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:10.720110889Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:10.720110889Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:10.808705689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:6dc952d308da28d1a8478c1971e9b22a8801943d0df69bce478229ee054d09ef",
                    "sha256:19824869b955baa1311534a5013ea34b4cc7d094074689e28554e4d3bd49a338",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a70efab3e8ac0316c97eb99ce320d48d8ba29182146478a477214f0e5c4d819",
                    "sha256:9590a8daeecdcdf964669fe7d66c47657d3e8277492a110670092d5ed8f2a301",
                    "sha256:f84b395b97ed1dc4448fb5d5ad4d429f84a5817c0814fc9367b832fd80011266"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:12.005590903Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.051114059Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.637825364Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.667069431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.208930134Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.288845915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.93094992Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:11.93094992Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.005590903Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:c194541055416c9b27c5a9fa9af6fed6e2bf1b8396183c510d7930b4ecb04937",
                    "sha256:3efdc4fd0bfce3b2dbe4826879fcc937c42771716cb3aa5b6e859766e2fcc211",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:dfca87d870c26b8fce6eb62db5bad3213c7dd6951ae1bd381eaee4d5888ee594",
                    "sha256:734157304bdb05f3e2441b26d8970e9cddb60f550c82e1ef444c38092c8cb667",
                    "sha256:592d5d4de6cf241517de8069434aabbfea47636eedb78d69c91168c2b81c8614",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:95a47e9fe272cae8079ccc10063d57572373872e408df9229f27fb2157831147",
                    "sha256:7d38dc8608b35ce590336b37f3d93b7fdb1ca2ff28d1f5a68362477f7b5898fd",
                    "sha256:53d45bb129f34da87e3bb89075c437da6882c6b8094f0ebf2a164ffbc9a44fb4"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:06.76031266Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:06.684532954Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:06.76031266Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:5f4d094abd87c18c6a09ea779bb9cabf812648a30c25314823e6bc36803aa102",
                    "sha256:ebbeacbf0d0bd82d4dd56b17b295e62ad389203ab3ed1400ce644211a8694cfa"
                ]
            },
            "variant": "v8"
        },
        "3.13": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:00.466329901Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.466329901Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:5743a644e82696e3a23e5013b92ac3a3da2eabea4355bff22ae4b34d3ff0749f",
                    "sha256:f024ab410abd7864e6c5330b477b6aa3d1487d7cb6da33d7fa7bed1ba04c74f2"
                ]
            },
            "variant": "v8"
        },
        "3.13-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:07.236401634Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.528797628Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.106355174Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.11375246Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.699294455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.800488145Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:07.120265485Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:07.120265485Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:07.236401634Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:b62835df51dd17f551e5538a1a65369c2badbaebecd4871460056c3f30a74e2d",
                    "sha256:51d1631aad6fcb12c7a95975a1d754caa377d9f92074b7171de6f25bc4df1e76",
                    "sha256:370de0a6a18146f05fe3af7702c1963191c47c89e416faa0dd0c271d311cc187",
                    "sha256:4dceee5c6b96c57b40464bc652e1b0fa44b453ab8fa698d8b994520a79d0e493",
                    "sha256:836aeb9c5ef44d4e6b1db67b81a65c4c1424b9db7b50226b3ebea6f4da858749",
                    "sha256:6a5346977bbbf75ab5679d985947f09c73624cd174f63f109110fab7f56f32a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8983bbf1524c5824bc5b97f3823ca0ff3f5f9dd650318512fe161f3f2104362e",
                    "sha256:10b67bec544c8ce6e7562f28ca85807fdfb41e9fbd97eeb434f8485b770cb44b",
                    "sha256:61f47a2db6a7c6fee8e0adc623a61d29f0dbd53eac03706c9fbbc4c01d763b7b"
                ]
            },
            "variant": "v8"
        },
        "3.13-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:32.081510838Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:56.863685878Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:57.762114286Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.770943526Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:58.441174747Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:58.5371236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:31.948592863Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:31.948592863Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.081510838Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5eb3c4bcb7cfa011d00506b5ffef6c31a67c2dd3f9382056d560331040ad7eed",
                    "sha256:7e1e7b0b5a28f5848b430224ebe0503c4b7b4c25b1ae65b6ea27ffdd80986aaa",
                    "sha256:f6a43efe761ec6bef274c134227dedad927c524a075de18e1b172437fb7fe3ec",
                    "sha256:29c6273356158142b44074613128eba1ef149d60f0b0890650660b32adfcc1ac",
                    "sha256:0ae563fac5351053d1806e699284bac86a46da101c3848b206f373ec16ee9e58",
                    "sha256:fd45a2a0be2d1e15e25f55a5c53af796199bbe8e6bf17fda1cff0686a61236d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c81c53057e2f507ba45a5426b445dea2fe197ede7b8f345b16b55d1ce0684c22",
                    "sha256:5261de446647de0ff0ac957693f75b53eef8468787722489f118abc3100f823f",
                    "sha256:2a587b25edd884360c45cacbe0aafa319a9859b157f019b4ff4567a1cce812c9"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:32.871979593Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.834301143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.292180121Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.311403856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.813877508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.902838866Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:32.79213074Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:32.79213074Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:32.871979593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5fbe060049cc1f0f8c87bb0b04ac43dffceacf667878acb8ec5692983f7053fd",
                    "sha256:78b0c37883cf908621b19db1f0aa69ab605bd8c72823a37903584a1ad93bc151",
                    "sha256:2062f4b9c8a396c6d1ddd1302041ada9cf7ca917cdfa1e844583ee441744607a",
                    "sha256:13f3bca77808d9795c6eb3747d970949ea75fafe78eeb966ae0d42ad38264ad3",
                    "sha256:2b5d4db0676f79866b856a362ddb734a2795389c411ae84b285299af703690e2",
                    "sha256:85cfec31723270db06ce718c1366fb8bf149379098af3289d1a229cf732a0771",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22701552b2d556b0e105a4b70aa7ffe8b55756f15db7934582b8526e6e313dd6",
                    "sha256:479d80143097df2a002a14570976af70c8d699016629bd54c3282554b704b479",
                    "sha256:a0a81ea18a1f8be03a927d24d34782d20283b502812199567ecaf5dbdc199173"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:50:57.8016414Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.275486556Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:06.753597894Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.788060646Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360005546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.448097006Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:50:57.722479741Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:50:57.722479741Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:50:57.8016414Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:d3b394049c09acf9487f922a916d6bbe543cfb3ff82424f1841c575c05416fcc",
                    "sha256:a0b5919752f68e73e13389d0b9aeee7fd528c209c6ab0371399bf00004003c93",
                    "sha256:a5f763b40029663bfc55a676b801db80b2681f40747e5e2916506d5964206ac3",
                    "sha256:00ef40b9017cfdb6983e571c7647338267b28ed2bd3cecc7e2eac40707a2ef66",
                    "sha256:310c0d80b732f333f7707a99d95f10485388043f201e0c3a7f22a0272501fc8e",
                    "sha256:7b035d07c22c1c94d655e187fb41b5f33bf7e12766d684ffc30f261a2e22f6be",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ff5a48c298e404afe8fffeaa3ce35e0d0ea70cf52b454b504bb74316ec8db350",
                    "sha256:cac871436c4e75d169d56b5660b7daee2ea6883c18ca81a530f90ae1e46578a6",
                    "sha256:ec50a3d846321ebdab42a86643ab0d61834c68d7f58d274639cc3ba630cf1966"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:11.288457229Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.093715176Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.989331351Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.997095499Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:56.473201897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.581648639Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.212038432Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:11.212038432Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.288457229Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8612c4245e6da33b34db157add4e185506c3003c4724329366b72de559f69ccb",
                    "sha256:acdc2d6c29cf2394d2a14e5b4ab6f0729ee503890c8509c0bed21eee53cc1d22",
                    "sha256:6ac9b958a6d5bd47f46163ac332f0473b4ae1ea1072dd8d2415edd4f8b26d6e2",
                    "sha256:a97fe0538c520f1164b2e6fbff130ce309c2cc24a670b53827667b4f360a1102",
                    "sha256:0ac027e6cdc5c005f4f0f93c74da7b3f741c27bed2a6f37790ab71c254502720",
                    "sha256:e4897c27aeddfa6e623ec01d98ce2d1e040808902869115b7256d7a1eeb2e9c4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b03ba8359c6e7a9f3710b2fa3f0692917fe57a2530c4efc5c7f70a311399368",
                    "sha256:8917acfb0f732ad191e4f449ed46b655f81328ffe12bcf20c67a0fccc2b0ac99",
                    "sha256:22067367d44b720c50c8155269565ddabe7e50891dc9fccf748ee5ad185c9b1c"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:00.466329901Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.466329901Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:5743a644e82696e3a23e5013b92ac3a3da2eabea4355bff22ae4b34d3ff0749f",
                    "sha256:f024ab410abd7864e6c5330b477b6aa3d1487d7cb6da33d7fa7bed1ba04c74f2"
                ]
            },
            "variant": "v8"
        },
        "3.13-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:20.253710133Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:57.103265546Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.036391323Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.727202158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.787711772Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.267936765Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.355977086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:20.166566455Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:20.166566455Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:20.253710133Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:a264368fabf41c94c612dfc1e615c7c3952e42044c41d4f7c76cd53f22e58d74",
                    "sha256:f811d8e87538a57c0abe61204627fd9e23db874378abdc62087a6e595c9e1432",
                    "sha256:9a95d337373efbb697e3e394385c86f2429ec4152e79c9f92ab9800876f913fe",
                    "sha256:589eb99b49b3fc04a8f1be9841e2c861c5e81754b95f49adff7494febb665654",
                    "sha256:16934b278b1a90ed578ab30b22c1a8176889ebb4519e7267e4554a0fc22e55f5",
                    "sha256:f19898c5dfeb605a4beed27bc8c08a79066a38e764f19623313404f273ae103d",
                    "sha256:7dd6a2967ef7e83f5decafa31195534eef20d8eee29d71ecb76752c274248d37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:022561cb16a0979e8a40bd35fcfdcd60999e63cb52c05acc9c07872624ce8089",
                    "sha256:ec9d187ff0d4c1b963ef488199c4084c21f9a092fa6f34421e9dbbd5c922fbfc",
                    "sha256:de1647afc371449836472161f21b9f36767a38703046224416dded14f6f13313"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:31.610119274Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.489612478Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.489612478Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.489612478Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:59.169460718Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:27.26530017Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.260481167Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.260481167Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:28.272134602Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.288060379Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.298720268Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.298720268Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:28.767164129Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.87896795Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:31.500373798Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:31.500373798Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:31.610119274Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8035a2675dcdd22d2f54bcd71df2f61dad6a2bc404e641accfc62b56ba19b6bb",
                    "sha256:130a2a67e2c828887dcf93f8371859647bddcacfa2ad0c9a4d5dc1f16a6ea3e7",
                    "sha256:40f4dc8586cc48efbc0d756bddd7dae8aa01c47ec29a765b16c47d475d796182",
                    "sha256:23578f369e4004943c275663a678be856c5228ea4362eed9fd1076437545a349",
                    "sha256:c7c59db0d1ac488382458d2c405ccfce5519b26eb01f1ede36a56ee351fcd77a",
                    "sha256:e8bcb895b2c7cc9a5953688c86ba4c703b40ee91c04949ca70322f7c35b7a80c",
                    "sha256:b106a66ec08db331d2b6415e2bf4a64765a091b9aabff51f8746fc4b11c289c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a5332cdb9c424ba94da23df12268964160815836606047f6a3afd91f527c32f2",
                    "sha256:ff2bbd8080204f80ef3caa7444ec0d2e48793aa51bdef02b9ab43c111f059ed8",
                    "sha256:1a71399ff24ae7ed5329a90a28c944c0e90ca5835f311e921dd99ef116b941c0"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:31.482356576Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:36.198997416Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:36.198997416Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:36.198997416Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:41.350482389Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:07.46870915Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.0694083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.0694083Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:08.078886647Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.087979778Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.117468723Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.117468723Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:08.584141369Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.671534779Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:31.369297945Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:31.369297945Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:31.482356576Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:19aff3418f3f3ab6f60f1347b07da35b2f0ab61208565fb8d630935bdeec3e1b",
                    "sha256:bddb1095036986fe4d79068502259b0a371b3011d0faf82e2ff0f0e908e6cef3",
                    "sha256:5a2abcd1f02c367a221b7e391b69dfbbdef5938a19de94a1d1112f0d201ddf5d",
                    "sha256:5fd5af594ab43dec962c34a24b99506eb89d3b5f049e815e7c9fcaa169512dbf",
                    "sha256:4d0e8e66dd4dbf0be382e2d90fe0bb9e84cd6afc27820ce635179b262846ed8b",
                    "sha256:cdcca36c6fd2a15c7f68e7dad962ee2b959780d79503e70bcaaed28f31f85d06",
                    "sha256:e79d58bdfc8f33606583c9f0fee9d24babf73b761adc4d27a426a64634c658da",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4a485a77153dfd33e394a1d9374e3d89ad8986111eca6172dabcf36211e1bf27",
                    "sha256:365880a26a6f116146170264072cd59091676fdca89224103f9eceaaa3cd9022",
                    "sha256:7a065b4cade8ac9ef38de1eaeaea26901be1003f3f6381e1970f18bf83c98a41"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:57.180108112Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.164308819Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.164308819Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.164308819Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.858055775Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:04.664561855Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.152165498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.152165498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:05.169214134Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.215860506Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.235555071Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.235555071Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:05.715280902Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.826104816Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:57.097271664Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:57.097271664Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:57.180108112Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5fbe060049cc1f0f8c87bb0b04ac43dffceacf667878acb8ec5692983f7053fd",
                    "sha256:efd6a06fb10644f8f9a6b4aed513019336d8cb532352f4953ef2bac33e0c0571",
                    "sha256:bc7b85cd7b33324465caafa981bad31c916f0305407523c684750edaecbf1520",
                    "sha256:60d8d66e0e0a22c1ba06d91045f66b54321c0519dce7ea0f3bb02156d5ac84d5",
                    "sha256:af59f6431bfed89e492837d6a9e0ec285eebb1d00287baff83621e6a9e9e83e3",
                    "sha256:16a57156ff0ec24a802457c19e8af35111359862a029fdf636710a14114e0749",
                    "sha256:d388901cdaf65719d9ea4e305348de0e4b4ab3a968ababeed983f7b04790fc8c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7cb41bc70381ffdb0a87d73d87821f42baaa55d0c74f70cc152923425899577d",
                    "sha256:6ffdb1a27105606297b78d2a650c0bfcaf0c91c8f46269d4010a0d6b71f17eae",
                    "sha256:d421078647c4d5b90bbb1ee29abf87b4902a3a8d42c695c51eec50bf055f0c50"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:21.914100486Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.300493645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.300493645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.300493645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:20.735261494Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:46.331203729Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.177253819Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.177253819Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:47.185949821Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.193531603Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.224583708Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.224583708Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:47.723362194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.806799338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:21.835431201Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:21.835431201Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:21.914100486Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:b75b8ffc576c7a07d9a162669d383116635bde8867859d4a176ae31374d42de0",
                    "sha256:0dbf009533e194e1f67e5bbcbb65c4057dfb26990a77c335b3f08ba9f332e01f",
                    "sha256:f4b2ff5e49184e0e9f9159dbe9ff927229730f3000ee09d9d85c312b7569700a",
                    "sha256:a04cef2cb7573d2b987619bb6f5ba60274fa7d459c5fbbafc88d64eec7367ff4",
                    "sha256:3aec3e290926a2ba6e809f4d327d412bd8bdadb8a7aaea42ad176f4f1e33744c",
                    "sha256:d1e53c45c0dead4dda725a6fdb9051caa159e470c1fd2553da2c761cac196856",
                    "sha256:01e581b73bae40496a9f4cb5fe98c0c7b229aea6539e5337539f8c15e9df823a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ebb061eed61bd11653594e814d77e78e20bfebaf0ef35cd4e46291dad0fd4cb",
                    "sha256:05aa86cbeb921e7c493e23f6efa5433620b4636a6000ba4666bc82e1cc38505e",
                    "sha256:9ba0ab7a2ede74f038277703b1d9da5ebcf50ef772225984057b875ab81d214f"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:16.571829175Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88489769Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88489769Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88489769Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.081831725Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:28.560332754Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.532078596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.532078596Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:29.541295836Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.585552891Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.596150637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.596150637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:30.03906388Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:30.138638463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:16.48265725Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:16.48265725Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:16.571829175Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8612c4245e6da33b34db157add4e185506c3003c4724329366b72de559f69ccb",
                    "sha256:b7cf8287e8b3460ae5232b83c170be62d8a6c3748b11e0f017bba2483f7e3b95",
                    "sha256:4135d1758bba4fecc0d2fb00fff210086969ae82d5ab1ef81275111196082bcb",
                    "sha256:69bc67a142eef08f4e9c0e64a09aba1e31fb34aa4926a88f262fe7b5395c4f1e",
                    "sha256:476b7477ad56af9eb293d5c39668b189c76f3e25e5e0661b896601caf8bfe058",
                    "sha256:0f64208f780e059705384c768aebb083ec32257f6cf9c1923c631aa70a4fe2b7",
                    "sha256:8c3c22aa239a2378e9c16c70a16db2a87df452a608747929b2550b7ea33febf6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ecac496bf8947a3c12ca3b526916691b4bc03c78a38d191d1d644439ba29e6f6",
                    "sha256:323221599140b141fd0e4c36071b66bda002f461ec8ab54252f17eb0e73be8d9",
                    "sha256:4335a278a10087cba6bcb3bdd09f9786916c874e679af8d2f50d22fa7706e53d"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:20.253710133Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:57.103265546Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.036391323Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.727202158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.787711772Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.267936765Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.355977086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:20.166566455Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:20.166566455Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:20.253710133Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:a264368fabf41c94c612dfc1e615c7c3952e42044c41d4f7c76cd53f22e58d74",
                    "sha256:f811d8e87538a57c0abe61204627fd9e23db874378abdc62087a6e595c9e1432",
                    "sha256:9a95d337373efbb697e3e394385c86f2429ec4152e79c9f92ab9800876f913fe",
                    "sha256:589eb99b49b3fc04a8f1be9841e2c861c5e81754b95f49adff7494febb665654",
                    "sha256:16934b278b1a90ed578ab30b22c1a8176889ebb4519e7267e4554a0fc22e55f5",
                    "sha256:f19898c5dfeb605a4beed27bc8c08a79066a38e764f19623313404f273ae103d",
                    "sha256:7dd6a2967ef7e83f5decafa31195534eef20d8eee29d71ecb76752c274248d37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:022561cb16a0979e8a40bd35fcfdcd60999e63cb52c05acc9c07872624ce8089",
                    "sha256:ec9d187ff0d4c1b963ef488199c4084c21f9a092fa6f34421e9dbbd5c922fbfc",
                    "sha256:de1647afc371449836472161f21b9f36767a38703046224416dded14f6f13313"
                ]
            },
            "variant": "v8"
        },
        "3.13-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:00.466329901Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.466329901Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:5743a644e82696e3a23e5013b92ac3a3da2eabea4355bff22ae4b34d3ff0749f",
                    "sha256:f024ab410abd7864e6c5330b477b6aa3d1487d7cb6da33d7fa7bed1ba04c74f2"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:07.236401634Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.528797628Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.106355174Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.11375246Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.699294455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.800488145Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:07.120265485Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:07.120265485Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:07.236401634Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:b62835df51dd17f551e5538a1a65369c2badbaebecd4871460056c3f30a74e2d",
                    "sha256:51d1631aad6fcb12c7a95975a1d754caa377d9f92074b7171de6f25bc4df1e76",
                    "sha256:370de0a6a18146f05fe3af7702c1963191c47c89e416faa0dd0c271d311cc187",
                    "sha256:4dceee5c6b96c57b40464bc652e1b0fa44b453ab8fa698d8b994520a79d0e493",
                    "sha256:836aeb9c5ef44d4e6b1db67b81a65c4c1424b9db7b50226b3ebea6f4da858749",
                    "sha256:6a5346977bbbf75ab5679d985947f09c73624cd174f63f109110fab7f56f32a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8983bbf1524c5824bc5b97f3823ca0ff3f5f9dd650318512fe161f3f2104362e",
                    "sha256:10b67bec544c8ce6e7562f28ca85807fdfb41e9fbd97eeb434f8485b770cb44b",
                    "sha256:61f47a2db6a7c6fee8e0adc623a61d29f0dbd53eac03706c9fbbc4c01d763b7b"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:32.081510838Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:56.863685878Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:57.762114286Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.770943526Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:58.441174747Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:58.5371236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:31.948592863Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:31.948592863Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.081510838Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5eb3c4bcb7cfa011d00506b5ffef6c31a67c2dd3f9382056d560331040ad7eed",
                    "sha256:7e1e7b0b5a28f5848b430224ebe0503c4b7b4c25b1ae65b6ea27ffdd80986aaa",
                    "sha256:f6a43efe761ec6bef274c134227dedad927c524a075de18e1b172437fb7fe3ec",
                    "sha256:29c6273356158142b44074613128eba1ef149d60f0b0890650660b32adfcc1ac",
                    "sha256:0ae563fac5351053d1806e699284bac86a46da101c3848b206f373ec16ee9e58",
                    "sha256:fd45a2a0be2d1e15e25f55a5c53af796199bbe8e6bf17fda1cff0686a61236d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c81c53057e2f507ba45a5426b445dea2fe197ede7b8f345b16b55d1ce0684c22",
                    "sha256:5261de446647de0ff0ac957693f75b53eef8468787722489f118abc3100f823f",
                    "sha256:2a587b25edd884360c45cacbe0aafa319a9859b157f019b4ff4567a1cce812c9"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:32.871979593Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.834301143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.292180121Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.311403856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.813877508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.902838866Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:32.79213074Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:32.79213074Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:32.871979593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5fbe060049cc1f0f8c87bb0b04ac43dffceacf667878acb8ec5692983f7053fd",
                    "sha256:78b0c37883cf908621b19db1f0aa69ab605bd8c72823a37903584a1ad93bc151",
                    "sha256:2062f4b9c8a396c6d1ddd1302041ada9cf7ca917cdfa1e844583ee441744607a",
                    "sha256:13f3bca77808d9795c6eb3747d970949ea75fafe78eeb966ae0d42ad38264ad3",
                    "sha256:2b5d4db0676f79866b856a362ddb734a2795389c411ae84b285299af703690e2",
                    "sha256:85cfec31723270db06ce718c1366fb8bf149379098af3289d1a229cf732a0771",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22701552b2d556b0e105a4b70aa7ffe8b55756f15db7934582b8526e6e313dd6",
                    "sha256:479d80143097df2a002a14570976af70c8d699016629bd54c3282554b704b479",
                    "sha256:a0a81ea18a1f8be03a927d24d34782d20283b502812199567ecaf5dbdc199173"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:50:57.8016414Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.275486556Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:06.753597894Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.788060646Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360005546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.448097006Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:50:57.722479741Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:50:57.722479741Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:50:57.8016414Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:d3b394049c09acf9487f922a916d6bbe543cfb3ff82424f1841c575c05416fcc",
                    "sha256:a0b5919752f68e73e13389d0b9aeee7fd528c209c6ab0371399bf00004003c93",
                    "sha256:a5f763b40029663bfc55a676b801db80b2681f40747e5e2916506d5964206ac3",
                    "sha256:00ef40b9017cfdb6983e571c7647338267b28ed2bd3cecc7e2eac40707a2ef66",
                    "sha256:310c0d80b732f333f7707a99d95f10485388043f201e0c3a7f22a0272501fc8e",
                    "sha256:7b035d07c22c1c94d655e187fb41b5f33bf7e12766d684ffc30f261a2e22f6be",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ff5a48c298e404afe8fffeaa3ce35e0d0ea70cf52b454b504bb74316ec8db350",
                    "sha256:cac871436c4e75d169d56b5660b7daee2ea6883c18ca81a530f90ae1e46578a6",
                    "sha256:ec50a3d846321ebdab42a86643ab0d61834c68d7f58d274639cc3ba630cf1966"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:11.288457229Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.093715176Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.989331351Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.997095499Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:56.473201897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.581648639Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.212038432Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:11.212038432Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.288457229Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8612c4245e6da33b34db157add4e185506c3003c4724329366b72de559f69ccb",
                    "sha256:acdc2d6c29cf2394d2a14e5b4ab6f0729ee503890c8509c0bed21eee53cc1d22",
                    "sha256:6ac9b958a6d5bd47f46163ac332f0473b4ae1ea1072dd8d2415edd4f8b26d6e2",
                    "sha256:a97fe0538c520f1164b2e6fbff130ce309c2cc24a670b53827667b4f360a1102",
                    "sha256:0ac027e6cdc5c005f4f0f93c74da7b3f741c27bed2a6f37790ab71c254502720",
                    "sha256:e4897c27aeddfa6e623ec01d98ce2d1e040808902869115b7256d7a1eeb2e9c4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b03ba8359c6e7a9f3710b2fa3f0692917fe57a2530c4efc5c7f70a311399368",
                    "sha256:8917acfb0f732ad191e4f449ed46b655f81328ffe12bcf20c67a0fccc2b0ac99",
                    "sha256:22067367d44b720c50c8155269565ddabe7e50891dc9fccf748ee5ad185c9b1c"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:00.466329901Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:00.385934921Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:00.466329901Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:5743a644e82696e3a23e5013b92ac3a3da2eabea4355bff22ae4b34d3ff0749f",
                    "sha256:f024ab410abd7864e6c5330b477b6aa3d1487d7cb6da33d7fa7bed1ba04c74f2"
                ]
            },
            "variant": "v8"
        },
        "3.14": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:02.520959455Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.520959455Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:c30fd20dfd088faf5a930a874ac18504d376c026a1580405df8c73b972679b77",
                    "sha256:13b8e7b9dedcb1daad4dcf74525aface1cd60ad3308d33f9a99638c10dd09286"
                ]
            },
            "variant": "v8"
        },
        "3.14-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:11.135403683Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.418566901Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.841920283Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.850244033Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.319754213Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:51.435156183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.022245451Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:11.022245451Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.135403683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:dbe9aa81b9052a0a1d464eb0978ea756cbf66fd127ed18a7f6e388469fc053ab",
                    "sha256:9330db15193cf28ae6da8140c96a68726e45a624924e425f913274fbf45b0779",
                    "sha256:4a0a1ce73e81974250b996f31eb443593cb2b3f68544822378f529bd8245f762",
                    "sha256:34ad31bcc05e107cf3ad401f69453826e04677109bb1c518039b0e10d6b7c13f",
                    "sha256:6dc548d9319b468480e2c1a55b32c0fdc917404875bab8c1a917e43b92a3522b",
                    "sha256:a3484f1fb3fbdfdfd19401893d7561c4ebbf2f2378a4f77f3512ee7672b0f03d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46ef77d5c06fd317892cfb35090082458fec1fe16bfe40a3de6f83ab89654df6",
                    "sha256:675cb19c69046f3f9d8d3d2959922a31213fd7542ec9f13964f9d8023ba82fd9",
                    "sha256:e65c662a1ff1e6842ae19939a31475447ff534083d7223289265429d30bd8511"
                ]
            },
            "variant": "v8"
        },
        "3.14-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.570598977Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.282490291Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.176257511Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.185562057Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.909143713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:55.02138485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.447982643Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:29.447982643Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.570598977Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:9ef7c6952d9cf8db1bd83fc80ab71d71cc0a1ca1a6db04e54c136092da93d0ad",
                    "sha256:b1a92b46ecd2ed6082ae17094e900f649bcacf7f279707a2e58829ea579cc514",
                    "sha256:09cb0a63c8617d64d6d1a853a455d14af59c554c999096649ad5e12e6254318c",
                    "sha256:1e7afa1f8af8446cb87b4955b2d60dd9f37c886fe41efbc692d92adc7439e1f2",
                    "sha256:70787d6742b03deee653f079b8b6a65837ea5e35a2af5d0d66618b94873370d4",
                    "sha256:6868a578331f6033b1879542e01952b06e5c20d0e22e89372eb5cf45c8be9e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b0f4150ad57aef2046e51155118260f4f5f6da7398f5b5c79179898584515326",
                    "sha256:383362f013f2287befcf93f92f21348d37e4c0d8fb6e140ffb25f5b49338b55e",
                    "sha256:831e17cf0cc295203d5a7c4c1e1c41febe883a844e26f8f964c78713e625e5e2"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:40.107164247Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.258730022Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.147742376Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.187483495Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.65150525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.752429636Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:40.026376154Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:40.026376154Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:40.107164247Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:1123baef93b38bec742c638af1a98568897a3b2bf9f8793a50f51e80bdb37002",
                    "sha256:d60b65741522ee713ed1000d9f908bc70b5717bff9d6c2a80d196c1ad6844b6c",
                    "sha256:d68a3d9c29db65ac346134f44d5c58956ee121966d391eb0a9df714e1fdeb15a",
                    "sha256:f3c5c7e591c77dd3d3b2cbe61d5996930accf22ad3d6e0f5fc9006e0880ad6e2",
                    "sha256:1878ec63542dc70febb473b1d8d27d1d7dad7e07dbff97c1a3e9b1f6ba2bdf31",
                    "sha256:ddef8bc06515f2d3e7f2a213421666b41cce48d447257621bbf0b381ede01813",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46cc807e964d723a32b01a3a179148f57552041464cc17ea1e2301dfc7552f9b",
                    "sha256:f04fb28fd50d8712a7297bd1cdfcd55a53d762d4a1421a7a2780f563bf82f1ac",
                    "sha256:2504105838cd2d002abc1ac4b06fd900876df23cbf1d499d01a8fa6485a1dead"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:11.368836676Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:10.639226678Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.227773848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.267891501Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.761523927Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.848943859Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:11.290042994Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:11.290042994Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:11.368836676Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:bb74e7471a678f340a4554a2ed8900d2aa7c87197d6286c749eedad02379c60d",
                    "sha256:8fbc34a55a8b4fe5fc12ac2c110bf2225ad6389467ff7eb328bb026c39b80002",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b12139ae1b2072c814b8d50eb226161c1279b867a4cb4cdbf40bfb411d04c65",
                    "sha256:a74671622f1517fd6cffb7fad2f642d5e4d5577dea4446e011d12a3ab2891e64",
                    "sha256:298f7f74fb8deb1d9a16e78d038cd6b9a6e23d24781aa7f92ec16318c6cec530"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:14.237865451Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.309081373Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:01.877688088Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.887166317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:02.371110918Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:02.459096485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:14.158938626Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:14.158938626Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:14.237865451Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:3c55492053b115aa2e1d424ad228bd17d034b101be03c97dfc814a0e853ff8f4",
                    "sha256:7460907b41f9518562b95e86e55dfe30e58fbe6fd5d6c70874efb5a25de5f7ff",
                    "sha256:332ce1aac2561b68d72229b0f7a17470bf3b4698e836acbfff1fd673cecfe418",
                    "sha256:04a00af8dcf481c7df6da66f3ec43a47419a1c42865d1c8925b9ea063abf7c89",
                    "sha256:5d7bcd3447c16053f1889cb4ddd5ba212cd202f4965a7c293a9afdfe2bd5cfa4",
                    "sha256:213e5bee489cb7c2f790dbbd361cc10040916dfe4255b4bfd673c1713a963256",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b51be10095cbd5634f1889197d5135de7a6710be707ea4b795ee79e9cba70bc",
                    "sha256:23e527b7bf16f5c4a15cf5e449c50c224cf03b245eb2669382a8ee68739ef20b",
                    "sha256:638e9f045351f082a13ffbcb7beedefdd2c5935df8a0b29087bb634e99981520"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:02.520959455Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.520959455Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:c30fd20dfd088faf5a930a874ac18504d376c026a1580405df8c73b972679b77",
                    "sha256:13b8e7b9dedcb1daad4dcf74525aface1cd60ad3308d33f9a99638c10dd09286"
                ]
            },
            "variant": "v8"
        },
        "3.14-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:08.282823041Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.082174906Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:16.972560389Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.442445373Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.490909943Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.974591815Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.067947167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.19826452Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:08.19826452Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.282823041Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:42da25a692484966fef2ec596bbd5a6a2b81bb3dcd0d04ed42ff4fb87a881dfb",
                    "sha256:64029f4bb13fa9c659fbace7a3eecf2f1f9bd574fda734daa1e31540039ee170",
                    "sha256:403fd43c518c27d3fc51eca6ec8cd4a6f551114a9e69a61ad495e5ed46916c86",
                    "sha256:a9d1e018e75f7d41edb87fa5431d84070d550afdf1c14ca840d1a0a37a10956c",
                    "sha256:fb46d0fda68d8993450254a1d779659bd4b5df890d844e38eb1f7f6eb065cd4f",
                    "sha256:002debc8cf76566e99d826bf8e26d278747ab3a60e5362e8b6353f270f9d8936",
                    "sha256:1a3d8745ad43a06257ae41df248daf070f72ba7052f9d29724392195c09eb7ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:315861aed57c5bd31c1fb91554392b4b7af360815657c7c31c3ccd7cb5eb0fe0",
                    "sha256:68a19840ac2f33adce76fff0d9d2217f6fa248a0e58b9d00709a1b7d3a1eabab",
                    "sha256:a890f9f0754311916aa7dd45c7bd0263fd1e3958e13c7e03738ef9aa06730d55"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:18.139947589Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.220863708Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.220863708Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.220863708Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.414816882Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.882183603Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.830792969Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.830792969Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:26.840677176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.84966869Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.858474028Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.858474028Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:27.343870973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:27.44585044Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:18.01970872Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:18.01970872Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:18.139947589Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:093441866ae783b9b52b9b5b5ec156af88a342de55f6ce992d104e245ee35dfb",
                    "sha256:6dd867e043ca446402978f49ee692a078bccfa99243fd974be791d8853304580",
                    "sha256:98f68e90d640857319c2c2cffe1eb197c0721649fe0473023b6811d4a6334022",
                    "sha256:6139d2f9040f1e4ff4cab562b3f321cdce87e6447f826a62bde8a82a109f7542",
                    "sha256:f5f28bd07cb57acc989d757c13f6f3d6073a7352c655a8bbc88d5fc1c00c5524",
                    "sha256:cd5bb0262acf9decee4e4076d600eae448e052888da796aacef90b20a69d01e6",
                    "sha256:69dbf947051b0e390fa0c8654ddf28c2921b7da5a79f70851ee4b1be5fb0ed8f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a6172ee77cad90379fee032ac5f4a426573805123db475194a88a844d3c508f0",
                    "sha256:19344ef0005e7ba85095bd59cca95ddd15c3d4fcaf0a8d108bdb28fc408cebaa",
                    "sha256:542629891754502f17161fbcbb7ae7372a4fed1c037acde99df285569ea010fc"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:33.968012623Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.582155574Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.582155574Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.582155574Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.258115499Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:19.299006014Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.202325737Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.202325737Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:20.212692071Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.225190049Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.235400859Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.235400859Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:20.737276594Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.828384292Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:33.837282843Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:33.837282843Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:33.968012623Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:b92dcd05acba47e39ae919900d926371001963f8bd2df7671c0725a601d9eb34",
                    "sha256:abcf1f01fed69bdcb257285af4ac7d605078701f3720ef33d5a60a046e6710ef",
                    "sha256:a5d149ed2cc2a84d8a80b7c377134c3e57ed521e56ad95d820de843c2f6e20d1",
                    "sha256:c03b44aa7a864c2d27e76f93a79cf65fc54f9afa935a05374bb40da616145c7f",
                    "sha256:2bd8e4125ab9e9b64b59709e13031cf40dfc1df9340bb2b6aafd550b0b605035",
                    "sha256:abdcfe4b142f166d761d598e56d6730dd79284e69887d00ce3cb97f4b7479a95",
                    "sha256:8a96c80c4324d10ca5371425356fa01cb0219ab1484115f3dba3ecac7da40b74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:358e5b6c02107fbcba603aeb458647d9ea49f34c5cafb04f62bcfe6d0c236b83",
                    "sha256:d988219682ba2d41d0effad0227ce94f2409e5a1beb7f09f7230e42c155e9c09",
                    "sha256:cb35bd77b7b4c130686e7cf5af7b660c0e27375c2b8027727c17eb3f9bdac42f"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:38.8243746Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:52.243860043Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:52.243860043Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:52.243860043Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:00.914123938Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:49.33021943Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.326340477Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.326340477Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:50.3358527Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.344620008Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.392150407Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.392150407Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:50.866060141Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.954912633Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:38.747453797Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:38.747453797Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:38.8243746Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:a4cba162c8454c69db0173d74077c498270d7f6c351090d0762e20fb3442574a",
                    "sha256:5bb78ef3587cb0554c1c507b61c89617c192225e4b5272f12ef22d11a5890156",
                    "sha256:a2bc8900bddcbdf189d4fe235305abd03be51b8d24319127d4c68273140e34f4",
                    "sha256:baee141e05888940f4df3e3e40ea41f49f96eaa4132b11a24c722a6ba352a390",
                    "sha256:e7004225e72858bdca55a764767bd89308d55c4d94d50aef4216c851ae41a692",
                    "sha256:d2ca484ecbf5f53c9f23a5a35fac420ae4531f1549438b4608cd7ee8fb48bdd8",
                    "sha256:b58a354aab490c7c682904410b54020a54972f8b09c17635a4653f246fe7702f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e7bdb98643db9164fb0c88b77448b28563b0c3de6556dc31b775d9c51202f161",
                    "sha256:51005af1d954f299ddd3b9f6d596fc31af1a5c797e39c5be2a9f0482439e38bb",
                    "sha256:611b1d16cf8517e5f70ffe27970800d164eb1721ac36b558755fc3429f37f715"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:27.742666349Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:10.513654264Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:10.513654264Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:10.513654264Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:14.031920577Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:37.943621798Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.608504194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.608504194Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:38.617752414Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.625660525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.661298785Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.661298785Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:39.129019046Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.217643554Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:27.654917712Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:27.654917712Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:27.742666349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:163ae3218880f004692200373b988197c9035b0aa2bac8a3c66b634b366a4c3f",
                    "sha256:589640d8c57c4cf67c46582f8b3227aaba17143c79bf05064e3c8deb288af09c",
                    "sha256:b47f31752d1747d519e1a181e9c7a16831b70dfcdb324f83d41976ea6de595b7",
                    "sha256:70a18c1f5e8ce8543f63ce45d1e1eb90f91d8c665fc494332f405232c5a3da89",
                    "sha256:1ff4a1e1995f113b33aa7fccf99015fd499954186df610a3a5f760a4eaf346e7",
                    "sha256:25ab5f4511b7ee861197dda8683b6c7b0ec63010fb9810185004eb3f1b8f2be3",
                    "sha256:30215ec399064513824612efb8480520ea87e260fa85ad38d841eef269f6fbee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9759a04c713802c545c93dbabd145dd650a16a1da949c0f19692021cd42e1bf5",
                    "sha256:79dc98c2a7e969d333f16911ab864bbc88e6c349091d7f77bc3d517f72b3eb09",
                    "sha256:2a77d61d8f3b197bdbcf987daf1062227636c4de444a46e6275ee103d1707ee4"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:21.411010879Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.5446413Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.5446413Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.5446413Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.713630548Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:28.96351244Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.811031557Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.811031557Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:29.82264323Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.830745153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.861635397Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.861635397Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:30.397049633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:30.48055084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:21.337989502Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:21.337989502Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:21.411010879Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:cf3b204d96fb43182af2a6bd042b54a63f592b824a204b683037278e0efee7c0",
                    "sha256:1e020fd2d92b063471a5fa16393a110cc4b4caff9140cde8d86bde3c21ab23fd",
                    "sha256:1c3ee301576e45c6827ed96e2e43083ffb28e5c1ab70a60a90527806f2c61b93",
                    "sha256:169743540f4e7fdb9b4cbac5b0d4d8c5662a1b8db533ad7ce19ada41b9a9c145",
                    "sha256:a6538c7a0f6d08cd203d773030e32a8fa61e892309d389acb3b1ce4197ed1a2f",
                    "sha256:1a1329b39a28a3106d31cc0323835ad7f9a612db4f86f6cbb8b6dd967c5322f8",
                    "sha256:e10a212e62a0a241d8e3e13497efc08ec0f9b08e663d3c0cd825201ad41d282a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9352628b35def1a40155b787975acf4aca5bdf98560aaf40d82347b9f6d83134",
                    "sha256:4ece001188765d435dbc763a69935dd51ca37edd9df99c114308e91a827ccce6",
                    "sha256:40c5e7e321123f301ff2bdf6938e2444cad220c07df5191c9e350473f9521590"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:08.282823041Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.082174906Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:16.972560389Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.442445373Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.490909943Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.974591815Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.067947167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.19826452Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:08.19826452Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.282823041Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:42da25a692484966fef2ec596bbd5a6a2b81bb3dcd0d04ed42ff4fb87a881dfb",
                    "sha256:64029f4bb13fa9c659fbace7a3eecf2f1f9bd574fda734daa1e31540039ee170",
                    "sha256:403fd43c518c27d3fc51eca6ec8cd4a6f551114a9e69a61ad495e5ed46916c86",
                    "sha256:a9d1e018e75f7d41edb87fa5431d84070d550afdf1c14ca840d1a0a37a10956c",
                    "sha256:fb46d0fda68d8993450254a1d779659bd4b5df890d844e38eb1f7f6eb065cd4f",
                    "sha256:002debc8cf76566e99d826bf8e26d278747ab3a60e5362e8b6353f270f9d8936",
                    "sha256:1a3d8745ad43a06257ae41df248daf070f72ba7052f9d29724392195c09eb7ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:315861aed57c5bd31c1fb91554392b4b7af360815657c7c31c3ccd7cb5eb0fe0",
                    "sha256:68a19840ac2f33adce76fff0d9d2217f6fa248a0e58b9d00709a1b7d3a1eabab",
                    "sha256:a890f9f0754311916aa7dd45c7bd0263fd1e3958e13c7e03738ef9aa06730d55"
                ]
            },
            "variant": "v8"
        },
        "3.14-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:02.520959455Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.520959455Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:c30fd20dfd088faf5a930a874ac18504d376c026a1580405df8c73b972679b77",
                    "sha256:13b8e7b9dedcb1daad4dcf74525aface1cd60ad3308d33f9a99638c10dd09286"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:11.135403683Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.418566901Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.841920283Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.850244033Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.319754213Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:51.435156183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.022245451Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:11.022245451Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.135403683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:dbe9aa81b9052a0a1d464eb0978ea756cbf66fd127ed18a7f6e388469fc053ab",
                    "sha256:9330db15193cf28ae6da8140c96a68726e45a624924e425f913274fbf45b0779",
                    "sha256:4a0a1ce73e81974250b996f31eb443593cb2b3f68544822378f529bd8245f762",
                    "sha256:34ad31bcc05e107cf3ad401f69453826e04677109bb1c518039b0e10d6b7c13f",
                    "sha256:6dc548d9319b468480e2c1a55b32c0fdc917404875bab8c1a917e43b92a3522b",
                    "sha256:a3484f1fb3fbdfdfd19401893d7561c4ebbf2f2378a4f77f3512ee7672b0f03d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46ef77d5c06fd317892cfb35090082458fec1fe16bfe40a3de6f83ab89654df6",
                    "sha256:675cb19c69046f3f9d8d3d2959922a31213fd7542ec9f13964f9d8023ba82fd9",
                    "sha256:e65c662a1ff1e6842ae19939a31475447ff534083d7223289265429d30bd8511"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.570598977Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.282490291Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.176257511Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.185562057Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.909143713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:55.02138485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.447982643Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:29.447982643Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.570598977Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:9ef7c6952d9cf8db1bd83fc80ab71d71cc0a1ca1a6db04e54c136092da93d0ad",
                    "sha256:b1a92b46ecd2ed6082ae17094e900f649bcacf7f279707a2e58829ea579cc514",
                    "sha256:09cb0a63c8617d64d6d1a853a455d14af59c554c999096649ad5e12e6254318c",
                    "sha256:1e7afa1f8af8446cb87b4955b2d60dd9f37c886fe41efbc692d92adc7439e1f2",
                    "sha256:70787d6742b03deee653f079b8b6a65837ea5e35a2af5d0d66618b94873370d4",
                    "sha256:6868a578331f6033b1879542e01952b06e5c20d0e22e89372eb5cf45c8be9e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b0f4150ad57aef2046e51155118260f4f5f6da7398f5b5c79179898584515326",
                    "sha256:383362f013f2287befcf93f92f21348d37e4c0d8fb6e140ffb25f5b49338b55e",
                    "sha256:831e17cf0cc295203d5a7c4c1e1c41febe883a844e26f8f964c78713e625e5e2"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:40.107164247Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.258730022Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.147742376Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.187483495Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.65150525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.752429636Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:40.026376154Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:40.026376154Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:40.107164247Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:1123baef93b38bec742c638af1a98568897a3b2bf9f8793a50f51e80bdb37002",
                    "sha256:d60b65741522ee713ed1000d9f908bc70b5717bff9d6c2a80d196c1ad6844b6c",
                    "sha256:d68a3d9c29db65ac346134f44d5c58956ee121966d391eb0a9df714e1fdeb15a",
                    "sha256:f3c5c7e591c77dd3d3b2cbe61d5996930accf22ad3d6e0f5fc9006e0880ad6e2",
                    "sha256:1878ec63542dc70febb473b1d8d27d1d7dad7e07dbff97c1a3e9b1f6ba2bdf31",
                    "sha256:ddef8bc06515f2d3e7f2a213421666b41cce48d447257621bbf0b381ede01813",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46cc807e964d723a32b01a3a179148f57552041464cc17ea1e2301dfc7552f9b",
                    "sha256:f04fb28fd50d8712a7297bd1cdfcd55a53d762d4a1421a7a2780f563bf82f1ac",
                    "sha256:2504105838cd2d002abc1ac4b06fd900876df23cbf1d499d01a8fa6485a1dead"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:11.368836676Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:10.639226678Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.227773848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.267891501Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.761523927Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.848943859Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:11.290042994Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:11.290042994Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:11.368836676Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:bb74e7471a678f340a4554a2ed8900d2aa7c87197d6286c749eedad02379c60d",
                    "sha256:8fbc34a55a8b4fe5fc12ac2c110bf2225ad6389467ff7eb328bb026c39b80002",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b12139ae1b2072c814b8d50eb226161c1279b867a4cb4cdbf40bfb411d04c65",
                    "sha256:a74671622f1517fd6cffb7fad2f642d5e4d5577dea4446e011d12a3ab2891e64",
                    "sha256:298f7f74fb8deb1d9a16e78d038cd6b9a6e23d24781aa7f92ec16318c6cec530"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:14.237865451Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.309081373Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:01.877688088Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.887166317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:02.371110918Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:02.459096485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:14.158938626Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:14.158938626Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:14.237865451Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:3c55492053b115aa2e1d424ad228bd17d034b101be03c97dfc814a0e853ff8f4",
                    "sha256:7460907b41f9518562b95e86e55dfe30e58fbe6fd5d6c70874efb5a25de5f7ff",
                    "sha256:332ce1aac2561b68d72229b0f7a17470bf3b4698e836acbfff1fd673cecfe418",
                    "sha256:04a00af8dcf481c7df6da66f3ec43a47419a1c42865d1c8925b9ea063abf7c89",
                    "sha256:5d7bcd3447c16053f1889cb4ddd5ba212cd202f4965a7c293a9afdfe2bd5cfa4",
                    "sha256:213e5bee489cb7c2f790dbbd361cc10040916dfe4255b4bfd673c1713a963256",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b51be10095cbd5634f1889197d5135de7a6710be707ea4b795ee79e9cba70bc",
                    "sha256:23e527b7bf16f5c4a15cf5e449c50c224cf03b245eb2669382a8ee68739ef20b",
                    "sha256:638e9f045351f082a13ffbcb7beedefdd2c5935df8a0b29087bb634e99981520"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:02.520959455Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:02.449609604Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:02.520959455Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:c30fd20dfd088faf5a930a874ac18504d376c026a1580405df8c73b972679b77",
                    "sha256:13b8e7b9dedcb1daad4dcf74525aface1cd60ad3308d33f9a99638c10dd09286"
                ]
            },
            "variant": "v8"
        },
        "3.15": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:08.57545872Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.57545872Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:506c7afaa239a2e7d55c392655788d57aec0a250de2cbefc2e29cb315065393b",
                    "sha256:e63057ce197ee4af5581ac3aec56c283f9e0a3160e30a6f8a08e168bb3590fe6"
                ]
            },
            "variant": "v8"
        },
        "3.15-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:06.676426796Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.622574097Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:55.529995888Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.542542258Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:56.147992128Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.288576521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.558438118Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:06.558438118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.676426796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db5a7c9fd1180fd2c6e4a2a1002014b019b8132bae3dba623cf8057aa16f0394",
                    "sha256:7396b7916284ae4a3618ab7d64e1f16a86747a8f846fad6d55bfb5944dea2f88",
                    "sha256:d616dba19a7b71117a8c7eeffd0112c8992c80437c72c1d1a833a66844dc8721",
                    "sha256:e4cc72e0480d8e263b3e3a80a7acbf9459e5b1d2876420a5b39139df40602007",
                    "sha256:5d339741851b95aab45ce74a52fd269110d6b5e6592a307246bbea8d05a815b1",
                    "sha256:7aa69c0759e29a59047c0da597eef816587d5b87149b7bd179cc51fd6db1466d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21856899e044ee57698bf3e9ebcc27a0b63c0e241d012718d9b7a1f776aa9e8e",
                    "sha256:d29d3de1c24731e2737f9b52845df6950e19b7454c3efd8979230f4744e199ba",
                    "sha256:ee2af6615e4a3b6f6b2636aec3b3aac8d506b94bd7f85e52d645fa7b3dc0ccbc"
                ]
            },
            "variant": "v8"
        },
        "3.15-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:32.727131002Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.277226143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.051735239Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.061515158Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.571789044Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.721670084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.612911276Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:32.612911276Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.727131002Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:a9cc6b86ce8c8c8d671f5471379e638ba7d54ff2d9ef224ae462dadc5e210a36",
                    "sha256:cd88b41bc0abbdecadbfa0bac7040e0c9e74b46ec0a69cd95b46d7c544e547af",
                    "sha256:6221f3f1be26dd3d60741376b12a6b51fa07870cf65427be5ca8c61cfa4df608",
                    "sha256:66f83629a2fc69de35db566234f1b6ca28f45f3d8713cb1cb176b40ac58ff655",
                    "sha256:45da6e81dae3889b2a2a14d84070f2dd6936c4d0e54a5a884dfdebfa9e243c5b",
                    "sha256:7e2f74793f5d6ac7a9bb7e96028fbec37efdd83aa3d9bd143cabbbcf08d187e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a61205938433b75fbb4a353be694ada857b77a3dec40999755411651c481277",
                    "sha256:e1cb5736857680bf19bc7874bcca000b1b21763efc3ae4eafdfc856cb0cc0063",
                    "sha256:801e40bfb8d512d7fcea254529bdc9e4007ba4615f527c5a5fdeaf53176ee7a5"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:33.989276378Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.045873256Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.901847386Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.937867925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:47.550288769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.636405874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:33.910829139Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:33.910829139Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:33.989276378Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db54e0c396ca8293e80818c872eda8c3ccfe1b5ec30179109345dcb8be044c02",
                    "sha256:30f235bb611196a01513ccb15b8f14878eb39cc6b73dacaf5087004d3db72065",
                    "sha256:c380607e42559f69b7bcc2016d11800c416cc20b507b42091048b15c48d8646f",
                    "sha256:3f31d36e77e89394d583c88193f6bfac9132ef5f8fa23d34ae849c11230ac2c3",
                    "sha256:b05a1292425df7b2fb3c5801a41db1ba0aea3756c3af5cc2f39de94c4decbe66",
                    "sha256:4f34d953f2518b5267f2d5ebfc75658d33de8efb3e4db87f83887d72822750a0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94a2fc587078913959a6bd367daafb030c53a19501201f704453a11c2463c4b7",
                    "sha256:7c1fc57e094909e5714892c6f1d02ce3e059b3ee771c9044dd0f9e12e1fc48a2",
                    "sha256:9f882bf528e794d2058f88b3bf1f56ff6e04d755b314045cc7c3d5c0e51560e8"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:17.764320913Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.344677904Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.824559741Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.832411314Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.310496991Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:13.393712209Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.682608364Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:17.682608364Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.764320913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:7865aa16a72ce9494560e4630c3e1460d35c29836633a22f63ef9e57d9bbcf16",
                    "sha256:0b476da29880c714490858dbb8ca0a59c6038ee64ee9f2dde27d5ad718244b56",
                    "sha256:bb88cc70fdd5df8d55a9594f84ab2a5472fba7bf3d5cedb15531dd8905707ef8",
                    "sha256:ef742c5af3085ad28bd59633168ee87a985231e353c50f4355450942d5c788bd",
                    "sha256:c1f4b95fdd84fbc74849411bb7d1585f380a9451d74b3468cac86c4d1328e4b3",
                    "sha256:52aadc0c1195878f7434631f5df9d2e9c707681bb8930edcca8aa8d72ba503b9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:09408b90601c9b2566f0983d775886db7be3904b7fa5e79c597ae2a48f2b8b69",
                    "sha256:7baf84edaa45ee5547e595f1bbdf5c039c954745ecd25cec7efe83a3afdb6068",
                    "sha256:1896fcc8774637acd60e3de9902b33a21e5e160c691c4bb58655d2273f0c6225"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:12.309770074Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.541377612Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.04164606Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.077330446Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.674573037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.76109544Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.229150601Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:12.229150601Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.309770074Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:283f92790975f677e7c3a578f852abe40145bed179c1aa4864db453e0900b0d7",
                    "sha256:93133571da46b8d245c03a4390c6f2098f55435027d9233cfe53dec0143b627b",
                    "sha256:ac88fa80aa3263b2eb8bf2ec0397d82d1c453130f5efc861f3b0219720d95b65",
                    "sha256:cc2872e29e9d8cc7177290be29374063dfab0222e61889ba7235d0ad9327fcfc",
                    "sha256:14f6be3335df7e5092698a74843ee37a0b4614b3e4605c48d2a7ca44704fd0af",
                    "sha256:1243afdcee894015d8c636deae9ea551b62da31699feddbdb91cbaf3cb05a3aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2bad70d869531b756af915e2668a74d91ee53c5368a6c00fc8492ea2c69eb622",
                    "sha256:682f4476368d4e4d7628d3ef01ba2471d05e9f8e054c34e3c7debe0f95da335e",
                    "sha256:6dc497051f7b8935eebca5a53246443c5724b665bbd4b4831baf0a963b1b8904"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:08.57545872Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.57545872Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:506c7afaa239a2e7d55c392655788d57aec0a250de2cbefc2e29cb315065393b",
                    "sha256:e63057ce197ee4af5581ac3aec56c283f9e0a3160e30a6f8a08e168bb3590fe6"
                ]
            },
            "variant": "v8"
        },
        "3.15-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:11.352531341Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.669813918Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.895363869Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.641196241Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.693448094Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.178137207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.290910868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:11.277340111Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:11.277340111Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:11.352531341Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:02d1889898e8ff73199db676f022faca6f9e0e0c85e7e0593c02e659b4cf437f",
                    "sha256:6e7f0f9a39eea1a405196646ef8e896eb2471667cd5d1188512774dabdd54e47",
                    "sha256:6fd5c155a80b5a229cf2dc76ada7c3f9222e4db2c166756822cb262fc3c2d717",
                    "sha256:7665642698974a0f78d9378e3d8e447e922017c5b01051e94b709f04d14060a0",
                    "sha256:dad9952402181795121fe1fc7709a6fb9b421493321d94a638adfe13e3ec04ec",
                    "sha256:0f921f36de69a0e7b1eee7955ff38de36abe4f588d17d6595b162a98128f4ab8",
                    "sha256:d0b6f0b455310b04cd33642828be440d38f900ed86e68851ccd8e60b74c8ac96",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3cba918085edd12cda31f24663dd10577e976b91a6f7e9ee363ccc6a0681fcd3",
                    "sha256:273960d9387b39012e8dc3f1c10611b46c53e4ab8b956157409c1df4f2159d9f",
                    "sha256:8e010db1172d8d168536151c6b359cb6677c42127d9ff7fd2e4095183340fa39"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:14.964149805Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.349424704Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.349424704Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.349424704Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.770340409Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:11.769207Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.434474749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.434474749Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:12.443674604Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.45222451Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.461350025Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.461350025Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:12.945441479Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:13.049425623Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:14.842785877Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:14.842785877Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:14.964149805Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:6ff9cef0afecc235a1fb4339f11a97ec8006f89533f47314eea25a96ef4d1bcc",
                    "sha256:65ec207a39e5b22c05a807a260c8f3c541478798a124203bdd5bb9d75b18b9a6",
                    "sha256:d65ad321df945afb21ab90dd3b27865c2f133b8d0664307ff267e0af0b17ab08",
                    "sha256:12bbff10fd00b52a51197d0f13762ff30a22210e01b79be856fd64fe688fe185",
                    "sha256:07ee2f37e0666f6fc5c39cc68e3f9012de6c6a21e40227a18a9e62c9bdf3fbcb",
                    "sha256:16d4cb065b4b2a9fe90bd27854a4637b3f3d51fe4327e5a342490fefbcb200b0",
                    "sha256:46003efd900833b3c257a0352662afb515c01376b4a8bddb671aec49b290b119",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25d86a69ada53bced87b6a879c6ca415ec265607fb535867fa06f8f09b8b6be4",
                    "sha256:aee3c1638fd457baead3dac73eda81ec52df14c073931ba640575301902dab51",
                    "sha256:c5daf4e56c9335ca7655fea56b2999e4749fed32828b1d423f459b40fa1e0aa5"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:32.477200789Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.115440582Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.115440582Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.115440582Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.168543199Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.116427787Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.967280402Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.967280402Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:11.975394367Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.983217942Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.991280301Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.991280301Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:12.453423502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:12.558811624Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.351815341Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:32.351815341Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.477200789Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:a9cc6b86ce8c8c8d671f5471379e638ba7d54ff2d9ef224ae462dadc5e210a36",
                    "sha256:013cbda468284641c30cf0ccb2fd77b520f9263bda27825eb6f016e754e54c2e",
                    "sha256:92a0882a8c4fc4f7d196fa657e23d3b8db7791113bb043a1124cb88fbea1a51a",
                    "sha256:1c7badeaad471567554d8407916ec081ce21dcf5b4b093b1997152fa5fac5a79",
                    "sha256:54bc81b68035f2b48d84a9bcf5ba4084cdde7441e0141614dae4dd18703807ac",
                    "sha256:35a18ccd4552b2ff575ef145b437c10132e21ab22269b6aeffd0670046519511",
                    "sha256:22dccb2d1f57c7a35bd145638bf1603e4e508e7c425add77be3c50b5215bcc1c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4fb7cf25aa837fd53ea016f0e8d1567a3e7572d51ab7987ee199b6df275e5987",
                    "sha256:fbb821dc03ce108a7ab6f16a6716deed8cc5a4dec7224d889e06fbc9c9d3dad2",
                    "sha256:8d1ceb782acb91c97839aacfb8bbdc6ebe764e8031ebf8547e488c447a9f7edd"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:51.736038606Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.877949978Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.877949978Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.877949978Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.447916125Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.463509735Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.387481646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.387481646Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:13.399162079Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.411823333Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.452962285Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.452962285Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:13.927754774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:14.022653855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:51.653334588Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:51.653334588Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:51.736038606Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:e32c83839d11ce9cbc2b2dc2c77734ff1fff54468616edfbcf336ed6e7bec7a7",
                    "sha256:0c0c5c22cef58b3a5b79c56f763c6280bff57089fd9cc582565f66a823a70c06",
                    "sha256:7ad2a98ba114867091149cdb5dded5f8df8bdb7624e01ea3f2a2c11b534eee06",
                    "sha256:67f8447403f94eca1283869710724c5f0513c992822a04a0cc0523c22fec39e9",
                    "sha256:65881da9e32fa05de7eecd60c15899435aeb4a570f2e1c104173b18184c7a7b8",
                    "sha256:13c41ae409ba5ddabca936465ae0fcc6dd5224b82dc7e1d54014bf0e966b90b7",
                    "sha256:bedb83b18f33242b8f8a9c64286da5facbf4360ce0b1a6c459163024d8014548",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac4ae12bd925b164b062ab4073060ead9f101cc4b6cbedd00100cfbefa4c5fc5",
                    "sha256:9b053ed7b8edbbd9dfafdeab26bf977eba441f72fbdeb35f6f3164eb95221039",
                    "sha256:5aab3b61dde54f6ee56575f4a284deb0a15e743b03045fa55cadd32c5de66e89"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:27.581175134Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.891107714Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.891107714Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.891107714Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:20.415226303Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.576700915Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.556582215Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.556582215Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:48.577450244Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.604098643Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.624029142Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.624029142Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:49.095359479Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:49.184271677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:27.503888821Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:27.503888821Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:27.581175134Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:9d45a0b0a880bdf7660c957f7d0ad666ff18e62ed986c355d4b5d640e25c2370",
                    "sha256:20efd2c128ca783fc2cab64c8ee0007c4c8d254241485cbbbbc80ce3e7e2e6e9",
                    "sha256:5cbc195ab39b9f590bd001f15ec686b171d8aa93332a5c8c01bce9fbba7d19c3",
                    "sha256:d4fd6cd98df5035d2dedf77c0da2395381a73bfd0e481c89a035eb4da1ebec60",
                    "sha256:d477ef382b6df7930ef2b5a1479c28255fe8a23dfd3b6478389c9ff5c7d8661e",
                    "sha256:09aef51f3343fe866baea3c21687fb64be393078b1eba85fc551c8e0ac3577dc",
                    "sha256:6d66b8f0496fb4b006ef14acc5973bb3eb73661c47dc56ce07bd50bab80fd137",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29aa71c999b2f5b4f23c3b7b8064ac1ac9fef0d574d45fbbe7103f1dd8496315",
                    "sha256:8600dcf33026198ac07d0d0a09d8e9734bebe1cdd021225a5c1f2e4282565eef",
                    "sha256:c7a073ccfcc91b374828a0ada003f5d389d8ba0c0686a4ff90cda067cff656ba"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:23.621051333Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.734016754Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.734016754Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.734016754Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:50.580098656Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.055228627Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.677906049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.677906049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:13.687145683Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.736816533Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.746020583Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.746020583Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:14.219915427Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:14.308263039Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:23.538038052Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:23.538038052Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:23.621051333Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:5042c0531e670df1bad6c1e50edb18c06daed1c9967fd7f6c37fc1ca8a1523a0",
                    "sha256:022985e5230e61a1e7337c8d23fe7234cee73bb5901d108d59085d0d57220fa1",
                    "sha256:193a82a9be25950dd08e09c5dc51df1883a86aa7c3d910f07bbe54416fdbcd64",
                    "sha256:e95255ad6060a649cb5dd66d7015f209069a15a33395dfc01e9da1b0941e0384",
                    "sha256:d8fe899b3bd435afe13f60ff326e00f0fb6b7d908614e97cfecc4f35c5efda29",
                    "sha256:2e30c328e43ec1ce2e1738b6cc55cfd6b49e25ebfc3fe1a56664e29e79faa1ba",
                    "sha256:9ea83f538094fde9b982caba23848ae619c4d2e29e38c6c04be9ef1cf7adcdc9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b54b30a83b4adfc4d4b77bc8ae97c1955d16c2663f410283e07072aefd973ccd",
                    "sha256:b0e504ff97ed820c43874966abed11956149cd91a18e5fd3055324151ab76e50",
                    "sha256:2edabf4650f782e27cc6504e764168b0a1bc0eab0d788f3d5281567bbf77dd00"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:11.352531341Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.669813918Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.895363869Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.641196241Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.693448094Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.178137207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.290910868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:11.277340111Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:11.277340111Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:11.352531341Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:02d1889898e8ff73199db676f022faca6f9e0e0c85e7e0593c02e659b4cf437f",
                    "sha256:6e7f0f9a39eea1a405196646ef8e896eb2471667cd5d1188512774dabdd54e47",
                    "sha256:6fd5c155a80b5a229cf2dc76ada7c3f9222e4db2c166756822cb262fc3c2d717",
                    "sha256:7665642698974a0f78d9378e3d8e447e922017c5b01051e94b709f04d14060a0",
                    "sha256:dad9952402181795121fe1fc7709a6fb9b421493321d94a638adfe13e3ec04ec",
                    "sha256:0f921f36de69a0e7b1eee7955ff38de36abe4f588d17d6595b162a98128f4ab8",
                    "sha256:d0b6f0b455310b04cd33642828be440d38f900ed86e68851ccd8e60b74c8ac96",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3cba918085edd12cda31f24663dd10577e976b91a6f7e9ee363ccc6a0681fcd3",
                    "sha256:273960d9387b39012e8dc3f1c10611b46c53e4ab8b956157409c1df4f2159d9f",
                    "sha256:8e010db1172d8d168536151c6b359cb6677c42127d9ff7fd2e4095183340fa39"
                ]
            },
            "variant": "v8"
        },
        "3.15-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:08.57545872Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.57545872Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:506c7afaa239a2e7d55c392655788d57aec0a250de2cbefc2e29cb315065393b",
                    "sha256:e63057ce197ee4af5581ac3aec56c283f9e0a3160e30a6f8a08e168bb3590fe6"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:06.676426796Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.622574097Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:55.529995888Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.542542258Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:56.147992128Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.288576521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.558438118Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:06.558438118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:06.676426796Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db5a7c9fd1180fd2c6e4a2a1002014b019b8132bae3dba623cf8057aa16f0394",
                    "sha256:7396b7916284ae4a3618ab7d64e1f16a86747a8f846fad6d55bfb5944dea2f88",
                    "sha256:d616dba19a7b71117a8c7eeffd0112c8992c80437c72c1d1a833a66844dc8721",
                    "sha256:e4cc72e0480d8e263b3e3a80a7acbf9459e5b1d2876420a5b39139df40602007",
                    "sha256:5d339741851b95aab45ce74a52fd269110d6b5e6592a307246bbea8d05a815b1",
                    "sha256:7aa69c0759e29a59047c0da597eef816587d5b87149b7bd179cc51fd6db1466d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21856899e044ee57698bf3e9ebcc27a0b63c0e241d012718d9b7a1f776aa9e8e",
                    "sha256:d29d3de1c24731e2737f9b52845df6950e19b7454c3efd8979230f4744e199ba",
                    "sha256:ee2af6615e4a3b6f6b2636aec3b3aac8d506b94bd7f85e52d645fa7b3dc0ccbc"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:32.727131002Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.277226143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.051735239Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.061515158Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.571789044Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.721670084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.612911276Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:32.612911276Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:32.727131002Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:a9cc6b86ce8c8c8d671f5471379e638ba7d54ff2d9ef224ae462dadc5e210a36",
                    "sha256:cd88b41bc0abbdecadbfa0bac7040e0c9e74b46ec0a69cd95b46d7c544e547af",
                    "sha256:6221f3f1be26dd3d60741376b12a6b51fa07870cf65427be5ca8c61cfa4df608",
                    "sha256:66f83629a2fc69de35db566234f1b6ca28f45f3d8713cb1cb176b40ac58ff655",
                    "sha256:45da6e81dae3889b2a2a14d84070f2dd6936c4d0e54a5a884dfdebfa9e243c5b",
                    "sha256:7e2f74793f5d6ac7a9bb7e96028fbec37efdd83aa3d9bd143cabbbcf08d187e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a61205938433b75fbb4a353be694ada857b77a3dec40999755411651c481277",
                    "sha256:e1cb5736857680bf19bc7874bcca000b1b21763efc3ae4eafdfc856cb0cc0063",
                    "sha256:801e40bfb8d512d7fcea254529bdc9e4007ba4615f527c5a5fdeaf53176ee7a5"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:33.989276378Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.045873256Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.901847386Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.937867925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:47.550288769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.636405874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:33.910829139Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:33.910829139Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:33.989276378Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db54e0c396ca8293e80818c872eda8c3ccfe1b5ec30179109345dcb8be044c02",
                    "sha256:30f235bb611196a01513ccb15b8f14878eb39cc6b73dacaf5087004d3db72065",
                    "sha256:c380607e42559f69b7bcc2016d11800c416cc20b507b42091048b15c48d8646f",
                    "sha256:3f31d36e77e89394d583c88193f6bfac9132ef5f8fa23d34ae849c11230ac2c3",
                    "sha256:b05a1292425df7b2fb3c5801a41db1ba0aea3756c3af5cc2f39de94c4decbe66",
                    "sha256:4f34d953f2518b5267f2d5ebfc75658d33de8efb3e4db87f83887d72822750a0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94a2fc587078913959a6bd367daafb030c53a19501201f704453a11c2463c4b7",
                    "sha256:7c1fc57e094909e5714892c6f1d02ce3e059b3ee771c9044dd0f9e12e1fc48a2",
                    "sha256:9f882bf528e794d2058f88b3bf1f56ff6e04d755b314045cc7c3d5c0e51560e8"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:17.764320913Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.344677904Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.824559741Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.832411314Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.310496991Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:13.393712209Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.682608364Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:17.682608364Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.764320913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:7865aa16a72ce9494560e4630c3e1460d35c29836633a22f63ef9e57d9bbcf16",
                    "sha256:0b476da29880c714490858dbb8ca0a59c6038ee64ee9f2dde27d5ad718244b56",
                    "sha256:bb88cc70fdd5df8d55a9594f84ab2a5472fba7bf3d5cedb15531dd8905707ef8",
                    "sha256:ef742c5af3085ad28bd59633168ee87a985231e353c50f4355450942d5c788bd",
                    "sha256:c1f4b95fdd84fbc74849411bb7d1585f380a9451d74b3468cac86c4d1328e4b3",
                    "sha256:52aadc0c1195878f7434631f5df9d2e9c707681bb8930edcca8aa8d72ba503b9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:09408b90601c9b2566f0983d775886db7be3904b7fa5e79c597ae2a48f2b8b69",
                    "sha256:7baf84edaa45ee5547e595f1bbdf5c039c954745ecd25cec7efe83a3afdb6068",
                    "sha256:1896fcc8774637acd60e3de9902b33a21e5e160c691c4bb58655d2273f0c6225"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:12.309770074Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.541377612Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.04164606Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.077330446Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.674573037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.76109544Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.229150601Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:12.229150601Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.309770074Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:283f92790975f677e7c3a578f852abe40145bed179c1aa4864db453e0900b0d7",
                    "sha256:93133571da46b8d245c03a4390c6f2098f55435027d9233cfe53dec0143b627b",
                    "sha256:ac88fa80aa3263b2eb8bf2ec0397d82d1c453130f5efc861f3b0219720d95b65",
                    "sha256:cc2872e29e9d8cc7177290be29374063dfab0222e61889ba7235d0ad9327fcfc",
                    "sha256:14f6be3335df7e5092698a74843ee37a0b4614b3e4605c48d2a7ca44704fd0af",
                    "sha256:1243afdcee894015d8c636deae9ea551b62da31699feddbdb91cbaf3cb05a3aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2bad70d869531b756af915e2668a74d91ee53c5368a6c00fc8492ea2c69eb622",
                    "sha256:682f4476368d4e4d7628d3ef01ba2471d05e9f8e054c34e3c7debe0f95da335e",
                    "sha256:6dc497051f7b8935eebca5a53246443c5724b665bbd4b4831baf0a963b1b8904"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:08.57545872Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:08.489864809Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:08.57545872Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:506c7afaa239a2e7d55c392655788d57aec0a250de2cbefc2e29cb315065393b",
                    "sha256:e63057ce197ee4af5581ac3aec56c283f9e0a3160e30a6f8a08e168bb3590fe6"
                ]
            },
            "variant": "v8"
        },
        "3.16": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:16.919954065Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.919954065Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:efb1c3fed8a9b6cf2bf0cbf93cba2f4c5c3b62dbc83685526d29fdc12a9a117b",
                    "sha256:6dec0f4dca3f2d3a627bd550e6729712fcc65d8b3f151f60c2b511310f25e9b5"
                ]
            },
            "variant": "v8"
        },
        "3.16-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:10.95697712Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.033243196Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.505559223Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.514202741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.125537407Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.225501066Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:10.884017283Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:10.884017283Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:10.95697712Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:1ceb38d2eecb9f0a8bbf6326b807e04ba4a43c72ce85f09d7f0e8304f0e754fd",
                    "sha256:ffbbdcf7fa65e10e737f36d8445c383c4b307c478ffc60d118ebca80b810f4cb",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:7ca5b3d67130421a8d2899cca64a276e36d0b809cb755bc0d6f252674f122f55",
                    "sha256:92608796f6df48a9e71b645b8baf34db8b71f98d607a395ada9c7485fcd56c02",
                    "sha256:05694f71fc42eeff0b334fe232d44cfb355ba6001c499cf5ba143d368bd3f528",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a6f37c5b4af0e52b41bdebd28fedca279e2eb472132d90d887d63e106de2d2d",
                    "sha256:57efb50f63b0b3f64826cd82ae224475f11b2b0eb0e993eb31d267d6a66a0e6b",
                    "sha256:d603012dc83ef1df15fdf9e75a13f8a6d5b3ea5176afe86e4081ca3c5ff41b2a"
                ]
            },
            "variant": "v8"
        },
        "3.16-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:28.174910182Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.460987765Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:45.915869671Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.925541706Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.532773845Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:46.641997078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.058279852Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.058279852Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.174910182Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:a01956d7a69477c35afe7a9199349fe7dd59605567a0247411a7d791e57114ff",
                    "sha256:d59f19be416cc496d73be3a5daf1c69e3920867986aaa67fda88abc38a6ab6fa",
                    "sha256:2d0356040e6b3fecf0a2b65263f8a10438444bb787a65bdb5fe77c574bd6e0ec",
                    "sha256:f5c3072fbac0bd48976e9d02617069efd6d39bdffda15bc18c5fe2c75bce5002",
                    "sha256:ae15eb0bfcdc047f112704fdda1bac5af387045a776882650febf47324add159",
                    "sha256:8504577380ae2143eca3bdea29d87cbdf4d95bdbebf8b6ced9638df97881f7cd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2b86c5b31dc4ba9ab3ef31aaf666d95df03776d39f3f514f00d26db7e3c749da",
                    "sha256:f9e72c41ee91eccdf8f445cec1b2d6d7196f26539b4c9a84e2b55d375a888101",
                    "sha256:6a0a335921a695c57681e51f8f4954b1c512d0f9b3870845df241f2775e97b25"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:34.669991371Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.228059731Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.124832389Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.133489485Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.634244025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.726176061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:34.591351125Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:34.591351125Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:34.669991371Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:48411b679e4a81ea4e0dd90f1adb80868608433d1e5922f291218b39ecaf9206",
                    "sha256:bbfd3d751f8d48fb5dcb33e4f01a8e595e42de56682f303cb8f2ac51a5fa4c39",
                    "sha256:26edee748661616c5a78fea11a739162ae720d88a32f3841ec385f76e103a6ae",
                    "sha256:017d65142b660f3442220069defd556441a5227babe9f4e235ded83a163a6513",
                    "sha256:ebf9631c7185bab3df8c83634dad3b5b2fcf18c5b3b0c8a5147f6d08cc3c255e",
                    "sha256:164870c3c02d3c2eba33cca708bbec1145ba99154f28a46ff3c38e2bf8a4d0d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a1434b186d6b03672474327affc103f8a6a51e03f5fae7f675f6888e07fe441",
                    "sha256:3d55992d457c799a8590980a1d3a9673526c1f4bdc272f1c5ef697b1a3ee94bc",
                    "sha256:1ccf1186e2c4e4fba606831a694f458c58b1772a82c6d3182a8b6db651024cdd"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:12.594100079Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.558813267Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.043938441Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.052376287Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.542969416Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.626536218Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:12.52084466Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:12.52084466Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:12.594100079Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:b80d663732cd5ed672b52f49ce37b118b4c39c1ebc414a1f8d10b21cb1484600",
                    "sha256:d977b57ec4b41c0b02f7551114f5a960ef7ed1008baa1c10fd2c06466fecf7aa",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d93c91ace80682973bc37de7256dd0df9b164e56412172b0b2e42d74045a0a56",
                    "sha256:4ef9353caa068efaf4e21e4ee5f378cd3449c78e8150b2122e62231922f55d24",
                    "sha256:c20eee23038e5b32950513e0f29ac6adab9d75236caa27582495edb3bd1983a3"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:12.325236069Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:52.26242401Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.113305031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.142388545Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.706626087Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.790502945Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.249315908Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:12.249315908Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.325236069Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:843dd3f7e4310d4fedf408a1a5a17fb62e87150ff8d51ec884d1f2d71c1ec87b",
                    "sha256:c6868007fb2ffb25437ca5670494724481099531bd491065a67188c2f530e306",
                    "sha256:109a5741e0b32280bf122a8c6d2b1f9b50213140ce2c81aa3f3126a6a7d0d4b2",
                    "sha256:7b4bdb6c3c4004c1153b19b2624708afc26a7d9e96ed3c1b15ab0f0f57a20feb",
                    "sha256:6b32de8e6ddc7fae302b43a4d0b6f931a684645e2aeafb67a0c964172bf897c9",
                    "sha256:cd4274c81abf9066bfd04c40aacab28193cd8dc0baf72542f2f4542ffab32d1c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:23f97c6d9d00f3f5d2fde632ada8158e4b7e45332114d961fe5bf2a21d3c8113",
                    "sha256:49296e21ef4791d09b8947e9c26b9c3b7b425685e4397219c54eb1182cc1a1de",
                    "sha256:e049945f54666a2febeadff9112137db8a9deef504217413d958ddf0c14a1051"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:16.919954065Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.919954065Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:efb1c3fed8a9b6cf2bf0cbf93cba2f4c5c3b62dbc83685526d29fdc12a9a117b",
                    "sha256:6dec0f4dca3f2d3a627bd550e6729712fcc65d8b3f151f60c2b511310f25e9b5"
                ]
            },
            "variant": "v8"
        },
        "3.16-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:22.692283468Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:53.21741275Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:12.840083994Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.342715288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.353081876Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.878660455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.969546123Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:22.617494268Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:22.617494268Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:22.692283468Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:549c5a70596c68f8b10d5159fd8f0de37d4441fd54bfc4b9e3433bf0dc921457",
                    "sha256:cd4092f255f5b2834061431f3bd14d407807ead3a078b653aa142dbc49a4b5ac",
                    "sha256:5211dca4de3a063f3c6d93e9d56e0753dfa09ff6f63050887c791c08077af490",
                    "sha256:f76faddbcc7229391fe4127487ef995c51c2d72ed601bb2d92dddf649c5e6573",
                    "sha256:9aa66a20c677dfae7c1a0434f26446138b6e57d1c54f1c2a7ca4682597c50ca4",
                    "sha256:c3a0e116878838836cee09a1d9fcb11ac84f354da4cabf9f6249b0fb2e414417",
                    "sha256:34f6e3d1bfd4f5aaa5ec1f0ffb915478b38ba538bb8eaf5ba883c41572148cc7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:508a3c41b7068da374ec6de720a3be78bf69b78cd78d0652c1369ca869b908d3",
                    "sha256:0321b83f10549c06a0394c566bf5d4bf47c708442d678e47b8d8e7ffc7a1f7c6",
                    "sha256:99f41ec22e77bd15e17e0d8b3c40af50e2ff35c8341271c1971addf70efb79c3"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:19.741211766Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.785356409Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.785356409Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.785356409Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.022786672Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:07.662900432Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.184320109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.184320109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:08.194597407Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.204366025Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.215137315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.215137315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:08.686661839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.821031175Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.61318356Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:19.61318356Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.741211766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:1ceb38d2eecb9f0a8bbf6326b807e04ba4a43c72ce85f09d7f0e8304f0e754fd",
                    "sha256:e7baf277bca03bdf8c66b8973df7287d3dcb9678318cdade27781a5cd509d9cb",
                    "sha256:d92e219ee7de0075f69a291d6faf3089e9ac47f8a876da1ddf3540d0e57a28ce",
                    "sha256:31ad8425560d05a532d150a9d2f0e3a99fae3291c50580567275a0ea78e5315b",
                    "sha256:631cab598b2b3e4d2ec65ee1d58ec9186f2f76261111c1aaec9e05524997d122",
                    "sha256:c4be90aaa6f598178773aa69d68b480e0f1792c8327d58a2821a6eba02b2a934",
                    "sha256:e8305b98dc8d2cb39ea39a4563785c99cdd043e2173f91e3e158bb97f1f5b664",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4acaf00d72c94215e378697ef5262e4a89f9343dedabb03a85b24400fd2e5425",
                    "sha256:f1d9dea15f6a5878f6321f4e9c5403033e416e90097b41fa80e43e053d323e2b",
                    "sha256:3eb5ffe83881ed3af826bcbe1bacced1eb384918ae30cf9683a69f6f3e24008f"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:41.551827149Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:38.863907638Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:38.863907638Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:38.863907638Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:42.425595245Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:03.669057775Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.275893631Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.275893631Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:04.285146885Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.323014891Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.350113428Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.350113428Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:04.854373494Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.938759115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.424074963Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:41.424074963Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.551827149Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:82b4f63fcd25dec48526e8e5bf4df496490fc16d38b731011c159029362bbe70",
                    "sha256:cf22e99173a60b0c3148be90bdc7304ce34d2674c00699f8535eb3dd062155d6",
                    "sha256:31edf243e39a44f935bd884f5f3bd759e5083a5107e82b13cb3ea9e6a483f831",
                    "sha256:b418122e22f4a25dc504e3925257f5ca6e37d44035d504b71ea76c50f2fc3cfd",
                    "sha256:c0ecc977c41a237bec49dd00b254e27f3ef958e204d4eaae2e8c2b5291abac33",
                    "sha256:3d9576703cda752a3f6634a4d6c1a8dc10b3ff63dd20cc400575eb5e4362f680",
                    "sha256:75b0b8404e934cfa65941a7d5a01b7e18404c794195b77c0dab54cd8f543c525",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:99978b8d0dde93f4c2b7533d8c67de1f7c86374fa9af76108b212c33d8a187a5",
                    "sha256:e4e6d0a5865fd995137bf95b914db03dd35ae0926dca7a594ef7024ba4484ba9",
                    "sha256:76681afe1209cc519864059b1ff2122fffe7248f35ae2b5d1eab13b3275446a9"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:49.856642274Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.010081698Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.010081698Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.010081698Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.875984158Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.03603787Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.983909314Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.983909314Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:12.99376265Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.037792145Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.071922964Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.071922964Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:13.630329205Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.717087799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:49.780821331Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:49.780821331Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:49.856642274Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:3765b7aea0127f4c46913d99ff8dcce56fdbc07f4cbb32c183b5c4512f48ae21",
                    "sha256:d9f00dce96f68150eaf1819de34fdaf533e6e26f2e974923be921cac6a11d3cf",
                    "sha256:dc338f66e28e11a760da58fc3d2dc52681af8fb12f3d5f5e0e1fc13267146c6d",
                    "sha256:910eeb9f71cd3176bfede309f5e0947f9f1e4037d4f8648c87be43a29f150380",
                    "sha256:a4cfc1d8a18d2ed3e5cbdf698722104babc584f65117a4744cc853bd55cb3476",
                    "sha256:4a4db771994c5b5bde18161f3bb6c9c2a58f0e4839f8681ae57919f7283051e1",
                    "sha256:8f8103b4499bf3522d050accd0863389ce264121da165ae97c93632966f9dc4d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:31a9f0c50d722f72fa0e8677962a9d9a27902d22fabde108983e2e0e8d86cd63",
                    "sha256:47b402af4fe498a99576f2a4a910f7c34eaa2816b2546367c7f4c06dc9430e5d",
                    "sha256:691a5dc4d08c1278245c05db42d879ee835b4ce0248e2e21669f349ac5400280"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:19.825318099Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.132128519Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.132128519Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.132128519Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.117062131Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.919717251Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.780774245Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.780774245Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:39.793765153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.837348729Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.849687927Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.849687927Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:40.319474638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:40.419934082Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:19.742307627Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:19.742307627Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:19.825318099Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:e98579f19c68943e55387e816223594e1c3445dbdf44ec8ac832081775b32907",
                    "sha256:96dd10e63c4540902a4d9c62d420552af2a27150eb4c5967aaf9808a2aebca82",
                    "sha256:ddf5f377eab5e4af0d7ea2f958fca1ff94f180f16d894387e87a8ef724c9a727",
                    "sha256:94e138a1ef597aa4b1081842dbe75d17dbb9e8e6cb812cbba8f41c1d22ff720a",
                    "sha256:72df1678866f3f3deeda350de9f1b5708415e0325e5969f5fb62d40ae01d57ae",
                    "sha256:a810980c89b3bed4ad755d82039330f5ed539679cbc5fcfaa07ee4e7ffcac38f",
                    "sha256:e3cb17867c478c5d548503f38cc8d3e921fd6ff1b36e03780797488e94c0fff4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37109cf4f76e634d9c381035369ec2e53d23be9da8ef157dfab4e364fe2547e1",
                    "sha256:9afda83d0ec76689c0ccabbb68e56e5a2f1fe99ce891ce55cc7154bc6841bf7c",
                    "sha256:9dd02e73856133fba51f296560d2f0a3a4f5cafc53ee964864b4127ba3f03995"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:24.560903686Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:43.329519249Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:43.329519249Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:43.329519249Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:47.453844048Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.353351037Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.00248464Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.00248464Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.01157951Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.0515101Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.079461051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.079461051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.559796307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.648168203Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:24.482797639Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:24.482797639Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:24.560903686Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:8510a3f6c5da66626658588ac389c24d48433ac6020652f6f081329b83b8eadf",
                    "sha256:122177479b24ef8d2bbef6d4ac39e7252e42044a6243c44f627a2de0e48f835b",
                    "sha256:31f3e69b7ff58f0e2f3540c03172ae71a6af2b41a812b6455f6609e93df0c8f0",
                    "sha256:8f46997afa9462824943807895acfcfd83295801930e7d730a838f060149c87f",
                    "sha256:01e7ea254fe392dd8a45fa3afce34c411d4e1437f6327f8f599d1f0f2c94b001",
                    "sha256:985de276cf6c652664faa9f409650cee112c5da6ce607a4c35c914531be41c45",
                    "sha256:7cc8648d1f416704880aacb59f97281493d719f9990ccbddbd8f9443d6bf54f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d61a5130c01d1258f85cb450e0e9ca0b5bb346858626276fec3761dfb29e09f8",
                    "sha256:019ee28a1213f572f8489ca6070cac4c461abf4297eedfa5454dced32f0f6523",
                    "sha256:2fc46aee7aa695637f74045a2a764d55ca380a1a18a72ef744b510995b5cd3df"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:22.692283468Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:53.21741275Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:12.840083994Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.342715288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.353081876Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.878660455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.969546123Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:22.617494268Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:22.617494268Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:22.692283468Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:549c5a70596c68f8b10d5159fd8f0de37d4441fd54bfc4b9e3433bf0dc921457",
                    "sha256:cd4092f255f5b2834061431f3bd14d407807ead3a078b653aa142dbc49a4b5ac",
                    "sha256:5211dca4de3a063f3c6d93e9d56e0753dfa09ff6f63050887c791c08077af490",
                    "sha256:f76faddbcc7229391fe4127487ef995c51c2d72ed601bb2d92dddf649c5e6573",
                    "sha256:9aa66a20c677dfae7c1a0434f26446138b6e57d1c54f1c2a7ca4682597c50ca4",
                    "sha256:c3a0e116878838836cee09a1d9fcb11ac84f354da4cabf9f6249b0fb2e414417",
                    "sha256:34f6e3d1bfd4f5aaa5ec1f0ffb915478b38ba538bb8eaf5ba883c41572148cc7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:508a3c41b7068da374ec6de720a3be78bf69b78cd78d0652c1369ca869b908d3",
                    "sha256:0321b83f10549c06a0394c566bf5d4bf47c708442d678e47b8d8e7ffc7a1f7c6",
                    "sha256:99f41ec22e77bd15e17e0d8b3c40af50e2ff35c8341271c1971addf70efb79c3"
                ]
            },
            "variant": "v8"
        },
        "3.16-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:16.919954065Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.919954065Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:efb1c3fed8a9b6cf2bf0cbf93cba2f4c5c3b62dbc83685526d29fdc12a9a117b",
                    "sha256:6dec0f4dca3f2d3a627bd550e6729712fcc65d8b3f151f60c2b511310f25e9b5"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:10.95697712Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.033243196Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.505559223Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.514202741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.125537407Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.225501066Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:10.884017283Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:10.884017283Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:10.95697712Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:1ceb38d2eecb9f0a8bbf6326b807e04ba4a43c72ce85f09d7f0e8304f0e754fd",
                    "sha256:ffbbdcf7fa65e10e737f36d8445c383c4b307c478ffc60d118ebca80b810f4cb",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:7ca5b3d67130421a8d2899cca64a276e36d0b809cb755bc0d6f252674f122f55",
                    "sha256:92608796f6df48a9e71b645b8baf34db8b71f98d607a395ada9c7485fcd56c02",
                    "sha256:05694f71fc42eeff0b334fe232d44cfb355ba6001c499cf5ba143d368bd3f528",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a6f37c5b4af0e52b41bdebd28fedca279e2eb472132d90d887d63e106de2d2d",
                    "sha256:57efb50f63b0b3f64826cd82ae224475f11b2b0eb0e993eb31d267d6a66a0e6b",
                    "sha256:d603012dc83ef1df15fdf9e75a13f8a6d5b3ea5176afe86e4081ca3c5ff41b2a"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:28.174910182Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.460987765Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:45.915869671Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.925541706Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.532773845Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:46.641997078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.058279852Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.058279852Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.174910182Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:a01956d7a69477c35afe7a9199349fe7dd59605567a0247411a7d791e57114ff",
                    "sha256:d59f19be416cc496d73be3a5daf1c69e3920867986aaa67fda88abc38a6ab6fa",
                    "sha256:2d0356040e6b3fecf0a2b65263f8a10438444bb787a65bdb5fe77c574bd6e0ec",
                    "sha256:f5c3072fbac0bd48976e9d02617069efd6d39bdffda15bc18c5fe2c75bce5002",
                    "sha256:ae15eb0bfcdc047f112704fdda1bac5af387045a776882650febf47324add159",
                    "sha256:8504577380ae2143eca3bdea29d87cbdf4d95bdbebf8b6ced9638df97881f7cd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2b86c5b31dc4ba9ab3ef31aaf666d95df03776d39f3f514f00d26db7e3c749da",
                    "sha256:f9e72c41ee91eccdf8f445cec1b2d6d7196f26539b4c9a84e2b55d375a888101",
                    "sha256:6a0a335921a695c57681e51f8f4954b1c512d0f9b3870845df241f2775e97b25"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:34.669991371Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.228059731Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.124832389Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.133489485Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.634244025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.726176061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:34.591351125Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:34.591351125Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:34.669991371Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:48411b679e4a81ea4e0dd90f1adb80868608433d1e5922f291218b39ecaf9206",
                    "sha256:bbfd3d751f8d48fb5dcb33e4f01a8e595e42de56682f303cb8f2ac51a5fa4c39",
                    "sha256:26edee748661616c5a78fea11a739162ae720d88a32f3841ec385f76e103a6ae",
                    "sha256:017d65142b660f3442220069defd556441a5227babe9f4e235ded83a163a6513",
                    "sha256:ebf9631c7185bab3df8c83634dad3b5b2fcf18c5b3b0c8a5147f6d08cc3c255e",
                    "sha256:164870c3c02d3c2eba33cca708bbec1145ba99154f28a46ff3c38e2bf8a4d0d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a1434b186d6b03672474327affc103f8a6a51e03f5fae7f675f6888e07fe441",
                    "sha256:3d55992d457c799a8590980a1d3a9673526c1f4bdc272f1c5ef697b1a3ee94bc",
                    "sha256:1ccf1186e2c4e4fba606831a694f458c58b1772a82c6d3182a8b6db651024cdd"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:12.594100079Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.558813267Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.043938441Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.052376287Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.542969416Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.626536218Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:12.52084466Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:12.52084466Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:12.594100079Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:b80d663732cd5ed672b52f49ce37b118b4c39c1ebc414a1f8d10b21cb1484600",
                    "sha256:d977b57ec4b41c0b02f7551114f5a960ef7ed1008baa1c10fd2c06466fecf7aa",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d93c91ace80682973bc37de7256dd0df9b164e56412172b0b2e42d74045a0a56",
                    "sha256:4ef9353caa068efaf4e21e4ee5f378cd3449c78e8150b2122e62231922f55d24",
                    "sha256:c20eee23038e5b32950513e0f29ac6adab9d75236caa27582495edb3bd1983a3"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:12.325236069Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:52.26242401Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.113305031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.142388545Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.706626087Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.790502945Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.249315908Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:12.249315908Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:12.325236069Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:843dd3f7e4310d4fedf408a1a5a17fb62e87150ff8d51ec884d1f2d71c1ec87b",
                    "sha256:c6868007fb2ffb25437ca5670494724481099531bd491065a67188c2f530e306",
                    "sha256:109a5741e0b32280bf122a8c6d2b1f9b50213140ce2c81aa3f3126a6a7d0d4b2",
                    "sha256:7b4bdb6c3c4004c1153b19b2624708afc26a7d9e96ed3c1b15ab0f0f57a20feb",
                    "sha256:6b32de8e6ddc7fae302b43a4d0b6f931a684645e2aeafb67a0c964172bf897c9",
                    "sha256:cd4274c81abf9066bfd04c40aacab28193cd8dc0baf72542f2f4542ffab32d1c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:23f97c6d9d00f3f5d2fde632ada8158e4b7e45332114d961fe5bf2a21d3c8113",
                    "sha256:49296e21ef4791d09b8947e9c26b9c3b7b425685e4397219c54eb1182cc1a1de",
                    "sha256:e049945f54666a2febeadff9112137db8a9deef504217413d958ddf0c14a1051"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:16.919954065Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:16.836128419Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:16.919954065Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:efb1c3fed8a9b6cf2bf0cbf93cba2f4c5c3b62dbc83685526d29fdc12a9a117b",
                    "sha256:6dec0f4dca3f2d3a627bd550e6729712fcc65d8b3f151f60c2b511310f25e9b5"
                ]
            },
            "variant": "v8"
        },
        "3.17": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:09.625854189Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.625854189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:da8c5fdc3e6b204b7cad48f49241f9e1d06620e51763b19a37e6cd2df08c4e2e",
                    "sha256:e6452782c357153bbb3df6f70ea0e637fdbe45002b68d53a6d3c377633bdfcee"
                ]
            },
            "variant": "v8"
        },
        "3.17-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:11.094991969Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.645943126Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.089658925Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.101214939Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.858857472Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.951451797Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.012533848Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:11.012533848Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.094991969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:4f1040f1689456c65de714add7c97d18e944d6919b5e49029b65e32b57826166",
                    "sha256:fd502bc626ed9463c15589314bd078d0d4f8fdd9bdda504a9152b59978fed6e8",
                    "sha256:aebdeaa76b09c94dd2d92414f8f9147de6e2615043fcaec024ff9193520965b7",
                    "sha256:92e997c867e14758a83f2430b45c53ee4268e7e2ec7a8d69370c16e5c61d6d9a",
                    "sha256:66b8499fd02566bc22dfc9466b56efad7dfba68759bb28c19968441ed617f4e6",
                    "sha256:97dd803c41f0d5ddd8f6e2204c40c2efadcdd5d6220812d5cbf7f3a9a455a132",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b96923f2e2a1c602b2f491d344e6359f84a9892bd90f8fe42b819ce9a1f2fc85",
                    "sha256:00c47f8aa6673119c360055b64562cae2b991feb7a78e189a09cd049257482c5",
                    "sha256:982434377a800471cd09b11ac966f5bc79dddb681cdda5d5a4f7e6177dee93e7"
                ]
            },
            "variant": "v8"
        },
        "3.17-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:34.331457038Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.502233696Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.277549163Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.292832201Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.189039764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.309754582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:34.222022123Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:34.222022123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:34.331457038Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:c16955a0ecfce47414a3c42328d056bddfddb06ba1ecad69fe0193da39249670",
                    "sha256:7594a9fe9c0c630895e2704ead844dd0c662847540136da8cd6df70ae666a874",
                    "sha256:ef2187d9c0535d904b4da69b7b0ff8a01b98bf806b11d127c97286c39f8fb2b7",
                    "sha256:7df94082c1e4102f6cebebb265f0c2ada4d35a3dfbedaf4d4c3324d24ab118e5",
                    "sha256:686aa97ef0cc3dbaab735b28f6cc3ba5f0ca3ee4e63c655c764568c86f5110da",
                    "sha256:34770ea58a4b0dd4c91ef0ecd08961b6fde2313161239db3868a03920f612b60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d82dadebcb5f55b9a71cef3be8a2061575ceb97898dfe50856e0daabc5abce7e",
                    "sha256:464581c9c8ccaf803556d2f193ec7bbbfb04a10f10337cdc5535241cc89bd4a3",
                    "sha256:84dd35eafd0b694869df8fc23a5c1bafb832fc3f333e013c88200b2c3f739010"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.370527822Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:44.644266847Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:45.206630865Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.215357193Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.085878664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.19217519Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.291456005Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.291456005Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.370527822Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:12aa3e676e14ba34bbc34f0b3af3b4973e710a45c65ab3c79b37249ae33aa6ae",
                    "sha256:7b6df875a1daa78f41f82a0b1fdc84c7b311e846f72fc3c795559f3f44697715",
                    "sha256:40814a5b2db046dadadee5fcb08c69f99619e0907ff2a682836c455415e9d8e1",
                    "sha256:0d1faee003a74a77d75cb69162a721df8085b74e35b4c26ccb2ef09179c0e93b",
                    "sha256:62dd898ca9dc0722648d04f8d613b78026a050f3eed9900ec323308dc23bf7d0",
                    "sha256:e4052305ab106555798772e270e77ae291e6a2c69e9a4221cf5c88de2e3fcea9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4f15c21ca4db42fe2f51cb6ccf032202af9cfc5c114e3a7498cdc7251a3be728",
                    "sha256:296ad061cb3eeee4f5b7a3d22828bef7a4bf5a75fa59795a1d2b40308c75bc33",
                    "sha256:98318f0f948ad4e5ead39b0db2403ac9f71227d39fa4bd89a50df8aa627bdb96"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:19.062835471Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.298894775Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.748198814Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.780118622Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.561995331Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:09.650580096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.983801988Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.983801988Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:19.062835471Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:c9fb2fbe95b60168dc6519fa8be3c51978965b5da4282cc87fe8637769dd3045",
                    "sha256:7d8c0902958a983ac2cc504cf605cbc37494fa443bd0b2034f31240e78fb482c",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d154d89911b4ea15a696d4fc7b0ad310450ed86ad7f2e4e2488ce64442b363d",
                    "sha256:13fd66ceb8b81cf6614665d09733db24c8c9c587f5025443667e4ac1125dc186",
                    "sha256:39bee530fae228e49dab4e90df54a58931c78d01f8a7dd9ff2bc474bfad256b7"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:11.504345798Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.604895531Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.023372368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.063123512Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88313006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.9760236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.418786012Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:11.418786012Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.504345798Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:6f5063e38a8be7df8372695159f4eecf15f11dd29c9198de1a342b892d1026c9",
                    "sha256:661a7aaeacced283a6594b0c30a562bd55c182861ab9d6b2d489df3fe0b2d397",
                    "sha256:2d7fb1c6c1b7d84b61792b67695513a0dff3c6107aaccb3779681b1b21f4ff89",
                    "sha256:1da1c6a8f45ac998fe2761e4ffbd55632691cdc0f07d82fbba046e9dfe43e1ef",
                    "sha256:602bd362dd105fd3702129a49208a7991139d0f6f345bcffa46b0c6c8ab7a3a9",
                    "sha256:92e86f8c81768970b72ba0e319b4d37c805b9b0ceb8bea4b0d4bc387c6440338",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27801a6917fb1cccf2d5f793da8f0c3888951e54d631d74da338e23655cc6902",
                    "sha256:99ed20e4a0ef19d33acefd46fd448bc797541dbaf3fa86871821a65ecb9766c5",
                    "sha256:780cfda145ffddda520bcc9609adb9c75dbf7f1d7137092f045cf35fecb3dacc"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:09.625854189Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.625854189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:da8c5fdc3e6b204b7cad48f49241f9e1d06620e51763b19a37e6cd2df08c4e2e",
                    "sha256:e6452782c357153bbb3df6f70ea0e637fdbe45002b68d53a6d3c377633bdfcee"
                ]
            },
            "variant": "v8"
        },
        "3.17-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:18.541044345Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.899104175Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.782971567Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.293938765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.326210714Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.131052439Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.233576539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:18.457268925Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:18.457268925Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:18.541044345Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:d0e9b744a53292187f94ffab021bd8283069cc88405bdb03166ed5dab5be5a0b",
                    "sha256:fd5ceaa99076611f0327b109a40a7c98102315ab5f9023d5b3394090d91bb6c3",
                    "sha256:01df988521635d98ce5b25b9ea28e04af79f083502c70764dc995b90fcd01f52",
                    "sha256:25b7bf703aceb497af9c6059b4492d8dd4cce8e28a545d104b66dfcfb172148a",
                    "sha256:cbab7aa9ce2055a569475e78c1b1870344229a84a70f9811204998b67e00ff05",
                    "sha256:56af6758d36fa08d569add93ded1bfff98ba598cab907c28377b869625480839",
                    "sha256:c84ce3e1be47c5f0c74c91564f51e2ee3e18e4dc40b86f134309d58c29616b33",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e540443c57af5d569167ac8d85e9489ec85966326883db11147e35b8bb4f0745",
                    "sha256:37a9f012f9eb14a7690e86d9bf8074298ba5598c855c97ef941a0f9631e6e6a4",
                    "sha256:886851e8417ea9130e87760ab49bc9250be0c5a61bf0154f83af4c9d15c24240"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:16.999630528Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.684243633Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.684243633Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.684243633Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.285763777Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.977170517Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.010312203Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.010312203Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:21.020295619Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.029155323Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.038619636Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.038619636Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:21.811581546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.942014099Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:16.89162556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:16.89162556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:16.999630528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:4c1b7bcb45834d25a12dd0a7af324f6b52f8b3a5244fa4fde896f972cc608067",
                    "sha256:10ae7ecf92f0deb6ae483975a4fc3707c43dc0c10b0e3a83b01aca483f8df60d",
                    "sha256:98284e0684f56167a0bf58b3c252398b7668fc3cef46fc2d30aa4c56e710bbb5",
                    "sha256:4faebe8382bcaf39481f96784c7ef5746f304555374ed205cca07f9519b5b1ce",
                    "sha256:62be3108375ea614c4bb7d6bbee74eeb2b392c16e00022d1cf33c917d04a6639",
                    "sha256:7be303ce6f1c5849592edd2657e39b5bedf02e58af1aabb1cc052c02c417d0da",
                    "sha256:d3999be818893998dfabf3f72e21ff53dc378c40fd99e404e14ec1a7e2adae51",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:11c45f3ed7b17a189e631bf3fca4814583c087f6a5e5b957719a308db0e4af62",
                    "sha256:c0bc05b10e903194532cdb3ba755f9dbaf428a409fb52456417462761c7c688f",
                    "sha256:6c9f6992538dbb494f8f647d2f16d561eeba5789d3739059fb7a7521b5cdbcb4"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:34.739760723Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.427714589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.427714589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.427714589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:46.943620039Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.638229461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.275658101Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.275658101Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:11.285434202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.293693432Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.306982011Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.306982011Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:12.081682551Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:12.187519761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:34.624497119Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:34.624497119Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:34.739760723Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:84d4eb12fc9fef2a79f72d57d82b73cea4e9b846df82928273a3dd31ecaecc23",
                    "sha256:54db10cae451d21e1d2a34f92f42cc0ddf999f112d442a2d351b1506c9d05a9e",
                    "sha256:b77175199e1da3274edd7cd9bee4662670d911488f9e18d06c0334ef6db76c02",
                    "sha256:7fb14e2dfaf7323be605530549c4442ee94d611a7068081c0c2b8360c062f004",
                    "sha256:e96e85e2ea446f4b151037d87770ead5de06c93227fb9ef36faf70bb27e2b751",
                    "sha256:7446c1d0ac03a78c9d2f0762078bbca97927a1a0c3f3c173babf3d3a8816ddaa",
                    "sha256:9e364fc05dddb5097be52b3614e505d418dd07307720104609ca3569c5638c36",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1fbc5df15a7afb9d5d298a92bd81681447d68cc1b8bf470d48c157de9bc2186f",
                    "sha256:aa938abef35abf9d9300ddbe21ebca3345d5f343da42ce50ae86fda6b7680309",
                    "sha256:01cc45f806c9e12a82103e131d1c310940697359db68a4f53668a0afdb57d384"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:47.280695729Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.933194892Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.933194892Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.933194892Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.105448097Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:18.119482706Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.046840444Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.046840444Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:19.0566609Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.067560536Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.10338325Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.10338325Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:19.870120444Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.958900949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:47.194266877Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:47.194266877Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:47.280695729Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:68d768d4f0fd6e2df7d83527ceaac0917119920eed31903604dec8d701d912bf",
                    "sha256:0ddc4329f98313b640a889cce2e2472ece40b1f218930ff589289db0e0118640",
                    "sha256:67c283e39210f52952edfeff047dbc67630cb2795289385df025d88ea2e76aaa",
                    "sha256:e8631e0d63cc9336d46674570835fab910ae328bdea8b00aa430b2d0b87d2069",
                    "sha256:e269d4cd5cfdae833d8f4c2a723ec722d0cc980501222a666d3a41429cd7ba98",
                    "sha256:93696462153cc48b064b7a793e979974e4320234c702a6549a340658b4f90c8f",
                    "sha256:53ad4434387c81f1c5395e698d636c6044842b5fae0baec3c7c527fce1ac3c13",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:59fb160a56edcf6fa40af92d93d914c811794d0940a57e28ff31130a698affc8",
                    "sha256:3f11b4a0e6ce501ad7f7ab8c83a5926a79bde2fd8345a4202136b035f6ffc200",
                    "sha256:6c3f2f7f5d3b5e0df9d3a0cf96d0e12a7990b2d4a1a075461d757510d4c21144"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:28.240669249Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.659213054Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.659213054Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.659213054Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:15.892896891Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:43.921466188Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.886540342Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.886540342Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:44.897371841Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.952803888Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.963336038Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.963336038Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:45.826448219Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:45.913851107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:28.161989322Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:28.161989322Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:28.240669249Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:e5e7577f32a01bddfd3ae8ff1b02f8fb368a73bb3edebcc2adc230ffaa3efbbb",
                    "sha256:91bafdf2a7a34e3f911a4c9973a9ced042bc8bb83cc8d0380bc3bd5800910f24",
                    "sha256:dc2055df92807198be1b5e57383d8cc17b6f4575da333bff54cb9a4fa9c8227b",
                    "sha256:a663a694732ca446fee2ab892114f3e8d01c0ebb4c1cb0b390361a69d663fdda",
                    "sha256:d2f45e2f7556255fd1b4c27fc8c8acbc3da3e5b169c686b41bb6124ace7a0d51",
                    "sha256:e7fdd8b91f563be99a5c8c7958cd6c1bdbaab14d9f40813bc02c3ab870649ca4",
                    "sha256:aea0eb3eedc3b76536ff19240be21e47f77e2e7d982a29b8188c17859089fa9d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2cb135ae851f2a3b9561113c4dce67bd88e4f1db2959635a853c9f6521d40e7",
                    "sha256:2ca40f7dea2916a0619aabe3c2a3e3ac60104c2ffe6905a1011c36f98786b78b",
                    "sha256:e96da79bc266d229a35974b4e073f5f95db4cc6dd56d6dae82369392d606ddc8"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:22.584619039Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.53644498Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.53644498Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.53644498Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.683755416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.900715457Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.405493946Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.405493946Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.415462626Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.424896899Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.474323111Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.474323111Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.268747382Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.355914463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.500328345Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:22.500328345Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.584619039Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:6f5063e38a8be7df8372695159f4eecf15f11dd29c9198de1a342b892d1026c9",
                    "sha256:c82fadd7b6c21a79a85e7db8c07b53c07f6cb7ba7b7571fb8e44751ae54e68ff",
                    "sha256:706ce327bbdaa60afc950b167abb0365b07976db5d79e5aee89286c385fdab9d",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:eddfd80dcd125314c860746a384e05047b8c1bb56d60a809758feb91518a87a4",
                    "sha256:6f13c0d951f38ca1627f868a0776220dfac43a75b343722f607ad17f47039c96",
                    "sha256:af85d9ff37b36e4dacf8c53f092d88bff9f3ce47f0080e95b28d2458a78d6f07",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6f7abba0fea682f053f7a934d73048abdffda70835b25cd8dbc3cd0109842bbc",
                    "sha256:3d0a3711183e9b53bb0d725f36e25e2ee3de740bcc3b0fcb305f8f8c8f49ac4a",
                    "sha256:cc39afd5505676a75df3d8f17a8aeace2639a73b4b41e1c974a09964d5d250e8"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:18.541044345Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.899104175Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.782971567Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.293938765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.326210714Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.131052439Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.233576539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:18.457268925Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:18.457268925Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:18.541044345Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:d0e9b744a53292187f94ffab021bd8283069cc88405bdb03166ed5dab5be5a0b",
                    "sha256:fd5ceaa99076611f0327b109a40a7c98102315ab5f9023d5b3394090d91bb6c3",
                    "sha256:01df988521635d98ce5b25b9ea28e04af79f083502c70764dc995b90fcd01f52",
                    "sha256:25b7bf703aceb497af9c6059b4492d8dd4cce8e28a545d104b66dfcfb172148a",
                    "sha256:cbab7aa9ce2055a569475e78c1b1870344229a84a70f9811204998b67e00ff05",
                    "sha256:56af6758d36fa08d569add93ded1bfff98ba598cab907c28377b869625480839",
                    "sha256:c84ce3e1be47c5f0c74c91564f51e2ee3e18e4dc40b86f134309d58c29616b33",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e540443c57af5d569167ac8d85e9489ec85966326883db11147e35b8bb4f0745",
                    "sha256:37a9f012f9eb14a7690e86d9bf8074298ba5598c855c97ef941a0f9631e6e6a4",
                    "sha256:886851e8417ea9130e87760ab49bc9250be0c5a61bf0154f83af4c9d15c24240"
                ]
            },
            "variant": "v8"
        },
        "3.17-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:09.625854189Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.625854189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:da8c5fdc3e6b204b7cad48f49241f9e1d06620e51763b19a37e6cd2df08c4e2e",
                    "sha256:e6452782c357153bbb3df6f70ea0e637fdbe45002b68d53a6d3c377633bdfcee"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:11.094991969Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.645943126Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.089658925Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.101214939Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.858857472Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.951451797Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.012533848Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:11.012533848Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.094991969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:4f1040f1689456c65de714add7c97d18e944d6919b5e49029b65e32b57826166",
                    "sha256:fd502bc626ed9463c15589314bd078d0d4f8fdd9bdda504a9152b59978fed6e8",
                    "sha256:aebdeaa76b09c94dd2d92414f8f9147de6e2615043fcaec024ff9193520965b7",
                    "sha256:92e997c867e14758a83f2430b45c53ee4268e7e2ec7a8d69370c16e5c61d6d9a",
                    "sha256:66b8499fd02566bc22dfc9466b56efad7dfba68759bb28c19968441ed617f4e6",
                    "sha256:97dd803c41f0d5ddd8f6e2204c40c2efadcdd5d6220812d5cbf7f3a9a455a132",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b96923f2e2a1c602b2f491d344e6359f84a9892bd90f8fe42b819ce9a1f2fc85",
                    "sha256:00c47f8aa6673119c360055b64562cae2b991feb7a78e189a09cd049257482c5",
                    "sha256:982434377a800471cd09b11ac966f5bc79dddb681cdda5d5a4f7e6177dee93e7"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:34.331457038Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.502233696Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.277549163Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.292832201Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.189039764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.309754582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:34.222022123Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:34.222022123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:34.331457038Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:c16955a0ecfce47414a3c42328d056bddfddb06ba1ecad69fe0193da39249670",
                    "sha256:7594a9fe9c0c630895e2704ead844dd0c662847540136da8cd6df70ae666a874",
                    "sha256:ef2187d9c0535d904b4da69b7b0ff8a01b98bf806b11d127c97286c39f8fb2b7",
                    "sha256:7df94082c1e4102f6cebebb265f0c2ada4d35a3dfbedaf4d4c3324d24ab118e5",
                    "sha256:686aa97ef0cc3dbaab735b28f6cc3ba5f0ca3ee4e63c655c764568c86f5110da",
                    "sha256:34770ea58a4b0dd4c91ef0ecd08961b6fde2313161239db3868a03920f612b60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d82dadebcb5f55b9a71cef3be8a2061575ceb97898dfe50856e0daabc5abce7e",
                    "sha256:464581c9c8ccaf803556d2f193ec7bbbfb04a10f10337cdc5535241cc89bd4a3",
                    "sha256:84dd35eafd0b694869df8fc23a5c1bafb832fc3f333e013c88200b2c3f739010"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.370527822Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:44.644266847Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:45.206630865Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.215357193Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.085878664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.19217519Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.291456005Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.291456005Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.370527822Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:12aa3e676e14ba34bbc34f0b3af3b4973e710a45c65ab3c79b37249ae33aa6ae",
                    "sha256:7b6df875a1daa78f41f82a0b1fdc84c7b311e846f72fc3c795559f3f44697715",
                    "sha256:40814a5b2db046dadadee5fcb08c69f99619e0907ff2a682836c455415e9d8e1",
                    "sha256:0d1faee003a74a77d75cb69162a721df8085b74e35b4c26ccb2ef09179c0e93b",
                    "sha256:62dd898ca9dc0722648d04f8d613b78026a050f3eed9900ec323308dc23bf7d0",
                    "sha256:e4052305ab106555798772e270e77ae291e6a2c69e9a4221cf5c88de2e3fcea9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4f15c21ca4db42fe2f51cb6ccf032202af9cfc5c114e3a7498cdc7251a3be728",
                    "sha256:296ad061cb3eeee4f5b7a3d22828bef7a4bf5a75fa59795a1d2b40308c75bc33",
                    "sha256:98318f0f948ad4e5ead39b0db2403ac9f71227d39fa4bd89a50df8aa627bdb96"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:19.062835471Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.298894775Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.748198814Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.780118622Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.561995331Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:09.650580096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.983801988Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.983801988Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:19.062835471Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:c9fb2fbe95b60168dc6519fa8be3c51978965b5da4282cc87fe8637769dd3045",
                    "sha256:7d8c0902958a983ac2cc504cf605cbc37494fa443bd0b2034f31240e78fb482c",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d154d89911b4ea15a696d4fc7b0ad310450ed86ad7f2e4e2488ce64442b363d",
                    "sha256:13fd66ceb8b81cf6614665d09733db24c8c9c587f5025443667e4ac1125dc186",
                    "sha256:39bee530fae228e49dab4e90df54a58931c78d01f8a7dd9ff2bc474bfad256b7"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:11.504345798Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.604895531Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.023372368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.063123512Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88313006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.9760236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.418786012Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:11.418786012Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:11.504345798Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:6f5063e38a8be7df8372695159f4eecf15f11dd29c9198de1a342b892d1026c9",
                    "sha256:661a7aaeacced283a6594b0c30a562bd55c182861ab9d6b2d489df3fe0b2d397",
                    "sha256:2d7fb1c6c1b7d84b61792b67695513a0dff3c6107aaccb3779681b1b21f4ff89",
                    "sha256:1da1c6a8f45ac998fe2761e4ffbd55632691cdc0f07d82fbba046e9dfe43e1ef",
                    "sha256:602bd362dd105fd3702129a49208a7991139d0f6f345bcffa46b0c6c8ab7a3a9",
                    "sha256:92e86f8c81768970b72ba0e319b4d37c805b9b0ceb8bea4b0d4bc387c6440338",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27801a6917fb1cccf2d5f793da8f0c3888951e54d631d74da338e23655cc6902",
                    "sha256:99ed20e4a0ef19d33acefd46fd448bc797541dbaf3fa86871821a65ecb9766c5",
                    "sha256:780cfda145ffddda520bcc9609adb9c75dbf7f1d7137092f045cf35fecb3dacc"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:09.625854189Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:09.546131919Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:09.625854189Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:da8c5fdc3e6b204b7cad48f49241f9e1d06620e51763b19a37e6cd2df08c4e2e",
                    "sha256:e6452782c357153bbb3df6f70ea0e637fdbe45002b68d53a6d3c377633bdfcee"
                ]
            },
            "variant": "v8"
        },
        "3.18": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "3.18-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:09.767497232Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.767497232Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b52b843951a0f07cf6b173c6bfbf62f8c51489714675aa0271b04dd9b341f7d3",
                    "sha256:d8a5c9d6ad410d9f6a452ea0ea55097edc5595fb1734ac17e7f29fc35d335f10"
                ]
            },
            "variant": "v8"
        },
        "3.18-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.098700842Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.098700842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:b9c0e0c93ad059698b8dc074921d7cea72bf64e39c68e538afbf9f94d49538d2",
                    "sha256:29f5248f1ff2c219f0e1e0418efa5f1b23071af283887ac85a8c7e0ff680aa59"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.52731808Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.52731808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:901a3a9a6dddc257c387188f78132b6f46efb6037c051e47509195857fb24c77",
                    "sha256:8e59f9a9fe21f10dc2fc7bc0886f787a03ce7982c7c47b194ba5261516c91549"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.484232268Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.484232268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:bc9a1952b4fd781924d0ab3870a4df9315179bcb1bee93e38ca53ef6e87b1cfa",
                    "sha256:a048d7174748598c7b8eb2b1987c6aa6694529f8f9edbe6a8ecf83459bd1af3f"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:09.330507181Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.330507181Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:6a695ef343462f2b737cb52ed54a976cdfd02906bdf7f2fee5734525c55566ba",
                    "sha256:61a5dcae2dbb87850aea248654aa233d0196bffa31e30eeee60a4c11009c83b8"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "3.18-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:13.888623162Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.888623162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:9a76ebbda57e918c8d4cc920008cf73e61f356599dd287c55ca53cf566b373f5",
                    "sha256:0f4d887c9b5b859a04d328069283636b4ddfc673b46ac25097855ca417ba115b"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:19.389465135Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.105257163Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:16.256678676Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.259002872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.269564494Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.859381257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.946779685Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.270705591Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:19.270705591Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.389465135Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:0dfae6631fa6687a5608cf91ad4d624240c5205b560cdcff5cc0ecbb61692b2f",
                    "sha256:d4a7c415a623758151614d31484fb309c86b2a9c52cc0aa20efb49caacbb06b0",
                    "sha256:abc9550e0ca2d01aa5c99a987b5536170534e36f40d6bb37956b66ab5cf6bfd0",
                    "sha256:609ba038ba46c0b51fc75a92dc2874b9a3f239c821322fc513df1812899c332a",
                    "sha256:fa957db6a0dbbb0d19e83e2c1ded07eac3b113b68a9b7dcd10f731dcc5473d83",
                    "sha256:232a5b87ffa8c1ebe28a8597d85849defa46572805ca5502b3ad7b41637d92c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfbbc02c54863a5338f373f4c261bda17b5f0692fb4444c3f8d891c693536b12",
                    "sha256:29f73e3be42ceab92fa1853451427fd9ff5a8f7dba22c876698fe662076fca62",
                    "sha256:0b9e9202a3f891f4dfde99479756226a1c5ff0978ca17430abd15507eef2de55"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:41.388056582Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.745979143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:16.505680087Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:17.548708627Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.557118407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:18.235667988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:18.366712531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.262848993Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:41.262848993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.388056582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:1b45cbf5267a9f0ab8ecbd86988784f1e2e2c28f3af0376717b255cf8b453d6e",
                    "sha256:b088866c7d9fa5dd49be6293b68fffe8bda095f770fd112520941385f1179944",
                    "sha256:82627c9307aaa497704a23b1d8332d9937463da738c9d71269fa852dde40d869",
                    "sha256:f5dbcc73acf8960a9d7fbde49a823a58540ad63cc704e56358ecf2d5377af7ea",
                    "sha256:549b93b36a841c9c5b31488dc0adddb05a9c783af6395f67663262e0505944d5",
                    "sha256:d45d30428664b00301e2a9ccbbeb03db3edbfcf14facaa40a577cdf49b119435",
                    "sha256:4fb806f6509ee624a9d9cc447ff6f50cf138dad08a362975ee49b5e8e68487a2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:49618e63f30922f50a0225f928f5c47de4cd3498e121dc19848a4062fddc6de6",
                    "sha256:ffa96bd8ca559a14f6690bb11947f5a2d93b2416c7624c364db02ca3c7c09b9c",
                    "sha256:9a4a507916d64c7369f75553e1d61fdce3c34b5c800bd16903c9191051e5be60"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:50.900782801Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.085484298Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.480942433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.264805583Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.308090459Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.889432067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:07.009584647Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:50.823753435Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:50.823753435Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:50.900782801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:c20deb350aad2eb4ae4a89c3fc2f66aa0466e5fbfb2fd7c8a258cd3f05590c46",
                    "sha256:1f35f18ef2a8df5ab25bc4703d6a41a0d80e4f3a535b8d8b1031ecd719b23cec",
                    "sha256:08d716f6517cc3c8939c159dbf5c85a225cd310710a5307c756862fca6a14175",
                    "sha256:f0696b003b26c46a5335e52aa2d00f2b1e4dfacc257a173795bfa11eed0e3343",
                    "sha256:c88a735e5ee6b912224198888739e38d6656165619623cd7d6218203ef9aa355",
                    "sha256:bdf5d66e2db4143c6eb4ca17515013073e21d5539628b3b8de676b3a2c81173e",
                    "sha256:c48b4479ea6c223c53c91711e04ad6eb9b0b8f105915c4472a8dcbf8d2f0fdda",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b1772c03d0917295ab7c56a866053757c66f0c6a1ec69355c6e10df2ec64b59b",
                    "sha256:de976e3a52c80faf197d3a5732c6743f605e5d53d3c567c2833e50bf744b5f10",
                    "sha256:689aae72086275be80cd1b29fffc562506cdd4d1c2f2f1272877bd99942d52e3"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:17.554433508Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.183480416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.773229632Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.266661371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.322821115Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.921538197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:35.012499009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.47844779Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:17.47844779Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.554433508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:d1b4aa9b8d8d566d3023ab6d554c77c9d97f4bcfba1deabf094ee6789b405dc8",
                    "sha256:fe211da828d0e15f8a01c14a556e1aadb7ea31311774b6a7a46d606efef0cfc6",
                    "sha256:044ef28db9747af95d90ca62b4bb9dec1ce6b4897397ac6e7533062763847f7e",
                    "sha256:ec50ae9763bed240d51fdfc66a9382ca6b56258bd9d64c459a9af6dfc6ef24ff",
                    "sha256:f85a56666b71b6321754d718dc093871923bf3670f69b17926e4b824df15a079",
                    "sha256:90f4dea91a39ec46b6ba7204507c860bd02e4e6ccc1256f0cca64467defd88fc",
                    "sha256:e973170aa6c02283418cf56b474a2cf61dc175f5fe63ce4a370151ca4d155f40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:acc451c64dbe80fe945046f6b95818e8159e6712dc5a1c427c1964979a301cf0",
                    "sha256:e6218ae17379c365292ca904727de91c3295e88f042034d07011dd89426f4c52",
                    "sha256:1f3f208a0cc5605b59d82fb25198bc1dbfb77e2ee78c7474ac61ff4b269b21c1"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:22.963315474Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.918568213Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.036691183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.531065902Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.573452099Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.152887787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.252828137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.890389935Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:22.890389935Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.963315474Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:4b13f483083c8617698a2e81f6118c9859d0dab4721212a761acf188c121f5ad",
                    "sha256:265c972314b7022b2704a7ff0ce70e7d013599c84c597244cedac1efd08c043b",
                    "sha256:5993dcd1264b67af9e13370fd826998c611ee99870202d76537008bd9f53ee91",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:2da16ffc1b870e830396a6437675c45300c40a78ae6362399d8145ac415b16c4",
                    "sha256:537218bc2b0cd2dc44fddab16c472f85e669dedd32e818254a6a726427b752a2",
                    "sha256:cb37913cc8e5a0f895952dd86a4d6abed4e4cb565225dc51d5d458269384dac3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd7253e36259cf80a3b18d75646c5e2e1fb5ac02a90fca8c04bf650c71f3484d",
                    "sha256:61e03a6a19ca55bc5d0b1940adfdc7a446b5e0cb23d0b6097b8b31665bab3ce5",
                    "sha256:fe04b4f0ee704124f85db77bc69843542c1ee38328a55260687e90a8e6f27c3b"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:13.888623162Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.888623162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:9a76ebbda57e918c8d4cc920008cf73e61f356599dd287c55ca53cf566b373f5",
                    "sha256:0f4d887c9b5b859a04d328069283636b4ddfc673b46ac25097855ca417ba115b"
                ]
            },
            "variant": "v8"
        },
        "3.18-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:09.767497232Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.767497232Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b52b843951a0f07cf6b173c6bfbf62f8c51489714675aa0271b04dd9b341f7d3",
                    "sha256:d8a5c9d6ad410d9f6a452ea0ea55097edc5595fb1734ac17e7f29fc35d335f10"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.098700842Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.098700842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:b9c0e0c93ad059698b8dc074921d7cea72bf64e39c68e538afbf9f94d49538d2",
                    "sha256:29f5248f1ff2c219f0e1e0418efa5f1b23071af283887ac85a8c7e0ff680aa59"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.52731808Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.52731808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:901a3a9a6dddc257c387188f78132b6f46efb6037c051e47509195857fb24c77",
                    "sha256:8e59f9a9fe21f10dc2fc7bc0886f787a03ce7982c7c47b194ba5261516c91549"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.484232268Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.484232268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:bc9a1952b4fd781924d0ab3870a4df9315179bcb1bee93e38ca53ef6e87b1cfa",
                    "sha256:a048d7174748598c7b8eb2b1987c6aa6694529f8f9edbe6a8ecf83459bd1af3f"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:09.330507181Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.330507181Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:6a695ef343462f2b737cb52ed54a976cdfd02906bdf7f2fee5734525c55566ba",
                    "sha256:61a5dcae2dbb87850aea248654aa233d0196bffa31e30eeee60a4c11009c83b8"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:13.888623162Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.888623162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:9a76ebbda57e918c8d4cc920008cf73e61f356599dd287c55ca53cf566b373f5",
                    "sha256:0f4d887c9b5b859a04d328069283636b4ddfc673b46ac25097855ca417ba115b"
                ]
            },
            "variant": "v8"
        },
        "build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:19.389465135Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.105257163Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:16.256678676Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.259002872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.269564494Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.859381257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.946779685Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.270705591Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:19.270705591Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.389465135Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:0dfae6631fa6687a5608cf91ad4d624240c5205b560cdcff5cc0ecbb61692b2f",
                    "sha256:d4a7c415a623758151614d31484fb309c86b2a9c52cc0aa20efb49caacbb06b0",
                    "sha256:abc9550e0ca2d01aa5c99a987b5536170534e36f40d6bb37956b66ab5cf6bfd0",
                    "sha256:609ba038ba46c0b51fc75a92dc2874b9a3f239c821322fc513df1812899c332a",
                    "sha256:fa957db6a0dbbb0d19e83e2c1ded07eac3b113b68a9b7dcd10f731dcc5473d83",
                    "sha256:232a5b87ffa8c1ebe28a8597d85849defa46572805ca5502b3ad7b41637d92c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfbbc02c54863a5338f373f4c261bda17b5f0692fb4444c3f8d891c693536b12",
                    "sha256:29f73e3be42ceab92fa1853451427fd9ff5a8f7dba22c876698fe662076fca62",
                    "sha256:0b9e9202a3f891f4dfde99479756226a1c5ff0978ca17430abd15507eef2de55"
                ]
            },
            "variant": "v8"
        },
        "build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:41.388056582Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.745979143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:16.505680087Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:17.548708627Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.557118407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:18.235667988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:18.366712531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.262848993Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:41.262848993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.388056582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:1b45cbf5267a9f0ab8ecbd86988784f1e2e2c28f3af0376717b255cf8b453d6e",
                    "sha256:b088866c7d9fa5dd49be6293b68fffe8bda095f770fd112520941385f1179944",
                    "sha256:82627c9307aaa497704a23b1d8332d9937463da738c9d71269fa852dde40d869",
                    "sha256:f5dbcc73acf8960a9d7fbde49a823a58540ad63cc704e56358ecf2d5377af7ea",
                    "sha256:549b93b36a841c9c5b31488dc0adddb05a9c783af6395f67663262e0505944d5",
                    "sha256:d45d30428664b00301e2a9ccbbeb03db3edbfcf14facaa40a577cdf49b119435",
                    "sha256:4fb806f6509ee624a9d9cc447ff6f50cf138dad08a362975ee49b5e8e68487a2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:49618e63f30922f50a0225f928f5c47de4cd3498e121dc19848a4062fddc6de6",
                    "sha256:ffa96bd8ca559a14f6690bb11947f5a2d93b2416c7624c364db02ca3c7c09b9c",
                    "sha256:9a4a507916d64c7369f75553e1d61fdce3c34b5c800bd16903c9191051e5be60"
                ]
            },
            "variant": "v8"
        },
        "build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:50.900782801Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.085484298Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.480942433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.264805583Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.308090459Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.889432067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:07.009584647Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:50.823753435Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:50.823753435Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:50.900782801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:c20deb350aad2eb4ae4a89c3fc2f66aa0466e5fbfb2fd7c8a258cd3f05590c46",
                    "sha256:1f35f18ef2a8df5ab25bc4703d6a41a0d80e4f3a535b8d8b1031ecd719b23cec",
                    "sha256:08d716f6517cc3c8939c159dbf5c85a225cd310710a5307c756862fca6a14175",
                    "sha256:f0696b003b26c46a5335e52aa2d00f2b1e4dfacc257a173795bfa11eed0e3343",
                    "sha256:c88a735e5ee6b912224198888739e38d6656165619623cd7d6218203ef9aa355",
                    "sha256:bdf5d66e2db4143c6eb4ca17515013073e21d5539628b3b8de676b3a2c81173e",
                    "sha256:c48b4479ea6c223c53c91711e04ad6eb9b0b8f105915c4472a8dcbf8d2f0fdda",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b1772c03d0917295ab7c56a866053757c66f0c6a1ec69355c6e10df2ec64b59b",
                    "sha256:de976e3a52c80faf197d3a5732c6743f605e5d53d3c567c2833e50bf744b5f10",
                    "sha256:689aae72086275be80cd1b29fffc562506cdd4d1c2f2f1272877bd99942d52e3"
                ]
            },
            "variant": "v8"
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:17.554433508Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.183480416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.773229632Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.266661371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.322821115Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.921538197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:35.012499009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.47844779Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:17.47844779Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.554433508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:d1b4aa9b8d8d566d3023ab6d554c77c9d97f4bcfba1deabf094ee6789b405dc8",
                    "sha256:fe211da828d0e15f8a01c14a556e1aadb7ea31311774b6a7a46d606efef0cfc6",
                    "sha256:044ef28db9747af95d90ca62b4bb9dec1ce6b4897397ac6e7533062763847f7e",
                    "sha256:ec50ae9763bed240d51fdfc66a9382ca6b56258bd9d64c459a9af6dfc6ef24ff",
                    "sha256:f85a56666b71b6321754d718dc093871923bf3670f69b17926e4b824df15a079",
                    "sha256:90f4dea91a39ec46b6ba7204507c860bd02e4e6ccc1256f0cca64467defd88fc",
                    "sha256:e973170aa6c02283418cf56b474a2cf61dc175f5fe63ce4a370151ca4d155f40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:acc451c64dbe80fe945046f6b95818e8159e6712dc5a1c427c1964979a301cf0",
                    "sha256:e6218ae17379c365292ca904727de91c3295e88f042034d07011dd89426f4c52",
                    "sha256:1f3f208a0cc5605b59d82fb25198bc1dbfb77e2ee78c7474ac61ff4b269b21c1"
                ]
            },
            "variant": "v8"
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:22.963315474Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.918568213Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.036691183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.531065902Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.573452099Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.152887787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.252828137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.890389935Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:22.890389935Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.963315474Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:4b13f483083c8617698a2e81f6118c9859d0dab4721212a761acf188c121f5ad",
                    "sha256:265c972314b7022b2704a7ff0ce70e7d013599c84c597244cedac1efd08c043b",
                    "sha256:5993dcd1264b67af9e13370fd826998c611ee99870202d76537008bd9f53ee91",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:2da16ffc1b870e830396a6437675c45300c40a78ae6362399d8145ac415b16c4",
                    "sha256:537218bc2b0cd2dc44fddab16c472f85e669dedd32e818254a6a726427b752a2",
                    "sha256:cb37913cc8e5a0f895952dd86a4d6abed4e4cb565225dc51d5d458269384dac3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd7253e36259cf80a3b18d75646c5e2e1fb5ac02a90fca8c04bf650c71f3484d",
                    "sha256:61e03a6a19ca55bc5d0b1940adfdc7a446b5e0cb23d0b6097b8b31665bab3ce5",
                    "sha256:fe04b4f0ee704124f85db77bc69843542c1ee38328a55260687e90a8e6f27c3b"
                ]
            },
            "variant": "v8"
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:13.888623162Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.888623162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:9a76ebbda57e918c8d4cc920008cf73e61f356599dd287c55ca53cf566b373f5",
                    "sha256:0f4d887c9b5b859a04d328069283636b4ddfc673b46ac25097855ca417ba115b"
                ]
            },
            "variant": "v8"
        },
        "edge": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:14.641870071Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.641870071Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:010a908287c5e905112954712ce3cc415297abac22069a5f10add3380437ea5b",
                    "sha256:74df40422b4e50aa85372e1bda6cc03d5f734116cdacd303164f225f38d4c106"
                ]
            },
            "variant": "v8"
        },
        "edge-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:11.411653225Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.20982661Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.650848529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.66566915Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.310249952Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.418470344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.29355889Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:11.29355889Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.411653225Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:a8d74d374185d15ee1f255c5029e8b24ec70bcddef0edd45aa5ab7a422d83059",
                    "sha256:080bc064e45a164ea18b4f693a3cd91cafacaf65065db2bfd908f0d688f441d6",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:f916d273073fa628208cd213c006109569d4d5d642301dcbfe280cf3a09901e2",
                    "sha256:6d15e40424b01661b9f2e2b05a40e8d4073187b5fb7c73d9e11e1c64968d9d3b",
                    "sha256:0cfd7db61aee691e45b26fe559dd46932d6e44cb2d8e215fc959660251cd05fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00c4db1cabbd12ddb10c88c15d2ff6e5cfe707e8c216b922fb98eea9f58db7a5",
                    "sha256:fe36b021341fb4345c79fe978ce17a3e1fcbb10667ed067bb96cef99fed72e04",
                    "sha256:ed363f805f327e6f13e6a102fc5ae97e1a1c76b1a2ca2c1e4828217472fa0982"
                ]
            },
            "variant": "v8"
        },
        "edge-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:37.104218238Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.201563231Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:50.785642495Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.813029016Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:51.504465829Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:51.627690935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:36.986843985Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:36.986843985Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:37.104218238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:3714b8cf417294d83577eed2d41a8310ceb4a5b94bc5cf539d6e1e8c151466a7",
                    "sha256:e85e88ac6d3f9d4ebd9cea6c648c03b0a66b9c52246d356883e87839cf548c12",
                    "sha256:f999311f51144aaecd41a9eb1dbe8b3855ea3942de9bcbf01d786ac527c42f76",
                    "sha256:06367b31eb9d353155cf2fda621fa55e6bed3203574c04a36e5676d3a128a11e",
                    "sha256:f4fa602be1406ced6423a61550b81418cd27ad2cab850c264d152c9e5bfad81d",
                    "sha256:39621ce239b64416c48a5d4ec9c87d81e410c86f7a1dee68a1008687b425adb8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aa2b6186124869cdba12845ea166824d9686f0dc94d1250f76251176ea60c22",
                    "sha256:eb15093d024669cfc274544d5e580741efd4bc3406c0406bfdb40b1610b61690",
                    "sha256:35eb5972d944f838289c11f042ce6c4c0e0a70f6c8ef7c6c67b663bc44ce94bc"
                ]
            },
            "variant": "v8"
        },
        "edge-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:45.640617935Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.563384828Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.99926054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.028984069Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.610183733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.706664447Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:45.566858026Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:45.566858026Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:45.640617935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:acf945858f21d55090956ab68feef5519c134db3d35c4a60add5851806f737b3",
                    "sha256:4809cc964e839ad12df3e39c2d8a9af635a3484d5f3a8bb3d4461b70c8068573",
                    "sha256:1536f5f523e12a81a19bcf3121bb72b8d5a47e5715d65a8d553a3e4c4bf6be6f",
                    "sha256:9bf96c77dab58bee2bda9ad58fa4685ab40d1ab075d194af6805ee7062a1cb3c",
                    "sha256:6c661a91758923c2f4a8c87d040bcbeea77dce5bc2ba68a70a7624d1c9c92712",
                    "sha256:a06a7a1dfe7d3815dc3bece268840ab7f34a1131dd0be55e8c684ea37a328fed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:87a12700e9994cbbb7f2da3129171691a775a2ca128941610c75c1e472e85025",
                    "sha256:62d0a34f94c7716013c7eb91df299af405d34f93ca9b141860588ea5b9676ce4",
                    "sha256:102b1f9ca9a39b75c80ec4533b00510fcc2c136bb90dc662b7dfa295cc014e6b"
                ]
            },
            "variant": "v8"
        },
        "edge-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:16.313308594Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.108332988Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:16.847213198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.890794732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.484169098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.566572473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:16.231362823Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:16.231362823Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:16.313308594Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:69265675208218e82360188eedcd2fb00f10071aab69379d0abfd252a499d194",
                    "sha256:3b8e5d938890933bba092c0697d0d3a11db4cc58595cd97526aea5fe42a54e17",
                    "sha256:07e9071f6af9bba6f74b7d537fb7a27c72a63e38ad72c1a3d756f94dbaad6808",
                    "sha256:8aa84076d1ca53df8e1226dae158b6e3d2bc64fbf6922852dc50ebd8eff94107",
                    "sha256:6e358c23739cca005efe72fd93f01f5aeea13b0f0fc56184552f2a43aa40734f",
                    "sha256:f0c1048fdc4f2f5590128806dc16f31e19362a66e2c3234a2a99dffa638d77b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46976bbf2c89806fa9b12e3b41084881a45aeb3e08314b2c66631a7ebcf00382",
                    "sha256:68af96c11361ef042e85ed05035875b0d223cc4ef4843c62f87578b8e883f7f6",
                    "sha256:7b11c1eb49a60c74f55702f28f925893132aa8a0056c5a5d7350b9b7fe734e25"
                ]
            },
            "variant": "v8"
        },
        "edge-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:19.921753058Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.306954561Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.851382754Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.859240993Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.407394161Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.495079842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:19.849311149Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:19.849311149Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:19.921753058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:7ad508c407e90259a8d49fedc3ff2967970f18eac31cc7918fc315071e9de40d",
                    "sha256:5ab0884ae40da0a48886c82780d828dec0ca8128e303c03a8e570a20a681a897",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:fe2e4b120899f408ca419c44309793afa71e212f1ebcad332e3f82abd563c32d",
                    "sha256:2a701c39ec12aa3b70387d8e6f7c5d5d3b932fba7a523fd18215475877991707",
                    "sha256:57da73dcc55a7d8b28235744b2010bc71d51321adaf9064646d24e5cbf206ec1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78126b2b0eab9eb45e86ad8f7ef1e4d92f3ec73111d9d41d8fdd707aa859f37d",
                    "sha256:6d208bde7841a77bc7523ae55653f511823d39c75e9307f72874eb5fad505649",
                    "sha256:a4481045ae886212deebb387df0ecea7f6fa603c6f845f69791017a8037a59a6"
                ]
            },
            "variant": "v8"
        },
        "edge-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:14.641870071Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.641870071Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:010a908287c5e905112954712ce3cc415297abac22069a5f10add3380437ea5b",
                    "sha256:74df40422b4e50aa85372e1bda6cc03d5f734116cdacd303164f225f38d4c106"
                ]
            },
            "variant": "v8"
        },
        "edge-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:19.298256372Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.839006237Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.806951053Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.28407341Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.292304594Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.829861099Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.933510465Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:19.218466854Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:19.218466854Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:19.298256372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:488117bc890689b3c41ff5ef346d22694ccf79609529973d2636c09620ff8c86",
                    "sha256:60969cf69e366128d2d2bb53e0a94fcc9687055476f4824de17cf9284d02a85e",
                    "sha256:9ae63cb6c1a6bc862caf26fc27174bf6ad57e7c0597efa165b5585e6b5cd72df",
                    "sha256:c5f47c01325f973a8e89c02fbef2a71db895c30c5bf1aa87efc56a9dc4d9adde",
                    "sha256:91247282fc0152f97f49f7313dc98efd9405db0fc1f7b51cdec8fdbe65d86c3d",
                    "sha256:46f46d0c4baba5fcbaebf6aced664e0554d861b7c83328dcaf6ef8aa3550818a",
                    "sha256:00d067ff30140f67f646e96919810fefd07a3d4f41c1ea6a04c281e38def6aeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a58917c11d24712d45f148b01f63f7b0df2a354ce7d657954e8d3ad259c950c8",
                    "sha256:a639a0314257a076bb578731ae9a4b1d0e88db3fc95f60afa4e0b27b9dbb3f17",
                    "sha256:32bdd5a0f38e966c9a536116a7f91ecae3382276917537a5d0c49a2d49fe49a6"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:18.215913456Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.340676636Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.340676636Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.340676636Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:02.492059105Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:24.487007585Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.472844784Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.472844784Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:25.483597102Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.494366881Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.506450526Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.506450526Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:26.076574394Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.18751393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:18.10493637Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:18.10493637Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:18.215913456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:c7cd9defab9418807d33459965830d1beeb1c944a811f7af949de4a50bf23e5a",
                    "sha256:522a80391666462e01d095b8b30925b02c9d6b66049da94b2b2245333ffe2235",
                    "sha256:0617350609761a1e6e7d1550f1e83e5cfb01421fc09fa53bf5e691a2597202ab",
                    "sha256:d83f7bc277695a5f3cc94c1cca6acb4ec27bfc1883d88b05847f7bb223a98cac",
                    "sha256:cb148e42f6752c5eac91c299b8109c0afd6939393e8115ff38fd3c7188b6c66d",
                    "sha256:c2eba35ca21e377b30a1598ae987a70c56b866c787c30addbd475dea5071e1cb",
                    "sha256:4e986b5ca48300ba89a6b6ffe7d441a2cbf81dcb74c791576a4e1da7dd04cf6c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a657e93e90d1fc6113183964764c75708e7d13c766cf348d153f52d3379d74af",
                    "sha256:1a1cc4425ae61f4841609973c674fe45c6141f517ea49bb68b381136508f39d3",
                    "sha256:3c0ddda7028c30aa3b33ef93cf2f83298880388b881a6550e98f26fd12428e18"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:36.428063223Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.539960009Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.539960009Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.539960009Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.101287212Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:09.684722537Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.286057884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.286057884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:10.294559717Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.302158078Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.310063164Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.310063164Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:10.875481331Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.976758723Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:36.315995598Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:36.315995598Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:36.428063223Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:38dbac42d3f75205e3979ccc293e44adf5683f68205974c792199b4cdb881f88",
                    "sha256:08033a9f0e03807f0a8318f5444fc60c0308721b1db3f3e8b3e97bf4ec02d34a",
                    "sha256:0293fbe7fe8c8e7748918563fdb3ac776253f305e5fee9232ed96ea314fb1c9e",
                    "sha256:b6902821cdf8b4ef080ec7f2996c66048570a494f585bff8a18448fe409a8b9d",
                    "sha256:bbd2d0d2a39d90b3a22ab7104bf88567aca4e81fc4eae36752388710655dd9ee",
                    "sha256:ef7eb40471789948ec36878df591e30d94e86f785d21c04207b30242c196e162",
                    "sha256:ca0d283a1de85e6a11b5898364c94bff22521ff089be71280746a121b41cd294",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9d2a3c09d0e9744e38b1029025068a8bfc50efc35df529f3daba163ea35d7",
                    "sha256:858941e4792747e703001123700f6e205fafca04f4adf6595cf439a5469c2ff8",
                    "sha256:338538f2095a00fc01a6e5cde8a7d0f00b0912aa8be1eeddcc2cfa37ed732bf1"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:53.157734178Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.036380148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.036380148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.036380148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.075945731Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:01.577945754Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.061492708Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.061492708Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:02.074156601Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.123884009Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.133521055Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.133521055Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:02.693138442Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.787451287Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:53.07046266Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:53.07046266Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:53.157734178Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:bbc4b25a74c37800c6abf24255d149738b4cc28c19f3883cff1d5d4c094943dc",
                    "sha256:adfde6bc24c720a66088a220a45a0609f97d4f36e6b1a58601d9e9f477f3dfbf",
                    "sha256:eae39ad29b2072ccb146a4b7eb235b50b7d3a8464e5c6c475f33553ccd7f6f1d",
                    "sha256:71b52c49b4748a56174e8b8ea05b7edb282a8d94cac0d4ce6526769680685a6b",
                    "sha256:2bf909053c4903b5aa80141c6cd883b3b7869113c16f59256f91406c44ca2bc3",
                    "sha256:f344b2a40e21e6f3c6e18a5d0f3ee0b7074a8d86881e428200e1061e7f2c1dc1",
                    "sha256:91b790dc0f916587f6c1de677448951dddff6cb9f48348258f7fe271454eb145",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:40305dc49fa6635562fdece0eba8d814218d3729098d7ffe23314c3f89b8421a",
                    "sha256:d9cd49c5f1fc2076ea6c8fab35c82e9d95c940060ee47c8232ad46d7ae018e2f",
                    "sha256:cefaab02b3b9119cac1b77a7518c4929ac7587495b9d3d8ab2c105024c58ab74"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.708582972Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.661652468Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.661652468Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.661652468Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:14.678468822Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.036629428Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.662283711Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.662283711Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:33.670973575Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.678792827Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.734048698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.734048698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.299345679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.387315429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.625115657Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.625115657Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.708582972Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:efa0380f226c927f2506701446ba7999836776ab4dc45e624920b0df1382a7b2",
                    "sha256:d96f64a9c488f9fc57d1254b3fe6a1b612cce91e27b577bc92b35537188e7fd5",
                    "sha256:efe827fae0ac5674e5e30d29c9c423ede2f96950bed98b963e49d494cd9283b2",
                    "sha256:16babf3e9f1651ca5f1c6b53be10fbd84f7bf666f0e4c90259db07cdfe4e6884",
                    "sha256:d71ebb609145d04f7e4804223cc802e65b96452db0f2805cda9ae135bdfb0ea8",
                    "sha256:56d1531ff27e0bb2fa5d7face0850f9c97114488ab099d17213fbf93950a3ca6",
                    "sha256:606cb0b0f3f6538e5cd88326ada7081e38ef2d9791f043004b3b26080bbdc2ea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:701f1fa7b3f81043cc84abe20b02b814e98ae1cfed163d21e8d5e4dd92387ff2",
                    "sha256:d3b523735efc5afcdc3ed6edfe57aa4b81822490fabaf3abc41683ea4bbc0d9c",
                    "sha256:2b14ee9f0d6512cc38fd2cb403183cc2098d827b6fef5cb3347084621dfa2cde"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:17.212860051Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.162482794Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.162482794Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.162482794Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:47.093061204Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:06.56100574Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.165222362Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.165222362Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:07.177349054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.188155752Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.221527029Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.221527029Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:07.734767024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.828798653Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:17.125801057Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:17.125801057Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:17.212860051Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:0f27a994f709de1f9cfaa67bf732229dd305737edfa03e22883862ce0ff01532",
                    "sha256:0638101669c5be460824b539ac27a51a7d7b44fd771f1cc5aff093cd07f4e72c",
                    "sha256:2a7f77e624039d174d41bbde434e12d0480d65b98d8c54a7060c054cc684af03",
                    "sha256:934481ca223d927f97cd89880aeaef716871065486b3da0a3640799ac8dc35e8",
                    "sha256:90b8bd5c9ccd62032d15504c5a23af48913ab8e3c203508680ca41fbb8a2c124",
                    "sha256:404a181f5f2d6f018d30321164d658f994841d2315793dab54105c9cc793d613",
                    "sha256:ca5a6c0c2cf0ee5d097c31471b213757c4ac60ef1983518cc5ce0b37eba30b22",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:407804d3454c4b49a72e4e210a5b25596f9e0eabf0a4c78b005db3c062d4d2a1",
                    "sha256:a09e8d217a8544eea555480c5bc9f7caa5d01009a81fad282c9767de9d11bfcc",
                    "sha256:81a452ffd349622426978dedb49eeadae24234ffeee4e36e73443ced298ef533"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:19.298256372Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.839006237Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.806951053Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.28407341Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.292304594Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.829861099Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.933510465Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:19.218466854Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:19.218466854Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:19.298256372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:488117bc890689b3c41ff5ef346d22694ccf79609529973d2636c09620ff8c86",
                    "sha256:60969cf69e366128d2d2bb53e0a94fcc9687055476f4824de17cf9284d02a85e",
                    "sha256:9ae63cb6c1a6bc862caf26fc27174bf6ad57e7c0597efa165b5585e6b5cd72df",
                    "sha256:c5f47c01325f973a8e89c02fbef2a71db895c30c5bf1aa87efc56a9dc4d9adde",
                    "sha256:91247282fc0152f97f49f7313dc98efd9405db0fc1f7b51cdec8fdbe65d86c3d",
                    "sha256:46f46d0c4baba5fcbaebf6aced664e0554d861b7c83328dcaf6ef8aa3550818a",
                    "sha256:00d067ff30140f67f646e96919810fefd07a3d4f41c1ea6a04c281e38def6aeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a58917c11d24712d45f148b01f63f7b0df2a354ce7d657954e8d3ad259c950c8",
                    "sha256:a639a0314257a076bb578731ae9a4b1d0e88db3fc95f60afa4e0b27b9dbb3f17",
                    "sha256:32bdd5a0f38e966c9a536116a7f91ecae3382276917537a5d0c49a2d49fe49a6"
                ]
            },
            "variant": "v8"
        },
        "edge-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:14.641870071Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.641870071Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:010a908287c5e905112954712ce3cc415297abac22069a5f10add3380437ea5b",
                    "sha256:74df40422b4e50aa85372e1bda6cc03d5f734116cdacd303164f225f38d4c106"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:11.411653225Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.20982661Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.650848529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.66566915Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.310249952Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.418470344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.29355889Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:11.29355889Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:11.411653225Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:a8d74d374185d15ee1f255c5029e8b24ec70bcddef0edd45aa5ab7a422d83059",
                    "sha256:080bc064e45a164ea18b4f693a3cd91cafacaf65065db2bfd908f0d688f441d6",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:f916d273073fa628208cd213c006109569d4d5d642301dcbfe280cf3a09901e2",
                    "sha256:6d15e40424b01661b9f2e2b05a40e8d4073187b5fb7c73d9e11e1c64968d9d3b",
                    "sha256:0cfd7db61aee691e45b26fe559dd46932d6e44cb2d8e215fc959660251cd05fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00c4db1cabbd12ddb10c88c15d2ff6e5cfe707e8c216b922fb98eea9f58db7a5",
                    "sha256:fe36b021341fb4345c79fe978ce17a3e1fcbb10667ed067bb96cef99fed72e04",
                    "sha256:ed363f805f327e6f13e6a102fc5ae97e1a1c76b1a2ca2c1e4828217472fa0982"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:37.104218238Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.201563231Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:50.785642495Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.813029016Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:51.504465829Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:51.627690935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:36.986843985Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:36.986843985Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:37.104218238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:3714b8cf417294d83577eed2d41a8310ceb4a5b94bc5cf539d6e1e8c151466a7",
                    "sha256:e85e88ac6d3f9d4ebd9cea6c648c03b0a66b9c52246d356883e87839cf548c12",
                    "sha256:f999311f51144aaecd41a9eb1dbe8b3855ea3942de9bcbf01d786ac527c42f76",
                    "sha256:06367b31eb9d353155cf2fda621fa55e6bed3203574c04a36e5676d3a128a11e",
                    "sha256:f4fa602be1406ced6423a61550b81418cd27ad2cab850c264d152c9e5bfad81d",
                    "sha256:39621ce239b64416c48a5d4ec9c87d81e410c86f7a1dee68a1008687b425adb8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aa2b6186124869cdba12845ea166824d9686f0dc94d1250f76251176ea60c22",
                    "sha256:eb15093d024669cfc274544d5e580741efd4bc3406c0406bfdb40b1610b61690",
                    "sha256:35eb5972d944f838289c11f042ce6c4c0e0a70f6c8ef7c6c67b663bc44ce94bc"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:45.640617935Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.563384828Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.99926054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.028984069Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.610183733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.706664447Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:45.566858026Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:45.566858026Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:45.640617935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:acf945858f21d55090956ab68feef5519c134db3d35c4a60add5851806f737b3",
                    "sha256:4809cc964e839ad12df3e39c2d8a9af635a3484d5f3a8bb3d4461b70c8068573",
                    "sha256:1536f5f523e12a81a19bcf3121bb72b8d5a47e5715d65a8d553a3e4c4bf6be6f",
                    "sha256:9bf96c77dab58bee2bda9ad58fa4685ab40d1ab075d194af6805ee7062a1cb3c",
                    "sha256:6c661a91758923c2f4a8c87d040bcbeea77dce5bc2ba68a70a7624d1c9c92712",
                    "sha256:a06a7a1dfe7d3815dc3bece268840ab7f34a1131dd0be55e8c684ea37a328fed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:87a12700e9994cbbb7f2da3129171691a775a2ca128941610c75c1e472e85025",
                    "sha256:62d0a34f94c7716013c7eb91df299af405d34f93ca9b141860588ea5b9676ce4",
                    "sha256:102b1f9ca9a39b75c80ec4533b00510fcc2c136bb90dc662b7dfa295cc014e6b"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:16.313308594Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.108332988Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:16.847213198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.890794732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.484169098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.566572473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:16.231362823Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:16.231362823Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:16.313308594Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:69265675208218e82360188eedcd2fb00f10071aab69379d0abfd252a499d194",
                    "sha256:3b8e5d938890933bba092c0697d0d3a11db4cc58595cd97526aea5fe42a54e17",
                    "sha256:07e9071f6af9bba6f74b7d537fb7a27c72a63e38ad72c1a3d756f94dbaad6808",
                    "sha256:8aa84076d1ca53df8e1226dae158b6e3d2bc64fbf6922852dc50ebd8eff94107",
                    "sha256:6e358c23739cca005efe72fd93f01f5aeea13b0f0fc56184552f2a43aa40734f",
                    "sha256:f0c1048fdc4f2f5590128806dc16f31e19362a66e2c3234a2a99dffa638d77b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46976bbf2c89806fa9b12e3b41084881a45aeb3e08314b2c66631a7ebcf00382",
                    "sha256:68af96c11361ef042e85ed05035875b0d223cc4ef4843c62f87578b8e883f7f6",
                    "sha256:7b11c1eb49a60c74f55702f28f925893132aa8a0056c5a5d7350b9b7fe734e25"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:19.921753058Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.306954561Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.851382754Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.859240993Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.407394161Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.495079842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:19.849311149Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:19.849311149Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:19.921753058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:7ad508c407e90259a8d49fedc3ff2967970f18eac31cc7918fc315071e9de40d",
                    "sha256:5ab0884ae40da0a48886c82780d828dec0ca8128e303c03a8e570a20a681a897",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:fe2e4b120899f408ca419c44309793afa71e212f1ebcad332e3f82abd563c32d",
                    "sha256:2a701c39ec12aa3b70387d8e6f7c5d5d3b932fba7a523fd18215475877991707",
                    "sha256:57da73dcc55a7d8b28235744b2010bc71d51321adaf9064646d24e5cbf206ec1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78126b2b0eab9eb45e86ad8f7ef1e4d92f3ec73111d9d41d8fdd707aa859f37d",
                    "sha256:6d208bde7841a77bc7523ae55653f511823d39c75e9307f72874eb5fad505649",
                    "sha256:a4481045ae886212deebb387df0ecea7f6fa603c6f845f69791017a8037a59a6"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:14.641870071Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:14.567656202Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:14.641870071Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:010a908287c5e905112954712ce3cc415297abac22069a5f10add3380437ea5b",
                    "sha256:74df40422b4e50aa85372e1bda6cc03d5f734116cdacd303164f225f38d4c106"
                ]
            },
            "variant": "v8"
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "latest-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:09.767497232Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.767497232Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b52b843951a0f07cf6b173c6bfbf62f8c51489714675aa0271b04dd9b341f7d3",
                    "sha256:d8a5c9d6ad410d9f6a452ea0ea55097edc5595fb1734ac17e7f29fc35d335f10"
                ]
            },
            "variant": "v8"
        },
        "latest-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.098700842Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.098700842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:b9c0e0c93ad059698b8dc074921d7cea72bf64e39c68e538afbf9f94d49538d2",
                    "sha256:29f5248f1ff2c219f0e1e0418efa5f1b23071af283887ac85a8c7e0ff680aa59"
                ]
            },
            "variant": "v8"
        },
        "latest-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.52731808Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.52731808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:901a3a9a6dddc257c387188f78132b6f46efb6037c051e47509195857fb24c77",
                    "sha256:8e59f9a9fe21f10dc2fc7bc0886f787a03ce7982c7c47b194ba5261516c91549"
                ]
            },
            "variant": "v8"
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.484232268Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.484232268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:bc9a1952b4fd781924d0ab3870a4df9315179bcb1bee93e38ca53ef6e87b1cfa",
                    "sha256:a048d7174748598c7b8eb2b1987c6aa6694529f8f9edbe6a8ecf83459bd1af3f"
                ]
            },
            "variant": "v8"
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:09.330507181Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.330507181Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:6a695ef343462f2b737cb52ed54a976cdfd02906bdf7f2fee5734525c55566ba",
                    "sha256:61a5dcae2dbb87850aea248654aa233d0196bffa31e30eeee60a4c11009c83b8"
                ]
            },
            "variant": "v8"
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:13.888623162Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.888623162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:9a76ebbda57e918c8d4cc920008cf73e61f356599dd287c55ca53cf566b373f5",
                    "sha256:0f4d887c9b5b859a04d328069283636b4ddfc673b46ac25097855ca417ba115b"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:19.389465135Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.105257163Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:16.256678676Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.259002872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.269564494Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.859381257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.946779685Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.270705591Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:19.270705591Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:19.389465135Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:0dfae6631fa6687a5608cf91ad4d624240c5205b560cdcff5cc0ecbb61692b2f",
                    "sha256:d4a7c415a623758151614d31484fb309c86b2a9c52cc0aa20efb49caacbb06b0",
                    "sha256:abc9550e0ca2d01aa5c99a987b5536170534e36f40d6bb37956b66ab5cf6bfd0",
                    "sha256:609ba038ba46c0b51fc75a92dc2874b9a3f239c821322fc513df1812899c332a",
                    "sha256:fa957db6a0dbbb0d19e83e2c1ded07eac3b113b68a9b7dcd10f731dcc5473d83",
                    "sha256:232a5b87ffa8c1ebe28a8597d85849defa46572805ca5502b3ad7b41637d92c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfbbc02c54863a5338f373f4c261bda17b5f0692fb4444c3f8d891c693536b12",
                    "sha256:29f73e3be42ceab92fa1853451427fd9ff5a8f7dba22c876698fe662076fca62",
                    "sha256:0b9e9202a3f891f4dfde99479756226a1c5ff0978ca17430abd15507eef2de55"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:41.388056582Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.745979143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:16.505680087Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:17.548708627Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.557118407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:18.235667988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:18.366712531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.262848993Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:41.262848993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:41.388056582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:1b45cbf5267a9f0ab8ecbd86988784f1e2e2c28f3af0376717b255cf8b453d6e",
                    "sha256:b088866c7d9fa5dd49be6293b68fffe8bda095f770fd112520941385f1179944",
                    "sha256:82627c9307aaa497704a23b1d8332d9937463da738c9d71269fa852dde40d869",
                    "sha256:f5dbcc73acf8960a9d7fbde49a823a58540ad63cc704e56358ecf2d5377af7ea",
                    "sha256:549b93b36a841c9c5b31488dc0adddb05a9c783af6395f67663262e0505944d5",
                    "sha256:d45d30428664b00301e2a9ccbbeb03db3edbfcf14facaa40a577cdf49b119435",
                    "sha256:4fb806f6509ee624a9d9cc447ff6f50cf138dad08a362975ee49b5e8e68487a2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:49618e63f30922f50a0225f928f5c47de4cd3498e121dc19848a4062fddc6de6",
                    "sha256:ffa96bd8ca559a14f6690bb11947f5a2d93b2416c7624c364db02ca3c7c09b9c",
                    "sha256:9a4a507916d64c7369f75553e1d61fdce3c34b5c800bd16903c9191051e5be60"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:50.900782801Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.085484298Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.480942433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.264805583Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.308090459Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.889432067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:07.009584647Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:50.823753435Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:50.823753435Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:50.900782801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:c20deb350aad2eb4ae4a89c3fc2f66aa0466e5fbfb2fd7c8a258cd3f05590c46",
                    "sha256:1f35f18ef2a8df5ab25bc4703d6a41a0d80e4f3a535b8d8b1031ecd719b23cec",
                    "sha256:08d716f6517cc3c8939c159dbf5c85a225cd310710a5307c756862fca6a14175",
                    "sha256:f0696b003b26c46a5335e52aa2d00f2b1e4dfacc257a173795bfa11eed0e3343",
                    "sha256:c88a735e5ee6b912224198888739e38d6656165619623cd7d6218203ef9aa355",
                    "sha256:bdf5d66e2db4143c6eb4ca17515013073e21d5539628b3b8de676b3a2c81173e",
                    "sha256:c48b4479ea6c223c53c91711e04ad6eb9b0b8f105915c4472a8dcbf8d2f0fdda",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b1772c03d0917295ab7c56a866053757c66f0c6a1ec69355c6e10df2ec64b59b",
                    "sha256:de976e3a52c80faf197d3a5732c6743f605e5d53d3c567c2833e50bf744b5f10",
                    "sha256:689aae72086275be80cd1b29fffc562506cdd4d1c2f2f1272877bd99942d52e3"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:17.554433508Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.183480416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.773229632Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.266661371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.322821115Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.921538197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:35.012499009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.47844779Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:17.47844779Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:17.554433508Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:d1b4aa9b8d8d566d3023ab6d554c77c9d97f4bcfba1deabf094ee6789b405dc8",
                    "sha256:fe211da828d0e15f8a01c14a556e1aadb7ea31311774b6a7a46d606efef0cfc6",
                    "sha256:044ef28db9747af95d90ca62b4bb9dec1ce6b4897397ac6e7533062763847f7e",
                    "sha256:ec50ae9763bed240d51fdfc66a9382ca6b56258bd9d64c459a9af6dfc6ef24ff",
                    "sha256:f85a56666b71b6321754d718dc093871923bf3670f69b17926e4b824df15a079",
                    "sha256:90f4dea91a39ec46b6ba7204507c860bd02e4e6ccc1256f0cca64467defd88fc",
                    "sha256:e973170aa6c02283418cf56b474a2cf61dc175f5fe63ce4a370151ca4d155f40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:acc451c64dbe80fe945046f6b95818e8159e6712dc5a1c427c1964979a301cf0",
                    "sha256:e6218ae17379c365292ca904727de91c3295e88f042034d07011dd89426f4c52",
                    "sha256:1f3f208a0cc5605b59d82fb25198bc1dbfb77e2ee78c7474ac61ff4b269b21c1"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:22.963315474Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.918568213Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.036691183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.531065902Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.573452099Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.152887787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.252828137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.890389935Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:22.890389935Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:22.963315474Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:4b13f483083c8617698a2e81f6118c9859d0dab4721212a761acf188c121f5ad",
                    "sha256:265c972314b7022b2704a7ff0ce70e7d013599c84c597244cedac1efd08c043b",
                    "sha256:5993dcd1264b67af9e13370fd826998c611ee99870202d76537008bd9f53ee91",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:2da16ffc1b870e830396a6437675c45300c40a78ae6362399d8145ac415b16c4",
                    "sha256:537218bc2b0cd2dc44fddab16c472f85e669dedd32e818254a6a726427b752a2",
                    "sha256:cb37913cc8e5a0f895952dd86a4d6abed4e4cb565225dc51d5d458269384dac3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd7253e36259cf80a3b18d75646c5e2e1fb5ac02a90fca8c04bf650c71f3484d",
                    "sha256:61e03a6a19ca55bc5d0b1940adfdc7a446b5e0cb23d0b6097b8b31665bab3ce5",
                    "sha256:fe04b4f0ee704124f85db77bc69843542c1ee38328a55260687e90a8e6f27c3b"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:13.888623162Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:13.806370556Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:13.888623162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:9a76ebbda57e918c8d4cc920008cf73e61f356599dd287c55ca53cf566b373f5",
                    "sha256:0f4d887c9b5b859a04d328069283636b4ddfc673b46ac25097855ca417ba115b"
                ]
            },
            "variant": "v8"
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:09.767497232Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.767497232Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b52b843951a0f07cf6b173c6bfbf62f8c51489714675aa0271b04dd9b341f7d3",
                    "sha256:d8a5c9d6ad410d9f6a452ea0ea55097edc5595fb1734ac17e7f29fc35d335f10"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.098700842Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.098700842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:b9c0e0c93ad059698b8dc074921d7cea72bf64e39c68e538afbf9f94d49538d2",
                    "sha256:29f5248f1ff2c219f0e1e0418efa5f1b23071af283887ac85a8c7e0ff680aa59"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.52731808Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.52731808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:901a3a9a6dddc257c387188f78132b6f46efb6037c051e47509195857fb24c77",
                    "sha256:8e59f9a9fe21f10dc2fc7bc0886f787a03ce7982c7c47b194ba5261516c91549"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.484232268Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.484232268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:bc9a1952b4fd781924d0ab3870a4df9315179bcb1bee93e38ca53ef6e87b1cfa",
                    "sha256:a048d7174748598c7b8eb2b1987c6aa6694529f8f9edbe6a8ecf83459bd1af3f"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:09.330507181Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.330507181Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:6a695ef343462f2b737cb52ed54a976cdfd02906bdf7f2fee5734525c55566ba",
                    "sha256:61a5dcae2dbb87850aea248654aa233d0196bffa31e30eeee60a4c11009c83b8"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        },
        "run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:09.767497232Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:09.641832022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:09.767497232Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b52b843951a0f07cf6b173c6bfbf62f8c51489714675aa0271b04dd9b341f7d3",
                    "sha256:d8a5c9d6ad410d9f6a452ea0ea55097edc5595fb1734ac17e7f29fc35d335f10"
                ]
            },
            "variant": "v8"
        },
        "run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:31:29.098700842Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:31:28.978289905Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:31:29.098700842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:b9c0e0c93ad059698b8dc074921d7cea72bf64e39c68e538afbf9f94d49538d2",
                    "sha256:29f5248f1ff2c219f0e1e0418efa5f1b23071af283887ac85a8c7e0ff680aa59"
                ]
            },
            "variant": "v8"
        },
        "run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:16:37.52731808Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:16:37.445697507Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:16:37.52731808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:901a3a9a6dddc257c387188f78132b6f46efb6037c051e47509195857fb24c77",
                    "sha256:8e59f9a9fe21f10dc2fc7bc0886f787a03ce7982c7c47b194ba5261516c91549"
                ]
            },
            "variant": "v8"
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:18.484232268Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:18.403632016Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:18.484232268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:bc9a1952b4fd781924d0ab3870a4df9315179bcb1bee93e38ca53ef6e87b1cfa",
                    "sha256:a048d7174748598c7b8eb2b1987c6aa6694529f8f9edbe6a8ecf83459bd1af3f"
                ]
            },
            "variant": "v8"
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:02:09.330507181Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:02:09.250345918Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:02:09.330507181Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:6a695ef343462f2b737cb52ed54a976cdfd02906bdf7f2fee5734525c55566ba",
                    "sha256:61a5dcae2dbb87850aea248654aa233d0196bffa31e30eeee60a4c11009c83b8"
                ]
            },
            "variant": "v8"
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "lcbzu9",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:29:21.833943677Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "LABEL io.balena.device-type=lcbzu9",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:29:21.761484461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:29:21.833943677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:2a0571f6237175d66e51d5865b0e5ff1a570fe544973c08919c041a2c438d1ca",
                    "sha256:5cc26f0d59695bbcf4e96c96da57ac5c220d0c572ed85f61e53b5f49900e294b"
                ]
            },
            "variant": "v8"
        }
    }
}