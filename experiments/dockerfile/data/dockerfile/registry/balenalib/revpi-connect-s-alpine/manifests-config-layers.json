{
    "manifests": {
        "20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f2e88be7663ecf4c2d0f451c3ea68ae18eae1ab76fe38511e2165fad7326715",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33ea85c29102504fbeccaf2080e556ab011e3bdae9ce265a15a2ce1f86a558d5",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:215dfd9a5f4ea62e626f07d2fcbb1184cd840f31fb88df7b2c128a3c36acead9",
                    "size": 10597566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aec9d11ed900b291898bf4ce7d9e1af18a8357a48bf257640eb7cae452e669fe",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5857ab975ab7b29f447d0c965124acf114668187f41d6dee94de0203d3a77e33",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdbf6ba4d206f4d06ce141e22ef81454b9ad97412ad2e68d7d87683678fef43",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0503736455c243b1cbed3fda5582c23170a698be155f99920b743f68f08660f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a724695a5b06c3c97b932fe9c72551f2f0e16ddfbe9fb25b797fa147d8d5de3",
                    "size": 884486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43c008639233d2f2a3850699df606633c0b8556874f8d8a09b566944f121054f",
                    "size": 473
                }
            ]
        },
        "20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d882231882d7d19b19d623ee4eaeb67cfb57c30a138904afa42b114644723f9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91263b940ffe7f5b6de5bf396e1e96432a23d242735753e9e5a45e1f776a2b36",
                    "size": 884477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b114132d25e2183f96a417bd33d3c2e9901b9156fca3f3055efeb950eae5347",
                    "size": 473
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed4fd5194f2ffeca064377df5d829b6690a2ee41049757a82cbe621e36c74037",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0535080a327f1f28c2dfe3afa856ddaadf669207507a843abeebc573d55da95",
                    "size": 884482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c3c0d967da5827a4f738d95d709b6e6df0f35ad2e0d7424e7ce4ac164f5965d",
                    "size": 473
                }
            ]
        },
        "20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7fb51567cf7d1ab57e178240ebb4b3364ed67a748c95efe06dcd9c80c624ff",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75a1f3ddd15bca3d2cd66fbd9015fd31010a23992a6f1f809e5dcc1761cc7053",
                    "size": 884496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9df358a2524674c3ffcdd51d55fd04f2a2bf10b6f6c875c3d94e855d96c12ccf",
                    "size": 473
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1374ac66364936743d2a44c61ff2984a759241d747d0f29d00c5603bcc23ddd",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:772b388c3211b3827e1e733e7bd5db2fdc33547225c8193b49a800997f30de16",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa5e1000d0253419cdb9542f5542d6dda24ffbb3893b2083ca8798160db7cf40",
                    "size": 473
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:927e20d7f0b1bdd86455ffbe3e49e972c86a10725cd1d15597080d524c3e04df",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13614ffeedb01f2708929cf6da18bd2baf1a8f9f11d8a1e03fa6be8710b7e728",
                    "size": 884622
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c70243ffe120aa800bb06c71fa4181bafdb6bb49598a0176f146676fa32e017a",
                    "size": 473
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "3.12": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b868556affc34ca2d12a43fecf9b7c1630048ffdf6552e57b29f5f525bd9786",
                "size": 6373
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f375e3a7924064668557a319ed2442f7243460d21f5b7a240754707f5854f6bb",
                    "size": 5645866
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0bd65019e6289b08802f089656dd8427c0cecc7eb7d25ee52d767387d63957a",
                    "size": 472
                }
            ]
        },
        "3.12-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:155ebcd58370281ddc7ef7f4f5d21b6511420c69762ce13daff4f8cafc4316ef",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e76dcc9e25cd34b41a4c8c36195d1328528b4bb24240712881921998870e4e98",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19a49c8df55bad6bfb05ab0bf77f26127f7c249e12ba36ad4bb60c62240d566e",
                    "size": 11646714
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70edbcd570a432a3e1f948b76325e8bfa71729bac792b19d2ea4338710c4adec",
                    "size": 473556
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ab648cda74791746f1e40ca6c7c38efdc32f3c32c33c2699b18cfb0f0d059f",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0335c6b1b98524741453414b88011e360a544b89495c5b9c4e94fb8c9783759",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9e95dfb44098abcd7c284621c1bda9984865a8ad6888fc73c714171948898ff",
                    "size": 664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7a830abb06c9a435b2cb46add5ccace23716b17552cceacf89aad12f641985",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04a212c515f4cd633312899f868ff61e58cd8e2883dcf59f7d9076f78c12c2d4",
                    "size": 5645871
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb91841f0638c12b879ec1c26f32ff86af23d6fc9de11570980b2630ef273685",
                    "size": 471
                }
            ]
        },
        "3.12-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:65529fc52fbaeadba568b6d9e0bbda0cdd2c16468843bdb7d850247a02e26b96",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57df70169f79c255e8b1ad2d73f572282dc16ea6ad47b15c89078e6cfd267def",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:331583ae3fdecf2583625cf32faf3ed7dfdf0e2cda80561a55ea0fcbe2669fc9",
                    "size": 11646781
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18c49974fa7440da020d3abe10b4d31bf181e18358753a76fefe45bfdda935e4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94fb3f37674efd5eea1381c57e3163849ca7566f82a6c09bda258840a685aa1b",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b55c0ed0b2423a72099052bfc587fb8d779773b5d65df3af657fc40cd723cb9",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c38c6eb69c70a394dc539985169400b80c203db92c70e25c18ef9c30e196d52d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c01b719d483377c69c84d0222af72084997f13ee46e8b825fe7cfc2bbe9027",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6ccb81f684a548f83ce749651a0ebe99dde224a6f12b21f2f715fa76c3935f8",
                    "size": 5645864
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab8639094f17d3bb03e85bcb3236d8e9624de33f8a77cff1bf1ef32bc88385b8",
                    "size": 472
                }
            ]
        },
        "3.12-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af496e5aeaa9cae7173a1d03fec0b5764f92fa478ea16ecef5464a0e2a8efe21",
                "size": 6386
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f5d21639880576a697503a23ddaae8ae707e5863298069f5887df3026cf4eb",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b85bac4b624bad15aedac874f6971810dc8e0ec2805c3af37ce92a43e685404",
                    "size": 11646807
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc574c555be827a0dbde5edb8516586374b42dd10feadeaea82ce0c5ce4bf79f",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f955f49063d83cbaaebb17c33a84d247f084374e0aed5093fae500d7afec4b2",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2eba88ef1a5a378dd9bf149cdc479facfcef2a66eb2b85b927908ff99ccd94",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b123b2b26ce703a3e3738b56b5285b45575e08f81724d259fafc7576fb4ed01",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:287b29ce00c7179bf7689bd4d5146a522b7d6fb4cfc8489e33848cd46b659b8f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42db256b791eab4483bd3fd8bda358bc6a1a660a7e91c9a83dabfc6fcfb4ca34",
                    "size": 5645873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1db0d6ee97869d3dbed533b367a66a21a89931731277764949a9e93fd92150a",
                    "size": 472
                }
            ]
        },
        "3.12-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:70a584512803dba30ef35a55df21696220430f0004a2e1e03e69220595214af9",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b681113aff97ff779a8c0dfd1d02dde5c56887e6e6f5d2f3bfa122ebc4f70d5",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8952bddd3e502c3818ddb6dc533f657be4f51205b480dcb681579377843f2452",
                    "size": 11646806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7dc85ef81fce9a9832ebbdb634d652f591cc52d16334c35e474c8426a553752",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef809ebdd563db5edcb85a8c5c6f5da5d59299b952d5196edab6e40cb12d991d",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:749c8b08096215dd7c5497725e347e6748060e71a1e3a9e461734289a7c9d240",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:117fe0028f822493b2df9a7b5e677e82a16022c7b4c8c54edcecf8ba0e4716ff",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08568fcac9fdbfc32cf6f436adc0207c50fc84165c6709e42b3fd37f05ba95",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2853c592a59c8c3a62ac0aafec09a006abccd75feb706c0d11a4539b1303841c",
                    "size": 5645871
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:841c2bc85e4673fa7706eb8229b7c3734bd298faebc6ab8802170df32669de8b",
                    "size": 472
                }
            ]
        },
        "3.12-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c21981aa298d6e2aed1d3ea96289085d500e0fb4b6f192033292bbfeea8d37d",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06ec9137a42a38d1f061b0a0cbf54ecb684dd44f4ee5157007fe6a9e747f8e53",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8dada1054b17fb20bb79832b925c8b9dce622edca348fd2377bd653981a043",
                    "size": 11646785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45ee405c7c3d08ff739dc4b829196eb9370ad227c1bdd5af58964bc3d24b3f26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56bc9400b0d84d9211200a8b20d4e49354de5de732f43a5455f15a30c9c4c4",
                    "size": 5645872
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5de1198232056727a0f0760a89914d4dbe4b019444840e915ed16483f06076ca",
                    "size": 472
                }
            ]
        },
        "3.12-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f6f2779a42f9a2d4fc88925d04e5fad5bd5a63f66b9b2f2d05608d5ec5e8f21d",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eebfc98a8c641639d549ccf1ac478d8f076d9a32316453f3b0fba242c52131dd",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:592a0df72b23acf32b600cb56a00e37340811c535c6160fdbf838cbb2b74a933",
                    "size": 11646763
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12bac0bcbb3d24985664b5d29e2b20644967bab5df252f5be1941f76cd5d82bd",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4930b1fa170111e82d9685f1b45341cfcfb75835f45973cf73e2ecd66e7bee5d",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0048025b1f07896335092b0274365a0d170e96d8f7e508deedea11d10cd23583",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:167cabc231b87d69dc9d4f58a73f14b3d9c0e2039cd3775564151fbc2619912f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77a94d7d00a0c17820f3ff0987d40aa6c82ee5dd7c360a8d3f158849807bae44",
                    "size": 5645863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:212c3260d36ed5d734804d9155b903772f9c92fb576bf659e88e9ae458acee9b",
                    "size": 472
                }
            ]
        },
        "3.12-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b868556affc34ca2d12a43fecf9b7c1630048ffdf6552e57b29f5f525bd9786",
                "size": 6373
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f375e3a7924064668557a319ed2442f7243460d21f5b7a240754707f5854f6bb",
                    "size": 5645866
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0bd65019e6289b08802f089656dd8427c0cecc7eb7d25ee52d767387d63957a",
                    "size": 472
                }
            ]
        },
        "3.12-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54e45097d8c3701918f7046fd50390e5c4da872711c2b355086c3bc1798aab2f",
                "size": 6993
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e385c4fb875fde349d76c4bcd65c042675a12567f31bbf56dfb9941e6aa07ea9",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7ea170833cd7f7e667e607ddfdd87807de3b423144b3b5a6c7d55621ce97c56",
                    "size": 11646767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aafab088444c3e02c37a93625088342329a002b269e642918265382ac6728da",
                    "size": 144486928
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c66805e01748fbaaa45e04315f3756760941fa1b0088a1215b1bc339e5e5806",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1e0098d5e4668d3ba2e2a0e0de59b43db2d079323313ab74a070980b32b2201",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9158b3e2849fdd9d1d337201c10967ad29da3b95e3c7ad282fbeecad994d93d",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2984b60387162319205bdb2b27d6be3e4b03f044434c54ad3b028bf176f1fe57",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd3d6d27fecfc4e110c53634356d78f1b9d28331ea6e0fbc0e13f7abed5ee88c",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4eb90d2a5db795f15330f299f8afbdc14684638fbfbc980b0fc6f05d28acc1c0",
                    "size": 5579561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85f00efdc4d4d577e1cf20a1a2ac8a9704d9809cb5cf6284d94a8e4cf7b3d993",
                    "size": 472
                }
            ]
        },
        "3.12-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1a42fb5ee1979fbaad8213267a6e47424b3d837d9633e87c8d2664c37d8d048d",
                "size": 7008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:410d9c8ab457269bff7a39f502a7d0344a8ea3bf9468ad19a4cf98bfd4111984",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1a7caffb9f8e1bd2439a90d248b41c7af431fafb74785d610e91c85de0a9676",
                    "size": 11646781
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1171ee26ebdd4a72ceba04144d2ad9cb645bbf76be05f60d2e2ef43360a5ea78",
                    "size": 144487416
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11b7beb1f32ee73e7eec7b2ca1f29abe136250fdb355182442b709f2b8076e72",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6230f5fc6645cab7d60c56a736aefbfb014204d9ef557c4e15b7a07a1cdce6c",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bc750ac8b5aee9a0f1000fd0a81b5f53301e0707ff7c28e84b9a6ee3f9fde0a",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43e7538e61acb9ad41cc41485c26d5f5be96f4a279485fa7dc4d858d38308a64",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4d677e9e20581a0101fa810a2499df68de7020495a6016bc8073d030a44097f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81465c0189f6578e6be7601b1d9d09a0aa55116eef6980c9b498ef60594a934e",
                    "size": 5579559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9ec3e234f288c2fc086927133e6e1a54a679bd000f6ad22f8617433a38ecb3c",
                    "size": 472
                }
            ]
        },
        "3.12-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:81d4f4351838639a91860aecc42609b1cd36d6971c7470e6156441eddcb1c01a",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9f1b11b7c50cc4d3b819ad72480b99de9119ce2c2870ceca069961d9c2328b1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17316e3346384171d40984a484f9ef74d6f8f2206089898f44db882c0072ec58",
                    "size": 11646792
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b63cccb5bd53e2398c39dac86aecba9abf4f6f1f6ec86f2c4de6c63f77e83eb",
                    "size": 144486990
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d43a683caeaa82518c0e3970fb685d51794c5846f869a8461736d887ccd05f13",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5759f4e513e6afd62f0569822c636fb26f6b36a69336441e289f246e7d5fe7f3",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc91630791e5c4ae8f3c1b7ec61025b835f70168d263751245bb784fc1932563",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2de7ecb64f2f6022b61a4687d8a8fd37f2a5c74526e7c058cc5acee029738e9",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23370a332a0d07b4af8f297c8e8059cf51c2614480e569e58668be4699cbbc4c",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70fe3778599a1f31150337a6dd22da97c8a2e2bde6b4a77d4b1a8cd2cf715322",
                    "size": 5579546
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:383abe60e005151034c244be78ad516c0164988098364694e9a5f3fbfb2cebad",
                    "size": 472
                }
            ]
        },
        "3.12-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a94ea954831248d1d7a056e86682438cbeb58711338283964da1a43e509d1b63",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faa6680d91e4e87f3458d7196bdb80c1b70211257317e9007ff47193b84fab9d",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb986990b4225e80e4b26fefb1247cd87dbf78c638ef1127d23d282cfb71da10",
                    "size": 11646770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0545dd4fe6e4cc05ced59fa6efaff1196fab28acec924314ef586b579ddd73b9",
                    "size": 144487634
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef8019c1f5bac3f812515391c0c6ae45bfd526278986cdb43b33a555d8c80f6b",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ae1939392ea2f6c1a67d9a6e65ac7df50a25fa256bac404ada017bb35463596",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acec54700053d5a2bb9ba38b69950b3d1d334f6e73c89125f5cd5525d3135a2c",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7fb094b6536c1e59f359960f19f31113ab516f0dda186b9eb4062cb0ff0d300",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e20de00f3c53d05f3ec149ffe9207abb57ea30a42800835cf9e72731cb297587",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:377b11d0e7cdf0a2b8a71d4a028d121cf4031b48af7c3e6b671332ca6052397b",
                    "size": 5579534
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2e866ef572e15ccb51f561f0a2725c2028dd985102569b5ef9a53836d95871d",
                    "size": 472
                }
            ]
        },
        "3.12-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ffa814930257b5a7c9ff7ae0c47163502af07c23cea643799f378ed48aec3c9c",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c33bbc7691aa35ec7f32057e1e5c25ea4c9f4a10c684cfdf06ee6c1e8498ba1",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:253e371becd85aa864bddfd03947de39a1fa41075f4b7aa7f87892b61e4df93b",
                    "size": 11646769
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86743d5f658bdf89bc2db9b7bbcb81a2937d9dd3d82361441d14c74bb03ccbc1",
                    "size": 144487399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6f7ee3b2555c2c90bb9769bcb14fe18fd794d3e8cd5b1c3629c970d602d4fee",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48036375f087bedcb51515e43ad34ae367fa2eecae8afde5666e53d0718fcf04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fc806d48fb860fb1d27e5189aa5054125bd06231753f3ac89c4dedc2ea4d785",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47c730ea44aa2528150346e0a0304af25ec01f3ca6b0112f75c413a602a936e",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f28c514d13140ca7dc0785f5e48b383d64c6a5b2b7ae1af24346bb09a8b1740f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:750aa319efe97a36e4e0bdb8d929e110f9fd6a3129f0fb047527446f21efe8a6",
                    "size": 5579553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b9f70d95681102c4f8c7b5f0c9161a2632eaf607ed83ecfece7b6073da726c",
                    "size": 473
                }
            ]
        },
        "3.12-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cdf78422f9e85272bd9d1018ec6eac4e669ab80f73432a4ee0af3db6c622b004",
                "size": 7008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31e0e36d7430ca5b6ed386d443bdbb9dc9085d98c989976de34a95004d97ecde",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09004e22ad5be314c0592a7fbe1d041f06a993e8409535c36fe6bdd0c2dd308d",
                    "size": 11646772
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8d5634be0ef1f3d996a89c26dffda363fb025b48a5eb34fb0276b721f0cd350",
                    "size": 144487206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2636221cd77e46ef754dbc09c0a0bfb26c5f48f11d3c7321d5818829dc83c2c0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcd131edf9347d7068c3e51c0b2095b0e8816d0f315fff672ab302d53b929f92",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e7077edc86783797d47b29076264541d863fd341528e24cdb1eecb9df7bfd0b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c91504e0b366db70d7be1ee8405436c3f5b96f37e858eeb4c2008b3dbd3df8e8",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a68217816122a4e723ef54ba49f542d82f3c201437b4b3648ad9f4093468f0bb",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d3e06487d3c3ae5259c85cdb626d7bca96b645886b4e6033f622ad00deb68c8",
                    "size": 5579542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22b5a043ca209ec09b53a45871fad4a43d67281ee7703899db4f2b1d51aefb21",
                    "size": 471
                }
            ]
        },
        "3.12-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ee2d2a46773771859f1a4fcb4ea95e0c3b8cd75b9cdeef2114f46115887f5083",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abad444e3ab99d8193cb1464d3e168e6d927aa26744379376f44d6eadcafd2f5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02d03406b7451004f6f6737ddb1214c9296566a5691fe5365df5804935955c27",
                    "size": 11646806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b2cff2c17f7280362420094ccb5705d3568192b51c9cdfe6e85b7fda7c831e",
                    "size": 144487064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebd6f214a875a49edaa66310dbadf42215404478ec815e66219d4ef5d11ae77f",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2adacd31655677a073e13bf6cee48d4387e0f2444128ec966d774e65eef98a1b",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd316ce456a3f35fba9c25c9105d0adabbe4374be279c37ff1a79e98528548f3",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ecd1c991211daeef6cda926dc0c56c82aefedf9e259e31cc5e39b188f13ac89",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d11fce11eb7a62726f94c1db85025a680282de14b577a57969b637c26ddd0ac6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2791f3febd50d24e3042f9d3e3ac9c8488aa885f92589bc99902a1425e0512",
                    "size": 5579537
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6d930cf16cc5fa2f89fb108174c3e7151651baf1784b40fd56b4c3bb251b13",
                    "size": 472
                }
            ]
        },
        "3.12-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:54e45097d8c3701918f7046fd50390e5c4da872711c2b355086c3bc1798aab2f",
                "size": 6993
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e385c4fb875fde349d76c4bcd65c042675a12567f31bbf56dfb9941e6aa07ea9",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7ea170833cd7f7e667e607ddfdd87807de3b423144b3b5a6c7d55621ce97c56",
                    "size": 11646767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aafab088444c3e02c37a93625088342329a002b269e642918265382ac6728da",
                    "size": 144486928
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c66805e01748fbaaa45e04315f3756760941fa1b0088a1215b1bc339e5e5806",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1e0098d5e4668d3ba2e2a0e0de59b43db2d079323313ab74a070980b32b2201",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9158b3e2849fdd9d1d337201c10967ad29da3b95e3c7ad282fbeecad994d93d",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2984b60387162319205bdb2b27d6be3e4b03f044434c54ad3b028bf176f1fe57",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd3d6d27fecfc4e110c53634356d78f1b9d28331ea6e0fbc0e13f7abed5ee88c",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4eb90d2a5db795f15330f299f8afbdc14684638fbfbc980b0fc6f05d28acc1c0",
                    "size": 5579561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85f00efdc4d4d577e1cf20a1a2ac8a9704d9809cb5cf6284d94a8e4cf7b3d993",
                    "size": 472
                }
            ]
        },
        "3.12-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b868556affc34ca2d12a43fecf9b7c1630048ffdf6552e57b29f5f525bd9786",
                "size": 6373
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f375e3a7924064668557a319ed2442f7243460d21f5b7a240754707f5854f6bb",
                    "size": 5645866
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0bd65019e6289b08802f089656dd8427c0cecc7eb7d25ee52d767387d63957a",
                    "size": 472
                }
            ]
        },
        "3.12-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:155ebcd58370281ddc7ef7f4f5d21b6511420c69762ce13daff4f8cafc4316ef",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e76dcc9e25cd34b41a4c8c36195d1328528b4bb24240712881921998870e4e98",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19a49c8df55bad6bfb05ab0bf77f26127f7c249e12ba36ad4bb60c62240d566e",
                    "size": 11646714
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70edbcd570a432a3e1f948b76325e8bfa71729bac792b19d2ea4338710c4adec",
                    "size": 473556
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ab648cda74791746f1e40ca6c7c38efdc32f3c32c33c2699b18cfb0f0d059f",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0335c6b1b98524741453414b88011e360a544b89495c5b9c4e94fb8c9783759",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9e95dfb44098abcd7c284621c1bda9984865a8ad6888fc73c714171948898ff",
                    "size": 664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7a830abb06c9a435b2cb46add5ccace23716b17552cceacf89aad12f641985",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04a212c515f4cd633312899f868ff61e58cd8e2883dcf59f7d9076f78c12c2d4",
                    "size": 5645871
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb91841f0638c12b879ec1c26f32ff86af23d6fc9de11570980b2630ef273685",
                    "size": 471
                }
            ]
        },
        "3.12-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:65529fc52fbaeadba568b6d9e0bbda0cdd2c16468843bdb7d850247a02e26b96",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57df70169f79c255e8b1ad2d73f572282dc16ea6ad47b15c89078e6cfd267def",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:331583ae3fdecf2583625cf32faf3ed7dfdf0e2cda80561a55ea0fcbe2669fc9",
                    "size": 11646781
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18c49974fa7440da020d3abe10b4d31bf181e18358753a76fefe45bfdda935e4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94fb3f37674efd5eea1381c57e3163849ca7566f82a6c09bda258840a685aa1b",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b55c0ed0b2423a72099052bfc587fb8d779773b5d65df3af657fc40cd723cb9",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c38c6eb69c70a394dc539985169400b80c203db92c70e25c18ef9c30e196d52d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31c01b719d483377c69c84d0222af72084997f13ee46e8b825fe7cfc2bbe9027",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6ccb81f684a548f83ce749651a0ebe99dde224a6f12b21f2f715fa76c3935f8",
                    "size": 5645864
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab8639094f17d3bb03e85bcb3236d8e9624de33f8a77cff1bf1ef32bc88385b8",
                    "size": 472
                }
            ]
        },
        "3.12-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af496e5aeaa9cae7173a1d03fec0b5764f92fa478ea16ecef5464a0e2a8efe21",
                "size": 6386
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2f5d21639880576a697503a23ddaae8ae707e5863298069f5887df3026cf4eb",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b85bac4b624bad15aedac874f6971810dc8e0ec2805c3af37ce92a43e685404",
                    "size": 11646807
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc574c555be827a0dbde5edb8516586374b42dd10feadeaea82ce0c5ce4bf79f",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f955f49063d83cbaaebb17c33a84d247f084374e0aed5093fae500d7afec4b2",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba2eba88ef1a5a378dd9bf149cdc479facfcef2a66eb2b85b927908ff99ccd94",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b123b2b26ce703a3e3738b56b5285b45575e08f81724d259fafc7576fb4ed01",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:287b29ce00c7179bf7689bd4d5146a522b7d6fb4cfc8489e33848cd46b659b8f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42db256b791eab4483bd3fd8bda358bc6a1a660a7e91c9a83dabfc6fcfb4ca34",
                    "size": 5645873
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1db0d6ee97869d3dbed533b367a66a21a89931731277764949a9e93fd92150a",
                    "size": 472
                }
            ]
        },
        "3.12-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:70a584512803dba30ef35a55df21696220430f0004a2e1e03e69220595214af9",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b681113aff97ff779a8c0dfd1d02dde5c56887e6e6f5d2f3bfa122ebc4f70d5",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8952bddd3e502c3818ddb6dc533f657be4f51205b480dcb681579377843f2452",
                    "size": 11646806
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7dc85ef81fce9a9832ebbdb634d652f591cc52d16334c35e474c8426a553752",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef809ebdd563db5edcb85a8c5c6f5da5d59299b952d5196edab6e40cb12d991d",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:749c8b08096215dd7c5497725e347e6748060e71a1e3a9e461734289a7c9d240",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:117fe0028f822493b2df9a7b5e677e82a16022c7b4c8c54edcecf8ba0e4716ff",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08568fcac9fdbfc32cf6f436adc0207c50fc84165c6709e42b3fd37f05ba95",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2853c592a59c8c3a62ac0aafec09a006abccd75feb706c0d11a4539b1303841c",
                    "size": 5645871
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:841c2bc85e4673fa7706eb8229b7c3734bd298faebc6ab8802170df32669de8b",
                    "size": 472
                }
            ]
        },
        "3.12-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c21981aa298d6e2aed1d3ea96289085d500e0fb4b6f192033292bbfeea8d37d",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06ec9137a42a38d1f061b0a0cbf54ecb684dd44f4ee5157007fe6a9e747f8e53",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8dada1054b17fb20bb79832b925c8b9dce622edca348fd2377bd653981a043",
                    "size": 11646785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45ee405c7c3d08ff739dc4b829196eb9370ad227c1bdd5af58964bc3d24b3f26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56bc9400b0d84d9211200a8b20d4e49354de5de732f43a5455f15a30c9c4c4",
                    "size": 5645872
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5de1198232056727a0f0760a89914d4dbe4b019444840e915ed16483f06076ca",
                    "size": 472
                }
            ]
        },
        "3.12-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f6f2779a42f9a2d4fc88925d04e5fad5bd5a63f66b9b2f2d05608d5ec5e8f21d",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eebfc98a8c641639d549ccf1ac478d8f076d9a32316453f3b0fba242c52131dd",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:592a0df72b23acf32b600cb56a00e37340811c535c6160fdbf838cbb2b74a933",
                    "size": 11646763
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12bac0bcbb3d24985664b5d29e2b20644967bab5df252f5be1941f76cd5d82bd",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4930b1fa170111e82d9685f1b45341cfcfb75835f45973cf73e2ecd66e7bee5d",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0048025b1f07896335092b0274365a0d170e96d8f7e508deedea11d10cd23583",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:167cabc231b87d69dc9d4f58a73f14b3d9c0e2039cd3775564151fbc2619912f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77a94d7d00a0c17820f3ff0987d40aa6c82ee5dd7c360a8d3f158849807bae44",
                    "size": 5645863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:212c3260d36ed5d734804d9155b903772f9c92fb576bf659e88e9ae458acee9b",
                    "size": 472
                }
            ]
        },
        "3.12-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b868556affc34ca2d12a43fecf9b7c1630048ffdf6552e57b29f5f525bd9786",
                "size": 6373
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0eeab5c200691bd777e227c6eea27f7ca3c8232b67118a76edac2dcde3186aa1",
                    "size": 2716243
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de76a030100c1de68d4fc0ce3b7e4ef72e0d902b8d302be86f922e628a9efa46",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88349b47c7cb91d98ad4549b1394603a9063ff20ab0ac9294b56be72efd674d9",
                    "size": 11646794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:216f5b8b43b9541076b521283ffd746bfe6c2f2283336622506a49450cb377a3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca929f14572fda9595d946653528d8cd79eb11185ef4084520e187039680ff",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b228822ddc6b250d120ec7890cc68d6094bf4221fb47006f9f3a5766fa9eb91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235bd574c2ef788f0c0fe512d90cc035cb209d6b9b77d13b9a2d44e181ae3962",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4254951611a45b6534fe6e826558254caa5110513d9bdaf5be79b4b544097eef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f375e3a7924064668557a319ed2442f7243460d21f5b7a240754707f5854f6bb",
                    "size": 5645866
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0bd65019e6289b08802f089656dd8427c0cecc7eb7d25ee52d767387d63957a",
                    "size": 472
                }
            ]
        },
        "3.13": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0956b033497d1b1cc6d96a3d5ffe98c77164636b37797a814d079af615626c70",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b23fcc9d16618bd413c2b14f4d9a0d62e521706bc5713c4ddec7928cbf73af07",
                    "size": 5997540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3929d426ecaea5a9cc138183746bc3d71cb04f3a9afdf740adc81a7cfccd415a",
                    "size": 472
                }
            ]
        },
        "3.13-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:198b0fd4c4f5a40f988f7f5043eb252f5215f77400fd43a42535318bb023c67a",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7dfd3b87adb8350e7c4a2fb686654b50fe515948b37889150fab249d743fb4e",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dace19f3ad5ffc8b53ea7f6785a0fddbc5eabfe3683c075d1892576dc2b7dc3",
                    "size": 11829460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2bcac4e0cc209e0589c7e99c434d919fa27c0fa7c9fcea1a87cae64d5a6adf",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8e75fbf09c96d5d95930143fd27edc38f8fa1fd01aa35adeaad70bc6574829",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c5e2c3a0852e7a1e6a40d6c8978263f950eb470943dc7fc9125d9e8e1c76de5",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69cdffd5a1c7b43cbd12abcc75b77bb0146c53b999d9d49583e5a78bc2bc12c3",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36ab5f035da4763eca72a326942d417a83650f33916800a75d040249e4c57822",
                    "size": 5997549
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86554a568f9b3b61c58c76790532fca494b59b8a3385a9f875ccfc1d8c9e3098",
                    "size": 472
                }
            ]
        },
        "3.13-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:da2aeaa6aa7943dbcc628d1d2ba5a71e404bf910eac08d31e44bf8f9f49cbc5a",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ad63a55f3a9b0ded878531ba3eb2d8db9b5542eaad550770a2812793d909a63",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55325ef02f97e4a1860aaf4e97695883614199971ccd40e5d6a2d334ebbad508",
                    "size": 11829456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d59e9cc882a334bc8822d533de4c22d08d7761d6c860071f63e1ca73d22fc987",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc08d7a2944ce31115e97577d5320a0ba42b4e059d75700d8923ee164046a7fb",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30f60e961fdb4840a9fd01e09d3298028e12832a1650f0fe147df77d10137e78",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6622316dfbebf37c571b8ab27586dc08169756376a3828952f0a0103f0db737",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf57c997fd019e993eec8bb622d717ed0ca8f24fb6dce33319a0cf318c7745e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec424c0364609d7e6dfdf46853e01d53f6eee88700de8f533eec0c021165250",
                    "size": 5997536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc8f321d5da4f4ed1c919bf4493a3b922753926ac9dc8a009ae5b2322478fe4f",
                    "size": 472
                }
            ]
        },
        "3.13-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:455baec6356502e219da4a6905e05734ec8e5faaf2125443cc2dc6ca8325ec47",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba73bf37fca931d22417924659470eaadafe35dd6964c5116bba84805222d99",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e74d83d175547c93efb27e86d4547e786bfe8355ec583d9149c7add761a0b3d6",
                    "size": 11829450
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96e6b6c7997054d9ed92aa563f92f5125572b41e893e2e1b90b12d69a3987d07",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d2abba1e9c1c2cf063701dfffadcfeccb9a98f642420ae6c4be9a196c1f0285",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01237e01f7abe039487019a7ec6134259d26dc61a42d233220cf4a24f1a134cc",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca9999b755944d3c3ddf330813898d19cf76c7a4f37529ffe451e41fc9ba2754",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d00fa509e9a00947bdc9b9afba37bc6b3e33a6da1d843a79dfd350632df872af",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6edd3628cba1df235a43b67d4659e643afaf506ec41deb1a2d25010a3ef87ab8",
                    "size": 5997546
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b974701c94a534fc66331f90b456048f70499afc5d2461d4e1771e0e621a5db6",
                    "size": 473
                }
            ]
        },
        "3.13-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6e46cfd053de5bc19bd2af29806229dd70a172ac712a373fec21d29616392919",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6a3856a935382e7f1bcec58c558f21fea204e9321d3148ff647575df1fdb2a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4be93ebb917c0dbadd603be3cf1432dab2b12236c259cf6d07775d147007e3a8",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ae4fc435b68f62864aaa62e9b38ad5a079fc2dfd768398414d9ea6b60f496c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d9c6f38bad40530c399d52fecee388f3188ba5338f94f0079118616533a9878",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:842c56d4fe10b6aaa236404397cb7361320d8ceb6a2952bf9cece04eb89bdd18",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1050170667955bd922992fbe8943fdac43d57b036fc616a0d1e1d98105636f50",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aae68febd84301ec6c17925daaa340d1ad4d424626a26452ad2f6e8f8b07267",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcdc5440d6c52d6808fa7d6784622a9cf19b403f45e7b11228a56d5dcb5462b0",
                    "size": 5997543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec2dc62995a1ad969fb593e8337bf594317d03338be3f40f2b8c211e5a0e422a",
                    "size": 473
                }
            ]
        },
        "3.13-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e4375c36efae5564ec57fb4f188625a40dbf2885f3871b188a7b385166bd13c1",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7b7dff4d7b0ca3b62b06675e2a10fad2706ca93ccd7ce1653b5a7da4b6face7",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b84ddb3e8faf4c5a64cee05240a95180581fb4a5758135cc9e28f33a197c4a",
                    "size": 11829435
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bd39bd5c34b28ed6e443da4eeafa7a8c2cd8899c5bbc18d0ea123056d6924d",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e109629768a3e6123c8607e909ceabf59eef87ef1de06c4db64db76cf6033644",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f57b9f90640aa0b0357735c1da315192379aae0433fb7c5a637196e9ced96565",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13bff14a96141bbd630c32255b8c67e843e31b1a6e4da1077eff8e59708c8301",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eb6415e56cb89e9cdb7be3fa141dbafbdb271625a4260fe8f47da2d14ab361",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11cdd722dfb4c5789734c5e91a48543d075a399279e00338c1ebe4816ecaa04c",
                    "size": 5997557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51a078e2b6c5d7db6959a2ab9ed920b68430cabff5e086c18a7bc0a900a41e2",
                    "size": 472
                }
            ]
        },
        "3.13-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f463d7d0dd9713183ac25310c8b852445c18f2e56d7408d614142869b89ce3a4",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdf05e2a170856ff94e90caad7b09aecddb6d55e0612413b6cf518015d8afb19",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd91c62ba520b245490c7b89d96a49fd3ffa94c5f24c09c18cb952acce17acd5",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff214b1a2f1b5c42d0fef5b895d11aa4d572bac2419ba020f0b3ccbd863c7329",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d66958d834cf2ecfe2e49f9aae128ccadda398bab951d7d5d8be9001b4eeef20",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:838b6e80ac7e815bfda3645c85bd77bc221c005cafd6c6044a8581d4c3f7f63a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02e8af2d1da91451b61756d409461b1e538aa00e7f8abf76d0a61c6594757eb2",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af0829589ebb195babe2156c0c9b4c339d38e80a49ddfed80489f7acc1d181a9",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8386fec26a4ce1d0276a7f2a2fd65aec7e329a3ddebc94b20e1a5934c3e0b67c",
                    "size": 5997532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfb84ffac55c4f1176ae3859cca2ac462288d9fb6b531b70034e6f8caa0303f1",
                    "size": 472
                }
            ]
        },
        "3.13-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0956b033497d1b1cc6d96a3d5ffe98c77164636b37797a814d079af615626c70",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b23fcc9d16618bd413c2b14f4d9a0d62e521706bc5713c4ddec7928cbf73af07",
                    "size": 5997540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3929d426ecaea5a9cc138183746bc3d71cb04f3a9afdf740adc81a7cfccd415a",
                    "size": 472
                }
            ]
        },
        "3.13-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b7955ada0dcd1faa5ce0902e51e5260b379fcec8a078f840761a783a1b741ce",
                "size": 6993
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a717fc1000e6dd5f742d0365f0c8c14ef99cd757f18444d3bbf72342cf516b0e",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f70881215963773c4c3c866c6040cd2e3bf6e8b9a7efa2a9b7b2d67e628ad5f",
                    "size": 11829445
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c49e180c507b1516c21d331e996d73ce2803e8758a94f44163d1a982069f6b70",
                    "size": 142943056
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bb5253ab12a8f5c4935d035918776a3eb07e9b8bcd649d388bbaf904de0e76d",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed449a082c3486604d5b1bcb2b195d3e25ee985afcc0965def978ebc0d2927b2",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:727723045027acebcf3eab8df617f2a21577546f366c52b496495e3b16c9b332",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e63ecb042c7ed1a8aeeff19f114882f05c5fbfd73d32fb97b37612631fb11550",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb1f5882cc47488e9f93bbf0b99fab20cdf4252375bcefa718c75100ae0f1553",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bc215014e24d3835d699dbae7205bbb5bc9ab4e6d189f948b569b6d1c00aa5c",
                    "size": 5906482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40526dcc1d3f81c8232ddaac0e5990c34cb54a93dd29bdcf8317c127565768d",
                    "size": 472
                }
            ]
        },
        "3.13-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d0ac7005003656f306131c25700f4d076edf16bfc201703e64a23f4f5665ea83",
                "size": 7008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:645bd877c22d3c4a6e2b11ffe82f86a67e1a9db33cfd3ed5e7e88c5cdaf8d0a4",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35cbc481c4a5f6653b580f988d04b0d7bc49c4ecf32643d7df8e135b2665367d",
                    "size": 11829404
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:463829827f6f15257399e0014ccf15bdac542632cb83bcab08a3aee6ff17c00c",
                    "size": 142942320
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec141411e5908b80a76b2e6f6f64bd74ce251e62719227bf24fe29960a979cda",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:787870cb79e450096f119be94bc2e9c0aac1a88e87e3d9442f78886026bc1f5a",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d27730ecbc9329271a8f9a41112243f1725db75c08df595641351cbfec07fa7",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20d793f17a0aa7ff09c66f0ec80f0192eeb7bc3c1f18a4135674b83f8deae5da",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d0c0202482084e1e72b4350e10fc7d587770c400236c1377fbeeffbd9c408c7",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea9a8e795932882f6542d4ecb412762de9be5ffed6bd075cc40cc8c71245ca7f",
                    "size": 5906478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30aac6c8dbd28af7da6ca8139be3d922cd728ec86ff70fdda72d36429e55ea2d",
                    "size": 471
                }
            ]
        },
        "3.13-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b5047ed77f1b65081bfd12e1063dea0bede4c3a1d5429d7ae7c9c2a87640660f",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f97d72f0e2a7b8fdc12a5dccb2f6fc90dd225ed248029d817a9f09e4daec9b9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:014c1b0bf7973f7c860691c4bced2a007bc1126391837850bde3dad50be81a48",
                    "size": 11829545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e78164993226354f3b0856cfa53bbd78814900e806b532fa59d8979009142d93",
                    "size": 142942880
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0cbcd898a75352934ae8b89da20dcfa30b3f881b1c109d0128653c8e02909c1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c8a4bcc43f671a910dba36503af02bc81c5b4087b419ee3dfe4cf6fc994f258",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37a801f32fe05686e459640da4406d42f9089c3254f54dd67bfe80523f1c5cb1",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:394a6434a5a9a353a4bfbbdb5ffc7b75bd37d800d52b084940ee6fa1f596e530",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b54380e3ecfaa54cab230759dfff7e08f43aeff5df22191ca18bb2b328fac180",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96acb906aa34424a2db4d5a4473255deef9573128b5f06754204004920d91500",
                    "size": 5906453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68f6515c8f0a8cef7111953c0b0fad255d28f6d54b3bb719cd3b10883eee005f",
                    "size": 471
                }
            ]
        },
        "3.13-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cbf541bb675a884cb6192b01cbe4bf9b23000429bc3210e7621c7c2e437ae95f",
                "size": 7007
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cc7b59df135d0a3b711ae15264a00c371b2e0a7422bc4c27ba331b8d977b342",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02c24f6d03f584b560abeba4a06bdc872bc4168984f7638802841497f936433e",
                    "size": 11829462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb5dd3c279c916b7601e9e830f33d1e99d5a0d248a9cf257da4239bc6b455621",
                    "size": 142942831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f685a41cc2ebe27ba02c6efa0b9c7d6807a9d8376f63e8f3bfddedfc356d665e",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:781f7e361f810d9ed54c8aec5322d5b7165cf9373bdef65ac5b72b5650d6090c",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8f6520fddfd0ea94c23fa2b3ad2977460e85406d72e6108ee854e4681607a52",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a63e59c8552bdb06ed2cb5b05633324d571628f75fbae8e53970ba99e10b6da",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ba9afc5dc87c0b8926c8d2388739cde9acfe89a3ff625952165766f618bfad3",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:462886cc96fa5525e8b724fdfc993bfba2cb1acedc0868ca4d60e77fdd4e0084",
                    "size": 5906454
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3da2ee397997dff2bd84905b75c64cc7acf78d91187887d6299c54acb5e83297",
                    "size": 473
                }
            ]
        },
        "3.13-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:824e190142dbb83038e08692855a53cbd1db66e5ffc49bf414dba6643a8df709",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6a3856a935382e7f1bcec58c558f21fea204e9321d3148ff647575df1fdb2a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235b11473c5dd6c66852abd3f80ae282bddc7c32176030e6d0200c20f88451aa",
                    "size": 11829458
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a42feefc68bc63df2670dd9ed953b1c104e997128986d0dd2776f88cf55dfdd2",
                    "size": 142943749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:205f2013dcf6ff43306121a5ee1408f29ce97c8f1e32459ea39e073841421350",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:daa8bbaf2edbd46e598dcd42ebdc32d463fb40c6de3a4377fcc66d8fb27c7d1d",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1cabed412c9ca166001574581eb7c08287460111f9d4f17167f552eacf1fcb9",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ba2e013660226b184c84dfc184717bb72755f3721456f073394eb262273e53d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1085ef1c12293f21888c473b17d48b17facdf1d6bbfbc6a9142331a2ea5c30ef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3260ddf3ed957f535c7d23510ab08ae258ef58af20d32354558992349bfe3a74",
                    "size": 5906470
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db51d761ae8a78059dc3e5a424f79241b03f2ff825292f815437465e2e33f8bf",
                    "size": 472
                }
            ]
        },
        "3.13-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:71dea1009a139b0602a7d8e77ea58465ba0f04517f077fc0b2ca1a974175f755",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:feefb2766995547d31e748c36b41418782d2d0c1e7ed101342c24ca685673147",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:102e18d89a076588025e8e9913006f1074d7e4bce8349bdc74cf456402329332",
                    "size": 11829418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc24c7bdc1cc2e560671595b8c635c063f0a503e1d2f54c114d9c17dde0829fa",
                    "size": 142943059
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225331917a07141ab86ac605c14cd2921c095b78458ef1fd9f1aedc34d224638",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aaee1da272a7ec7183eec7c0de464fc0525f36ad451e1f2ab85a174d78dab4c4",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba839ec8303d27868a3dc89fd24aae3ef1430577928f4df9e948ff314741c89",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afe5b4734d31cc9e0f7cf7a50772c84d2c6bd59bb0a463cb3c5ab9f11a7642d2",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8923443e775084320f0a77eca642cc3c8edc38e7ed3b5e7e30b764f1a737da70",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d0350a10bdc71bdb0898d9eb4e5c3c4b42834182bc5866c3a875d9bf6b8d0a",
                    "size": 5906471
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14393fd1d77643ac5aa0e9b8312276eda3dc40caa977a786c77522ad1a86ca2e",
                    "size": 472
                }
            ]
        },
        "3.13-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c51e623d1815a36be93eff89e908824a9c9f911fce9b3f7e5cf9277cf2b1a907",
                "size": 6993
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdf05e2a170856ff94e90caad7b09aecddb6d55e0612413b6cf518015d8afb19",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28a4b3974d16735824f16a18886a555c9eb97ac5480b976aeaf024966b77aa09",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:893a53e78ebf3aaf0b4916afcb4b2ff9563e2252873448ed33aa459d989609f6",
                    "size": 142943234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1be9cd4424df5dcf1944ff9d2dea5793af21f138750875740bb2793bbf87c84c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2786ffcae5195c03e84dbc9b5b47f9b3e7d44f73f29188595fcd69659463115c",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:024c95d75c3f33703d87e666fa70fe640268ce6e2e3d7321a81e6abb11c2751b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3177b04f0eec382fe700ae3e77a1b1f5a6851f2d70dded862174158bfec5d62",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e997af7df3fe8d07a8ed1cfb8d8fe2ea51cc88f42cacfd185bbf5751a5cb9baa",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a71124eb469a6a67641462afc17dd5da8cdbf3008e02fc3950acd1bdbeabc9",
                    "size": 5906462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d69f337cc1f43add7d86c120ad2bd98631723962f2a2ddd1a524281e862c3434",
                    "size": 471
                }
            ]
        },
        "3.13-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b7955ada0dcd1faa5ce0902e51e5260b379fcec8a078f840761a783a1b741ce",
                "size": 6993
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a717fc1000e6dd5f742d0365f0c8c14ef99cd757f18444d3bbf72342cf516b0e",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f70881215963773c4c3c866c6040cd2e3bf6e8b9a7efa2a9b7b2d67e628ad5f",
                    "size": 11829445
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c49e180c507b1516c21d331e996d73ce2803e8758a94f44163d1a982069f6b70",
                    "size": 142943056
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bb5253ab12a8f5c4935d035918776a3eb07e9b8bcd649d388bbaf904de0e76d",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed449a082c3486604d5b1bcb2b195d3e25ee985afcc0965def978ebc0d2927b2",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:727723045027acebcf3eab8df617f2a21577546f366c52b496495e3b16c9b332",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e63ecb042c7ed1a8aeeff19f114882f05c5fbfd73d32fb97b37612631fb11550",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb1f5882cc47488e9f93bbf0b99fab20cdf4252375bcefa718c75100ae0f1553",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bc215014e24d3835d699dbae7205bbb5bc9ab4e6d189f948b569b6d1c00aa5c",
                    "size": 5906482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d40526dcc1d3f81c8232ddaac0e5990c34cb54a93dd29bdcf8317c127565768d",
                    "size": 472
                }
            ]
        },
        "3.13-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0956b033497d1b1cc6d96a3d5ffe98c77164636b37797a814d079af615626c70",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b23fcc9d16618bd413c2b14f4d9a0d62e521706bc5713c4ddec7928cbf73af07",
                    "size": 5997540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3929d426ecaea5a9cc138183746bc3d71cb04f3a9afdf740adc81a7cfccd415a",
                    "size": 472
                }
            ]
        },
        "3.13-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:198b0fd4c4f5a40f988f7f5043eb252f5215f77400fd43a42535318bb023c67a",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7dfd3b87adb8350e7c4a2fb686654b50fe515948b37889150fab249d743fb4e",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dace19f3ad5ffc8b53ea7f6785a0fddbc5eabfe3683c075d1892576dc2b7dc3",
                    "size": 11829460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e2bcac4e0cc209e0589c7e99c434d919fa27c0fa7c9fcea1a87cae64d5a6adf",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8e75fbf09c96d5d95930143fd27edc38f8fa1fd01aa35adeaad70bc6574829",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c5e2c3a0852e7a1e6a40d6c8978263f950eb470943dc7fc9125d9e8e1c76de5",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69cdffd5a1c7b43cbd12abcc75b77bb0146c53b999d9d49583e5a78bc2bc12c3",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36ab5f035da4763eca72a326942d417a83650f33916800a75d040249e4c57822",
                    "size": 5997549
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86554a568f9b3b61c58c76790532fca494b59b8a3385a9f875ccfc1d8c9e3098",
                    "size": 472
                }
            ]
        },
        "3.13-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:da2aeaa6aa7943dbcc628d1d2ba5a71e404bf910eac08d31e44bf8f9f49cbc5a",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ad63a55f3a9b0ded878531ba3eb2d8db9b5542eaad550770a2812793d909a63",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55325ef02f97e4a1860aaf4e97695883614199971ccd40e5d6a2d334ebbad508",
                    "size": 11829456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d59e9cc882a334bc8822d533de4c22d08d7761d6c860071f63e1ca73d22fc987",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc08d7a2944ce31115e97577d5320a0ba42b4e059d75700d8923ee164046a7fb",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30f60e961fdb4840a9fd01e09d3298028e12832a1650f0fe147df77d10137e78",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6622316dfbebf37c571b8ab27586dc08169756376a3828952f0a0103f0db737",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf57c997fd019e993eec8bb622d717ed0ca8f24fb6dce33319a0cf318c7745e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec424c0364609d7e6dfdf46853e01d53f6eee88700de8f533eec0c021165250",
                    "size": 5997536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc8f321d5da4f4ed1c919bf4493a3b922753926ac9dc8a009ae5b2322478fe4f",
                    "size": 472
                }
            ]
        },
        "3.13-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:455baec6356502e219da4a6905e05734ec8e5faaf2125443cc2dc6ca8325ec47",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba73bf37fca931d22417924659470eaadafe35dd6964c5116bba84805222d99",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e74d83d175547c93efb27e86d4547e786bfe8355ec583d9149c7add761a0b3d6",
                    "size": 11829450
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96e6b6c7997054d9ed92aa563f92f5125572b41e893e2e1b90b12d69a3987d07",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d2abba1e9c1c2cf063701dfffadcfeccb9a98f642420ae6c4be9a196c1f0285",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01237e01f7abe039487019a7ec6134259d26dc61a42d233220cf4a24f1a134cc",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca9999b755944d3c3ddf330813898d19cf76c7a4f37529ffe451e41fc9ba2754",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d00fa509e9a00947bdc9b9afba37bc6b3e33a6da1d843a79dfd350632df872af",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6edd3628cba1df235a43b67d4659e643afaf506ec41deb1a2d25010a3ef87ab8",
                    "size": 5997546
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b974701c94a534fc66331f90b456048f70499afc5d2461d4e1771e0e621a5db6",
                    "size": 473
                }
            ]
        },
        "3.13-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6e46cfd053de5bc19bd2af29806229dd70a172ac712a373fec21d29616392919",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6a3856a935382e7f1bcec58c558f21fea204e9321d3148ff647575df1fdb2a",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4be93ebb917c0dbadd603be3cf1432dab2b12236c259cf6d07775d147007e3a8",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59ae4fc435b68f62864aaa62e9b38ad5a079fc2dfd768398414d9ea6b60f496c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d9c6f38bad40530c399d52fecee388f3188ba5338f94f0079118616533a9878",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:842c56d4fe10b6aaa236404397cb7361320d8ceb6a2952bf9cece04eb89bdd18",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1050170667955bd922992fbe8943fdac43d57b036fc616a0d1e1d98105636f50",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aae68febd84301ec6c17925daaa340d1ad4d424626a26452ad2f6e8f8b07267",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcdc5440d6c52d6808fa7d6784622a9cf19b403f45e7b11228a56d5dcb5462b0",
                    "size": 5997543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec2dc62995a1ad969fb593e8337bf594317d03338be3f40f2b8c211e5a0e422a",
                    "size": 473
                }
            ]
        },
        "3.13-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e4375c36efae5564ec57fb4f188625a40dbf2885f3871b188a7b385166bd13c1",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7b7dff4d7b0ca3b62b06675e2a10fad2706ca93ccd7ce1653b5a7da4b6face7",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b84ddb3e8faf4c5a64cee05240a95180581fb4a5758135cc9e28f33a197c4a",
                    "size": 11829435
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bd39bd5c34b28ed6e443da4eeafa7a8c2cd8899c5bbc18d0ea123056d6924d",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e109629768a3e6123c8607e909ceabf59eef87ef1de06c4db64db76cf6033644",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f57b9f90640aa0b0357735c1da315192379aae0433fb7c5a637196e9ced96565",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13bff14a96141bbd630c32255b8c67e843e31b1a6e4da1077eff8e59708c8301",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eb6415e56cb89e9cdb7be3fa141dbafbdb271625a4260fe8f47da2d14ab361",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11cdd722dfb4c5789734c5e91a48543d075a399279e00338c1ebe4816ecaa04c",
                    "size": 5997557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51a078e2b6c5d7db6959a2ab9ed920b68430cabff5e086c18a7bc0a900a41e2",
                    "size": 472
                }
            ]
        },
        "3.13-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f463d7d0dd9713183ac25310c8b852445c18f2e56d7408d614142869b89ce3a4",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdf05e2a170856ff94e90caad7b09aecddb6d55e0612413b6cf518015d8afb19",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd91c62ba520b245490c7b89d96a49fd3ffa94c5f24c09c18cb952acce17acd5",
                    "size": 11829432
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff214b1a2f1b5c42d0fef5b895d11aa4d572bac2419ba020f0b3ccbd863c7329",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d66958d834cf2ecfe2e49f9aae128ccadda398bab951d7d5d8be9001b4eeef20",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:838b6e80ac7e815bfda3645c85bd77bc221c005cafd6c6044a8581d4c3f7f63a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02e8af2d1da91451b61756d409461b1e538aa00e7f8abf76d0a61c6594757eb2",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af0829589ebb195babe2156c0c9b4c339d38e80a49ddfed80489f7acc1d181a9",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8386fec26a4ce1d0276a7f2a2fd65aec7e329a3ddebc94b20e1a5934c3e0b67c",
                    "size": 5997532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfb84ffac55c4f1176ae3859cca2ac462288d9fb6b531b70034e6f8caa0303f1",
                    "size": 472
                }
            ]
        },
        "3.13-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0956b033497d1b1cc6d96a3d5ffe98c77164636b37797a814d079af615626c70",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25f523f0e93b2b5fa676c15d91b90f08ee4de7a160874e6c52ea452929d5a7cc",
                    "size": 2722126
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ebd36e6c23db2989f9b39574ca5c8cb946103a6ad3a71e41545e27674f90c0e",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df504fa574683b42f9d250a4747a804bdf7946fb831294671594f75dcf85c285",
                    "size": 11829480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a53a8da95f716126f936562677f377b23aadfb6f82f94ee9673b67a63f4a5a1",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38ebcea1e19f15cf953c081522389352ed9dff4f2fe45be5d9e7d786c1060b42",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1167a6a1f279bb7b4c3eb3feed985dd1cacd8ef8d8c1c2ca35b75cbd50f8828",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15e393d648cee98c1847e681590bc7d56e19e2f307ae609b93608cb683f2ed01",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00828961a73de6d8530973f3d4ea44fca037c67aeb865e89c8720aa3aa6f98ec",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b23fcc9d16618bd413c2b14f4d9a0d62e521706bc5713c4ddec7928cbf73af07",
                    "size": 5997540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3929d426ecaea5a9cc138183746bc3d71cb04f3a9afdf740adc81a7cfccd415a",
                    "size": 472
                }
            ]
        },
        "3.14": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bffbd001d710caa6360b182cc76e980c0355d696c1112d9f998561358f5ecba2",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8016a73abea7a840edecbe8c9063c90b8afb7d96c0b33efe46e64b5446ef802d",
                    "size": 6156870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb9cb29ea2c75d53e491bec155436be27cdcfe94a8e419e96572a8023f0d4656",
                    "size": 472
                }
            ]
        },
        "3.14-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:66eeee58bc9fbcd875657915fff498c4d50c78aad2e5154154bebf40a027db83",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:424943849dc94cca30b68a2ac46c97577830c8bc59c091f462f8c3495cba3924",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fddc624290ae3173863673b0e671e54843bcffa18004ac46303df81aadee5e50",
                    "size": 11933735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b3ded3a656f1bc1fb52b30ecd70fba5ee95543f8f32a95174fce39190ee8d75",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03dfeeba89d2d7121ca273a9968358f083b8c6c35252a1050738519a7996ce",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d1dfd39b2b484be6bfb7d68e77ee922377ac4a82d410acef23b5e9676955016",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e663bca5182de8d88e202f7c44c3db12d3037dd54dca2f66a80b07c6aabc5701",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e58af2a8def571595ec1030837527349d9a7360a71a24fab3671e08ebed0174",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c72ba44236a0dd67a6effebb95d76e8677c8b001acbac64cea739291598fd17",
                    "size": 6156861
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37fc286f0acedac2a76f250454fbe069cb1ed390c7981a9e81395bc213d69064",
                    "size": 472
                }
            ]
        },
        "3.14-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:63114e01d5c1074a3a4ed40f3168fc5f9c0b2b71273fd43061c635cb3e41b765",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3e019542d4c075aa3ab2ebb99d48d90b7aa85a18da982fb9e1b585be1ae7042",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff50c9f4cbd0a856e30b7f8ba7858ce7bcf938021d26aa898e160b914f50b3f7",
                    "size": 11933644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf08f293122c11b8f0611b7c91385c4e151416604abf65027ab75f534b6327e2",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23b0d9dc6a2d4dd7cb659598e8d1c21f04c59b1a80c09749c421688d26b930db",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7997ed7d91de9e13125b1afab357bbf5813822da5123c47aadfab98048afd70",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc87641c952af7e4718ad8bae2f2180a3ec0db907eb9c4bf34016d6cdb70825d",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c999afd360f3c135576ace7c857657d86d64b785c6ec7e80012c0b5113d959cd",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e3e0ba80f0a6c7019d60a78444138e856cdf776b02edec446170e7ada6b4439",
                    "size": 6156856
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c0d87897625ed3a2aad7ea76b41d27343c0e1ffbd1c1425f64cda73d7bad415",
                    "size": 472
                }
            ]
        },
        "3.14-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ca86d4d9ab6c2b219f02a7ce93a3a2374119584873be6ea9d05db92d7034afc6",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3373df445985af73ddd06238647fc7f004783fe10274b7424afdf4880218dd9a",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb4e962564be1f1daa2eaeac45cc8c4cebd43c03ef151394c558353194f496ab",
                    "size": 11933722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a750124f32053684168391e76b159c38a158b99e821b427b0841b04c22ea7c7",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff091ae71af9e6ed73b8c425d345595650ca5fed002d30a225ce86841a67e066",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05866235279722aae42930108a431b459c17e18019b59ce6902f18c2d8293643",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c2265aa49aa12c893b91a843a3b5f18c0116b9380b730d383572fb1e47be9d1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:778575c4a6bd018533d25043ead49ececb1f12addacc9603260ccfc0363d38e9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d01565b6e3ef7e4606bf633fd47f1a44344b2ad9a5817d0929a3b0fbb7143698",
                    "size": 6156854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acc97fe61df7b3b1449641727d714bc5a96ed5a0499ee77f6b1118533070913a",
                    "size": 473
                }
            ]
        },
        "3.14-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:898daf0660a0d2634fe379412d2ff49beef96f12541bf297aca6aeb09496710e",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:874b0760e04e1a2f3a969c2a1bdcfa0fcdea0ee7ad24a44b4e43cabe88260db1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1235c64e591ee2dbb14511fb2364f87559a531eee054da7d75a460146772887",
                    "size": 11933715
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e470c7a812c20b863d17609453f2c03fc44fa470142474a4851e9bdad061a1a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c28e097f4a5ed6275ffcb28492a77437e7576d0e13515a4a070f510c1d1008a",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27e632313f045080c79b21a89ac1b2a61ff6195e4b2f2a1d18479d7ab204c7f1",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09088fe1b55bf15d16cb700141d745d688547db922ae6ea566ae30617163d58f",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b395e5243ccb742296d74f5588f2d18028ee87f968e5f99798901f804f347c3",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5a4d2659db5dc332dabbe0018222647e4f6328e6cd0a34ab9cd00ec93dd04",
                    "size": 6156856
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e003bc5ded92db26e11ed7af889e8abe259f4b59f0cc2b060498a32517da4e",
                    "size": 472
                }
            ]
        },
        "3.14-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c18e3df4d2826fc274350e1ec90857e2ad27fc9eb0005056be26eba13a5441a9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:470f75f2feb39fa6814961d838b570afaa54c999fe81eb0a28e89f042ee5d057",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f79ef40a4e0e4076bc8523a500e9509a9a576d3f7fdd56a9b3a56acfbb3c3963",
                    "size": 11933736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3d9ed71ff56a74ce089cdbe7a5074c484ad013793f7843843876bec4c65aed8",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7262af7d73ddd3ede73a04d4b69ab2f7e624856e2fbb744d7f44689fd8826a8",
                    "size": 6156863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c46672798ab3967c26900b4bf9fe128352edb1c5f4b52ffdefb0bae277ee3d49",
                    "size": 473
                }
            ]
        },
        "3.14-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6772e92a713f35b1a7eb975bcd0fb154d34f8c3a6fd806acbfbb9ad03537cde6",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c6d2202ccc1f07c74e3e6d3e93726bdf224008e0d273fed4945256cc25c5541",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1690c3202c76e519f10794b2ad599e0cf9e50e8f5cb67c78aa2430b7409454aa",
                    "size": 11933704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1f8b99f92412e88d34664d1d6565edaa6726b493f612860e7e90ae2ccc11566",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2f326a64ee2c0aae403b253cb89835dad6ce743cad49b52b55c9ba7641a4eb6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33e1ac5c9dde7028724a99bf48dc9aca694d176c08abc552c52d588dd1620d2f",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:060469c82e64529f533578d035a46d1d047c13783ad58da7126579b4809b0008",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b3e3106cfa9ce5e491ce40c38b8049351c65a419042498f4514415f0b95a22f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1eef00b54d0461a3e1b1f7f5e4a4ab6fb951a2c4e56cd63acd973be353a97ef",
                    "size": 6156844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89b18cddfef3d5a1b70a3bf6f78f3190fa2789c18c453f4402f1f72cd26de8a",
                    "size": 471
                }
            ]
        },
        "3.14-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bffbd001d710caa6360b182cc76e980c0355d696c1112d9f998561358f5ecba2",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8016a73abea7a840edecbe8c9063c90b8afb7d96c0b33efe46e64b5446ef802d",
                    "size": 6156870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb9cb29ea2c75d53e491bec155436be27cdcfe94a8e419e96572a8023f0d4656",
                    "size": 472
                }
            ]
        },
        "3.14-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d5e801cd163ba6b4ae3458858076fff1629efd0616ebd249478dc917082dc567",
                "size": 6997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9817e75eba8a378b1dc86ab617240a921b644373927805508a1be612c62db7db",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc0c3c456b3cb0f1a28a31f20698cdd6df3c0fc43b38d8a8bc1edab4a6162d89",
                    "size": 11933673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82a2c2ee23cd72bb20773d3d551d202ab41b90be1345309d6f99c416af2fbe39",
                    "size": 144710646
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab0e261444a55065fe35990632c5c1132282f8d551ac5898b505007f3ad69d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac5fa035dddc8c1a588fca443bf195667e02d1388cf94bc5f86bf79eaf2c2ccc",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2a2ddb3023e90ce6c77b7fbff59a7f307e6f62c6e78bd3db017cb7d2cae56ae",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc97a02158264e56f7a3bc0e26ade8ce319b47b30c416708a604a4767677b9ed",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376fe09919853a6e7d5ddf600a4157e20f3bf1819c1aaac22ea79f5f7fcb5fdf",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d7adf105291b8e87f439afb583ab7605d54934ac5ee80a9137df94fc2c00d79",
                    "size": 6049803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49586ff272baa56d77bfaa2ac6272bd9644ad301cdbbdba1efdc2fc08304a183",
                    "size": 472
                }
            ]
        },
        "3.14-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e2999e2eac163458fc9fb17efa84adae27c023319ee2ffcb1a21254de5be5a82",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59cd6577784db3fa0563ab1c3dcecfc7299fca9d730460b8829cd8402f19e736",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:392b828a1b02c5fe2afe5b2d4672463f95b6ba76de0d08ab036ce689d1895c40",
                    "size": 11933700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc53fd4e6abf6946ed8ca9240308e23f5fcf0e9f62a4d3c123b08f02d8fd1ad",
                    "size": 144710579
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63c1540d575430504df6d1f03b3e5181747710acd6209e16f8a41882b0fd147b",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0e77280bafd1041e36d89d8125e64fe9fd6f46f1a675da808a39687675b5ec0",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5ae103d823deffdab3e1a75132f6f201167d3a212241ffd841dd6f6287da7bc",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac8d7d69ec248553d685a0dffb50bf1863acb72922c76c88f53257e66a295d04",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:597cabdaab18fd7de702aa969f2692cfc15e59dec0fe27fa9227df1d7e2c1b2b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55087968d3cac4cdd90964e0ba3e9a9bc3373a43ceff22c20d4b5b0d0e2c2879",
                    "size": 6049774
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:088f5cc19a44d35afcbb516cf69e080e51b735f43bfb17dc2c20c488828a148a",
                    "size": 472
                }
            ]
        },
        "3.14-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:85e269193d363bccb26337bb906fdd0e52f1103524c6e89b4c15e17317631787",
                "size": 7008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06f4a79271c125cc53d1db66175ff6afd7c2561aeaaa38a3a730f58d8c5a0a9d",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7a88f1aafb24daad64c4d44c072034eeb564a0748beb8bc093ac8987fdacc5c",
                    "size": 11933720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c245907f4c396d7edcdfa0350ed68bb9d43863ca78064f08ee504991f34560d",
                    "size": 144710332
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cfb6b794313d147f82f593427a374907bbfee59b47c7f3c8fdcc76ee49fc968",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b300a20ef5e420eef25c91cc0655c37369303d4da0ab9edbbc5bbd4b8e3ea881",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6b2899db88ae0d1b0810701020c17648f3415b7937b011a38d488bb92de1509",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c20910808369526021f13f0c606a6c626146e251f3841445863c5d239f39b387",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:129e08b4282b9a887f26d2e2c8bf1eb508d943ee3b6a5bedd62d15815d41d62d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22a31baaecdb196b002370c7917b26891d5ac396cd2c59bcd5929de71f58101e",
                    "size": 6049771
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c100ebb62c4a37d0812e598a427c19ec739bdcad43abe3941e9280c1ea8969c0",
                    "size": 472
                }
            ]
        },
        "3.14-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:80a7d084a0dcd5afd75c63f406c7d4575c682ac15cd153711833b3e4e2cd989d",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b5a88aeecc003ac42a1a503722037032b74162149660ac3f86813cd6f9186af",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9e0c9689f130678377a8538d1ab6a24f315af6048a13c90cf2db593602a070f",
                    "size": 11933721
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a36a504e6ba63ffaa3411c8df287f25b70e86dae9fb3a94bc7a0a8c0dd1286dc",
                    "size": 144710465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7627492b5e2fb77f57e413a3def0a31e7f7a7e61e7edbb8881f719d0fb6914a6",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5647295fa0cbf4e2c24dd542264d9f16853625f9ee8993e8b82f7bf3f0aaa6a5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4018fdebb5ef9d8624fb060527ea2a4eca76e07cb6d029c1728d724c80eec40",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e747968ea39f5246cad5a66b3bdb6b92574069d2c0ef557f3f74b3fe4875872",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6582ba2425bc147b560fc95998588259b268f0d77bb546b4de6158bf33a30008",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eecb8a1ef681d7eccd64d03191cd766712218d3fdcacd7a9c325343b19060b1c",
                    "size": 6049797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a75b5868b131096f6789cb498024b9c8e8fa94b140611cb64eb166bdbc45876f",
                    "size": 473
                }
            ]
        },
        "3.14-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e9d3e0e50034ba3b8d9c9065cb2fdb569574aa612455aabb4d620aec580e995f",
                "size": 7007
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49b07954b6b3c46de9bf961e497e618ba3d04871b4b6abdc05c4fd83f26759c6",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a506bbc3f98b636091069cd176c9120b394ef133617560fe68714bbc4d5743",
                    "size": 11933730
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8aa5784d1934fada4992e11061a69159be56f52f3fdcadb93ac5f6d0946f4df5",
                    "size": 144710549
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f261367a1e3dcb8bcd7b3c6f2ceaf553d70839baf94f78ebbef3489cfb63ccf",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:372a108cf50bd19fc41386435ee07e6abb4810c889ba1a7181bf624b399a2837",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d81c87dd3abaa0b1cc2438f61774265665aebbe1ffbcb2d1bc898ec7536c6aa4",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2d84c5aed10fe727a90835df213fc70ddda7dada0d4eedd899b2b61af58f0b8",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:143436346cfe60975cf54122a48112ffd17c2f8de655cd1b52728a605828b819",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4069dbeb50f7b9e4fac5f163a32a335137f012d31ffe9e668fdb752db4a65e9f",
                    "size": 6049814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5847be36c04157fcd53f6b42cb1ef08bd8c4992462b377a78e5eedd373ff7936",
                    "size": 472
                }
            ]
        },
        "3.14-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28b33454be0b5cd0cebc76992272e2efb8f65d6dfd1fa3d540a2222c5f56470",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf91a7cd90029ebc3679dd7d79c0ca595fe404241dbbaf9dafb23ac90d1947a8",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8ff3f3fd9e404e5bcf2476b41b4fc9e9aa76fd178434033da3a0867d2af55d",
                    "size": 11933635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f8eec2451156bf9ecfb2a8277ae130015a2945f6d04c522e7b71d792bb3bd08",
                    "size": 144710197
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c73366dd453878bc63a0b70c715a8655264ae2a632b4bc16975b40fb88634268",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f341f06d5bd55b16e22bb782911a9fbc17d5e5c53f2d907f752db57715a8a242",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:daceab6e001797bdc740c6d2a0b33ce127f2325e95c89b2d6602858f8513cd83",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:576072d4c0567904902d1eee7bb46f3baaae89baed746b9fb452661fdcb7edd4",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d965778656b237de1c24863d3a3a4375c239184f2a8c1ff8af98fe5b01bfdf9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1df828634960c9e7680afc85c58940ecf66b223394fec7148d2157c0b6a73b14",
                    "size": 6049799
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe092fb8a9760b6412a233baf90ea3f53edd699270f45006c4084273c2964c32",
                    "size": 471
                }
            ]
        },
        "3.14-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5360a3c5ca41c0a860aa1e2d357eaf3a178f911106804d10b3b3de98e832d52a",
                "size": 6988
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d57f3a893e488366205ce83d4465af40134322aaf387254a48b46e801a48085",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b35a775d0f5f716f88bc3f63a8a0ed6d23a6807ae10c6259dd3c0bfd755f79f",
                    "size": 11933701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57ac736c091aede0d36be400f6b2aa590bd2d17c38e2a472784153a4dba1c332",
                    "size": 144710089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbcdc13afea54901c6eecb09db625cfe86edf379a2ef22522401fb5f02f0b4a7",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12dfe0824cc246db40760b476ea8d25cce9bb16a77ddcc513eece2e3eb2482",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af7f1e9babcd5dd414528b125f1021db2af546ffea2b79e81bd25c0923f57778",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfca359b2ee31fd80ea61fb94f5c014ceb3a6108cd17f3e2aebea12d78799f82",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba10de9f8aaa72c532a5e0a2ee9779b245896df56a15a0c30e5a4fb52d9cc192",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e739a587d80d1d7c4a7154d1de5ec2244dd2b2e086aaccc4784569f07524eb6",
                    "size": 6049812
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fca3d384c393042bc49126ba1ee447a9a96bf5baf92c0fb8bd5836ea8a0a1",
                    "size": 472
                }
            ]
        },
        "3.14-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d5e801cd163ba6b4ae3458858076fff1629efd0616ebd249478dc917082dc567",
                "size": 6997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9817e75eba8a378b1dc86ab617240a921b644373927805508a1be612c62db7db",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc0c3c456b3cb0f1a28a31f20698cdd6df3c0fc43b38d8a8bc1edab4a6162d89",
                    "size": 11933673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82a2c2ee23cd72bb20773d3d551d202ab41b90be1345309d6f99c416af2fbe39",
                    "size": 144710646
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab0e261444a55065fe35990632c5c1132282f8d551ac5898b505007f3ad69d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac5fa035dddc8c1a588fca443bf195667e02d1388cf94bc5f86bf79eaf2c2ccc",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2a2ddb3023e90ce6c77b7fbff59a7f307e6f62c6e78bd3db017cb7d2cae56ae",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc97a02158264e56f7a3bc0e26ade8ce319b47b30c416708a604a4767677b9ed",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376fe09919853a6e7d5ddf600a4157e20f3bf1819c1aaac22ea79f5f7fcb5fdf",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d7adf105291b8e87f439afb583ab7605d54934ac5ee80a9137df94fc2c00d79",
                    "size": 6049803
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49586ff272baa56d77bfaa2ac6272bd9644ad301cdbbdba1efdc2fc08304a183",
                    "size": 472
                }
            ]
        },
        "3.14-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bffbd001d710caa6360b182cc76e980c0355d696c1112d9f998561358f5ecba2",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8016a73abea7a840edecbe8c9063c90b8afb7d96c0b33efe46e64b5446ef802d",
                    "size": 6156870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb9cb29ea2c75d53e491bec155436be27cdcfe94a8e419e96572a8023f0d4656",
                    "size": 472
                }
            ]
        },
        "3.14-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:66eeee58bc9fbcd875657915fff498c4d50c78aad2e5154154bebf40a027db83",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:424943849dc94cca30b68a2ac46c97577830c8bc59c091f462f8c3495cba3924",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fddc624290ae3173863673b0e671e54843bcffa18004ac46303df81aadee5e50",
                    "size": 11933735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b3ded3a656f1bc1fb52b30ecd70fba5ee95543f8f32a95174fce39190ee8d75",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03dfeeba89d2d7121ca273a9968358f083b8c6c35252a1050738519a7996ce",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d1dfd39b2b484be6bfb7d68e77ee922377ac4a82d410acef23b5e9676955016",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e663bca5182de8d88e202f7c44c3db12d3037dd54dca2f66a80b07c6aabc5701",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e58af2a8def571595ec1030837527349d9a7360a71a24fab3671e08ebed0174",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c72ba44236a0dd67a6effebb95d76e8677c8b001acbac64cea739291598fd17",
                    "size": 6156861
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37fc286f0acedac2a76f250454fbe069cb1ed390c7981a9e81395bc213d69064",
                    "size": 472
                }
            ]
        },
        "3.14-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:63114e01d5c1074a3a4ed40f3168fc5f9c0b2b71273fd43061c635cb3e41b765",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3e019542d4c075aa3ab2ebb99d48d90b7aa85a18da982fb9e1b585be1ae7042",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff50c9f4cbd0a856e30b7f8ba7858ce7bcf938021d26aa898e160b914f50b3f7",
                    "size": 11933644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf08f293122c11b8f0611b7c91385c4e151416604abf65027ab75f534b6327e2",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23b0d9dc6a2d4dd7cb659598e8d1c21f04c59b1a80c09749c421688d26b930db",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7997ed7d91de9e13125b1afab357bbf5813822da5123c47aadfab98048afd70",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc87641c952af7e4718ad8bae2f2180a3ec0db907eb9c4bf34016d6cdb70825d",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c999afd360f3c135576ace7c857657d86d64b785c6ec7e80012c0b5113d959cd",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e3e0ba80f0a6c7019d60a78444138e856cdf776b02edec446170e7ada6b4439",
                    "size": 6156856
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c0d87897625ed3a2aad7ea76b41d27343c0e1ffbd1c1425f64cda73d7bad415",
                    "size": 472
                }
            ]
        },
        "3.14-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ca86d4d9ab6c2b219f02a7ce93a3a2374119584873be6ea9d05db92d7034afc6",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3373df445985af73ddd06238647fc7f004783fe10274b7424afdf4880218dd9a",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb4e962564be1f1daa2eaeac45cc8c4cebd43c03ef151394c558353194f496ab",
                    "size": 11933722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a750124f32053684168391e76b159c38a158b99e821b427b0841b04c22ea7c7",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff091ae71af9e6ed73b8c425d345595650ca5fed002d30a225ce86841a67e066",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05866235279722aae42930108a431b459c17e18019b59ce6902f18c2d8293643",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c2265aa49aa12c893b91a843a3b5f18c0116b9380b730d383572fb1e47be9d1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:778575c4a6bd018533d25043ead49ececb1f12addacc9603260ccfc0363d38e9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d01565b6e3ef7e4606bf633fd47f1a44344b2ad9a5817d0929a3b0fbb7143698",
                    "size": 6156854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acc97fe61df7b3b1449641727d714bc5a96ed5a0499ee77f6b1118533070913a",
                    "size": 473
                }
            ]
        },
        "3.14-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:898daf0660a0d2634fe379412d2ff49beef96f12541bf297aca6aeb09496710e",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:874b0760e04e1a2f3a969c2a1bdcfa0fcdea0ee7ad24a44b4e43cabe88260db1",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1235c64e591ee2dbb14511fb2364f87559a531eee054da7d75a460146772887",
                    "size": 11933715
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e470c7a812c20b863d17609453f2c03fc44fa470142474a4851e9bdad061a1a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c28e097f4a5ed6275ffcb28492a77437e7576d0e13515a4a070f510c1d1008a",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27e632313f045080c79b21a89ac1b2a61ff6195e4b2f2a1d18479d7ab204c7f1",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09088fe1b55bf15d16cb700141d745d688547db922ae6ea566ae30617163d58f",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b395e5243ccb742296d74f5588f2d18028ee87f968e5f99798901f804f347c3",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5a4d2659db5dc332dabbe0018222647e4f6328e6cd0a34ab9cd00ec93dd04",
                    "size": 6156856
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32e003bc5ded92db26e11ed7af889e8abe259f4b59f0cc2b060498a32517da4e",
                    "size": 472
                }
            ]
        },
        "3.14-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c18e3df4d2826fc274350e1ec90857e2ad27fc9eb0005056be26eba13a5441a9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:470f75f2feb39fa6814961d838b570afaa54c999fe81eb0a28e89f042ee5d057",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f79ef40a4e0e4076bc8523a500e9509a9a576d3f7fdd56a9b3a56acfbb3c3963",
                    "size": 11933736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6687ad0dfe43e6d56d6bbc7d011b25e9d4afe8dfe98ef7331860c4a5cd10296f",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a49434e4ea26cafe14a5bca44e6dd286592d934ec38f755004bf89742539ac",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a2714863f8dc61b8ebfb54975c7e0417f39f1847f73fcefe5212c9df9acdd1a",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e0390421a772fe29f311660b7c44fab0f5be77ad63e2defe31dfb85358936aa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3d9ed71ff56a74ce089cdbe7a5074c484ad013793f7843843876bec4c65aed8",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7262af7d73ddd3ede73a04d4b69ab2f7e624856e2fbb744d7f44689fd8826a8",
                    "size": 6156863
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c46672798ab3967c26900b4bf9fe128352edb1c5f4b52ffdefb0bae277ee3d49",
                    "size": 473
                }
            ]
        },
        "3.14-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6772e92a713f35b1a7eb975bcd0fb154d34f8c3a6fd806acbfbb9ad03537cde6",
                "size": 6375
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c6d2202ccc1f07c74e3e6d3e93726bdf224008e0d273fed4945256cc25c5541",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1690c3202c76e519f10794b2ad599e0cf9e50e8f5cb67c78aa2430b7409454aa",
                    "size": 11933704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1f8b99f92412e88d34664d1d6565edaa6726b493f612860e7e90ae2ccc11566",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2f326a64ee2c0aae403b253cb89835dad6ce743cad49b52b55c9ba7641a4eb6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33e1ac5c9dde7028724a99bf48dc9aca694d176c08abc552c52d588dd1620d2f",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:060469c82e64529f533578d035a46d1d047c13783ad58da7126579b4809b0008",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b3e3106cfa9ce5e491ce40c38b8049351c65a419042498f4514415f0b95a22f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1eef00b54d0461a3e1b1f7f5e4a4ab6fb951a2c4e56cd63acd973be353a97ef",
                    "size": 6156844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89b18cddfef3d5a1b70a3bf6f78f3190fa2789c18c453f4402f1f72cd26de8a",
                    "size": 471
                }
            ]
        },
        "3.14-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bffbd001d710caa6360b182cc76e980c0355d696c1112d9f998561358f5ecba2",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422ed46b1a92579f7c475c0c19fade6880a8d98f23a2b4ccfb77c265d4f72dfc",
                    "size": 2725148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6af0d5f74ae29d24b39b1259dc73058546e8feb65015c783a610a8169634307a",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4b065811f323b8aac2926eeb6a5a05cbcf063008676218aaea61732f8f97f9",
                    "size": 11933653
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e0dc52e3ddcf387ea09068950166d31b98a161edecb5dbeddd9494340700b5e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8016a73abea7a840edecbe8c9063c90b8afb7d96c0b33efe46e64b5446ef802d",
                    "size": 6156870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb9cb29ea2c75d53e491bec155436be27cdcfe94a8e419e96572a8023f0d4656",
                    "size": 472
                }
            ]
        },
        "3.15": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6f35435d8b24dbaa9408cadefbf864ef3f9e910fb2b47a8940bff19cbadd99f5",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d63b5a724c74a5bef10805371455945bb1a6fef0cbf36acdbb45c11860e4a1",
                    "size": 5727026
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16d40070a3efb46ae242a5521b825ee4f9f116a4ac64799f100ac9c3a6c5e957",
                    "size": 472
                }
            ]
        },
        "3.15-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e56e7e6cf8aacb56ba60e72edb00052ed894247692cde42c7e36de171ca53ef0",
                "size": 6386
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad3fa0ea069c04e4ee9be58cf0ae9e1a8a56f649b96a96298203b055e8c903ff",
                    "size": 2720868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:357b7a3c2e8ae404509e318bb822a90a6e5cf0f4d1707ab83fd6adc4f8f87d08",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8dac16781f087da322802fd18c7517d8a084b456c758b582a4264136a8b31f4",
                    "size": 9952887
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a29ff6556994f82271bc37e36caa4381400d33f06f21c122891401d9e774fa30",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f1623834eed3164f9aa790cf1a95b57e757095fcb38e790ea29a6ac1176e42a",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21e3bd187baeafc4ff254e513ade5d22eb71530caca39f576f39475e2ddd8f99",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04163cccfd3c5e8a893eb3e4f73302c0c6d7d0b3392925f9de0cd7567cd0d1b4",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d59a0e8e7bc0f2c71962533efa33f0b4a75105b82eaa56094cbd624fa038f43",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fda3b406884cc7a43c562f76638dbd18cde454e2ba7775f7ad11c5bb6353e519",
                    "size": 5727028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8afbbdf22341244a37b07f150e04a845eaa496b63704a1bc7eb15f635ef8f42",
                    "size": 472
                }
            ]
        },
        "3.15-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:19aa5b2f4d9e011d796b87fa2d77b382212dfeafe38e733ae4de9f22609c5784",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d691a5a46cedd8527fd3e60b3bc0052b91b48c414dc2b3c4ff0b01a02b64b8e4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4cc92e93f29bb5f6f215e6d2f1555a2695f5cb7bb2c902bd757ce101beb3e53",
                    "size": 9952899
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d94702a83dce09930a8f9959acf61d8cd72cfca6cfc600305d8320d046a4db2a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76bc20413af6b566811f1dba1492ecc69a39de34e9500c47851ed5f0533e332d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8fa307f30ab9d5ff9dd9eec2aa700caeec1a2996be44ad04691a848efc0a903",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dc0820a32d254c7903f2536ec89ccc4c830e1be278b2a54cfd85e60ee75a5fa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:995943bea25538149e74e0ed402399504471395793c56a17ca1a4ce3c2a9162d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0379908fbf055e0934419f4eb46125bfe9192ce796c058bc3edb948fcfd2620b",
                    "size": 5727014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59b4bf6485c1fc41e546eede338d18ef7cd128d8bdc81ffe82c95ba52b97e055",
                    "size": 472
                }
            ]
        },
        "3.15-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ee89e73c2fccbc95f084f79cf5e01e0021eea5b38f543fbd33867715dff43a05",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3006944965a3237107ee50067fdb57e1ea77cd474fd7758abe54a119593656cf",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88ea5cd40bca2b5cc0c4fcedbff7144e36f35bde67fa8fb15ce94ea33bb4aaff",
                    "size": 9952940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b2ed38f6fb7989f25d0d57d2575abef779d2a44488a5a5dc48242a12b3822c1",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b33d495fa5dd1a250c03f8f3390f7068327d65233ca171fefb7250817b1df729",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983d59751c08f0e7fe0e44fd9190f955481817b2a0e6219f7082227634661a4f",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc6a9960f01e916f50d615a4f9b05f101e5051cade840094d8be4be1c5f7f91",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb61f6882f7d9db086d7eff166c517106dafffb3ffcd7c69c3553ec5366800",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10c702e9102dae73544b20714c6207e3541b48045c51359c7f6331f81cd10ced",
                    "size": 5727029
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1ec25c3b73a9166e3e6e221a06b2627f1540494ec78013aeac418c8eb72bf63",
                    "size": 473
                }
            ]
        },
        "3.15-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9655ec6fc214396e43763342e1e12dc417dabe94e9d29a05d82a5a4ac5a0ed25",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62fb8ad7a38967ab576e8168014131c990ba46dfbda2a02fc6a7540684c72f31",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbd5a0146658fb21c4225577c6b26a9d1eb9fe3d108526c453370337a605bc79",
                    "size": 9956964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa0b54e93328dec57a5b41c2369958d19c82b86c5cb31ad2ce55a15d58a53d8d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dbdf0a09eaa76418e4eb1a7e7c93f3906317e76a2fd41f00ebd5a6fe112d9a",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:462e6bb5e055fd7af945fdd37db35d3dd84e9e423da198e8ff21b143544c3e26",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b038b34098182abc668dd5d1a4a8c34a70c720e28187251ceeb558f2ce1ca1f4",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19443ca816e858793e428029d7abf405161fc800b98333e3da3ae3a251c03f42",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db76c658d4b579f6d86adc48017e6c76e162d60635460bfe0eed473a5cc3409",
                    "size": 5727019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b63bc08f7251989e70d3f32d14f7411c20611b16ae41c4fc5d7033c048cc0503",
                    "size": 472
                }
            ]
        },
        "3.15-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:906782451dc1d26d3817c2e4418f3d959064d5c3745ae2be50e2f3b4a44af79d",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d8eda9fb54d23233f708a38b505274577dbd7f67b007394a6d91f8690278aa",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821f6d62b05b323745863f914297bd4992193f0b66fb9fa6c3fbdbdefee4bf9b",
                    "size": 9956943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1abedffdcdec697e2ac9346deafd319cde06447781d1c1d3f9c2365833a169f7",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77c4f4ead2ed98e48ec202311ec33e3b51ee06a280cd1201133b455fd14df86e",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a98348760bbc42a3a2bb9fc6be8a50a4d95af91dbfbb7220486e0731e3f9295",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:769a0333d30ae0c37745d388c54a75deae5e65dea2f71d68acdc10038474c3e3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1623852bcaaa2b61e15c0d498ee2463149d126aa28fb6b1a9872f40039cf6e15",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:819b55a0b01522f440d96dbb588ae3ed863e4143a9993634ecf96892139031ee",
                    "size": 5727014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc08a2c645100a7d296022c8983ef0c81fe7558d43a3cef4e98ce4ddb6dbb36f",
                    "size": 472
                }
            ]
        },
        "3.15-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:13f43abbd49560e3536db5884ead7f155769abf040f387547b837ab1224cfb62",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7748051d821608f52ff76f68d165ac3f6256d8e3ae4b0fa6b3d2315393dd0f6d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054f3419e5b62fb53998b07b8832aa7cc0e3065b0f809fa328d43940633fa265",
                    "size": 9956944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc9a664b877e8c949bcabb8aa30c664bc8dc9c7f8a0953d16a6b1962bdc769c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd610dda84529e521f8dc15260614f9929ba2b95dfcc843a6dacd573cd4646",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddb2d865600689e01ac1185fb06e7fb28f7be8ae5c6902ba0a8d2fa39e2634f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29f5ad57dedc5ba2ecdb01c3d73405037d61ca97a6c625f0a02672b5fbabfbc3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c647d5d713782561a979830d5d60620a7fd8e8530b3503a3d81aceb6a0d6b26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a02c64cbe721ad1da4a3f0f48ba69f605f70cf0c9a76aaa16d84542642970ba4",
                    "size": 5727019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91b03841a3101c00b5a1e6c770fae023bf8d2a6db39db5a10a771858b89103e4",
                    "size": 472
                }
            ]
        },
        "3.15-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6f35435d8b24dbaa9408cadefbf864ef3f9e910fb2b47a8940bff19cbadd99f5",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d63b5a724c74a5bef10805371455945bb1a6fef0cbf36acdbb45c11860e4a1",
                    "size": 5727026
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16d40070a3efb46ae242a5521b825ee4f9f116a4ac64799f100ac9c3a6c5e957",
                    "size": 472
                }
            ]
        },
        "3.15-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:46eb78810659702adcd4fa2d41b03d8671eb2a30bfda7a876a62de402ff0fd11",
                "size": 6997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fbe6841c31b01356b232b39f9081caf9552499187eeb932cf485808c8fe6454",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cd5143c1569b8a6a61a0ec6acc1082d564aea857aecacacd60fe2f7ac716437",
                    "size": 9956950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baeac6085034d7da7acc48a8ef785fda44dd79cd99e48bdf6766443960788110",
                    "size": 148535732
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc5b11c3626e813b55830d00aef5ac9d60c133b620035826383974913a4180f3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb3c65b20e86a5902f979ece6e472e66c2216d4da24c8f94f5f613a15b78050",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a34f9d774008f6311b3a8704db9f2b0a8f43491bc757964581882e421d446d98",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e42113596e7077dee8359a0ce8b22f0adbb5992a061695876cc2437c21f43514",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bd5549ea346ffb71888f58f1667df9d73c48fe7bc611e6353410e3cd5197232",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4721179bd64648751899e547107e79c4ddf528ac79ccaa6e40d35773a2b19150",
                    "size": 6058838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64ec5eccc507dc7f35e63fc04b3bbcb07132bd5b64765fda26071235791b7970",
                    "size": 472
                }
            ]
        },
        "3.15-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8ba034c1db876a555281461c5da82225411ceab42a60a254a675a65ad80a0aac",
                "size": 7006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad3fa0ea069c04e4ee9be58cf0ae9e1a8a56f649b96a96298203b055e8c903ff",
                    "size": 2720868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d0579eecbdd97ba7b43f65f7974ee5d2ba3d8c1ca87d30424497aa9897232fb",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49ed811d0492ca0f087c0a525036c6f9bd1b9464eda6821a219238f94f06b4ce",
                    "size": 9952816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad7bd25530b3e927c2cd5db0476a93054fd72d45f816372557e2837ee69d225",
                    "size": 149875044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34c65989a4445cd5d07bda9a8d82584370a0310c45e1138ea8acb6e4f2c9b857",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b73dcc20f797eee9fdbb7d19e16800f50f6f216eb38ac681872e9e19c3e403a5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8fe7aeceba04b5d5db8ee531ad5a9a8147e7dcfa4923d1d871aafdc3bdee9442",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f7b0982e9244d66533d2c2588d9636986e49de4ba24472628dd40f49e6adb10",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1a68d885c171a652cb0dfab4c8fcb10cac199275fe00a689ed19fb325ea841a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0d7ca96556d70de8032109753db8fc6016e7bd6006a56ab992ef80a4eda6295",
                    "size": 6058932
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cb1c092cc840f9388238a9442caf519d27963e0ef354ced2b02122d82dc7db5",
                    "size": 472
                }
            ]
        },
        "3.15-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:761c354854cef143d14627f992b87780e8593f765b6eadabd576936d784396d3",
                "size": 7008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c008b83093c98d30a1821c7ec5e5570336dcbed6de4bb9548825446a45d6606a",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:255787a45a99b57e6e71e8230f6013c86cf9d457908c4678d40ea974e7252bef",
                    "size": 9952893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4c2549cfb5404695b9f33043bc4225be109ad5c7dcda9c56d41cc85d8559f3c",
                    "size": 148535648
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:afe1e8ee9239790e2cbaf0ab5bb157f3578c13bb1ba20efdc8a50f3881bd2db7",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:538591d3bc2db27c515b841dba98b11ca9e72ae2056a812e19414902898d1cc5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4bec0c1bdc19dfb084615e84239cff53bae00fbeb171f3e88f3b4848aa370b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6c1a1f677ef78e2497a887aac4fb91b834c0e445fc9826c357b0b5c481d025c",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6d215af60bb93935cae6fbf686dcc049df186e9afc4ae14ae5bdcf3fa8d9c5a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c671b7deb7d20b9757c388cbfd08be9b4dd5651b79d940615ec1274c822c15ac",
                    "size": 6058850
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:313e688581a48ded8fd867f815f6d8053bf8a7c6a7e7036d097c5f1ce9fafdf1",
                    "size": 470
                }
            ]
        },
        "3.15-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4d10608a90bbaaaf71ed7a0d61e76b7ce898405de93752da5993653deafdb6c5",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3006944965a3237107ee50067fdb57e1ea77cd474fd7758abe54a119593656cf",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:26850367d7dd32632fd9d1aa5af3323067fed807baaa9fd0c7622a0c2812604a",
                    "size": 9952967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:945f8c988824f752e2167e72c2c127886a579d7230b3862cfa986975e7293585",
                    "size": 148535743
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e602b5d420af495f5110001ce7afdc1e814088bc8ba6a50d74d24dd36430cf6a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ae7417506ccec04d6cbf970765d7b69a555b35fd8aaeeea19e0b06c5c95518c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce6cd968d4f6a35e77c6564a72a405887ed1b5c8a843defbc9e2ba7975978cf2",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53ead9f12c1878c0daabee838966fbfb1a466b336ca78cc0c31a4de2c30a725f",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a82644a58e4ce0df52a11b5a6e15cc775a62a6356ac1e05ccc525ad766317be",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cedb05f8ac6fcaf04819232c9341b6aec3720c5412bd862e115d481a752eac22",
                    "size": 6058841
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b0e1dd9349485dd05fde69ecb58018f23a65d30aac10f8e1a1096ef06c69229",
                    "size": 473
                }
            ]
        },
        "3.15-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0361f32b2a4945d1540dbed9ea2bed29ce10d77cc91886f6af3b5a395ee913cc",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f2f007116935504a5ec8443608ffb8680bf7c5ca7cbb5eee5501896b254d85d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b93728f552a5597c4a0c2582ab0e72dafc1d0d393e48ca696d667433f623a159",
                    "size": 9956973
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:381a5d997f354d694406bb69c5ee03ff3a4153c57eb714131d8d3137220f2e4f",
                    "size": 148535465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00857f05f91a00e1901a73ca95cbbac84bb0898648e3d2aa7db98ee9c371f4f3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44e979976bd3e16064f4925d8c6bea03996baae2e1cbe01f2469dd42812350ee",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ad7e7091c40a88ca73941a906ea042dcd42774e62587600e6e6cc887a108188",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5433532c7f0193678c94d0c2ca697d54128eb8ca3d126de1030615d5c7ae7dba",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:882dadbbd0465613555b06c6030ffe2f8c6ce4866b72d3ec171613508f17caef",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f833a76c2c6ecfb7a25e80942da43c5e99cbee24db556dba3b817beea91a301",
                    "size": 6058835
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8385fa6db5556f4ebcb1d4b5c18c88768d94c02c71e97b9e091730a9426590c7",
                    "size": 473
                }
            ]
        },
        "3.15-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a90abfb31d2c6a515d2c5ec7e0db79eec455f4b7a1b7286f02a16040f3155604",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d71921f9e137f7c75683939b463d279ebd7d5d1fe5c50f8adbead3a6005844e1",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11fd22177201502505bdd9195bf66c5d0451f779116b358c0f49d1a4b9648928",
                    "size": 9956942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:881fd783cd5ae97849dfbed69557f03f6e43837af47b3ed2ace78c2568b8fdc3",
                    "size": 148535474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb708fcb80464ca1109c4f476ad409c12122d64e20e7fe3e48d0b0e562eae5c9",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30a8f64c1851193f1c6d6149d952460ac6da6904a159c4ad0b62c4857ca9f5a4",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4fcb30d980e0d2232bbb63df7f47a73021fb33b09a2fad9ef86da1486fbd771",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2e3dedd2ee72d2f486f87868edefdc91473e3d2e578cd9e109dcbbbaf58c24e",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe8e61455a84122f7959783d101da9100d4f6b244f1bd1f0845734f1d662af54",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3f7271e8969f13a108341fc498be9287f3206a96b2dfcc245012396696e694b",
                    "size": 6058838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f02bc8916abae62fea13c32e907633efd0cbba9b2bd88a2edb5493df4e70735",
                    "size": 470
                }
            ]
        },
        "3.15-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f6daec9b0492d20c91117637b7b61d7c50965932873c593a006cb44cae331c7",
                "size": 6995
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92fe7d047bf3acedc716bf8ba02768ea8af0a9052e425343dbd9bd07beead7b",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb21378fd6e730a1eb280e88d787ec7cfffdbcc1de7224af2cfae36df49496e2",
                    "size": 9956893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0373d4844e3a2ac5e8e786d0f9c05e43f1cd9e46f7f0eed2025426f648157691",
                    "size": 148534993
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3201c0112dd62db6db199c0dfbd2d38eca94bf57e1fc418334d3f1fad7cc605",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10d0fed5b4374a3d022384650b024ec4ef63497b41a961e587b836bb0b760848",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17614f178e73602c453cbfbad24104378d94ffc43c9f62d0f7596bb49d8b2cf9",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69a22b33f54b70e3db8f0dd2a886661ab686764f61ea379c2d86814bbef7dcf",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:81c5bed32754a10f09b805cc125c687d540a240b3f43d8efe98cb8b5bf0514bb",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78aab52aff6497d70a28d0d7c5d07c867b0f0fd481c4a0d38e78716410191",
                    "size": 6058830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:003506152ab47b3a7cc6b897f932aed2328285fed5bd7a4ed760c6886e3eecd6",
                    "size": 472
                }
            ]
        },
        "3.15-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:46eb78810659702adcd4fa2d41b03d8671eb2a30bfda7a876a62de402ff0fd11",
                "size": 6997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fbe6841c31b01356b232b39f9081caf9552499187eeb932cf485808c8fe6454",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cd5143c1569b8a6a61a0ec6acc1082d564aea857aecacacd60fe2f7ac716437",
                    "size": 9956950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baeac6085034d7da7acc48a8ef785fda44dd79cd99e48bdf6766443960788110",
                    "size": 148535732
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc5b11c3626e813b55830d00aef5ac9d60c133b620035826383974913a4180f3",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb3c65b20e86a5902f979ece6e472e66c2216d4da24c8f94f5f613a15b78050",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a34f9d774008f6311b3a8704db9f2b0a8f43491bc757964581882e421d446d98",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e42113596e7077dee8359a0ce8b22f0adbb5992a061695876cc2437c21f43514",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bd5549ea346ffb71888f58f1667df9d73c48fe7bc611e6353410e3cd5197232",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4721179bd64648751899e547107e79c4ddf528ac79ccaa6e40d35773a2b19150",
                    "size": 6058838
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64ec5eccc507dc7f35e63fc04b3bbcb07132bd5b64765fda26071235791b7970",
                    "size": 472
                }
            ]
        },
        "3.15-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6f35435d8b24dbaa9408cadefbf864ef3f9e910fb2b47a8940bff19cbadd99f5",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d63b5a724c74a5bef10805371455945bb1a6fef0cbf36acdbb45c11860e4a1",
                    "size": 5727026
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16d40070a3efb46ae242a5521b825ee4f9f116a4ac64799f100ac9c3a6c5e957",
                    "size": 472
                }
            ]
        },
        "3.15-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e56e7e6cf8aacb56ba60e72edb00052ed894247692cde42c7e36de171ca53ef0",
                "size": 6386
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad3fa0ea069c04e4ee9be58cf0ae9e1a8a56f649b96a96298203b055e8c903ff",
                    "size": 2720868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:357b7a3c2e8ae404509e318bb822a90a6e5cf0f4d1707ab83fd6adc4f8f87d08",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8dac16781f087da322802fd18c7517d8a084b456c758b582a4264136a8b31f4",
                    "size": 9952887
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a29ff6556994f82271bc37e36caa4381400d33f06f21c122891401d9e774fa30",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f1623834eed3164f9aa790cf1a95b57e757095fcb38e790ea29a6ac1176e42a",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21e3bd187baeafc4ff254e513ade5d22eb71530caca39f576f39475e2ddd8f99",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04163cccfd3c5e8a893eb3e4f73302c0c6d7d0b3392925f9de0cd7567cd0d1b4",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d59a0e8e7bc0f2c71962533efa33f0b4a75105b82eaa56094cbd624fa038f43",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fda3b406884cc7a43c562f76638dbd18cde454e2ba7775f7ad11c5bb6353e519",
                    "size": 5727028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8afbbdf22341244a37b07f150e04a845eaa496b63704a1bc7eb15f635ef8f42",
                    "size": 472
                }
            ]
        },
        "3.15-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:19aa5b2f4d9e011d796b87fa2d77b382212dfeafe38e733ae4de9f22609c5784",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d691a5a46cedd8527fd3e60b3bc0052b91b48c414dc2b3c4ff0b01a02b64b8e4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4cc92e93f29bb5f6f215e6d2f1555a2695f5cb7bb2c902bd757ce101beb3e53",
                    "size": 9952899
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d94702a83dce09930a8f9959acf61d8cd72cfca6cfc600305d8320d046a4db2a",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76bc20413af6b566811f1dba1492ecc69a39de34e9500c47851ed5f0533e332d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8fa307f30ab9d5ff9dd9eec2aa700caeec1a2996be44ad04691a848efc0a903",
                    "size": 267
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dc0820a32d254c7903f2536ec89ccc4c830e1be278b2a54cfd85e60ee75a5fa",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:995943bea25538149e74e0ed402399504471395793c56a17ca1a4ce3c2a9162d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0379908fbf055e0934419f4eb46125bfe9192ce796c058bc3edb948fcfd2620b",
                    "size": 5727014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59b4bf6485c1fc41e546eede338d18ef7cd128d8bdc81ffe82c95ba52b97e055",
                    "size": 472
                }
            ]
        },
        "3.15-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ee89e73c2fccbc95f084f79cf5e01e0021eea5b38f543fbd33867715dff43a05",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3006944965a3237107ee50067fdb57e1ea77cd474fd7758abe54a119593656cf",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88ea5cd40bca2b5cc0c4fcedbff7144e36f35bde67fa8fb15ce94ea33bb4aaff",
                    "size": 9952940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b2ed38f6fb7989f25d0d57d2575abef779d2a44488a5a5dc48242a12b3822c1",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b33d495fa5dd1a250c03f8f3390f7068327d65233ca171fefb7250817b1df729",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:983d59751c08f0e7fe0e44fd9190f955481817b2a0e6219f7082227634661a4f",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc6a9960f01e916f50d615a4f9b05f101e5051cade840094d8be4be1c5f7f91",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb61f6882f7d9db086d7eff166c517106dafffb3ffcd7c69c3553ec5366800",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10c702e9102dae73544b20714c6207e3541b48045c51359c7f6331f81cd10ced",
                    "size": 5727029
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1ec25c3b73a9166e3e6e221a06b2627f1540494ec78013aeac418c8eb72bf63",
                    "size": 473
                }
            ]
        },
        "3.15-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9655ec6fc214396e43763342e1e12dc417dabe94e9d29a05d82a5a4ac5a0ed25",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62fb8ad7a38967ab576e8168014131c990ba46dfbda2a02fc6a7540684c72f31",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbd5a0146658fb21c4225577c6b26a9d1eb9fe3d108526c453370337a605bc79",
                    "size": 9956964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa0b54e93328dec57a5b41c2369958d19c82b86c5cb31ad2ce55a15d58a53d8d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dbdf0a09eaa76418e4eb1a7e7c93f3906317e76a2fd41f00ebd5a6fe112d9a",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:462e6bb5e055fd7af945fdd37db35d3dd84e9e423da198e8ff21b143544c3e26",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b038b34098182abc668dd5d1a4a8c34a70c720e28187251ceeb558f2ce1ca1f4",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19443ca816e858793e428029d7abf405161fc800b98333e3da3ae3a251c03f42",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db76c658d4b579f6d86adc48017e6c76e162d60635460bfe0eed473a5cc3409",
                    "size": 5727019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b63bc08f7251989e70d3f32d14f7411c20611b16ae41c4fc5d7033c048cc0503",
                    "size": 472
                }
            ]
        },
        "3.15-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:906782451dc1d26d3817c2e4418f3d959064d5c3745ae2be50e2f3b4a44af79d",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d8eda9fb54d23233f708a38b505274577dbd7f67b007394a6d91f8690278aa",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821f6d62b05b323745863f914297bd4992193f0b66fb9fa6c3fbdbdefee4bf9b",
                    "size": 9956943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1abedffdcdec697e2ac9346deafd319cde06447781d1c1d3f9c2365833a169f7",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77c4f4ead2ed98e48ec202311ec33e3b51ee06a280cd1201133b455fd14df86e",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a98348760bbc42a3a2bb9fc6be8a50a4d95af91dbfbb7220486e0731e3f9295",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:769a0333d30ae0c37745d388c54a75deae5e65dea2f71d68acdc10038474c3e3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1623852bcaaa2b61e15c0d498ee2463149d126aa28fb6b1a9872f40039cf6e15",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:819b55a0b01522f440d96dbb588ae3ed863e4143a9993634ecf96892139031ee",
                    "size": 5727014
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc08a2c645100a7d296022c8983ef0c81fe7558d43a3cef4e98ce4ddb6dbb36f",
                    "size": 472
                }
            ]
        },
        "3.15-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:13f43abbd49560e3536db5884ead7f155769abf040f387547b837ab1224cfb62",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7748051d821608f52ff76f68d165ac3f6256d8e3ae4b0fa6b3d2315393dd0f6d",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:054f3419e5b62fb53998b07b8832aa7cc0e3065b0f809fa328d43940633fa265",
                    "size": 9956944
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bc9a664b877e8c949bcabb8aa30c664bc8dc9c7f8a0953d16a6b1962bdc769c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd610dda84529e521f8dc15260614f9929ba2b95dfcc843a6dacd573cd4646",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddb2d865600689e01ac1185fb06e7fb28f7be8ae5c6902ba0a8d2fa39e2634f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29f5ad57dedc5ba2ecdb01c3d73405037d61ca97a6c625f0a02672b5fbabfbc3",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c647d5d713782561a979830d5d60620a7fd8e8530b3503a3d81aceb6a0d6b26",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a02c64cbe721ad1da4a3f0f48ba69f605f70cf0c9a76aaa16d84542642970ba4",
                    "size": 5727019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91b03841a3101c00b5a1e6c770fae023bf8d2a6db39db5a10a771858b89103e4",
                    "size": 472
                }
            ]
        },
        "3.15-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6f35435d8b24dbaa9408cadefbf864ef3f9e910fb2b47a8940bff19cbadd99f5",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bc1ab4b84041d57f21a792410a00820f73fda7efe08bcd2ca6245349a40299d",
                    "size": 2721527
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6801f3821e25571d84553c1ab11eaf30a82d5b4789d1c29dc3792dd10daead8f",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd7953906a0c049c9b275a9409ff6218317487c47db5298782e0b1877502e7a",
                    "size": 9956953
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b9583fe1f4ff4d9f4bcb80dba0a80b522018aa16df67330b4aed262cf65d3da",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1dc2ec02da9db934c32b755a215f594f4af7cd80914e0ca96e546b07998450e",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f710146e43186106c59a1c6c6c103cc3db32b2cf8399685bc7f0df6e919cff0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a27766c9871e2676c358279482d3cdd8b906b1f6ffbf0315491001772b252ab6",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9c4b6e8f0565461f3be8d7a32c239a165a62cf6b8524d7e7dc0b2710f5a70ea",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42d63b5a724c74a5bef10805371455945bb1a6fef0cbf36acdbb45c11860e4a1",
                    "size": 5727026
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16d40070a3efb46ae242a5521b825ee4f9f116a4ac64799f100ac9c3a6c5e957",
                    "size": 472
                }
            ]
        },
        "3.16": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a02fa58353f17847d4461126029c2682935f65cfe276445b56bbf90e5cc1e9a3",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b704890560683970dbf65d686085660c5ec0c0ce7b2c751fcc38befcb695ef",
                    "size": 5732424
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422faa4c437c7a2b9c5ce3fcfb68e6c9c31f94bce73a23e4d4769d67a66b7b9a",
                    "size": 472
                }
            ]
        },
        "3.16-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d810f7c89fbd53b7756956388517ed8f62f9fc5787ccf6b9fd9c89972426953a",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdb2de7ba06c3a4e10b98f439a8c70afd63eee492c2ddc32342331a8e9ef4ff7",
                    "size": 2708023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85a247322d9b36f0f9876ebe089b61e484c38ba34f76aa34aef18d6aaabf4a99",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d411d018984813cd49490cd8e4cd12a481b531b4a109c3d07dcad1bc167adc23",
                    "size": 9857036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c89e56f376a820987860d5086cfc6e0fd240c70810c3c883bf22cee649f1733",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e909ed157ee88953896b135fc5387b482fb17f7603661ede3284730ff522cb0c",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd32e7e0232f31d6d41e4909bb4808b1c70fcc6e3b416cb299deaf4f9aff86c0",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab37be9c34e0ab97b9af7b61102b1caf755e68477a58c019d997e4de99f64f48",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:419ec1411ec9cdd14c913adf6f91048ebef1adf97721418d935830c07617dec9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef8163c329c7291153fb267cc08c4f36a21e46c2bb4f9a5c5d88f0f6912a327",
                    "size": 5732319
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04ff7ea69258a5344642c3f1020008bc48d96c9e03c393d5796cce87c181aeec",
                    "size": 472
                }
            ]
        },
        "3.16-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0e3572e49555b3707c9413ebd3186f3f18cbcce727d3a2955cc5a452c3be6dce",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6654383931c67b9dd1ab1983e332e7e82d6bf4982cec5f880b8902f289cc1a8e",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdd7f9ae194ead383b19b8648b698701dd81ed168b5adbba0b85d8edd689e015",
                    "size": 9857078
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d13fc81cdf01d33ce83526ce5c031f037d0bd83ec5e2985f403d3e56ffc7eaef",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18a42b0e3fcb6758d8bd1b3528c254bacedae087bb9a9aafe0a6e9d211ccb614",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de66cef89e80515f0e450702fedbb251fd2b0833e805418bda12a0b581099b30",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:236eed5320309506b86502b0487a3b318f920ef0765f6099bd759a805fd55f19",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3424ea72e491d155e0e29687d589c1dbe7ac04244d7263b36f66093b6db5bb",
                    "size": 5732336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:141d347f08b53f8622a4c962bb58c1176dc928ad62bba389cae30ec9d04b0dda",
                    "size": 471
                }
            ]
        },
        "3.16-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a702a945d2e1620cc450d7cad42c63639c7eca04b9fad2700ac0bee75a7ea973",
                "size": 6385
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a7609c0ee09dd016b6fe805ad8a902da6476ca57e585013d85b495d520a835",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a734658b6cd840b42fc743aaebd342c7151547ab0a1b5195acaa74d8da6af3f",
                    "size": 9857047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583406f282426467923f5406f29b14cac9b226906e1e60f473dc4d686585dfaa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c8c128e390ce35bc1f5a0b2907588b0e858172df6cd319296be12e5b185d9c5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af60a88bfbfe20548166abed5157a3c994259a1f3e9575f61533050f1d6667b5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b67d126c80f95b9b8ac8cdee5344cbf7d15fde8f8b6d9b11b9287862d14315c1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ff6540c7df0a3fb7a85771367a2b6da71a16dbd0b4a017883aaeb3cb00bee9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:beccc7856408b990a475f08964f469ef60bb49d18cb1a7b84a4f74d3bb17cd65",
                    "size": 5732332
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f6a2ef96776001c2fb6da0ebde74d46feeb62621cdce859116e0cd22788cf9c",
                    "size": 473
                }
            ]
        },
        "3.16-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:929ebfa7a2f005393856ddcb3cd8c9dbf141d3a9fc507518accf6a1024f0efae",
                "size": 6384
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1637239cec4fef326b57e9ebe5efc0d2e0496abc0572bbedea806e4eea26cd54",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d4f43756210d1c9d34dd62349d09c8ad3d2226b024b6f70256a3d3bb36c745c",
                    "size": 9858568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f0db151a97fd6eda660e4897e9142acbafe0f9aaa53144222fd955085777c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e89fac2335587bd9d1a7f0132de0987d63bfc9dd489a17e9423bdefa22a571",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cb6627b8c44ae0f0bd5a7339eb4529cb8d75a004565e4ddda377037617db126",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:267c10f98303caae89fb749ba189d6ca723949d29bb128ca61738b99948c65e6",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fbb060c7fb4bbadec8930435cd1746223774dce0ea3221d09e3478a229de4a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18dc3a47d89650e19499ca457b1a8d6bf2ff202cc279b306ceea249daef70649",
                    "size": 5732332
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a016520383d6264b2520a8d7e44a4a31949fa81741bcb4ede3bfa1ae075ba0f",
                    "size": 472
                }
            ]
        },
        "3.16-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f572ecf31d5b6518639db243bea1aa468d4513a541e18c252c8a462b5d69f56e",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ea011993d4670bbfe20dae79f0ceca79389b64e9ae0945d1bcbee5df0f96985",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d364ca32c59fba10f9af8548c9ada2478c093f0911725d32a025efed9981cb38",
                    "size": 9859358
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a7d8e854fc8bd472a01b7817cfe7d9a9dca1e8f787486572693fa0a8fa047ca",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bf49f098ce0068e3c89a778903a264e419dc56e29551ae48de070d21ffbb086",
                    "size": 5732322
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18043befc8fee6374fd199b9e0525063351a0d037085e2bca7ae2ab9eeb010fa",
                    "size": 471
                }
            ]
        },
        "3.16-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f3b9f281098a70c92ce9874694c1dee735662ec18fa4d7aeb1dfa167a3c3d22",
                "size": 6374
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790e45397078834742b7a9bebe166bfddb3de7b912e50958a7987b76fe7101e2",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f81ce58a1911ae5cf3561eec9735d1c27be22b1253dfab6b19b928be6043ce3e",
                    "size": 9870218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4c410d423fd46114ee767a0873e47736da6fa0ffb6d38e9e3cbe9819c2cd561",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6763c72dfabd180dbb25af25b57246cdd8368b08f857ed12095119dfd66606",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c68b6de5418baf0639cb2ebe8a1eaf7c2e3aff5c2925300d454d2b5fb1e6c3e3",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9ca1417089f6a8b0315d8018748c1651c5201c17344f6ad80edfdb5cf9a44c3",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:374e4f032c3a6e30a4660a86e842e40cb5a4c635da8383a4a8ed6b03f59e8115",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9867b6738b40779148658679a4997b74acf55ea41178eb3c3a575e35e6eb7892",
                    "size": 5732448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a5fd0f54d1527791f51760b5b9636788a9205459a8da9eb77cc4f50e5339dd1",
                    "size": 472
                }
            ]
        },
        "3.16-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a02fa58353f17847d4461126029c2682935f65cfe276445b56bbf90e5cc1e9a3",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b704890560683970dbf65d686085660c5ec0c0ce7b2c751fcc38befcb695ef",
                    "size": 5732424
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422faa4c437c7a2b9c5ce3fcfb68e6c9c31f94bce73a23e4d4769d67a66b7b9a",
                    "size": 472
                }
            ]
        },
        "3.16-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:656047cb57131b429c5e012020a391a0b70418a6431a3fb19c22b6c3360162c7",
                "size": 6996
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a8baa8941a2b3684f3c46df1c694161440fcc92bfa75f14bb5a1ed6c69b90e2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3b429d25b7c48011ec28cb885737158ad164475041b0c690c36ab1fc4639fb0",
                    "size": 9870172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd814bbd2a9bbf83a40c8f7f2de31fc44982762e5b45f7a7b20c09ecd412320e",
                    "size": 155925275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790cac1d59509f2eea8adade0cd2ae9b5c4fd8fd04ec7271546f65cc7eb1b725",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c02843d2cf0f61e021993be0c2e6dd9305d07462f9cadc4937c5cda767ad958c",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1c1f1f812b5871d49bc075374d40b64b5a566dd6f21dda400fd166556487b4a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d39a162e38056d60f93855a6442e5b430a4a74fd2ba99a20bc134650080d303",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70b72452545897744cc413bf44d11d165b7af0911672b2c4232ace110b4ef7bb",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc0b03475c2b306c78fdddbf3aeb3cf89fc4ab73520fc40873fdd0064edac9dd",
                    "size": 6059428
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a239994658fa857d99fe601ee6b21e01f768d3f5a19b6539a64629a9ef8a81bc",
                    "size": 472
                }
            ]
        },
        "3.16-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be450219ee8d458feb66c36cfe0f743d60bafb34c0ca28fbb46e7134f19e7fe4",
                "size": 7008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdb2de7ba06c3a4e10b98f439a8c70afd63eee492c2ddc32342331a8e9ef4ff7",
                    "size": 2708023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5ab63c76238c9ce9b489ab4aef42b3f90d29a8c90aae953592b17efef03843",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a103571567ec122bbbbf582545ead5579c97b952d683f4811c2c767a0e2f64a",
                    "size": 9857099
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9eabdfa2563112b2cb5a70af7a4c834dab813b54cb6839f49c52288970d32a30",
                    "size": 157380301
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:392b6fb22af24f8311f3a85c72ed43cefd53185e97883dc65e722df5f4e38b8a",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:daf7dd544b9c571886c5d4af0e7712c2bd1be4c3324db968596f8a14ab28f161",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3234155ab8f02a397769000fd642710de8d767b5ea770b045f5540f83b663ba1",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3362305f86008e685dc1c4c9fc455981c3b9cc53739c54ad658bb343eb51cbff",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5528d32bd2fc0a038e8cf0b413cf1a5401f87ece63d05b1ece758ccf0ead3ffe",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83f634b147feb33298bd974416c0d2d812a1083459aafaf6f56e618907dcdb5",
                    "size": 6059263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2463ef480a0f7c57a7114d8842b38888528f3cf7221d5dd02151d03c0567ba67",
                    "size": 472
                }
            ]
        },
        "3.16-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:58b297d3b4e57c7891e7d7659defe5b0fff6a65c12f2e495d452a472ab3405de",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6654383931c67b9dd1ab1983e332e7e82d6bf4982cec5f880b8902f289cc1a8e",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33e9c22ce4576ac3c3ad87d83282c4d3a6a5a843021513fef859bf3c86919ca3",
                    "size": 9857077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a7ebada011dc412ca8f7083de244d2972d2c1c456bad4253a4aef6ccd8d766c",
                    "size": 155928558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b58fdc146c22628220cda69c3099312b0c5c8ed4ef3c3d6b1fa5e97d7813cf5e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13c5d88f2d83a0322107a0afb7728addb6ff80164059d456c2c65ec8bb1c69f9",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7854f496cdce7710894b54a3f12293d00d63e9f9e02df5f253fe9518564195a",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34ba86528f02c7bdc23b336abc6670df5b2c9d8b9bf95a2ac4e93ba4b93a1d68",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c18439735d346fd4c0aa22e27b9413ece0362dd8c90e06c8bf6227fbc17c5a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7e056664665223b5d992c77a0d70fa7ae25d42aa27f45a29ee17bdfa812b2f3",
                    "size": 6059137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e7efa6307652b3c80523a6e491c309880abcbb57d9f0925901c5a00f185143",
                    "size": 470
                }
            ]
        },
        "3.16-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a83bb42688762b6ae26667f485e75aea1212601c5eb8d937b196b68f56ec6e19",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71d54ee96fec533da52c9a394234f693989cf893c90c2c210a5762c0b72b4650",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:235cda4fc181baef5b5221155b4caac3961892670dee061e1902d1a4204c6f41",
                    "size": 9857058
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbad46840c724ada40a555c905d3e2fa6c1f2f340ebaf0816010780fa660040c",
                    "size": 155928545
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6125ae83ae1eb076075b126da0dc4032cccd2dcf7e18bb9dc0f134153c973663",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:887f67b8d8f35bbe1ec9aac60d400649e6c948a7f3b932c0d903d6c0168c37f5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6630d15dddb011e8536ff6d4260356b143abd445e53da30d8e0cc4dedf90b045",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b15060ee1e3bd42e2cc00c167983faf5cff3eec701afa3017fe49596054f93f",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b78599b29504eb26fb74554496545f3805c1f18a2db53787af105cc61ff457",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e0c00874cf14b7347830ce4bb4ed8a29515390c7d560de2ab802d436d3db5bb",
                    "size": 6059140
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:457f3afbb3f5df3588b301cf2d8a98f87b3ab4b34ddb1fefb6e0f1647aded940",
                    "size": 472
                }
            ]
        },
        "3.16-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:769eb94c6c611920a71f5470f3d336a372324c12d455921ca4a7d340813f6e26",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:317d2c975e0eb3498cad471d05e5cdaba97bc8d6ff1ed1cf4d18f809eafa6404",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee5bbe03c5b96b0ac9682eba1f3e28f144b99de8f25375da79b648ac0875ef6d",
                    "size": 9858538
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a32672ae5f0d27d37c298cff9398982fecb7c030c294f8cc986a220aa3be8d35",
                    "size": 155928277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac00c93aa4ff297c1b490d5a13cb4916f50730cdd367792277f7342d2cb78470",
                    "size": 473557
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14d633831a5188f0ba72146ae08328c2a2fa9362633ff7c10ab3afefd0fb797a",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020bb9a941eff143fb7cf9698fe799420ae1f86b6379492bdd884bd5523e5a30",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:961a9c49bf85972ce6ff3cab8920128b27839146683921b80110ae1c57d7e10f",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfe581e4ca2c6df6491cddf782e786df722d5b690138521ebb6f737aa1f5f962",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f004f8b925fbb07dedf96cb6fa6b3edbc6a1d66af78a50cb0680f8ffa13506e3",
                    "size": 6059140
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0be2fb40f2439c188a5f52e0e774e7d51fd0f291d3c982456cd6105dd228ae3",
                    "size": 473
                }
            ]
        },
        "3.16-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5decce10853e82bb7ecce6aa33933d499a85e62f8b23060ad007028ffbc43370",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5068c840180d206d3909dbe70073229a49763f3700c7fcf1505d6bc59a3509d4",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a134b044ab60c8a587bc4dd770a4847af1c505b76e6ec047d00a56df7f7c09d",
                    "size": 9859397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11ff7af6af70c496478e44cd17b56801bc9d4a863c470be53b7a939ed8ca08d7",
                    "size": 155926760
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:936eac338ccc0a87c1f6749a005ce39c48e4ab7594988d3c907a41551a3ef20e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b3b1490426563b18923f72763c4e316545d98a18bedd3807530e0edd2f6a212",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99f2eb9eff0876ffc54f920b8d12648d2e6f568658e8ae167e1c059c40dbc3d9",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa71df7ea930d9fbcf3245eb433a4987e9ce8833f2bd9d956f00400649c22aa6",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8df1fc629c43d4b7f3774eeca81a9074a27098b939aecfbe6693481900be8142",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adcecd2080a0b66b0d37e34a7c6328911db58929c8abdc6c4324fe9101502d1a",
                    "size": 6059139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:564a96f5205037123956bfff9e094a56fc3c67cac982c3aad274f0fadbfd776c",
                    "size": 472
                }
            ]
        },
        "3.16-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae4403a7e829e15f892286327633c7e593ee3e3be3acca861f2186bf7c47cf4e",
                "size": 6992
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dd380060057693a384511e5ed8a398468e2a5e4c1e8b4f5b33c7ef9dba25bed",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bda8a1aac911c5a2c50484d58c1084caca2c9e62413ceaaad956b6490f57843",
                    "size": 9870219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46695987f0b476c28e2e8a5008e732d7c14cc900093d57f868d4218924296fe1",
                    "size": 155924724
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31e70baac289c133095f4d43b35383c6024f8365e3eab30f8cc17cef709c52e4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d65b21f159a98dbe07f5e97dd126e1532bec80ef462dac47a2b4256059558a61",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c1093a775a93f1db54946feb0a52a4ecf705a3e588fd8a9d31c6e2a5a04ffe0",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7de1477ba06cc97a13db18ee6faee9a3def9f7183817db5e596936e4999dbdc4",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62195266f2f22c3cc72f27719c940aaea66bfed3f08a198fab7f87bbada9a3a9",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:100a1f0542b2e4d67306ae485d994bc8eec178cff280f4a2450fb3ed3d4a46c8",
                    "size": 6059411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46c2e553e36e9dae71c2a8937f306507707f4fa1f11fa085018c7d0ceb37b4c1",
                    "size": 472
                }
            ]
        },
        "3.16-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:656047cb57131b429c5e012020a391a0b70418a6431a3fb19c22b6c3360162c7",
                "size": 6996
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a8baa8941a2b3684f3c46df1c694161440fcc92bfa75f14bb5a1ed6c69b90e2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3b429d25b7c48011ec28cb885737158ad164475041b0c690c36ab1fc4639fb0",
                    "size": 9870172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd814bbd2a9bbf83a40c8f7f2de31fc44982762e5b45f7a7b20c09ecd412320e",
                    "size": 155925275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790cac1d59509f2eea8adade0cd2ae9b5c4fd8fd04ec7271546f65cc7eb1b725",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c02843d2cf0f61e021993be0c2e6dd9305d07462f9cadc4937c5cda767ad958c",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1c1f1f812b5871d49bc075374d40b64b5a566dd6f21dda400fd166556487b4a",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d39a162e38056d60f93855a6442e5b430a4a74fd2ba99a20bc134650080d303",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70b72452545897744cc413bf44d11d165b7af0911672b2c4232ace110b4ef7bb",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc0b03475c2b306c78fdddbf3aeb3cf89fc4ab73520fc40873fdd0064edac9dd",
                    "size": 6059428
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a239994658fa857d99fe601ee6b21e01f768d3f5a19b6539a64629a9ef8a81bc",
                    "size": 472
                }
            ]
        },
        "3.16-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a02fa58353f17847d4461126029c2682935f65cfe276445b56bbf90e5cc1e9a3",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b704890560683970dbf65d686085660c5ec0c0ce7b2c751fcc38befcb695ef",
                    "size": 5732424
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422faa4c437c7a2b9c5ce3fcfb68e6c9c31f94bce73a23e4d4769d67a66b7b9a",
                    "size": 472
                }
            ]
        },
        "3.16-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d810f7c89fbd53b7756956388517ed8f62f9fc5787ccf6b9fd9c89972426953a",
                "size": 6387
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdb2de7ba06c3a4e10b98f439a8c70afd63eee492c2ddc32342331a8e9ef4ff7",
                    "size": 2708023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85a247322d9b36f0f9876ebe089b61e484c38ba34f76aa34aef18d6aaabf4a99",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d411d018984813cd49490cd8e4cd12a481b531b4a109c3d07dcad1bc167adc23",
                    "size": 9857036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c89e56f376a820987860d5086cfc6e0fd240c70810c3c883bf22cee649f1733",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e909ed157ee88953896b135fc5387b482fb17f7603661ede3284730ff522cb0c",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd32e7e0232f31d6d41e4909bb4808b1c70fcc6e3b416cb299deaf4f9aff86c0",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab37be9c34e0ab97b9af7b61102b1caf755e68477a58c019d997e4de99f64f48",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:419ec1411ec9cdd14c913adf6f91048ebef1adf97721418d935830c07617dec9",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef8163c329c7291153fb267cc08c4f36a21e46c2bb4f9a5c5d88f0f6912a327",
                    "size": 5732319
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04ff7ea69258a5344642c3f1020008bc48d96c9e03c393d5796cce87c181aeec",
                    "size": 472
                }
            ]
        },
        "3.16-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0e3572e49555b3707c9413ebd3186f3f18cbcce727d3a2955cc5a452c3be6dce",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6654383931c67b9dd1ab1983e332e7e82d6bf4982cec5f880b8902f289cc1a8e",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdd7f9ae194ead383b19b8648b698701dd81ed168b5adbba0b85d8edd689e015",
                    "size": 9857078
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d13fc81cdf01d33ce83526ce5c031f037d0bd83ec5e2985f403d3e56ffc7eaef",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18a42b0e3fcb6758d8bd1b3528c254bacedae087bb9a9aafe0a6e9d211ccb614",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de66cef89e80515f0e450702fedbb251fd2b0833e805418bda12a0b581099b30",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:236eed5320309506b86502b0487a3b318f920ef0765f6099bd759a805fd55f19",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3424ea72e491d155e0e29687d589c1dbe7ac04244d7263b36f66093b6db5bb",
                    "size": 5732336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:141d347f08b53f8622a4c962bb58c1176dc928ad62bba389cae30ec9d04b0dda",
                    "size": 471
                }
            ]
        },
        "3.16-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a702a945d2e1620cc450d7cad42c63639c7eca04b9fad2700ac0bee75a7ea973",
                "size": 6385
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5362b5901f8a9898f2bcc8eb6c3e6990364aa058617afaae388bdb9f437d3d7e",
                    "size": 2708293
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a7609c0ee09dd016b6fe805ad8a902da6476ca57e585013d85b495d520a835",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a734658b6cd840b42fc743aaebd342c7151547ab0a1b5195acaa74d8da6af3f",
                    "size": 9857047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583406f282426467923f5406f29b14cac9b226906e1e60f473dc4d686585dfaa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c8c128e390ce35bc1f5a0b2907588b0e858172df6cd319296be12e5b185d9c5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af60a88bfbfe20548166abed5157a3c994259a1f3e9575f61533050f1d6667b5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b67d126c80f95b9b8ac8cdee5344cbf7d15fde8f8b6d9b11b9287862d14315c1",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ff6540c7df0a3fb7a85771367a2b6da71a16dbd0b4a017883aaeb3cb00bee9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:beccc7856408b990a475f08964f469ef60bb49d18cb1a7b84a4f74d3bb17cd65",
                    "size": 5732332
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f6a2ef96776001c2fb6da0ebde74d46feeb62621cdce859116e0cd22788cf9c",
                    "size": 473
                }
            ]
        },
        "3.16-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:929ebfa7a2f005393856ddcb3cd8c9dbf141d3a9fc507518accf6a1024f0efae",
                "size": 6384
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1637239cec4fef326b57e9ebe5efc0d2e0496abc0572bbedea806e4eea26cd54",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d4f43756210d1c9d34dd62349d09c8ad3d2226b024b6f70256a3d3bb36c745c",
                    "size": 9858568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f0db151a97fd6eda660e4897e9142acbafe0f9aaa53144222fd955085777c",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e89fac2335587bd9d1a7f0132de0987d63bfc9dd489a17e9423bdefa22a571",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cb6627b8c44ae0f0bd5a7339eb4529cb8d75a004565e4ddda377037617db126",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:267c10f98303caae89fb749ba189d6ca723949d29bb128ca61738b99948c65e6",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fbb060c7fb4bbadec8930435cd1746223774dce0ea3221d09e3478a229de4a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18dc3a47d89650e19499ca457b1a8d6bf2ff202cc279b306ceea249daef70649",
                    "size": 5732332
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a016520383d6264b2520a8d7e44a4a31949fa81741bcb4ede3bfa1ae075ba0f",
                    "size": 472
                }
            ]
        },
        "3.16-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f572ecf31d5b6518639db243bea1aa468d4513a541e18c252c8a462b5d69f56e",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ea011993d4670bbfe20dae79f0ceca79389b64e9ae0945d1bcbee5df0f96985",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d364ca32c59fba10f9af8548c9ada2478c093f0911725d32a025efed9981cb38",
                    "size": 9859358
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a7d8e854fc8bd472a01b7817cfe7d9a9dca1e8f787486572693fa0a8fa047ca",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bf49f098ce0068e3c89a778903a264e419dc56e29551ae48de070d21ffbb086",
                    "size": 5732322
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18043befc8fee6374fd199b9e0525063351a0d037085e2bca7ae2ab9eeb010fa",
                    "size": 471
                }
            ]
        },
        "3.16-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f3b9f281098a70c92ce9874694c1dee735662ec18fa4d7aeb1dfa167a3c3d22",
                "size": 6374
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:790e45397078834742b7a9bebe166bfddb3de7b912e50958a7987b76fe7101e2",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f81ce58a1911ae5cf3561eec9735d1c27be22b1253dfab6b19b928be6043ce3e",
                    "size": 9870218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4c410d423fd46114ee767a0873e47736da6fa0ffb6d38e9e3cbe9819c2cd561",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e6763c72dfabd180dbb25af25b57246cdd8368b08f857ed12095119dfd66606",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c68b6de5418baf0639cb2ebe8a1eaf7c2e3aff5c2925300d454d2b5fb1e6c3e3",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9ca1417089f6a8b0315d8018748c1651c5201c17344f6ad80edfdb5cf9a44c3",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:374e4f032c3a6e30a4660a86e842e40cb5a4c635da8383a4a8ed6b03f59e8115",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9867b6738b40779148658679a4997b74acf55ea41178eb3c3a575e35e6eb7892",
                    "size": 5732448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a5fd0f54d1527791f51760b5b9636788a9205459a8da9eb77cc4f50e5339dd1",
                    "size": 472
                }
            ]
        },
        "3.16-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a02fa58353f17847d4461126029c2682935f65cfe276445b56bbf90e5cc1e9a3",
                "size": 6370
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:550f8bf8502cef18df2424ad36edbc4cc08c7ef11b44f493af59029aab98f61d",
                    "size": 2708283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12299d5af3999f55574808b43322ffd3264ed8e10b304a62245bd3c36dbb74b7",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad0b0739fc42cf37961f5bba80bcda337071f8abd4e24d2c7d46c70dbe993da9",
                    "size": 9870227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388284a0403c82f90084d03d327d342f10368ec78e4e34a6fa891728a11b35b0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2773f51a064530c7c0471d98d7d5a104d0991f54c6ffc9737ec451ff792a5907",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd9f4485f63071708f4ae69468665f9e68e017d93568a271fd5176a0b352b633",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bc29592f5dc255145ad33745efc9752cfada6e7a2cc14ee2658885dd38393e6",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cdc0846f5b6abe1ffe829b5379a4cbcb27ae1b7239f92be6bfa78b4603a47423",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b704890560683970dbf65d686085660c5ec0c0ce7b2c751fcc38befcb695ef",
                    "size": 5732424
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:422faa4c437c7a2b9c5ce3fcfb68e6c9c31f94bce73a23e4d4769d67a66b7b9a",
                    "size": 472
                }
            ]
        },
        "3.17": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5efe7bde47ee585d3426d03cb2a2ecc955703ccd44f5136a35ba2bd6d26b9072",
                "size": 6374
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd78c2f8fc58cfce25323723a6451e33e4bc7ecbf6e5ed00447f9aa3aa9567",
                    "size": 875683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:018a6e49e2cacc85eefcaea073b9ab988f79c5dbea0a564a46eef0276686e0ca",
                    "size": 472
                }
            ]
        },
        "3.17-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:38c4d5804b02884a4a474ef63d00b0ddd91965dd8e8d14d7466d0d3e8102bd39",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4060ece20d7ac783f52cbe28a35fd5b06f90f7b4d773bae0d956024e85ff35b6",
                    "size": 3258290
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c220cea7e035d140543aeed2550865b9427c011e3303b2ab9b98030e0d3543e",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86a7836c69ec5cd67226b0122044374f22dbe157a29f52f2f4491ad917d86aff",
                    "size": 9984087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f04371a37ed173cb77baaba756b6991daced9132d234315c27c04b6d1cc65c7a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fdb474cc2ddb059cb97f4303e6cb8c961d40f489aa6186b80f6c44d6d22a967",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f567894795cb38ac2c21f8b7dfcdf41564f02ea0e931ba4c0e1c671f7b1320",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f85820cafc13f6063850baa906428a82a229fa803c88180e1705ddba30b361b",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41b3d769a635956b8f0557f6c4de0b0111c0bc2c16bd8025641ba2200705a88e",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfa02b03ed8991532b256565924f053ec66edcb1e4629e213839295d9694f8",
                    "size": 875333
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4520a8137f6ac5a43eed8bdfbcde21003169f04b80ec27eaa215d043a7d43a3b",
                    "size": 472
                }
            ]
        },
        "3.17-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2443a5d9ca16afbffbeb2c0f32da6d427391379770cd4dfbe3f9825f077ee2ee",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78fad2f7ed8d86285314cd766ca3117bdd175ed4ca0dd8b33af665acf257718c",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e9928902f0b5920d4470ad5157e478ae5c00753e2548772ed9d64a784cf3356",
                    "size": 9984069
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f46ab6f8895865df76b57474f3d9e371bbd6ef44464c05d497f09a0646e71eeb",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d304f3525fd1d17276ccea7f9d40fea878f3d8222daa31ba796ca0aa89ea46f6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfce4e515012c3c00ac40c58ac73ce053cdb7f77ae6ab48ddaeaf6d0bc16c91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:193ea19b7479c8bfac6650e8043ad290acced4f7a52f58ecb11d05b801231c98",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa24e8b94391bb5130433959f413cb9c0cbd962abad5625299e2f3c865eb46c2",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddb7a4382f9320d8ea381ef4a464f0c3019aff7e0b24f28725f64993ce9a00c",
                    "size": 875328
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5271abdaf4dc1584bbe73577dfedd6e098787b0c2c9c8c1bf360cdd045a5f0e2",
                    "size": 472
                }
            ]
        },
        "3.17-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aede320bca588bd9c76383c3c6f567855adf15283c72214ba4f9bad373755b57",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1441f0b0da088710147ec046158bb930fbfa283e38afd790c450ad2223776f7",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b0ce6f0ba41e7539f2fb44791c838600729a420631ec8bf67c5df68804d3f56",
                    "size": 9984105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8296b85813b8ac492522697e80c4b5f2d412ecf25fb089a50ae53aa4fa25fdf",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8eac589e6b7b597f20eb9eabcf0af77b16da1bccf66e4160afa71fdfbcd1fe5d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eaddf98128a51ecb0a32bd1d4afdabec28a2db55d8e3d8db8b77662cbae85f",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33367fc93247d5c1561ade193a09eaf8e46247dfc341cfc3ade8652f31943fd7",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4534dd8632eba3ee85e9cd0c323609f285da15a626e32409a6fa96fca88046b2",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4478f79c5ac5e10820aa39fc4762e0eff9f65f2b5d86c332ca6a8101c63d4f1c",
                    "size": 875338
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d192216ab0be3cbb8928bdd266ae33ffb0397e5236187b02fc535760a4b1e0a1",
                    "size": 473
                }
            ]
        },
        "3.17-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7eace503c78bc88fa8eee0afa1b892726e407294f3fc1aad0ab2c328d02fefa3",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52adcadab17af2222c8233a697cea18eba996d1279acfbb1e81009f3162c18a1",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e50938f4eb532aff415b6b8d23050e4476f542ab3bbc4ec6145086b4651d390",
                    "size": 9985719
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ec60f658c13231e2651f511a4e73d4e3ed3e2a3ef4662ad3cfec3c578e32d6",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd7f67f73414ec4ab9d1164b1d03270862ee1a0930ceb37a97f8888a3886897",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3099dfec4e8260bfe6cb5ef040c8da5df2167c44e75e5155032570225cf7d47",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:506e0ea0dc9309928aa14d9312ce547bcb934858640c9ce4f4cb463993caaab6",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c446c32bb9522dc8c82d58c5afa1ba9239631b1ffc9cc7d6f8c61201e1a79a82",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f48cf5e41fa381f43165bf90f005b5295217b38db6ebd4192370851ca2b09ceb",
                    "size": 875361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:323734dad504d709c3b4a7dbd1154ee82fa6e8ee9d9ca1dffffd2cd9c5e14e2e",
                    "size": 473
                }
            ]
        },
        "3.17-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e733cc3a1615128f0b4d8b493102daa6e9d3e2176c867831abb47cde6bfba950",
                "size": 6384
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44323e4a0a641e0d1e80ef76d8233cb227b65d77d3305be618a985c72b7286e8",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf3bb5b0dfa479a0b0952c68789c44972f69dd6567974c70a00b284344a00d04",
                    "size": 9986371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c489e5f046bf7937ede46206cf1d7359833005d639a172f524ec651761405a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bb77cf0eca24b708679491492235985e5e0d4322d52d9316e3f7c2ef9004c6e",
                    "size": 875359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2f407b5a9f2eff7adb773a893bebc34733a030b2e4cf5f285eb3dcedc6bc483",
                    "size": 473
                }
            ]
        },
        "3.17-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9578aadea925b81ee6cce7b07b3ebcdb72d40275e4a59fa482824a360fbcd7b0",
                "size": 6369
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22acf3a6c2b5ab10b9ae9f9eb0421c8ba9a8b396ebee5a12d860baa3c8b2e64e",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb0d3cd191fba3f286ccbc15e5374017df73a7b2bdb3c0fced878f07a3c8b1d",
                    "size": 9994959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76f8e926438b08969366ca0435cda05613e5729f1fb42a3cad791c520142a0e3",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb4d66cf77a4f89914476003b23c46b8874d935e48843c1005fa5e90fa98012",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc6f7a3aeeb3c549ffd6cc920242156d9dd3036b166bf80d285aa58698902ada",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4374f0897231c2303868c9c7dca68a222d6c71b825dbd18959aba13c98763271",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536746e2e6e159e4bafb713c5152ed842c6ce300a5ce5a312f3ef6bbe78e3323",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd0ee5865bb184a5c74b4eb0eb4445ac0269e0d04bdf6fdd95a5a39c9ad082f9",
                    "size": 875687
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:257dded3d09470a1fdee218160df1e129cf49368893035ccd434e5976e010b30",
                    "size": 472
                }
            ]
        },
        "3.17-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5efe7bde47ee585d3426d03cb2a2ecc955703ccd44f5136a35ba2bd6d26b9072",
                "size": 6374
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd78c2f8fc58cfce25323723a6451e33e4bc7ecbf6e5ed00447f9aa3aa9567",
                    "size": 875683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:018a6e49e2cacc85eefcaea073b9ab988f79c5dbea0a564a46eef0276686e0ca",
                    "size": 472
                }
            ]
        },
        "3.17-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6de160de67025813c0a1e4f7a71b7eceb56395c5366dbcf559ee05cd88e23915",
                "size": 6997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e39809f5a05261c683fe8793c77d9fd1c43ec691df62913b51c6306d1300b48",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce14e2419439926ebcba84e1456378a8c69a9d9e716fb45c51f187af6e9091fa",
                    "size": 9994983
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89d9b4f84c95fecd0976fbdf98428ac25af49e2d5729fdffa9a27f8c7d04d60",
                    "size": 165683525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:974b43a02b3be5445f7ee9b0089200aae76ee24780547ff5ed5ef06d23a6317e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d3ef60d558c226df3cd42fc4d17faea6113f5801d531d84272cfb44dc89d005",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ffc7362baaf83c7bb505b8c8758964ee1b087cd92ab0f2c9298cba4111122ba",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e94d9b90ca67e791359fc5140ccd71c97e9843f8e7337ce1538cc77c1a2a42ca",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6e8b993e635c04496efd29b59592c3558c3541c2bd2e515f75714a039b33087",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cdce4caa072189003ebf494124a2b6384a925132a6f89d43b9aea9a8d466b2d",
                    "size": 1203116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ecef9db580210438e12614532569804c03b5451dc321e083c6d0c64451c732",
                    "size": 472
                }
            ]
        },
        "3.17-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7078bf8efb6c73ea00168f89d320709f9228fb62ed9441abd15003e50c432274",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4060ece20d7ac783f52cbe28a35fd5b06f90f7b4d773bae0d956024e85ff35b6",
                    "size": 3258290
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d05938052a3c0f162ea69d0ec9e734ccd5cd1007bbfcc7165f711f2f7acc4c3b",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:588a086bd2d2bd3f741d78f57c6121f1bb318b4b5e3939f658cb1fdf18e8e1a7",
                    "size": 9984079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22fb1143b89d025200a4fe0416f9aa8cf6f28f7db054b3dacc8743183b421a61",
                    "size": 165657013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:45ba25394bbff80291e6131552e8e8005b340664182fbb336fbb2b0a99e97de0",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18652226c152c8347900b2c3693f6c81521ebf5dd7cb7ef2bc288a429dc9cbec",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:694a40bd7aba22a2c07899c129a98151798722aeee242b4230bff181352021d2",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73103be05dfbf292276d3c2a9e0d930a814adf7051db475aeff62f6b9e2a1561",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8aa47c030f3bf7769adb30837481d880df8f0b4ced44b8beac86e107d3ff82d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79258e5f33a3d17ee68a1aec3a00ad68df09ffedfff7a81a48cb37a7e736b2e6",
                    "size": 1202682
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d0cd406cb81e51a0ca17c0cc0896f7a960ea1cb049dfb99385a2892ba0bf68",
                    "size": 471
                }
            ]
        },
        "3.17-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e728dfb8fe548253a2ed47d7861d1e2181b19a63509b13557977a7791a1174de",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b936778d84a8f5ff55dcab465b65452c78359ae2b671cbbae0b6a6d3c4e08ea7",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74dec865add1f5c0f1f5161e2e22aacb7309d626c7b823b9d7ada0e1fb4a74b0",
                    "size": 9984104
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8b15e1579f54dafe253c721f70868a8cec0049f500c434e9eb49a478782a9e5",
                    "size": 163652214
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:007e0ba8a825e38205dba3208c899b99ff4bc5faa2ef5e1625d4fbb56ae9f515",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24113c2123298f5d249e9554c43684ef6a0870cc1ad340c2073eca0395de6007",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd3153e57f5e44936d5ded5b2583d1ac8e190dc8df60e7b8d294c34f624fbb08",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6b56fc72b5e5190360690226039c2d38708eaeb25afa60f13f02fb36743970",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8971f4f965bd2831aa21ccd4bd445f61bce33550a2b6cb0718eb8f7a95a121b5",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f69b0bea4527f29f9df06c2ef1f4baad3bc47d2b9a18d4a7b89e15ddb3ace89",
                    "size": 1202705
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02ae6168d1e97bc552537277798c55c004e0a453d1ddc30b2e9ebb6ad4eb804b",
                    "size": 472
                }
            ]
        },
        "3.17-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40be46420118bfd857450452ebde749bd192d596ac9d23db94793285f55c620e",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0694aecf0a258c6b898d30138984bf5864725e46f0abfbd894dc0fcef0e9ffa5",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4da9f55f180b42c0f2a21383ef0757c0d7605c261eee2dd47640bd96cb727b0",
                    "size": 9984103
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3606af060a53b70a8f129da9a97bd3161784a71211571c914d9ab37b6b7e9d7f",
                    "size": 163651080
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6166412876407111f7188cad3e7ed29766fc827ad93fccff05a767e8a3ff9ee2",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20f19de6e688c8be61b1eaa4153871f19bdefcb0c895f788cd5f3ad5a37d2e6a",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6ff827da76e61509810b879c93b1b36ab84d21c0501478a0fe0fe3026a58076",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfc21d1ea15883c509a783476668e7c20e23b6d9485c580f4dba72edb0aa1542",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5e0815b838bae7cc746ec647f752b9d6be95f1b0bf592914e79efac8cbda53",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ae865fdd404208fdb1c80ca0bb7e7f3bacc8e53e9cc97dcc5cab117269622a1",
                    "size": 1202710
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce53a20f81dc8d766e3ee70e3c131a56b723020215c41dc9acf413caa2814002",
                    "size": 473
                }
            ]
        },
        "3.17-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3fc0de330eae7349fdb6e76c0c4c4817e4fba3d01312a3fc67e6460fe0365e81",
                "size": 7006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9becd229e81df8c7a913b245b000d1287b9ff9f8be9596713e622494a24ced1d",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed807d8797202cd5284b8cb79855a357576e896668fdc631ff1a8ca0b9f0dd08",
                    "size": 9985732
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aee6f0246aee6bd94082072897270d07082a3408041f1edf76b8bb6592ac908f",
                    "size": 163656785
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c960cfb239058b46e3c060ed907204583b4070c2e631e4178b1cc64e64cef48d",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37a5918d8cb440752679ecfe68478ba9bf379a2310c0b52927844c52f019a2a9",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1007ac68a45fac8de0836894dc06efcd77b100096897d0c89a557e8ef363339b",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:263b3abc9f5b9ec2eebc655886f415616c0d8d774e4f0cb5eb621e3cba761176",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62c574e1f0b4ccd0cc89a34ad7f5b1a618326c4bdea9994bd30874cd01d71909",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8debd850c4e677d87c0b673e36265d4b9eddadf5fe6e67549c679e11b1849d7",
                    "size": 1202722
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ac6b55f01c5dc70346b8f35158eb216abff57c40a33a29d8f4a6274767456d8",
                    "size": 472
                }
            ]
        },
        "3.17-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9041092f47649a34338e2960627d2819207e3dfaf255b2dcbcab3d8b6aa80158",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24a666e6f5de204fe311300eae17c00bd7f4b439172c00716a40963f99682135",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb540c35895f9ef64ea41fe3bf1ea5bcf812204cf6b895dc7ea14864fe95649c",
                    "size": 9986304
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2cfdf40a27891cf8120cd5a863036b9f336f1e262c7d972ccd5cc2ed4f724ca",
                    "size": 163656311
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96cbcdae419adb00e227b755a72a60ac748494d63b0e00885c091b3d453a5840",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be25a6620ba9870c97a1e2f79a4ea784dda801cb1a9da62eece577b2588d75d4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b7f7d2b02e9d3f947eb7f080f03b7a98fd0d2844009c1d0f5ea1830e3681ce0",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2d791c59eb6770616a13cdb0d1cf2a29b7b38b6d1f076018f3247ca59e2dc8b",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f80f5efc0a0a083392cb90e8d705d8c207925c8d2e2a2cf1db2da4fe9293955",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:154d57e413ca6880ac8d108bc3d2bf4da4a3b74046db13a0c7d1660db71cdc90",
                    "size": 1202716
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef6eebea7427f8341742e915e8ff6ad378b2aaabdd51e24635b6e5c2ce366421",
                    "size": 472
                }
            ]
        },
        "3.17-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:662b17438516e1e7e2da06a2874b4b5f3ee9494c1832a7e6b68eeda64108199c",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22acf3a6c2b5ab10b9ae9f9eb0421c8ba9a8b396ebee5a12d860baa3c8b2e64e",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c724fc71975cf321a34ed04080bfca4dc495af9e176abfa1115ef3e711d9b4d6",
                    "size": 9994959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6318746594ec63e2fdb46bc65f6d8008362ca70708908ce7a3d5cfa7e7eac491",
                    "size": 163652795
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7c328ff64654504eef2a6027819ba30d5aa87c6f0795aa973f0a84baab39a8a",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfd70961b19f5eddc18d6e1dec6bcd557c3c3fb9abf728a2059d467d66e2abde",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52ae5ebe2d4d2fcf97d3b10f1f93441547bc1355bee478dba685b04ed006d1a7",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68fb27f97cc2bb64cfa9226f02624fda8cf57ecd54e8926544beaa6dd12fba50",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759b8f5ad82babb6f40e1de4c81ff2ab22f7e24e12db739b953796007080a88f",
                    "size": 1203117
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc03dae90b3d059ac1b707435cf07a72c5bed9ae1209ceee3356e9b2217f4e58",
                    "size": 472
                }
            ]
        },
        "3.17-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6de160de67025813c0a1e4f7a71b7eceb56395c5366dbcf559ee05cd88e23915",
                "size": 6997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e39809f5a05261c683fe8793c77d9fd1c43ec691df62913b51c6306d1300b48",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce14e2419439926ebcba84e1456378a8c69a9d9e716fb45c51f187af6e9091fa",
                    "size": 9994983
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89d9b4f84c95fecd0976fbdf98428ac25af49e2d5729fdffa9a27f8c7d04d60",
                    "size": 165683525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:974b43a02b3be5445f7ee9b0089200aae76ee24780547ff5ed5ef06d23a6317e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d3ef60d558c226df3cd42fc4d17faea6113f5801d531d84272cfb44dc89d005",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ffc7362baaf83c7bb505b8c8758964ee1b087cd92ab0f2c9298cba4111122ba",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e94d9b90ca67e791359fc5140ccd71c97e9843f8e7337ce1538cc77c1a2a42ca",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6e8b993e635c04496efd29b59592c3558c3541c2bd2e515f75714a039b33087",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cdce4caa072189003ebf494124a2b6384a925132a6f89d43b9aea9a8d466b2d",
                    "size": 1203116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ecef9db580210438e12614532569804c03b5451dc321e083c6d0c64451c732",
                    "size": 472
                }
            ]
        },
        "3.17-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5efe7bde47ee585d3426d03cb2a2ecc955703ccd44f5136a35ba2bd6d26b9072",
                "size": 6374
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd78c2f8fc58cfce25323723a6451e33e4bc7ecbf6e5ed00447f9aa3aa9567",
                    "size": 875683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:018a6e49e2cacc85eefcaea073b9ab988f79c5dbea0a564a46eef0276686e0ca",
                    "size": 472
                }
            ]
        },
        "3.17-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:38c4d5804b02884a4a474ef63d00b0ddd91965dd8e8d14d7466d0d3e8102bd39",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4060ece20d7ac783f52cbe28a35fd5b06f90f7b4d773bae0d956024e85ff35b6",
                    "size": 3258290
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c220cea7e035d140543aeed2550865b9427c011e3303b2ab9b98030e0d3543e",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86a7836c69ec5cd67226b0122044374f22dbe157a29f52f2f4491ad917d86aff",
                    "size": 9984087
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f04371a37ed173cb77baaba756b6991daced9132d234315c27c04b6d1cc65c7a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fdb474cc2ddb059cb97f4303e6cb8c961d40f489aa6186b80f6c44d6d22a967",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9f567894795cb38ac2c21f8b7dfcdf41564f02ea0e931ba4c0e1c671f7b1320",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f85820cafc13f6063850baa906428a82a229fa803c88180e1705ddba30b361b",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41b3d769a635956b8f0557f6c4de0b0111c0bc2c16bd8025641ba2200705a88e",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfa02b03ed8991532b256565924f053ec66edcb1e4629e213839295d9694f8",
                    "size": 875333
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4520a8137f6ac5a43eed8bdfbcde21003169f04b80ec27eaa215d043a7d43a3b",
                    "size": 472
                }
            ]
        },
        "3.17-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2443a5d9ca16afbffbeb2c0f32da6d427391379770cd4dfbe3f9825f077ee2ee",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78fad2f7ed8d86285314cd766ca3117bdd175ed4ca0dd8b33af665acf257718c",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e9928902f0b5920d4470ad5157e478ae5c00753e2548772ed9d64a784cf3356",
                    "size": 9984069
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f46ab6f8895865df76b57474f3d9e371bbd6ef44464c05d497f09a0646e71eeb",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d304f3525fd1d17276ccea7f9d40fea878f3d8222daa31ba796ca0aa89ea46f6",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfce4e515012c3c00ac40c58ac73ce053cdb7f77ae6ab48ddaeaf6d0bc16c91",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:193ea19b7479c8bfac6650e8043ad290acced4f7a52f58ecb11d05b801231c98",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa24e8b94391bb5130433959f413cb9c0cbd962abad5625299e2f3c865eb46c2",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddb7a4382f9320d8ea381ef4a464f0c3019aff7e0b24f28725f64993ce9a00c",
                    "size": 875328
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5271abdaf4dc1584bbe73577dfedd6e098787b0c2c9c8c1bf360cdd045a5f0e2",
                    "size": 472
                }
            ]
        },
        "3.17-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:aede320bca588bd9c76383c3c6f567855adf15283c72214ba4f9bad373755b57",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8180c93b172865af87a7c0e7e3c8bcb139e0d0c92e19c96467ff2cd4c8919ad",
                    "size": 3258348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1441f0b0da088710147ec046158bb930fbfa283e38afd790c450ad2223776f7",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b0ce6f0ba41e7539f2fb44791c838600729a420631ec8bf67c5df68804d3f56",
                    "size": 9984105
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8296b85813b8ac492522697e80c4b5f2d412ecf25fb089a50ae53aa4fa25fdf",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8eac589e6b7b597f20eb9eabcf0af77b16da1bccf66e4160afa71fdfbcd1fe5d",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07eaddf98128a51ecb0a32bd1d4afdabec28a2db55d8e3d8db8b77662cbae85f",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33367fc93247d5c1561ade193a09eaf8e46247dfc341cfc3ade8652f31943fd7",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4534dd8632eba3ee85e9cd0c323609f285da15a626e32409a6fa96fca88046b2",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4478f79c5ac5e10820aa39fc4762e0eff9f65f2b5d86c332ca6a8101c63d4f1c",
                    "size": 875338
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d192216ab0be3cbb8928bdd266ae33ffb0397e5236187b02fc535760a4b1e0a1",
                    "size": 473
                }
            ]
        },
        "3.17-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7eace503c78bc88fa8eee0afa1b892726e407294f3fc1aad0ab2c328d02fefa3",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52adcadab17af2222c8233a697cea18eba996d1279acfbb1e81009f3162c18a1",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e50938f4eb532aff415b6b8d23050e4476f542ab3bbc4ec6145086b4651d390",
                    "size": 9985719
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:17ec60f658c13231e2651f511a4e73d4e3ed3e2a3ef4662ad3cfec3c578e32d6",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd7f67f73414ec4ab9d1164b1d03270862ee1a0930ceb37a97f8888a3886897",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3099dfec4e8260bfe6cb5ef040c8da5df2167c44e75e5155032570225cf7d47",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:506e0ea0dc9309928aa14d9312ce547bcb934858640c9ce4f4cb463993caaab6",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c446c32bb9522dc8c82d58c5afa1ba9239631b1ffc9cc7d6f8c61201e1a79a82",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f48cf5e41fa381f43165bf90f005b5295217b38db6ebd4192370851ca2b09ceb",
                    "size": 875361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:323734dad504d709c3b4a7dbd1154ee82fa6e8ee9d9ca1dffffd2cd9c5e14e2e",
                    "size": 473
                }
            ]
        },
        "3.17-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e733cc3a1615128f0b4d8b493102daa6e9d3e2176c867831abb47cde6bfba950",
                "size": 6384
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44323e4a0a641e0d1e80ef76d8233cb227b65d77d3305be618a985c72b7286e8",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf3bb5b0dfa479a0b0952c68789c44972f69dd6567974c70a00b284344a00d04",
                    "size": 9986371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b89ea4f8c73722ddfb311948b154fd43c530c548a31d881e3bce1dc1e86f19ff",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3052bd9a20b4bd707485fc8cefd6c6adb44c0128ab6d72859bec2d7802307232",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8680c3a0c90a0f27e14e1886a90707b4ad72b304b7ae4afa6eb73debe2599f0",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a6eeacf9bbf1fa0f62b77b02408de3e6940e0b6b3fc130a9d8c98135b9ea046",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5c489e5f046bf7937ede46206cf1d7359833005d639a172f524ec651761405a",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bb77cf0eca24b708679491492235985e5e0d4322d52d9316e3f7c2ef9004c6e",
                    "size": 875359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2f407b5a9f2eff7adb773a893bebc34733a030b2e4cf5f285eb3dcedc6bc483",
                    "size": 473
                }
            ]
        },
        "3.17-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9578aadea925b81ee6cce7b07b3ebcdb72d40275e4a59fa482824a360fbcd7b0",
                "size": 6369
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22acf3a6c2b5ab10b9ae9f9eb0421c8ba9a8b396ebee5a12d860baa3c8b2e64e",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb0d3cd191fba3f286ccbc15e5374017df73a7b2bdb3c0fced878f07a3c8b1d",
                    "size": 9994959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76f8e926438b08969366ca0435cda05613e5729f1fb42a3cad791c520142a0e3",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb4d66cf77a4f89914476003b23c46b8874d935e48843c1005fa5e90fa98012",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc6f7a3aeeb3c549ffd6cc920242156d9dd3036b166bf80d285aa58698902ada",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4374f0897231c2303868c9c7dca68a222d6c71b825dbd18959aba13c98763271",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:536746e2e6e159e4bafb713c5152ed842c6ce300a5ce5a312f3ef6bbe78e3323",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd0ee5865bb184a5c74b4eb0eb4445ac0269e0d04bdf6fdd95a5a39c9ad082f9",
                    "size": 875687
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:257dded3d09470a1fdee218160df1e129cf49368893035ccd434e5976e010b30",
                    "size": 472
                }
            ]
        },
        "3.17-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5efe7bde47ee585d3426d03cb2a2ecc955703ccd44f5136a35ba2bd6d26b9072",
                "size": 6374
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5385a9a590c3e2872b3ed27554a56fb7ce544c694b41b9b95d70fa86f30b0566",
                    "size": 3258283
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1bf4ceba6ffdefdbf0448597911f50927187a1fe94a768c12c665b4583dffd",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abce81d9a03389c901305a1e39376270468f092caf5233a50b8e3627664064b4",
                    "size": 9994942
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:876bf7c857035914f0a29e17715c014d02069f6e7731ef9c43ef3440be7bb581",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b11768b298e639b4d17ad89cf3a7ca33510e20811e4d069170bf12834cfb0b5",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79467c0aba76f407d9c3eed6b90339f1e2aad728f2d45a3a49d38cf690b6a3e5",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:296855242af127973a8392f858ef821c10bcc11a2b8bedd58c912741cb3042e0",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b130281ec755246bd1d5d9a9dc5668effa582930f4cb91e6a19f54f10eb347d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87fd78c2f8fc58cfce25323723a6451e33e4bc7ecbf6e5ed00447f9aa3aa9567",
                    "size": 875683
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:018a6e49e2cacc85eefcaea073b9ab988f79c5dbea0a564a46eef0276686e0ca",
                    "size": 472
                }
            ]
        },
        "3.18": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "3.18-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f2e88be7663ecf4c2d0f451c3ea68ae18eae1ab76fe38511e2165fad7326715",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33ea85c29102504fbeccaf2080e556ab011e3bdae9ce265a15a2ce1f86a558d5",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:215dfd9a5f4ea62e626f07d2fcbb1184cd840f31fb88df7b2c128a3c36acead9",
                    "size": 10597566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aec9d11ed900b291898bf4ce7d9e1af18a8357a48bf257640eb7cae452e669fe",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5857ab975ab7b29f447d0c965124acf114668187f41d6dee94de0203d3a77e33",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdbf6ba4d206f4d06ce141e22ef81454b9ad97412ad2e68d7d87683678fef43",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0503736455c243b1cbed3fda5582c23170a698be155f99920b743f68f08660f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a724695a5b06c3c97b932fe9c72551f2f0e16ddfbe9fb25b797fa147d8d5de3",
                    "size": 884486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43c008639233d2f2a3850699df606633c0b8556874f8d8a09b566944f121054f",
                    "size": 473
                }
            ]
        },
        "3.18-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d882231882d7d19b19d623ee4eaeb67cfb57c30a138904afa42b114644723f9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91263b940ffe7f5b6de5bf396e1e96432a23d242735753e9e5a45e1f776a2b36",
                    "size": 884477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b114132d25e2183f96a417bd33d3c2e9901b9156fca3f3055efeb950eae5347",
                    "size": 473
                }
            ]
        },
        "3.18-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed4fd5194f2ffeca064377df5d829b6690a2ee41049757a82cbe621e36c74037",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0535080a327f1f28c2dfe3afa856ddaadf669207507a843abeebc573d55da95",
                    "size": 884482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c3c0d967da5827a4f738d95d709b6e6df0f35ad2e0d7424e7ce4ac164f5965d",
                    "size": 473
                }
            ]
        },
        "3.18-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7fb51567cf7d1ab57e178240ebb4b3364ed67a748c95efe06dcd9c80c624ff",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75a1f3ddd15bca3d2cd66fbd9015fd31010a23992a6f1f809e5dcc1761cc7053",
                    "size": 884496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9df358a2524674c3ffcdd51d55fd04f2a2bf10b6f6c875c3d94e855d96c12ccf",
                    "size": 473
                }
            ]
        },
        "3.18-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1374ac66364936743d2a44c61ff2984a759241d747d0f29d00c5603bcc23ddd",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:772b388c3211b3827e1e733e7bd5db2fdc33547225c8193b49a800997f30de16",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa5e1000d0253419cdb9542f5542d6dda24ffbb3893b2083ca8798160db7cf40",
                    "size": 473
                }
            ]
        },
        "3.18-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:927e20d7f0b1bdd86455ffbe3e49e972c86a10725cd1d15597080d524c3e04df",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13614ffeedb01f2708929cf6da18bd2baf1a8f9f11d8a1e03fa6be8710b7e728",
                    "size": 884622
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c70243ffe120aa800bb06c71fa4181bafdb6bb49598a0176f146676fa32e017a",
                    "size": 473
                }
            ]
        },
        "3.18-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "3.18-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:08ff273916afd3d72f2e6b9336f7191e5666c5232cac8d9061c2dfe4752fa758",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76af4cfac548c804cbdd48b0fda0b78ec7c8f7d12e22823786d5edf406e77600",
                    "size": 1195359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bea3a46d1e803891f4bf4c9ea1b13a69593278fbb8a4c70255feb4f59cffbeb7",
                    "size": 474
                }
            ]
        },
        "3.18-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1468eee1132593097f2a5819380a4a347967971263976dfc53aa4bd6ee75617e",
                "size": 7009
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b44b4bb6ecd09c7f2f72715cc3fb38db84b752fbba70fe53d0fc95c8e02381",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3270336b6c17e6bdbb04ced6328d5a288adfc6628494ed22b0a88cf427922d83",
                    "size": 10597564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4203df94d26b13e2379449dde4d31ee4934569bfa168f670f89b3fbfb9779889",
                    "size": 168483901
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:889eb0dd46ad19f64e9d64c587c27d3e3358478d5eceddc2751e5f259dd2b14a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df803e34b51a66ef78eff12716d00cf03faeb28e4d82ce8c0806fcdc240b947f",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bffff0c88096aa4b4d16dfa14aed72cbd463ce665ad80bce0d256e546fdf8a4d",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7aebc4cd47134268339c843e730f746672aa09495dc1e368cd56843836e15dd",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50142511cd0ccb174b93adba0b6e7caf696d18a321beaa5a488c2062ad78d42",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7706d1e09de9a106bdbd4ca593bc31d1bb9d78ca80af71a655b31c068539d4b",
                    "size": 1195281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf507fd2813f6adad3808acca9b14fc0f10f52b28285f4f0c37a8c9abcb0a6a3",
                    "size": 473
                }
            ]
        },
        "3.18-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ee0fa594d0b16b1b62629f6d0fedea4a340d8a448ad9251fa8e1a44cd9d4ef1a",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc030cd98997fc27d4e223db44b62df17de32e3eef80da80bfc2c7a4c61b025f",
                    "size": 10597554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad08d71779ba951d6928c5789d2ec8b02c6b1da9a15fffa16fcf30378692d4e",
                    "size": 165880166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b240156dcf35b97e783d8d379c7fd74258f35371c496a437412fe62778724285",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1966a18f76f02e402f9ff73562d5bd740d82f9359bb5cb79cfe9e7ee1b93cf4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10414772caf13db59b65a43b5f06c2b0e3e84528ca82a43c5465b72c50d339b1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5404c2746878a14d1b632e36ca055ea19c6a949dea5b253685e8dc3e492c0b",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b563a7401927debff603d2cd8f3b819d858400087111570881d0404ffaef87de",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eb6b72b071f1ba29b1f894eab8d872c2b1e72e2223bdc6c2692c7eda7d59a19",
                    "size": 1195101
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9be0b908e86fbb8e0cf06ba2fd7539aaef5cc113d10316e3c5be4721de107a9c",
                    "size": 473
                }
            ]
        },
        "3.18-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d96be6ef6f4871a43234d3c3adcf4eb9a7db0a293dab151e026f7b137091b6a",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9580d64997527049db109fbd0f1b4600f5cac83f73bba5789c9bb0eafae65b2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe6a33f67913d09734e2512647f60213bbe9a0f931199b644438fe8b81d1c081",
                    "size": 10597562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf97d8276b2ed6b100d3f791881ebd69c78add5359a6d7c32349f5f81387762",
                    "size": 165880055
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7007a2dcfe4283464b3035107d5f811b008d8325863af0f3a4a54c0fba28613f",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca14b2c68306c8603eb6fb04857ed95d304cd83b05552bd5567b496d4175e3",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35a11f009f4751074d7c6936e8c9f57679beed7af17a6d489b929a055a42210",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4ab360fe8c4cd5f2a32b2f0172460e9655a23853a8438ea90dd2967d7fbcd17",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327af6353b537d02a20cd65b8e7daa77462eb1d2855495a6111ac9bfe348faa8",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4e3370b4005bb52d1160ad77aadaac0d6c67ecbfc8600d2183e1b8476ba08eb",
                    "size": 1195102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bee20c2ad673adb2a01b46b5196d23bb92250cb6a8449c2b8e82b09cba4840c7",
                    "size": 473
                }
            ]
        },
        "3.18-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:215110a1db722a97f33b646c412f77371eec8895ea8d84aa82dd889dd9604537",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:033ee34af43afb8e325a5cf2bf60d624f4f67f26d8064d0919c79d865dce6577",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d90e8ee7ddb3e34d96b286570fe350c56625bc236cbadffece9506151fd0938e",
                    "size": 10624102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b159afaf942782b9452913e14196bf1c8245a5af5fe6fec9876cbf4ce73ae763",
                    "size": 165857735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3325d1d73bdb9b44152c9144255fff61fd0e7f31cad56b581f6ac4bbc55c042",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:439682e3b05010101d9631031da9fef4db5f0932288b287cbd57fcff8c933e04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab6fa4cb6abfa6d479d358e719c0d25d2cf25928e3346d9284574b9963e371",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ccc4b87d165393642cfd6b8fd7281ac264a726e0b5b0274be02704715c3d858",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547f4ff0f1db9e3b2e2e8e6d27a41ef77dc1c3189b0ad0ee97c2d0e5e107cde9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aecc9332c4e0c0725df27c6d6cad2bbdc9bc503ca55496426db5c431ed8c980",
                    "size": 1195137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fdaf733933e1826c239b91e523138f1f3b2c4733c9d3e41cfc4288aa64e351",
                    "size": 471
                }
            ]
        },
        "3.18-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ba14f90f6262681788c7fd6a6214ccbd1a3f7e2cf2c8c45086516b3afc773d2c",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94bd2f56af27640e137ade6570344fb1e23229df35e929b6bbfa71f25626fdf3",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d3b946b8da7f7261c78d90b94ce6351b10999cf60897f5f77dc7d76a064ce3",
                    "size": 10614236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71646f2f944c680ef1fa23349374fc958ce4043fc6fdeed743b9e5072fa83486",
                    "size": 165909050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2cd8dc22032572e3a90e1b749f5ac49753a8af82cee35ccd69b68308865a634",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bac4ec520ae9edcbbe76a74db69a9472d032d765f8bbde4309be6d6b65a280b8",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f9f1cf1d2b814e9efe2a04fd1326c7dcfc1e9e21918a8694a81418580ab7eb8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fe10b0add71e565a6ecb5d0b086d7b1a3f6ee780b887c48d76dd3054f7dce81",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5553496e58811583a1ee01100a7fdab45a5d02f79fa504277920bb9ec9f6ba89",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1dc3cd1fb3db74a8bbfb3c09d543b70495d63bdb18b5d40c4bc5d34832bec9b",
                    "size": 1195143
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f88b6765ded7cc4393b3af4ab60cf9bcfb309d039c7f437232370fabe4675cf7",
                    "size": 473
                }
            ]
        },
        "3.18-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:186455e5200765e3e3e0c634ae65abeb2c12becfb5068b9f9baf10174cf29940",
                "size": 6995
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f71a12cdac6781df2d7244c2ca86cfe562442e74b5218cfa87bdacfa5d9fa05",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ecd74d87e971ec7f9da7815b13066c62e7b65b0c6513cf771ae6490fcb6c9ae",
                    "size": 10634542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a08bf201604136a3b80ae1cbbf3a84a72dad40ca8ca484c34189fa457f497e5",
                    "size": 165911595
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b272a866877981093153daf8f9c649194b9977ca550cf6c8893aca5bfa3d03b",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342eb67824ea458754fe72055a64845f6f263c265a596fbc31ffe7efa319f03e",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3ba0b18df29744091ca06f7afd32b987df7fa4de085e5fb75dbc4cbb656246b",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2084d3b1fb7e1cd23db9ff7edd4529e3b3de97d37c9c2932d315d4db578e94ee",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50face0da80fca3bf2cf46410ae3ee63c0c7544c6ccbf0850291fb3cbceed0b6",
                    "size": 1195365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d09189862882665f0b9ed055dc5d4ddc2311fb5e0884741f99147eec2a32928e",
                    "size": 472
                }
            ]
        },
        "3.18-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:08ff273916afd3d72f2e6b9336f7191e5666c5232cac8d9061c2dfe4752fa758",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76af4cfac548c804cbdd48b0fda0b78ec7c8f7d12e22823786d5edf406e77600",
                    "size": 1195359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bea3a46d1e803891f4bf4c9ea1b13a69593278fbb8a4c70255feb4f59cffbeb7",
                    "size": 474
                }
            ]
        },
        "3.18-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "3.18-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f2e88be7663ecf4c2d0f451c3ea68ae18eae1ab76fe38511e2165fad7326715",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33ea85c29102504fbeccaf2080e556ab011e3bdae9ce265a15a2ce1f86a558d5",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:215dfd9a5f4ea62e626f07d2fcbb1184cd840f31fb88df7b2c128a3c36acead9",
                    "size": 10597566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aec9d11ed900b291898bf4ce7d9e1af18a8357a48bf257640eb7cae452e669fe",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5857ab975ab7b29f447d0c965124acf114668187f41d6dee94de0203d3a77e33",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdbf6ba4d206f4d06ce141e22ef81454b9ad97412ad2e68d7d87683678fef43",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0503736455c243b1cbed3fda5582c23170a698be155f99920b743f68f08660f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a724695a5b06c3c97b932fe9c72551f2f0e16ddfbe9fb25b797fa147d8d5de3",
                    "size": 884486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43c008639233d2f2a3850699df606633c0b8556874f8d8a09b566944f121054f",
                    "size": 473
                }
            ]
        },
        "3.18-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d882231882d7d19b19d623ee4eaeb67cfb57c30a138904afa42b114644723f9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91263b940ffe7f5b6de5bf396e1e96432a23d242735753e9e5a45e1f776a2b36",
                    "size": 884477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b114132d25e2183f96a417bd33d3c2e9901b9156fca3f3055efeb950eae5347",
                    "size": 473
                }
            ]
        },
        "3.18-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed4fd5194f2ffeca064377df5d829b6690a2ee41049757a82cbe621e36c74037",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0535080a327f1f28c2dfe3afa856ddaadf669207507a843abeebc573d55da95",
                    "size": 884482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c3c0d967da5827a4f738d95d709b6e6df0f35ad2e0d7424e7ce4ac164f5965d",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7fb51567cf7d1ab57e178240ebb4b3364ed67a748c95efe06dcd9c80c624ff",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75a1f3ddd15bca3d2cd66fbd9015fd31010a23992a6f1f809e5dcc1761cc7053",
                    "size": 884496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9df358a2524674c3ffcdd51d55fd04f2a2bf10b6f6c875c3d94e855d96c12ccf",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1374ac66364936743d2a44c61ff2984a759241d747d0f29d00c5603bcc23ddd",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:772b388c3211b3827e1e733e7bd5db2fdc33547225c8193b49a800997f30de16",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa5e1000d0253419cdb9542f5542d6dda24ffbb3893b2083ca8798160db7cf40",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:927e20d7f0b1bdd86455ffbe3e49e972c86a10725cd1d15597080d524c3e04df",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13614ffeedb01f2708929cf6da18bd2baf1a8f9f11d8a1e03fa6be8710b7e728",
                    "size": 884622
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c70243ffe120aa800bb06c71fa4181bafdb6bb49598a0176f146676fa32e017a",
                    "size": 473
                }
            ]
        },
        "3.18-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:08ff273916afd3d72f2e6b9336f7191e5666c5232cac8d9061c2dfe4752fa758",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76af4cfac548c804cbdd48b0fda0b78ec7c8f7d12e22823786d5edf406e77600",
                    "size": 1195359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bea3a46d1e803891f4bf4c9ea1b13a69593278fbb8a4c70255feb4f59cffbeb7",
                    "size": 474
                }
            ]
        },
        "build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1468eee1132593097f2a5819380a4a347967971263976dfc53aa4bd6ee75617e",
                "size": 7009
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b44b4bb6ecd09c7f2f72715cc3fb38db84b752fbba70fe53d0fc95c8e02381",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3270336b6c17e6bdbb04ced6328d5a288adfc6628494ed22b0a88cf427922d83",
                    "size": 10597564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4203df94d26b13e2379449dde4d31ee4934569bfa168f670f89b3fbfb9779889",
                    "size": 168483901
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:889eb0dd46ad19f64e9d64c587c27d3e3358478d5eceddc2751e5f259dd2b14a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df803e34b51a66ef78eff12716d00cf03faeb28e4d82ce8c0806fcdc240b947f",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bffff0c88096aa4b4d16dfa14aed72cbd463ce665ad80bce0d256e546fdf8a4d",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7aebc4cd47134268339c843e730f746672aa09495dc1e368cd56843836e15dd",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50142511cd0ccb174b93adba0b6e7caf696d18a321beaa5a488c2062ad78d42",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7706d1e09de9a106bdbd4ca593bc31d1bb9d78ca80af71a655b31c068539d4b",
                    "size": 1195281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf507fd2813f6adad3808acca9b14fc0f10f52b28285f4f0c37a8c9abcb0a6a3",
                    "size": 473
                }
            ]
        },
        "build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ee0fa594d0b16b1b62629f6d0fedea4a340d8a448ad9251fa8e1a44cd9d4ef1a",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc030cd98997fc27d4e223db44b62df17de32e3eef80da80bfc2c7a4c61b025f",
                    "size": 10597554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad08d71779ba951d6928c5789d2ec8b02c6b1da9a15fffa16fcf30378692d4e",
                    "size": 165880166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b240156dcf35b97e783d8d379c7fd74258f35371c496a437412fe62778724285",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1966a18f76f02e402f9ff73562d5bd740d82f9359bb5cb79cfe9e7ee1b93cf4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10414772caf13db59b65a43b5f06c2b0e3e84528ca82a43c5465b72c50d339b1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5404c2746878a14d1b632e36ca055ea19c6a949dea5b253685e8dc3e492c0b",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b563a7401927debff603d2cd8f3b819d858400087111570881d0404ffaef87de",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eb6b72b071f1ba29b1f894eab8d872c2b1e72e2223bdc6c2692c7eda7d59a19",
                    "size": 1195101
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9be0b908e86fbb8e0cf06ba2fd7539aaef5cc113d10316e3c5be4721de107a9c",
                    "size": 473
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d96be6ef6f4871a43234d3c3adcf4eb9a7db0a293dab151e026f7b137091b6a",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9580d64997527049db109fbd0f1b4600f5cac83f73bba5789c9bb0eafae65b2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe6a33f67913d09734e2512647f60213bbe9a0f931199b644438fe8b81d1c081",
                    "size": 10597562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf97d8276b2ed6b100d3f791881ebd69c78add5359a6d7c32349f5f81387762",
                    "size": 165880055
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7007a2dcfe4283464b3035107d5f811b008d8325863af0f3a4a54c0fba28613f",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca14b2c68306c8603eb6fb04857ed95d304cd83b05552bd5567b496d4175e3",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35a11f009f4751074d7c6936e8c9f57679beed7af17a6d489b929a055a42210",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4ab360fe8c4cd5f2a32b2f0172460e9655a23853a8438ea90dd2967d7fbcd17",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327af6353b537d02a20cd65b8e7daa77462eb1d2855495a6111ac9bfe348faa8",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4e3370b4005bb52d1160ad77aadaac0d6c67ecbfc8600d2183e1b8476ba08eb",
                    "size": 1195102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bee20c2ad673adb2a01b46b5196d23bb92250cb6a8449c2b8e82b09cba4840c7",
                    "size": 473
                }
            ]
        },
        "build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:215110a1db722a97f33b646c412f77371eec8895ea8d84aa82dd889dd9604537",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:033ee34af43afb8e325a5cf2bf60d624f4f67f26d8064d0919c79d865dce6577",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d90e8ee7ddb3e34d96b286570fe350c56625bc236cbadffece9506151fd0938e",
                    "size": 10624102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b159afaf942782b9452913e14196bf1c8245a5af5fe6fec9876cbf4ce73ae763",
                    "size": 165857735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3325d1d73bdb9b44152c9144255fff61fd0e7f31cad56b581f6ac4bbc55c042",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:439682e3b05010101d9631031da9fef4db5f0932288b287cbd57fcff8c933e04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab6fa4cb6abfa6d479d358e719c0d25d2cf25928e3346d9284574b9963e371",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ccc4b87d165393642cfd6b8fd7281ac264a726e0b5b0274be02704715c3d858",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547f4ff0f1db9e3b2e2e8e6d27a41ef77dc1c3189b0ad0ee97c2d0e5e107cde9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aecc9332c4e0c0725df27c6d6cad2bbdc9bc503ca55496426db5c431ed8c980",
                    "size": 1195137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fdaf733933e1826c239b91e523138f1f3b2c4733c9d3e41cfc4288aa64e351",
                    "size": 471
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ba14f90f6262681788c7fd6a6214ccbd1a3f7e2cf2c8c45086516b3afc773d2c",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94bd2f56af27640e137ade6570344fb1e23229df35e929b6bbfa71f25626fdf3",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d3b946b8da7f7261c78d90b94ce6351b10999cf60897f5f77dc7d76a064ce3",
                    "size": 10614236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71646f2f944c680ef1fa23349374fc958ce4043fc6fdeed743b9e5072fa83486",
                    "size": 165909050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2cd8dc22032572e3a90e1b749f5ac49753a8af82cee35ccd69b68308865a634",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bac4ec520ae9edcbbe76a74db69a9472d032d765f8bbde4309be6d6b65a280b8",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f9f1cf1d2b814e9efe2a04fd1326c7dcfc1e9e21918a8694a81418580ab7eb8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fe10b0add71e565a6ecb5d0b086d7b1a3f6ee780b887c48d76dd3054f7dce81",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5553496e58811583a1ee01100a7fdab45a5d02f79fa504277920bb9ec9f6ba89",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1dc3cd1fb3db74a8bbfb3c09d543b70495d63bdb18b5d40c4bc5d34832bec9b",
                    "size": 1195143
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f88b6765ded7cc4393b3af4ab60cf9bcfb309d039c7f437232370fabe4675cf7",
                    "size": 473
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:186455e5200765e3e3e0c634ae65abeb2c12becfb5068b9f9baf10174cf29940",
                "size": 6995
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f71a12cdac6781df2d7244c2ca86cfe562442e74b5218cfa87bdacfa5d9fa05",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ecd74d87e971ec7f9da7815b13066c62e7b65b0c6513cf771ae6490fcb6c9ae",
                    "size": 10634542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a08bf201604136a3b80ae1cbbf3a84a72dad40ca8ca484c34189fa457f497e5",
                    "size": 165911595
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b272a866877981093153daf8f9c649194b9977ca550cf6c8893aca5bfa3d03b",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342eb67824ea458754fe72055a64845f6f263c265a596fbc31ffe7efa319f03e",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3ba0b18df29744091ca06f7afd32b987df7fa4de085e5fb75dbc4cbb656246b",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2084d3b1fb7e1cd23db9ff7edd4529e3b3de97d37c9c2932d315d4db578e94ee",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50face0da80fca3bf2cf46410ae3ee63c0c7544c6ccbf0850291fb3cbceed0b6",
                    "size": 1195365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d09189862882665f0b9ed055dc5d4ddc2311fb5e0884741f99147eec2a32928e",
                    "size": 472
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:08ff273916afd3d72f2e6b9336f7191e5666c5232cac8d9061c2dfe4752fa758",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76af4cfac548c804cbdd48b0fda0b78ec7c8f7d12e22823786d5edf406e77600",
                    "size": 1195359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bea3a46d1e803891f4bf4c9ea1b13a69593278fbb8a4c70255feb4f59cffbeb7",
                    "size": 474
                }
            ]
        },
        "edge": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9e6467138874d83d8a1df960f907197b3cc672f564d4d52c22c1bf554453c593",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6f05996dff2620269899df0304fab4060a1dd1e84a939672301cf2a206a0543",
                    "size": 886849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84c2130db00507b3055606f908e3a127dd051def58eea50aabf6e0478207f7c5",
                    "size": 471
                }
            ]
        },
        "edge-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6ec7cb1095e392927d880347b5716faf1616440207eab67c0591549abe17fd11",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c37db234356c9d8efe6f72cb86f434e7a4fe81d2a78aa14362db72efba9af9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffb4f027fdbcb2696a1a6c0e0bf94d30a107a9eaa4b91f1261b49c9be7a17e00",
                    "size": 10633824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f04371a37ed173cb77baaba756b6991daced9132d234315c27c04b6d1cc65c7a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5136e9e6c42054f504ffdb12eccdf50ae49ca03a7b206bc040c84e889f4785",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16506d5f7c9dd7756c7a7a1ab9e669c198d4eb8a22307ef1cd2dd136094e2cd8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5ce51bffadc42c08839a37f9923a30d14dd642232bea36348ca080c353f8cdc",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc6f298cb3899d8b4ed1cb0cda1b92f17a956b150ab4ad4d33b1d18eaf85185",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86dd12f3d0a5a5991b8c4bef9619d13d972fe3d0005c6d158a65aaf7c7bf9d78",
                    "size": 1895137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13f0af22523a7d6b5f0232a0346dc295414a1f5ede9d109efc00b75347bdfece",
                    "size": 471
                }
            ]
        },
        "edge-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18144f409452c37c3726903e054fb5978c9a994e74cf9ea118d1825d3b771c3f",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3831b080b6fa8af0b2e7def36f5216a1c63898785a5bcdf3702726e7934b090",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43033d12a219875aacbf76a4e575b4d72af8c94a96692b9e7e71c13f482528cf",
                    "size": 10665454
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa45a57004b9aa80e6c0ce33b3ea8bf3d43c2a5911603709d13e956ad002f26c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f44ae1185f842ac3510366338e4f7c5e2dab64c0e9e5ebdffb946a6b7551f0da",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:713124318346c6a25ba80001895a32f84782bb408525d9c6b012344f50d821bd",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c622264e1b506d9e8edbd003eea5a12efdae84aaa2cd05ff679da5a3785f41ab",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:176a93067af6e17c74965f0f3a82665a2c8c1034ce7d6b73e0a3534947e19af0",
                    "size": 1894793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8098204055aca387ec2394e4108931e9b9a8ff1483abbde34c86e9255127799",
                    "size": 471
                }
            ]
        },
        "edge-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ef590d3de9e7a1dc739b70f6a414750fc0bb907bcf658b32d1c0168543b6725e",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7770c9d594ca58b6264ebb81a9fe6da679ebad300e2cc66e80cf8cb302f6b0d6",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10db905dbaa3479d2ac1c3adb6291db933e22367c60dde8b4784782c7e458f69",
                    "size": 10665916
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cb1a5e1843c81106ca97d5d53a65bd2a235f292c33652013275bd47b45618",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34e8d19346beffb54783d61835eb6123e3a0e4b8101f55dc19643828bd39df27",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d54b8cc1a30b86c108d489d6e63fc038f5ee6d2b8dd5df47389e84a7f476a9",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e747bc193dea99f7798a9df19b20026a0f7cb1c5506f904cc1eebb8ac055654",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f825442a1d6048501d3eb772838516baf30bd7345213a1c2088ef4239f9fa7cb",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01390ea37cfa1190066fdf4c637f4594e3c9953d4ebfa63f3886290c5fc0acaa",
                    "size": 1895341
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08c246550c1f31e1387cd92cc55e40cf58cbbd1d15a083e3dc1b33f75f05520d",
                    "size": 472
                }
            ]
        },
        "edge-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e0652376d7adb3636b29919e041efe6c1189e1861ab631f05550ab56eb9144b",
                "size": 6386
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04544e0368dbd7aaddd508fc631a1755b04b605f1e1b619898fe0499a56cd4e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e3e08c1a4af3d5be813094fd751a73e1a0fa1a7e4bbf7ad192221fac1c3e59",
                    "size": 10800995
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9bf7d090967c0655fcc7adddb99cb110427334313fda2dfac578ad1ab74b26",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84effd567536f0bdb572668ebd4fe6bb013f0f182ea8fbbec6d6bcd61d3a7652",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99bec92ad15917d6b8016c350446ae987f57c0c3fa7d2762f70dcf3ff626cf64",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf702351217ad4a757cbe0497e738dce6cdb6892078ad170bfc9fd34f12c66f9",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69da3efb85b0eca3a3fb3946d6a2e8385fd52c79f00964c86df3650713c13022",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c258fa3e3329205b3f73a5444a25194a3cee2348752b8197d9107a4f010d2432",
                    "size": 875444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ba86caa6562353aa386454fe68cbeb17774f9d0d9343d9a1b84aefd47b1d572",
                    "size": 471
                }
            ]
        },
        "edge-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ffc329c30f18efba393793339b082b3962a71550be3467631dd173eea299f0c9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90d28348cbe275b9a1a73141aeaa36605bd158e178cc537f3e0129f88499f01b",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08855058175279477e99cf779d73ad580a76f562361cd8def9e045431689e667",
                    "size": 10823226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adac77d36848be52061186b4ad4aa6a2d1c1b033e58a33d291ebabb0af5f735c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:806d5be8998f0e9cc5a6e77cccfc007a4e58641261e0bbe661e809f3c753d255",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8da8f689228d39cf42919890dae5cf9ca13b8624050932fc644c378de2bda85",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1efef3e196af52c238851354cfed09fce72349f4cb9f65192c214315274256b",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ec19ab6ee03c55fc6f11b965346c9759472d5e43fcbbb6a287722be4c7cc17a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fad4417a0e4c589e8f80ca2cfcc64e13e71bd58cf5941d5af77d435171eacb74",
                    "size": 876446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca85caa701e817a972dbd73d26cba6af50ab01c1f92870c8a7fb1ca6d41294c2",
                    "size": 470
                }
            ]
        },
        "edge-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f924289d23f16137fdd9998c03ab1e80589d38c531abedda9245959e5ad10906",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4d595d7546ac9bacb35a5f1aca6bd051f51e35a6b78094047232984de41519a",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57303db7ddac80d3f9f603c4fbbfbd9ec17ed9edff1cbc145eaaa4b7f3ed167c",
                    "size": 10845987
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7942ceee14be497ff20ff252bd004d23df4a8fb56a12b407e07b8d5cbb92f364",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0742c680de31e49a71279ba4a977c454825e513ba34d50dfcfff16083b1ceba3",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740a7baaa028469281c794e030cb04cfe1b5663ed662793f74a465ab57aae652",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b953218b0ce9c1d64ef5d75884daefcfbbe48cd34be155fd4a3d78d7937acf87",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba5e885739887e075c2da2eba15bbef4e6394d7f6e8ead4b338bbf5e737463ad",
                    "size": 876660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e543252b992ccd652c505a2f3208fe7b641e4ff3b471496ba6a2de83670c2000",
                    "size": 471
                }
            ]
        },
        "edge-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9e6467138874d83d8a1df960f907197b3cc672f564d4d52c22c1bf554453c593",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6f05996dff2620269899df0304fab4060a1dd1e84a939672301cf2a206a0543",
                    "size": 886849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84c2130db00507b3055606f908e3a127dd051def58eea50aabf6e0478207f7c5",
                    "size": 471
                }
            ]
        },
        "edge-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:155c4048be2701841e8820d71e8acf55ef470fe18ddfba0e6d2a8548503f67b4",
                "size": 6996
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbde216597a992bc9ef41ed75ad3b30f71304f2b0bc41dc1603825cd158d834e",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b690dc64953f7b38ee8879e811aa5d579c31bb5a391d91a427adc3eedf28e693",
                    "size": 10869500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5afd8409ef8497f67653defbd974815e854db3c1f30398e4a19a28a6abbfbf2",
                    "size": 137142720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1311712d81c5aade41f5a89b8224b8aa2554e69a00e07db6eb1be74a070cd504",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7face9f85f497b94f30b52ac765dbe06ab867c808b557b1306315fbc64926780",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d7c0f9bf4fd5c961a6a60dc16abb201174da8b0fd40bab1f37e5ec8a75c1189",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c76caf7cbcf4b442e0890e741905ba344f22abdc4665c4d2a7c091d6f4cfabd3",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:525bde4021ddf2c0b6ad48e819e7e547f505262d68915916c435bd7528b41887",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbabdf0fa9f4a46f81ee454195c1bc0b955f1438b7969c74ef7187f84d06124e",
                    "size": 1189444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba769c5d0c4b1f4afb53a657e31f5857a82db23e95bf330ebe36ecd31b2ca24",
                    "size": 471
                }
            ]
        },
        "edge-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:416e6a9fa4fef1f4b99e74bf6b7e7c3ebc0216bd6b09490726c8f50dc4c18adf",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1241554535591486f875bded424015d25cc5f386b8f9ed36d0c6df1c8f040b04",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ff8169f5124a7bf9653af3d303068ebeaa99cb0c1be75e69a109806d965b2b5",
                    "size": 10633794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ba8127522f3961642d2f3a1c02448c257cb976e6917cd3c54650bf7e82b4c7c",
                    "size": 134591956
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:537d067f52d64dc1023a943d9123ae82b75da22d565e576df751bac41061fcab",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2efcb509432b73ca4743b02566846a0138583618c273a0169eea349c935e3178",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35e7764153748f40a2909c78aa08878b680245f2946755861a7cfbede9abef03",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c38390fe2f8b01b66433faa7fdd2ffc555c58ae6d0155b527d84b50bb4df0bb1",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1cac5008e2bfb006549f7c1353c8e89d58867c1ef45bcae7694caa40b5fba2a",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c935aecc8123b78f93b58aed7837d9e1565f6084f2c5719bbe1964a1b15ab3fa",
                    "size": 2131934
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d8e4c721e6abcc45107ac2136ae9e3f8a5a90141179a7a31811440c7a3fad88",
                    "size": 470
                }
            ]
        },
        "edge-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b623bb9513a468cf41226dd757894a1a7d43a9783e4096b275646fe7ae1d6fd4",
                "size": 7009
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ad25e0ed0bcb8bbb52fdd1abb0c2d3c20c33f1eff59f9286efc2dc2f7f703c",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80f04c558faf84fde6edb2cae1a551524b353b55cf71d872348da99ca08f80c3",
                    "size": 10665444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc4701ab5e6cd1036b66e3e8c574c7c6b5f0eb1e97764b6e916a1038f17e34c7",
                    "size": 134684538
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:375ae2c81acfd437a2238a331cde917cfbf351092ef6d899f2efb5a2be2ae89b",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5da985d38aeedfe30c54eb50bc0c76c81317db40439b7343f93e0b7fd5bb22a",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a17262afef6d7e74d93444c3f59516f5fc47d21dbf4cca3fd63a4dacc5603aa3",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83a7658ae7027e1f72bc5fe58829e586f30cb42ab296a14f3a6d54b8301a96e1",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6854c4f7e5e2984ac70c028fd0adf2ccc88d4e348a7adca305c8362ee8f50298",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71d313b64bc7dc24adcfdd2df026ededf07b08381996c00788dc213340f93f37",
                    "size": 2131671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8db76a8612c2c9d6555928135f859279d4f745f427eb0612dd55c405f36ba048",
                    "size": 471
                }
            ]
        },
        "edge-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:dadf549b795e1f1e806141fd2f60114883b98e533f9170837f9de00b9ea9ab1b",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf12141682e86badbed362f09ab7a78855d687991f4a41cfba616c58b25cee9b",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2677a956502207e91c57e5b6aafe69255c278a22fdcda4143d2047f55b70d801",
                    "size": 10665933
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a83767128ce0366ef0088f3eddf7cb5697037a0ec55067382d283f85279af68",
                    "size": 134681922
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3de57b3acf91786a1d0021e21adb8cb05c54418f24096614507a0eeb50381230",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f6c9e222b77044024c439ae4b68dd4082701564f9f75cfbb73d662ad7f019fb",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a8720adbefbbf2b503a062d5551164a10ec3bf85b80eff5979e5012e17648bc",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc01e38a6cc5e5390274da6bb6f521f916e569b38ee5c48de6a3d179fe6cdfcc",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bffd06ae7a89010a3f3d29fab7aa64dc207c1277b7344c1c6194ff0ec040faed",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a58a0e692f8578d1d39cce45aebb24a445235b2dc607472bed30606fd265ec6",
                    "size": 2132228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:734c3a8a86e1df3b4dabd9ddd9af6a42284b7199ab2d4eef8f6d0da1f210e92a",
                    "size": 472
                }
            ]
        },
        "edge-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:405dfc5ed0754b7b3e34e3523661cd49c1834f9d7fd201d63064e7c3eef93de0",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3acae7e03eab8df87c97c57c68b779334222c51ef1d2bde82c0f2a5bc1414b53",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad95dbb20b67bc024225b04aa5ce83c3e530a2ef8030783b197489222c604d80",
                    "size": 10801044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24be3c2cfc174b47c4b81657d6b3dd56ffd1fde034c9cba383260d109a1ef5b3",
                    "size": 134315537
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726bf9e5cab3243865674126f262dcf7bd47714ab954258ee9ca1d1f22cdb892",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37efd167c62d085e9c88a53cd15ac9dc0e89921fd57d99352af1e73f2fb6a717",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8becf60c2d739c68ee396475635cce8cce78136a9cae08b15e6a059b931d77fd",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2394f543877fed0ac57d4b1b6783f6407030f5a1637c9f2d612dc23194bc549d",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef39544e47e1ce1919e4abea3bda8ebd914a0d1c43e1ac1771006f97d434ca8e",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:744957bf1bc792b0550965325ba1560042ee000498cc72c1858820102ea10880",
                    "size": 1167971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9ae9accca19092ad92d7bf7cf095d5d89e75e3218a7510090a3f6f02707a40d",
                    "size": 471
                }
            ]
        },
        "edge-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b3562e09ee27e533a97a8b6995f60d28fc01cad91fdf23b052a15d84af4c1252",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be0cabc60953f5be4369239120c600e69da1c2342201b1301e346d8629f37bb8",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9204d3718755cd374808a7083ef6d6449b70520d84adeeae3fe1e7665a8b10a3",
                    "size": 10823270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51d5d5cffc968043b01905eab36b35da378e369af8d2b1016ac75b1749354e11",
                    "size": 134871400
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e59525355e454ad611374e563b30ea0c8444edf7760973cd2d09e50481da3d31",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b0df53e5b53573d38b1d9c064a2cbeee9b57edfb6791498872002c618837ca5",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d920bc3225c1df872c7b50849f82306c2382ebb27a5fd1f3d70195000419e32d",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce80c06b5519213c804effd5ef283d626c6908259704c581d0624ed3440cbfe5",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c48ff8b9bbf3bfcf87a6ea2026e3c92e49cf117cc0376d875206ed4e1c6afff0",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8377442866547507ec1599718f8c891a52cd4e1bc87a2b7399fd59e1960d0e08",
                    "size": 1170148
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e585c5845865f8bddb99ee1375a442081c738a22228d7eb27250ddcdeab6e5a",
                    "size": 471
                }
            ]
        },
        "edge-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:447e9b68e96483b7d58a1284ad5ba985430b57c3202441fcbbe0469e905fade8",
                "size": 6996
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050e80e3e60625ad4c3a17c47dd77bee705faee35cd8435e48be35e414b09e93",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc96e9f2b4b77892dd713072b248307a989972529b90c73b6f720baf205cd51d",
                    "size": 10846079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aae387020c272d1747c22de8e9f819d3d0bd18617dabec8f41d6975c8036e0d5",
                    "size": 134846177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511ef11601e3b489292317acfdfd372d5aaa7fedf5e8fde4eb0657b4700a432b",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:919cf1658ca0ee4d16b7639a8522508c4dce987323384cfd8d504c52b17be8e3",
                    "size": 969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2e8373b5e0a44c75b8e2fa26c0f456378449243031dfc77422e5923ef58fc1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d894358b03487749bd4ee99d7889be133aba776d3239be4ac549a01da4386f45",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28f3d653ede7950ba3e0448e11ddb290418ddcca5b3724307afad7e84884b420",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4184f187b7291bfeb8de2d3dd2ca79977738fb769e555274c61982be6bf9823",
                    "size": 1176500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:183af4d4477ced92691b8baa25167ffacb91747230489230f313658f3baabe5d",
                    "size": 471
                }
            ]
        },
        "edge-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:155c4048be2701841e8820d71e8acf55ef470fe18ddfba0e6d2a8548503f67b4",
                "size": 6996
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbde216597a992bc9ef41ed75ad3b30f71304f2b0bc41dc1603825cd158d834e",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b690dc64953f7b38ee8879e811aa5d579c31bb5a391d91a427adc3eedf28e693",
                    "size": 10869500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f5afd8409ef8497f67653defbd974815e854db3c1f30398e4a19a28a6abbfbf2",
                    "size": 137142720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1311712d81c5aade41f5a89b8224b8aa2554e69a00e07db6eb1be74a070cd504",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7face9f85f497b94f30b52ac765dbe06ab867c808b557b1306315fbc64926780",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d7c0f9bf4fd5c961a6a60dc16abb201174da8b0fd40bab1f37e5ec8a75c1189",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c76caf7cbcf4b442e0890e741905ba344f22abdc4665c4d2a7c091d6f4cfabd3",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:525bde4021ddf2c0b6ad48e819e7e547f505262d68915916c435bd7528b41887",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbabdf0fa9f4a46f81ee454195c1bc0b955f1438b7969c74ef7187f84d06124e",
                    "size": 1189444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba769c5d0c4b1f4afb53a657e31f5857a82db23e95bf330ebe36ecd31b2ca24",
                    "size": 471
                }
            ]
        },
        "edge-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9e6467138874d83d8a1df960f907197b3cc672f564d4d52c22c1bf554453c593",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6f05996dff2620269899df0304fab4060a1dd1e84a939672301cf2a206a0543",
                    "size": 886849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84c2130db00507b3055606f908e3a127dd051def58eea50aabf6e0478207f7c5",
                    "size": 471
                }
            ]
        },
        "edge-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6ec7cb1095e392927d880347b5716faf1616440207eab67c0591549abe17fd11",
                "size": 6389
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c37db234356c9d8efe6f72cb86f434e7a4fe81d2a78aa14362db72efba9af9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ffb4f027fdbcb2696a1a6c0e0bf94d30a107a9eaa4b91f1261b49c9be7a17e00",
                    "size": 10633824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f04371a37ed173cb77baaba756b6991daced9132d234315c27c04b6d1cc65c7a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5136e9e6c42054f504ffdb12eccdf50ae49ca03a7b206bc040c84e889f4785",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16506d5f7c9dd7756c7a7a1ab9e669c198d4eb8a22307ef1cd2dd136094e2cd8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5ce51bffadc42c08839a37f9923a30d14dd642232bea36348ca080c353f8cdc",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc6f298cb3899d8b4ed1cb0cda1b92f17a956b150ab4ad4d33b1d18eaf85185",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86dd12f3d0a5a5991b8c4bef9619d13d972fe3d0005c6d158a65aaf7c7bf9d78",
                    "size": 1895137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13f0af22523a7d6b5f0232a0346dc295414a1f5ede9d109efc00b75347bdfece",
                    "size": 471
                }
            ]
        },
        "edge-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18144f409452c37c3726903e054fb5978c9a994e74cf9ea118d1825d3b771c3f",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3831b080b6fa8af0b2e7def36f5216a1c63898785a5bcdf3702726e7934b090",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43033d12a219875aacbf76a4e575b4d72af8c94a96692b9e7e71c13f482528cf",
                    "size": 10665454
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2975b33110240d7a8b6ecf5d81e8e625116e982d8d906a68889efb7ffbd098",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa45a57004b9aa80e6c0ce33b3ea8bf3d43c2a5911603709d13e956ad002f26c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f44ae1185f842ac3510366338e4f7c5e2dab64c0e9e5ebdffb946a6b7551f0da",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:713124318346c6a25ba80001895a32f84782bb408525d9c6b012344f50d821bd",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c622264e1b506d9e8edbd003eea5a12efdae84aaa2cd05ff679da5a3785f41ab",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:176a93067af6e17c74965f0f3a82665a2c8c1034ce7d6b73e0a3534947e19af0",
                    "size": 1894793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8098204055aca387ec2394e4108931e9b9a8ff1483abbde34c86e9255127799",
                    "size": 471
                }
            ]
        },
        "edge-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ef590d3de9e7a1dc739b70f6a414750fc0bb907bcf658b32d1c0168543b6725e",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd218047ff719d3306f5565faa6f561ac3e52b51391804fd7b53231f8326f059",
                    "size": 3333476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7770c9d594ca58b6264ebb81a9fe6da679ebad300e2cc66e80cf8cb302f6b0d6",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10db905dbaa3479d2ac1c3adb6291db933e22367c60dde8b4784782c7e458f69",
                    "size": 10665916
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:810cb1a5e1843c81106ca97d5d53a65bd2a235f292c33652013275bd47b45618",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34e8d19346beffb54783d61835eb6123e3a0e4b8101f55dc19643828bd39df27",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d54b8cc1a30b86c108d489d6e63fc038f5ee6d2b8dd5df47389e84a7f476a9",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e747bc193dea99f7798a9df19b20026a0f7cb1c5506f904cc1eebb8ac055654",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f825442a1d6048501d3eb772838516baf30bd7345213a1c2088ef4239f9fa7cb",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01390ea37cfa1190066fdf4c637f4594e3c9953d4ebfa63f3886290c5fc0acaa",
                    "size": 1895341
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08c246550c1f31e1387cd92cc55e40cf58cbbd1d15a083e3dc1b33f75f05520d",
                    "size": 472
                }
            ]
        },
        "edge-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5e0652376d7adb3636b29919e041efe6c1189e1861ab631f05550ab56eb9144b",
                "size": 6386
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04544e0368dbd7aaddd508fc631a1755b04b605f1e1b619898fe0499a56cd4e9",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e3e08c1a4af3d5be813094fd751a73e1a0fa1a7e4bbf7ad192221fac1c3e59",
                    "size": 10800995
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9bf7d090967c0655fcc7adddb99cb110427334313fda2dfac578ad1ab74b26",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84effd567536f0bdb572668ebd4fe6bb013f0f182ea8fbbec6d6bcd61d3a7652",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99bec92ad15917d6b8016c350446ae987f57c0c3fa7d2762f70dcf3ff626cf64",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf702351217ad4a757cbe0497e738dce6cdb6892078ad170bfc9fd34f12c66f9",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69da3efb85b0eca3a3fb3946d6a2e8385fd52c79f00964c86df3650713c13022",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c258fa3e3329205b3f73a5444a25194a3cee2348752b8197d9107a4f010d2432",
                    "size": 875444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ba86caa6562353aa386454fe68cbeb17774f9d0d9343d9a1b84aefd47b1d572",
                    "size": 471
                }
            ]
        },
        "edge-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ffc329c30f18efba393793339b082b3962a71550be3467631dd173eea299f0c9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea429786d9b37ea994d0f0723763e9e18398e5c93a2944ca94431618e877cd95",
                    "size": 3347519
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:90d28348cbe275b9a1a73141aeaa36605bd158e178cc537f3e0129f88499f01b",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08855058175279477e99cf779d73ad580a76f562361cd8def9e045431689e667",
                    "size": 10823226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adac77d36848be52061186b4ad4aa6a2d1c1b033e58a33d291ebabb0af5f735c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:806d5be8998f0e9cc5a6e77cccfc007a4e58641261e0bbe661e809f3c753d255",
                    "size": 966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8da8f689228d39cf42919890dae5cf9ca13b8624050932fc644c378de2bda85",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1efef3e196af52c238851354cfed09fce72349f4cb9f65192c214315274256b",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ec19ab6ee03c55fc6f11b965346c9759472d5e43fcbbb6a287722be4c7cc17a",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fad4417a0e4c589e8f80ca2cfcc64e13e71bd58cf5941d5af77d435171eacb74",
                    "size": 876446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca85caa701e817a972dbd73d26cba6af50ab01c1f92870c8a7fb1ca6d41294c2",
                    "size": 470
                }
            ]
        },
        "edge-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f924289d23f16137fdd9998c03ab1e80589d38c531abedda9245959e5ad10906",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4d595d7546ac9bacb35a5f1aca6bd051f51e35a6b78094047232984de41519a",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57303db7ddac80d3f9f603c4fbbfbd9ec17ed9edff1cbc145eaaa4b7f3ed167c",
                    "size": 10845987
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b0134d6d5561c40468dd7d8a97540ede5f161058806cea0b2dcfced1fcfbd6",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7942ceee14be497ff20ff252bd004d23df4a8fb56a12b407e07b8d5cbb92f364",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0742c680de31e49a71279ba4a977c454825e513ba34d50dfcfff16083b1ceba3",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740a7baaa028469281c794e030cb04cfe1b5663ed662793f74a465ab57aae652",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b953218b0ce9c1d64ef5d75884daefcfbbe48cd34be155fd4a3d78d7937acf87",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba5e885739887e075c2da2eba15bbef4e6394d7f6e8ead4b338bbf5e737463ad",
                    "size": 876660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e543252b992ccd652c505a2f3208fe7b641e4ff3b471496ba6a2de83670c2000",
                    "size": 471
                }
            ]
        },
        "edge-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9e6467138874d83d8a1df960f907197b3cc672f564d4d52c22c1bf554453c593",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d947c2a98aecc98786ad96eebf9ea3faf06e4dbf524b468c6fd15b1c4f464293",
                    "size": 4057064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78069274d4b31f4c802c9910930c0d930796ef0cac598b0d8967e7035519e306",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e89a10b1dcbd8792312806b4c920baa795df8c6d37154c3b5fdd528e364378e2",
                    "size": 10869491
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf739db9b7e7d4d98a80513cc36ecb42ef568091ad43e5f61bf7ab7d8bd72f49",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f49308a86775a1d9962505a85f20f83ac00036fc09644a2994706c45b8c275",
                    "size": 964
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bb075400eab12d6e9c602f45a707450b6976dcb153e431d508f8c4babac91e5",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1422b612d2eabc87afeac0f02c5487ab1fb920628584c2e6de757bbcafde2f9a",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d470947b876e98338419a417ed66bd12e97772e5cb29588f731090e115a066",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6f05996dff2620269899df0304fab4060a1dd1e84a939672301cf2a206a0543",
                    "size": 886849
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84c2130db00507b3055606f908e3a127dd051def58eea50aabf6e0478207f7c5",
                    "size": 471
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "latest-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f2e88be7663ecf4c2d0f451c3ea68ae18eae1ab76fe38511e2165fad7326715",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33ea85c29102504fbeccaf2080e556ab011e3bdae9ce265a15a2ce1f86a558d5",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:215dfd9a5f4ea62e626f07d2fcbb1184cd840f31fb88df7b2c128a3c36acead9",
                    "size": 10597566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aec9d11ed900b291898bf4ce7d9e1af18a8357a48bf257640eb7cae452e669fe",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5857ab975ab7b29f447d0c965124acf114668187f41d6dee94de0203d3a77e33",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdbf6ba4d206f4d06ce141e22ef81454b9ad97412ad2e68d7d87683678fef43",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0503736455c243b1cbed3fda5582c23170a698be155f99920b743f68f08660f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a724695a5b06c3c97b932fe9c72551f2f0e16ddfbe9fb25b797fa147d8d5de3",
                    "size": 884486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43c008639233d2f2a3850699df606633c0b8556874f8d8a09b566944f121054f",
                    "size": 473
                }
            ]
        },
        "latest-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d882231882d7d19b19d623ee4eaeb67cfb57c30a138904afa42b114644723f9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91263b940ffe7f5b6de5bf396e1e96432a23d242735753e9e5a45e1f776a2b36",
                    "size": 884477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b114132d25e2183f96a417bd33d3c2e9901b9156fca3f3055efeb950eae5347",
                    "size": 473
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed4fd5194f2ffeca064377df5d829b6690a2ee41049757a82cbe621e36c74037",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0535080a327f1f28c2dfe3afa856ddaadf669207507a843abeebc573d55da95",
                    "size": 884482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c3c0d967da5827a4f738d95d709b6e6df0f35ad2e0d7424e7ce4ac164f5965d",
                    "size": 473
                }
            ]
        },
        "latest-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7fb51567cf7d1ab57e178240ebb4b3364ed67a748c95efe06dcd9c80c624ff",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75a1f3ddd15bca3d2cd66fbd9015fd31010a23992a6f1f809e5dcc1761cc7053",
                    "size": 884496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9df358a2524674c3ffcdd51d55fd04f2a2bf10b6f6c875c3d94e855d96c12ccf",
                    "size": 473
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1374ac66364936743d2a44c61ff2984a759241d747d0f29d00c5603bcc23ddd",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:772b388c3211b3827e1e733e7bd5db2fdc33547225c8193b49a800997f30de16",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa5e1000d0253419cdb9542f5542d6dda24ffbb3893b2083ca8798160db7cf40",
                    "size": 473
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:927e20d7f0b1bdd86455ffbe3e49e972c86a10725cd1d15597080d524c3e04df",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13614ffeedb01f2708929cf6da18bd2baf1a8f9f11d8a1e03fa6be8710b7e728",
                    "size": 884622
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c70243ffe120aa800bb06c71fa4181bafdb6bb49598a0176f146676fa32e017a",
                    "size": 473
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:08ff273916afd3d72f2e6b9336f7191e5666c5232cac8d9061c2dfe4752fa758",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76af4cfac548c804cbdd48b0fda0b78ec7c8f7d12e22823786d5edf406e77600",
                    "size": 1195359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bea3a46d1e803891f4bf4c9ea1b13a69593278fbb8a4c70255feb4f59cffbeb7",
                    "size": 474
                }
            ]
        },
        "latest-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1468eee1132593097f2a5819380a4a347967971263976dfc53aa4bd6ee75617e",
                "size": 7009
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b44b4bb6ecd09c7f2f72715cc3fb38db84b752fbba70fe53d0fc95c8e02381",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3270336b6c17e6bdbb04ced6328d5a288adfc6628494ed22b0a88cf427922d83",
                    "size": 10597564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4203df94d26b13e2379449dde4d31ee4934569bfa168f670f89b3fbfb9779889",
                    "size": 168483901
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:889eb0dd46ad19f64e9d64c587c27d3e3358478d5eceddc2751e5f259dd2b14a",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df803e34b51a66ef78eff12716d00cf03faeb28e4d82ce8c0806fcdc240b947f",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bffff0c88096aa4b4d16dfa14aed72cbd463ce665ad80bce0d256e546fdf8a4d",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7aebc4cd47134268339c843e730f746672aa09495dc1e368cd56843836e15dd",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50142511cd0ccb174b93adba0b6e7caf696d18a321beaa5a488c2062ad78d42",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7706d1e09de9a106bdbd4ca593bc31d1bb9d78ca80af71a655b31c068539d4b",
                    "size": 1195281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf507fd2813f6adad3808acca9b14fc0f10f52b28285f4f0c37a8c9abcb0a6a3",
                    "size": 473
                }
            ]
        },
        "latest-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ee0fa594d0b16b1b62629f6d0fedea4a340d8a448ad9251fa8e1a44cd9d4ef1a",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc030cd98997fc27d4e223db44b62df17de32e3eef80da80bfc2c7a4c61b025f",
                    "size": 10597554
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dad08d71779ba951d6928c5789d2ec8b02c6b1da9a15fffa16fcf30378692d4e",
                    "size": 165880166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b240156dcf35b97e783d8d379c7fd74258f35371c496a437412fe62778724285",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1966a18f76f02e402f9ff73562d5bd740d82f9359bb5cb79cfe9e7ee1b93cf4",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10414772caf13db59b65a43b5f06c2b0e3e84528ca82a43c5465b72c50d339b1",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a5404c2746878a14d1b632e36ca055ea19c6a949dea5b253685e8dc3e492c0b",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b563a7401927debff603d2cd8f3b819d858400087111570881d0404ffaef87de",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eb6b72b071f1ba29b1f894eab8d872c2b1e72e2223bdc6c2692c7eda7d59a19",
                    "size": 1195101
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9be0b908e86fbb8e0cf06ba2fd7539aaef5cc113d10316e3c5be4721de107a9c",
                    "size": 473
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3d96be6ef6f4871a43234d3c3adcf4eb9a7db0a293dab151e026f7b137091b6a",
                "size": 7010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9580d64997527049db109fbd0f1b4600f5cac83f73bba5789c9bb0eafae65b2",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe6a33f67913d09734e2512647f60213bbe9a0f931199b644438fe8b81d1c081",
                    "size": 10597562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:baf97d8276b2ed6b100d3f791881ebd69c78add5359a6d7c32349f5f81387762",
                    "size": 165880055
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7007a2dcfe4283464b3035107d5f811b008d8325863af0f3a4a54c0fba28613f",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dca14b2c68306c8603eb6fb04857ed95d304cd83b05552bd5567b496d4175e3",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d35a11f009f4751074d7c6936e8c9f57679beed7af17a6d489b929a055a42210",
                    "size": 271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4ab360fe8c4cd5f2a32b2f0172460e9655a23853a8438ea90dd2967d7fbcd17",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327af6353b537d02a20cd65b8e7daa77462eb1d2855495a6111ac9bfe348faa8",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4e3370b4005bb52d1160ad77aadaac0d6c67ecbfc8600d2183e1b8476ba08eb",
                    "size": 1195102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bee20c2ad673adb2a01b46b5196d23bb92250cb6a8449c2b8e82b09cba4840c7",
                    "size": 473
                }
            ]
        },
        "latest-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:215110a1db722a97f33b646c412f77371eec8895ea8d84aa82dd889dd9604537",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:033ee34af43afb8e325a5cf2bf60d624f4f67f26d8064d0919c79d865dce6577",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d90e8ee7ddb3e34d96b286570fe350c56625bc236cbadffece9506151fd0938e",
                    "size": 10624102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b159afaf942782b9452913e14196bf1c8245a5af5fe6fec9876cbf4ce73ae763",
                    "size": 165857735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3325d1d73bdb9b44152c9144255fff61fd0e7f31cad56b581f6ac4bbc55c042",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:439682e3b05010101d9631031da9fef4db5f0932288b287cbd57fcff8c933e04",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adab6fa4cb6abfa6d479d358e719c0d25d2cf25928e3346d9284574b9963e371",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ccc4b87d165393642cfd6b8fd7281ac264a726e0b5b0274be02704715c3d858",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:547f4ff0f1db9e3b2e2e8e6d27a41ef77dc1c3189b0ad0ee97c2d0e5e107cde9",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aecc9332c4e0c0725df27c6d6cad2bbdc9bc503ca55496426db5c431ed8c980",
                    "size": 1195137
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fdaf733933e1826c239b91e523138f1f3b2c4733c9d3e41cfc4288aa64e351",
                    "size": 471
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ba14f90f6262681788c7fd6a6214ccbd1a3f7e2cf2c8c45086516b3afc773d2c",
                "size": 7012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94bd2f56af27640e137ade6570344fb1e23229df35e929b6bbfa71f25626fdf3",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d3b946b8da7f7261c78d90b94ce6351b10999cf60897f5f77dc7d76a064ce3",
                    "size": 10614236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71646f2f944c680ef1fa23349374fc958ce4043fc6fdeed743b9e5072fa83486",
                    "size": 165909050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2cd8dc22032572e3a90e1b749f5ac49753a8af82cee35ccd69b68308865a634",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bac4ec520ae9edcbbe76a74db69a9472d032d765f8bbde4309be6d6b65a280b8",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f9f1cf1d2b814e9efe2a04fd1326c7dcfc1e9e21918a8694a81418580ab7eb8",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fe10b0add71e565a6ecb5d0b086d7b1a3f6ee780b887c48d76dd3054f7dce81",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5553496e58811583a1ee01100a7fdab45a5d02f79fa504277920bb9ec9f6ba89",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1dc3cd1fb3db74a8bbfb3c09d543b70495d63bdb18b5d40c4bc5d34832bec9b",
                    "size": 1195143
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f88b6765ded7cc4393b3af4ab60cf9bcfb309d039c7f437232370fabe4675cf7",
                    "size": 473
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:186455e5200765e3e3e0c634ae65abeb2c12becfb5068b9f9baf10174cf29940",
                "size": 6995
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f71a12cdac6781df2d7244c2ca86cfe562442e74b5218cfa87bdacfa5d9fa05",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ecd74d87e971ec7f9da7815b13066c62e7b65b0c6513cf771ae6490fcb6c9ae",
                    "size": 10634542
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a08bf201604136a3b80ae1cbbf3a84a72dad40ca8ca484c34189fa457f497e5",
                    "size": 165911595
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157830e962cb25a2213166abac3dcd15a6385889f5078c0d25e7ab207f095c85",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b272a866877981093153daf8f9c649194b9977ca550cf6c8893aca5bfa3d03b",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342eb67824ea458754fe72055a64845f6f263c265a596fbc31ffe7efa319f03e",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3ba0b18df29744091ca06f7afd32b987df7fa4de085e5fb75dbc4cbb656246b",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2084d3b1fb7e1cd23db9ff7edd4529e3b3de97d37c9c2932d315d4db578e94ee",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50face0da80fca3bf2cf46410ae3ee63c0c7544c6ccbf0850291fb3cbceed0b6",
                    "size": 1195365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d09189862882665f0b9ed055dc5d4ddc2311fb5e0884741f99147eec2a32928e",
                    "size": 472
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:08ff273916afd3d72f2e6b9336f7191e5666c5232cac8d9061c2dfe4752fa758",
                "size": 6994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf8f6e662e1d659c77dcd8b286fe83b6219de3494b738e4eb81c7edfdffdf29b",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6c8cb9608297bca651dc0ea88acd47df1ebf5fc63c776caa837058b8701849",
                    "size": 10634543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae5654bd04a461d73194c986ef19c923308feefec99d7849bb7c92c07d042ae0",
                    "size": 167985377
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:03e29c527034b0eb4fca66472e33a2ab45b4d7690a129fbdb792b8058e391d64",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97d0f2b32b0dd7f050589236e7236d0bd22fa5914d7cab667142dc8db2e70e8",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd74f4f12ba36b2a581edd81ed89076fce62341454fa3fef436c3a83025e8921",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:189a33753aeced104310df794f5becc009e71f728fd9f8c72e1d0d8b6d8d8bff",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b8024e05a13c6100c3e1c538817239ddf45609da4f93421aada71d03acbb99",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76af4cfac548c804cbdd48b0fda0b78ec7c8f7d12e22823786d5edf406e77600",
                    "size": 1195359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bea3a46d1e803891f4bf4c9ea1b13a69593278fbb8a4c70255feb4f59cffbeb7",
                    "size": 474
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "latest-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f2e88be7663ecf4c2d0f451c3ea68ae18eae1ab76fe38511e2165fad7326715",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33ea85c29102504fbeccaf2080e556ab011e3bdae9ce265a15a2ce1f86a558d5",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:215dfd9a5f4ea62e626f07d2fcbb1184cd840f31fb88df7b2c128a3c36acead9",
                    "size": 10597566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aec9d11ed900b291898bf4ce7d9e1af18a8357a48bf257640eb7cae452e669fe",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5857ab975ab7b29f447d0c965124acf114668187f41d6dee94de0203d3a77e33",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdbf6ba4d206f4d06ce141e22ef81454b9ad97412ad2e68d7d87683678fef43",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0503736455c243b1cbed3fda5582c23170a698be155f99920b743f68f08660f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a724695a5b06c3c97b932fe9c72551f2f0e16ddfbe9fb25b797fa147d8d5de3",
                    "size": 884486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43c008639233d2f2a3850699df606633c0b8556874f8d8a09b566944f121054f",
                    "size": 473
                }
            ]
        },
        "latest-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d882231882d7d19b19d623ee4eaeb67cfb57c30a138904afa42b114644723f9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91263b940ffe7f5b6de5bf396e1e96432a23d242735753e9e5a45e1f776a2b36",
                    "size": 884477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b114132d25e2183f96a417bd33d3c2e9901b9156fca3f3055efeb950eae5347",
                    "size": 473
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed4fd5194f2ffeca064377df5d829b6690a2ee41049757a82cbe621e36c74037",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0535080a327f1f28c2dfe3afa856ddaadf669207507a843abeebc573d55da95",
                    "size": 884482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c3c0d967da5827a4f738d95d709b6e6df0f35ad2e0d7424e7ce4ac164f5965d",
                    "size": 473
                }
            ]
        },
        "latest-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7fb51567cf7d1ab57e178240ebb4b3364ed67a748c95efe06dcd9c80c624ff",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75a1f3ddd15bca3d2cd66fbd9015fd31010a23992a6f1f809e5dcc1761cc7053",
                    "size": 884496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9df358a2524674c3ffcdd51d55fd04f2a2bf10b6f6c875c3d94e855d96c12ccf",
                    "size": 473
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1374ac66364936743d2a44c61ff2984a759241d747d0f29d00c5603bcc23ddd",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:772b388c3211b3827e1e733e7bd5db2fdc33547225c8193b49a800997f30de16",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa5e1000d0253419cdb9542f5542d6dda24ffbb3893b2083ca8798160db7cf40",
                    "size": 473
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:927e20d7f0b1bdd86455ffbe3e49e972c86a10725cd1d15597080d524c3e04df",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13614ffeedb01f2708929cf6da18bd2baf1a8f9f11d8a1e03fa6be8710b7e728",
                    "size": 884622
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c70243ffe120aa800bb06c71fa4181bafdb6bb49598a0176f146676fa32e017a",
                    "size": 473
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        },
        "run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2f2e88be7663ecf4c2d0f451c3ea68ae18eae1ab76fe38511e2165fad7326715",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:579b34f0a95bb83b3acd6b3249ddc52c3d80f5c84b13c944e9e324feb86dd329",
                    "size": 3331831
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33ea85c29102504fbeccaf2080e556ab011e3bdae9ce265a15a2ce1f86a558d5",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:215dfd9a5f4ea62e626f07d2fcbb1184cd840f31fb88df7b2c128a3c36acead9",
                    "size": 10597566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:674ddc55466b82e8ac811c2884bbbebaffcf718e5c4d804c55a74e6c4c1f3fa4",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aec9d11ed900b291898bf4ce7d9e1af18a8357a48bf257640eb7cae452e669fe",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5857ab975ab7b29f447d0c965124acf114668187f41d6dee94de0203d3a77e33",
                    "size": 270
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cdbf6ba4d206f4d06ce141e22ef81454b9ad97412ad2e68d7d87683678fef43",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0503736455c243b1cbed3fda5582c23170a698be155f99920b743f68f08660f",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a724695a5b06c3c97b932fe9c72551f2f0e16ddfbe9fb25b797fa147d8d5de3",
                    "size": 884486
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43c008639233d2f2a3850699df606633c0b8556874f8d8a09b566944f121054f",
                    "size": 473
                }
            ]
        },
        "run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d882231882d7d19b19d623ee4eaeb67cfb57c30a138904afa42b114644723f9",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0bb4cccb6d40d2c0bcfb1e9c13c08a3331ef2aaa6a463c857fc35f974289dc5f",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fbb87786740beedd28ca6ecd1c88f77915051587a711c1831ea7ed9130b3348",
                    "size": 10597555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ade4726f720dc75628d35f99fedfa3c42817f194641aac9c0779049ee022b29d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92179fa2f32c1808f003f7ccb2f85759f03a6aa98603e088dcf8e8fb319a8163",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38e4f6876a8490090fb57a5ab2617090ebe3ba19593113ba50b2bba6519db04d",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98c8232134a82cd765ef0f12a1dd3458f65f9a58f318012748ecde3fa671f702",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7030292880b9306f23fb9a30b9ca4f2bcdea2b1363350469cfc3e199cac81e6",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91263b940ffe7f5b6de5bf396e1e96432a23d242735753e9e5a45e1f776a2b36",
                    "size": 884477
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b114132d25e2183f96a417bd33d3c2e9901b9156fca3f3055efeb950eae5347",
                    "size": 473
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed4fd5194f2ffeca064377df5d829b6690a2ee41049757a82cbe621e36c74037",
                "size": 6390
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c03dbb20264f09924f9eab176da44e5421e74a78b09531d3c63448a7baa7c59",
                    "size": 3333033
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6d0e2cd094bb68345c65f4f1e603a64c55499d423924e112e7652db3bd78276",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc23c3a82f0d78c4bc4241728cb60f079e8fa67cb1b2a273f2d4367e03bcb873",
                    "size": 10597585
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66ea6269e4d62c85df28a8d1c60b787260acfa86bd38bb02b0de057226e8a9aa",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b087c5b331e41e2363ced3dcd5d34fc02cc8d65d1bcb72fee2df29a1766c5b7",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6aff9cdaa0fdfcc4d21f0b5d244059045d0a5f31adfacecf33e0aa4f7a6c087",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dcb661508bebda8510fffede1fa55e0a0b6a314055188ba5ab1b1a29c301ff8",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:690cdc383e3ae8770336cabc28eb141890d96ca3060c33da4323c58b872ce490",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0535080a327f1f28c2dfe3afa856ddaadf669207507a843abeebc573d55da95",
                    "size": 884482
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c3c0d967da5827a4f738d95d709b6e6df0f35ad2e0d7424e7ce4ac164f5965d",
                    "size": 473
                }
            ]
        },
        "run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7fb51567cf7d1ab57e178240ebb4b3364ed67a748c95efe06dcd9c80c624ff",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:465d4c82d4cd405aee857ae77f18c34d4adeec70ccd252c9ef31f3418586a534",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620a47e3ac32ed2d81aa6649e1d22f0e52502e24eec417fb930ef82470f703d",
                    "size": 10624124
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:853832f46f8b34390633cfd06d783abad24ed728d6b061dd4f9303c1d0d054d3",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cfe01722bab53f77d394d812d29de95551b7faeb8ec82b94157d50d30ca842c",
                    "size": 967
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f827e73c7ad4c48004559d1b83e4c88c26c14f116d67dff258ded9167936ac27",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e255b0b71934a9ea0d4d9448d6cfce528f9d2c8467a87c2c4eeea79ac0c84343",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0981dac18d80dcb092b02c119a0709d0f6cbb6738bc1a4dcee4eb71cf078a85",
                    "size": 468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75a1f3ddd15bca3d2cd66fbd9015fd31010a23992a6f1f809e5dcc1761cc7053",
                    "size": 884496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9df358a2524674c3ffcdd51d55fd04f2a2bf10b6f6c875c3d94e855d96c12ccf",
                    "size": 473
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1374ac66364936743d2a44c61ff2984a759241d747d0f29d00c5603bcc23ddd",
                "size": 6388
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:116725a6910235c767595f4951b248092b3ffc2d2006ee36a23a58d1ba953a2c",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:473207c6f86422f1f5920ce882e3af25cb43f70dcfe403e245fdc8f6720f7f06",
                    "size": 10614263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3022da9cab1fa4d4bb23c8c12dffb44f81ee7069703cf462e9c10cea5cfa65d",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c563163cf0aa112a5c607b4d85982c3c8d331bd9d6b9c997be568a4912411d2",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42cf7409a17674f48065a26bee48f1df293cae55e9edf4c78458f227c3a38330",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1452ad1a4bfb844ffb76cd4b432e72d0946e62fa97b4239700ba6ada61e05236",
                    "size": 666
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba56e7651a6566b5bef1c6afef4a33a492cd52e28b2e6120e4492f0484154bd0",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:772b388c3211b3827e1e733e7bd5db2fdc33547225c8193b49a800997f30de16",
                    "size": 884500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa5e1000d0253419cdb9542f5542d6dda24ffbb3893b2083ca8798160db7cf40",
                    "size": 473
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:927e20d7f0b1bdd86455ffbe3e49e972c86a10725cd1d15597080d524c3e04df",
                "size": 6372
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:584ee6b2a534e40a520ae4f24f1fc4e670a959d71024faab9cb6fcbd8c1501fe",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f7e5460e4371025b5ed6b39187d8675eb1fdd6c735bda14f377d074205376db",
                    "size": 10634552
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff84d060928fbb546eb918a31540d33a25824c1b200cb1596fe267ed0f1cd823",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2cad57f261169b53d2a066898c8eae518d180e355294d3011af68b18df148368",
                    "size": 968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:134d7bcbfd7851433e98cf75da1c03ec8a9e6ad5eb894cb6bebd5df3bd5b0717",
                    "size": 269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdb6bdfac83257922e5aef37df7758a91e31e12e9d8f098f41a6d582828085da",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a9f4c3902a3f71c2ae52057cc9c483f8733e9c441c4d6be146f468b54666b7d",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13614ffeedb01f2708929cf6da18bd2baf1a8f9f11d8a1e03fa6be8710b7e728",
                    "size": 884622
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c70243ffe120aa800bb06c71fa4181bafdb6bb49598a0176f146676fa32e017a",
                    "size": 473
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2321ea187fd98fa8289bef5c105931dac9d9b7574ab72f752ec10f86a76c099f",
                "size": 6371
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b39de5b33961661dc939b997cc1d30cda01e38005a6c6625fd9c7e748bab44",
                    "size": 3333361
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efa858f21d7bcc7b32dcc6aeee32aabb916ca94484fdf7e27ff106ce32edd018",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bce21f435844bae232609f8b12fc7f514d5405e00084d69ba47f552fdfa3ae47",
                    "size": 10634535
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71b1c43334da3b2c355cf5f538f55b873b49f541f6fbe378fed294f7495fdd67",
                    "size": 473558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39b96ae5effda543d1a0b357c212e9ac28aa952d9e0b758e36972e0c312bb7a6",
                    "size": 965
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a13185e466e974231ee8bc0eb97196eab237548f3ffd30e8a0de4d0d9ba4eeb",
                    "size": 268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1683082b8a4a31c3503baca28d6b5b6582ec059a740d61c90a516056d934cae",
                    "size": 665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c28f4445843193bfcd6ca773526f2c996fe9679647a84a1e7319ec7c8f1aafc",
                    "size": 467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a0490f049abbc9b76a87e3193a19996f38b7967dae5ac43e73f1df115fbdab1",
                    "size": 884631
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58bc323bd73fb0b616d9ab87b922ee4a7e3cfa2b94e0b03a79e83af114b1998f",
                    "size": 474
                }
            ]
        }
    },
    "tags": [
        "20231106",
        "20231127",
        "20231204",
        "20240201",
        "20240304",
        "20240401",
        "20240429",
        "3.12",
        "3.12-20231106",
        "3.12-20231127",
        "3.12-20231204",
        "3.12-20240201",
        "3.12-20240304",
        "3.12-20240401",
        "3.12-20240429",
        "3.12-build",
        "3.12-build-20231106",
        "3.12-build-20231127",
        "3.12-build-20231204",
        "3.12-build-20240201",
        "3.12-build-20240304",
        "3.12-build-20240401",
        "3.12-build-20240429",
        "3.12-run",
        "3.12-run-20231106",
        "3.12-run-20231127",
        "3.12-run-20231204",
        "3.12-run-20240201",
        "3.12-run-20240304",
        "3.12-run-20240401",
        "3.12-run-20240429",
        "3.13",
        "3.13-20231106",
        "3.13-20231127",
        "3.13-20231204",
        "3.13-20240201",
        "3.13-20240304",
        "3.13-20240401",
        "3.13-20240429",
        "3.13-build",
        "3.13-build-20231106",
        "3.13-build-20231127",
        "3.13-build-20231204",
        "3.13-build-20240201",
        "3.13-build-20240304",
        "3.13-build-20240401",
        "3.13-build-20240429",
        "3.13-run",
        "3.13-run-20231106",
        "3.13-run-20231127",
        "3.13-run-20231204",
        "3.13-run-20240201",
        "3.13-run-20240304",
        "3.13-run-20240401",
        "3.13-run-20240429",
        "3.14",
        "3.14-20231106",
        "3.14-20231127",
        "3.14-20231204",
        "3.14-20240201",
        "3.14-20240304",
        "3.14-20240401",
        "3.14-20240429",
        "3.14-build",
        "3.14-build-20231106",
        "3.14-build-20231127",
        "3.14-build-20231204",
        "3.14-build-20240201",
        "3.14-build-20240304",
        "3.14-build-20240401",
        "3.14-build-20240429",
        "3.14-run",
        "3.14-run-20231106",
        "3.14-run-20231127",
        "3.14-run-20231204",
        "3.14-run-20240201",
        "3.14-run-20240304",
        "3.14-run-20240401",
        "3.14-run-20240429",
        "3.15",
        "3.15-20231106",
        "3.15-20231127",
        "3.15-20231204",
        "3.15-20240201",
        "3.15-20240304",
        "3.15-20240401",
        "3.15-20240429",
        "3.15-build",
        "3.15-build-20231106",
        "3.15-build-20231127",
        "3.15-build-20231204",
        "3.15-build-20240201",
        "3.15-build-20240304",
        "3.15-build-20240401",
        "3.15-build-20240429",
        "3.15-run",
        "3.15-run-20231106",
        "3.15-run-20231127",
        "3.15-run-20231204",
        "3.15-run-20240201",
        "3.15-run-20240304",
        "3.15-run-20240401",
        "3.15-run-20240429",
        "3.16",
        "3.16-20231106",
        "3.16-20231127",
        "3.16-20231204",
        "3.16-20240201",
        "3.16-20240304",
        "3.16-20240401",
        "3.16-20240429",
        "3.16-build",
        "3.16-build-20231106",
        "3.16-build-20231127",
        "3.16-build-20231204",
        "3.16-build-20240201",
        "3.16-build-20240304",
        "3.16-build-20240401",
        "3.16-build-20240429",
        "3.16-run",
        "3.16-run-20231106",
        "3.16-run-20231127",
        "3.16-run-20231204",
        "3.16-run-20240201",
        "3.16-run-20240304",
        "3.16-run-20240401",
        "3.16-run-20240429",
        "3.17",
        "3.17-20231106",
        "3.17-20231127",
        "3.17-20231204",
        "3.17-20240201",
        "3.17-20240304",
        "3.17-20240401",
        "3.17-20240429",
        "3.17-build",
        "3.17-build-20231106",
        "3.17-build-20231127",
        "3.17-build-20231204",
        "3.17-build-20240201",
        "3.17-build-20240304",
        "3.17-build-20240401",
        "3.17-build-20240429",
        "3.17-run",
        "3.17-run-20231106",
        "3.17-run-20231127",
        "3.17-run-20231204",
        "3.17-run-20240201",
        "3.17-run-20240304",
        "3.17-run-20240401",
        "3.17-run-20240429",
        "3.18",
        "3.18-20231106",
        "3.18-20231127",
        "3.18-20231204",
        "3.18-20240201",
        "3.18-20240304",
        "3.18-20240401",
        "3.18-20240429",
        "3.18-build",
        "3.18-build-20231106",
        "3.18-build-20231127",
        "3.18-build-20231204",
        "3.18-build-20240201",
        "3.18-build-20240304",
        "3.18-build-20240401",
        "3.18-build-20240429",
        "3.18-run",
        "3.18-run-20231106",
        "3.18-run-20231127",
        "3.18-run-20231204",
        "3.18-run-20240201",
        "3.18-run-20240304",
        "3.18-run-20240401",
        "3.18-run-20240429",
        "build",
        "build-20231106",
        "build-20231127",
        "build-20231204",
        "build-20240201",
        "build-20240304",
        "build-20240401",
        "build-20240429",
        "edge",
        "edge-20231106",
        "edge-20231127",
        "edge-20231204",
        "edge-20240201",
        "edge-20240304",
        "edge-20240401",
        "edge-20240429",
        "edge-build",
        "edge-build-20231106",
        "edge-build-20231127",
        "edge-build-20231204",
        "edge-build-20240201",
        "edge-build-20240304",
        "edge-build-20240401",
        "edge-build-20240429",
        "edge-run",
        "edge-run-20231106",
        "edge-run-20231127",
        "edge-run-20231204",
        "edge-run-20240201",
        "edge-run-20240304",
        "edge-run-20240401",
        "edge-run-20240429",
        "latest",
        "latest-20231106",
        "latest-20231127",
        "latest-20231204",
        "latest-20240201",
        "latest-20240304",
        "latest-20240401",
        "latest-20240429",
        "latest-build",
        "latest-build-20231106",
        "latest-build-20231127",
        "latest-build-20231204",
        "latest-build-20240201",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20231106",
        "latest-run-20231127",
        "latest-run-20231204",
        "latest-run-20240201",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240429",
        "run",
        "run-20231106",
        "run-20231127",
        "run-20231204",
        "run-20240201",
        "run-20240304",
        "run-20240401",
        "run-20240429"
    ],
    "configs": {
        "20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.388345509Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.520631223Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.400767522Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.424722792Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.386379792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.519583764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.388345509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:cea3169001ff8c114d2946b6e37474448266e4c091ff763bb732b6b0ecdd4a3c",
                    "sha256:8511770d79aa88ed07a3c1000dd8c5e6761b8812fe5a84de2ab00afb54318df5",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:7d94879af8e1979e6d0363ed899a39a72fceb1d0851adb4188ec41aa5a88222c",
                    "sha256:63f492c7f5a4503ff4e4f76252e9a73b2cd1c6f69d551cf04aa7a6adf4a166ee",
                    "sha256:95e88c375acc611534350d591c731f40a1cfefc95a25bb90fa22778e2251c188",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4d3161e8777398bd42a177d5e078894232efed7a1ebb418d8dc62a8ebc79cf8",
                    "sha256:69faca25e68680215dd8915e95c9f668e6be5e607fcff6dc568d60cd5babf180",
                    "sha256:6d30bf5aa7e9ea4d6f75efedeff6df91e3f064c5798cddde5580e2a8c54490a0"
                ]
            },
            "variant": "v8"
        },
        "20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.673224829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.673224829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b3a8612c7960695fde07b7ef38519a0f7f61859e937131a7250fbeb41e42ccf5",
                    "sha256:a2fbb914179d2459863a279d36871c7219e63fec201bbbb6f289274fa92e6a26"
                ]
            },
            "variant": "v8"
        },
        "20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.960667253Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.960667253Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:5c00383d854434b338b53f86b3c470a4c32bb8ad82c8db26e3b941226d0ced42",
                    "sha256:f91d95298a975349623f27dd9463effd7d4b74143870567b6745358e66ffd88a"
                ]
            },
            "variant": "v8"
        },
        "20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:03.637549969Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.637549969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:9aff0815dc9027f75219dbc593f78b7b1c180e5d8fdd88fb2da1d87066691227",
                    "sha256:72417644adaf7aa4866a299a9f6ad7bf5759d45ac643a11511b5198629acdfe1"
                ]
            },
            "variant": "v8"
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.50391899Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.50391899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:7e84d2b37271dd126b2e2261a454be3be2e8ee9bf47f0fe30111de4b9089bdde",
                    "sha256:c85c115c38295986894b87e9e51ab16c2d33d123fa7d36a345e80abb7d94e00f"
                ]
            },
            "variant": "v8"
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:01.124872367Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.124872367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:8f49d715223ebd719fe9788ddd3785d78c5d30e9ee4c23b5fd3c2d805a0e89be",
                    "sha256:b46d1e94d3cd228c9a8887a82607356eb000de7d2029de678fa0b164026b1e7f"
                ]
            },
            "variant": "v8"
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "3.12": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:39.97981091Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.97981091Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:7d7c7c84ea55db7ebb5195f0aa1bdb8f47a249387af8adcceaf97334d4ebe76c",
                    "sha256:414cfeeaae88e06939a00a34ee5088993c2e450d9fe934348ccfb300d90a520b"
                ]
            },
            "variant": "v8"
        },
        "3.12-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:33.840393616Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.621664552Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.621664552Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.621664552Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.072313878Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.726644187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.726644187Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:44.736514277Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.744975949Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.753607964Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.753607964Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:45.344814884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:45.465383225Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.702176171Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:33.702176171Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.840393616Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:cad4c9bad84a86b6fbe16b41ccb2654b33f7d8b28d69c4fb96a2f4a20a70c88e",
                    "sha256:57c1949119e76735dd8ffd12cf5af9a9491a905d3d93f794ab16f0a1f1ba6467",
                    "sha256:08bc2f314762f82617a84baef2b0a30ef4afbca01738cdced69508ccc0b2cf38",
                    "sha256:64174bc538e4493d56b2389e3bc646b84bf29b6e3b848c33af2e1d3809787add",
                    "sha256:1d0802f473c692f31939ad8d3e39bb2ff6a5c86f8252ea01b3779159f61876f7",
                    "sha256:f4f62276c8fffae24fcf29bffecf71cdc414ffcc50420d45b5019f5cf5196296",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2c1e08892425e2f47060bb70bc5d1af49a28378423477c7bfb2a6a291c09f861",
                    "sha256:28f5b78002dc1e8f4b5f8c3a8cec6cd3a3bbe015d04264ebd4a8e20a7bba333d",
                    "sha256:415551bd36b44aac55290394d4d1034f13b8506f2228a141ac253c88adb0e0b8"
                ]
            },
            "variant": "v8"
        },
        "3.12-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:35.666764648Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.964514877Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.884234985Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.893657341Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:58.464040655Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:58.573042753Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:35.557560372Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:35.557560372Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:35.666764648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:a5b2d84231cb49047e21c341b2b2f865fbd472a19534714b3ed2f1af4734fbba",
                    "sha256:0eae052f40dc29f2255645515bdffafb35a97ffa3ac334db9213d6f3294dbd87",
                    "sha256:98a85f136bc6ad9a1fa2ec0b422d1f7339d9cf6acdfc4762de115252c10c3d8d",
                    "sha256:3bebbbdb0478c895789760d8232bac4b6295108ddb5201ec4e6f263a4e7ece64",
                    "sha256:a3bec3cb520934c4f3fdd9bf9fbffcfef4203be8999d2b6c23337a48de59da88",
                    "sha256:c1c3ecb70549b72f53e3855bed52be6413e9f1ff99c4f3256490668bf18c7c74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2429c8b839dae6579c6088b8970b6aa53650e3829fe4c16938d3b54c5982f425",
                    "sha256:c0d71992b3ff7a43e8a0bab8b9cea9e3c26e402b7d8807408a9e43cb6af4f03b",
                    "sha256:2ffcf2ce0ae986e6b11004356af46a5d8f1c636c29b7e8a5906acc5c70a27f06"
                ]
            },
            "variant": "v8"
        },
        "3.12-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:57.509981414Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:47.394549332Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.209047991Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.217582661Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.842175856Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.95907778Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:57.390354223Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:57.390354223Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:57.509981414Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:0b3c5898be9ce9028c12e6d3da8baea3f2990bd8dbaf90d8d388ef711bc0f9b3",
                    "sha256:26dc65654abf30fcdf82b59a1c73d90391cd2dbeae5c1c1bb4d998b69c8b48c9",
                    "sha256:46956f605c1647c6e9937752e67e786dc42d2af8566ef2b0f778b6507ab1c652",
                    "sha256:0b6bbfe5ff95f5e7a83bcaf23bbb42ca6d23949033832b861cf97f27e62b3ebf",
                    "sha256:13f355db23cf796472c87a95eb074c951ae8b7c36736423db05e4882c5f5af2a",
                    "sha256:9294a66c9c9db832569559d6e394d7f860cc9a46013139e4ef367ed6047c0fae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d74112973233879b541ba90a036afe8411715a078a6bc5cb9306a234a3fe300a",
                    "sha256:37d3a1bc23972de0501ae05074566dac2f81500f5bd0f99db5a1c86d8f2bb6e5",
                    "sha256:816831098fe8c1770df61e7ed7d93cde347f6b0ed625a46eab57e21aaffd5d75"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:55.503641862Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:39.949012498Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.427262796Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.453029838Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.01925081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.099711458Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:55.41558822Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:55.41558822Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:55.503641862Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:89d8efdd504d9f2fadb2b1f0df5adff77b8ec12f01370b1895d8a7a954a750b3",
                    "sha256:6ed779304d72f427061166e5701f017bf33c12afcd617cd7a6550c7245517608",
                    "sha256:5b71eae92d9fae27d8f85ed2a43d2d8a04af22dd0b46b8a248cb9739492eb388",
                    "sha256:ab752fe64d69515f5613043a57c7bcadadad80f07bdae29d5e25922a148cbb2a",
                    "sha256:9395fb388b4c3c75548dce27fcb2d3c28088b725bac2ba0838147d8ace749b43",
                    "sha256:aa5cee052ee3673f60c8c26d0caaf5802c92d681614fe5a225aceacf73b3bfa4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b1883183c859953b5b2c80dae8f407817de7f3595a51448b86c1a52775c8fea",
                    "sha256:dc259cf2d2f36acceab8f62d27ebfe164fea4f0d33c0e359c0e2e54e1c65c718",
                    "sha256:e665b7fa16b287853cc2a9d800bccccc2e1be9588a45b3cb5ef37e8cf1ceb7ea"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:36.787772953Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.187487124Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.945580538Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.955510726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.54347434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.627679546Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:36.717922505Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:36.717922505Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:36.787772953Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:6dc952d308da28d1a8478c1971e9b22a8801943d0df69bce478229ee054d09ef",
                    "sha256:19824869b955baa1311534a5013ea34b4cc7d094074689e28554e4d3bd49a338",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a70efab3e8ac0316c97eb99ce320d48d8ba29182146478a477214f0e5c4d819",
                    "sha256:21ec70c497e248ec540deee6404cdd7ee4ac5658176032764fe293d15fbbfb19",
                    "sha256:1c58f76e96f214af1cd75cc1d5bfb6d384168a2c51109043a22b0e8bcc1c13a6"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:06.930911064Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.051114059Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.637825364Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.667069431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.208930134Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.288845915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:06.852951083Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:06.852951083Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:06.930911064Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:c194541055416c9b27c5a9fa9af6fed6e2bf1b8396183c510d7930b4ecb04937",
                    "sha256:3efdc4fd0bfce3b2dbe4826879fcc937c42771716cb3aa5b6e859766e2fcc211",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:dfca87d870c26b8fce6eb62db5bad3213c7dd6951ae1bd381eaee4d5888ee594",
                    "sha256:734157304bdb05f3e2441b26d8970e9cddb60f550c82e1ef444c38092c8cb667",
                    "sha256:592d5d4de6cf241517de8069434aabbfea47636eedb78d69c91168c2b81c8614",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:95a47e9fe272cae8079ccc10063d57572373872e408df9229f27fb2157831147",
                    "sha256:018d8b143cdc5d55e23ea0cff8e978506a46362e810d611f4cac8f1f33c1ca0a",
                    "sha256:99ae456480b4586a9683034ee5358e96aec3eff3550db52fc17fb0e4a3f0dfaf"
                ]
            },
            "variant": "v8"
        },
        "3.12-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:39.97981091Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.97981091Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:7d7c7c84ea55db7ebb5195f0aa1bdb8f47a249387af8adcceaf97334d4ebe76c",
                    "sha256:414cfeeaae88e06939a00a34ee5088993c2e450d9fe934348ccfb300d90a520b"
                ]
            },
            "variant": "v8"
        },
        "3.12-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:45.328377391Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.702676093Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.071468958Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.728190657Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.765102603Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.241036859Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.336576806Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:45.25230099Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:45.25230099Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:45.328377391Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:9bbe355a7c34ac989ef11665c4fe070a07f4dee23c66818c368395864b85a6d2",
                    "sha256:a1320a697a9f47be74dc7e8d6a6531cbd56bf5b348ee85093a93aa699ec83641",
                    "sha256:2ef1dc2b8b653b03f13cf28ce48df440f5f0cafc043e273217bfb2b877d370a0",
                    "sha256:4d47a8c0edbdbba8f50facaa55d18ee32e3ff41394f7fa4cd312ef5cf1254403",
                    "sha256:c692b9f4ac81ef8699cc5d6e72c90e5ed1755e99ab4ab76b94019e61327b9474",
                    "sha256:daf36de3cc49824eafe7055efd6fb22f9f1b5983e77c19f5a11cf21bfcce9384",
                    "sha256:4290a86a8107fc4f77fe1bbad7e16cfdc39f67b342049d985c3f94f3811bdaea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3305c9ec9792089640e44f7fbe491ad47f9581a433083cc592a5550e7f8438de",
                    "sha256:9330ab49f1c5852c6cf625def7a8cc88f0fb4605ae13f666017f0db1d837c8d4",
                    "sha256:24449a8caaa56f649a2a3cf8aaa14a4cf928a9271661c9a6949976e8a9264ddd"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:30.390062427Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:50.42780734Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:50.42780734Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:50.42780734Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.173799165Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:25.215519774Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:25.950103884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:25.950103884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:25.975682461Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:26.00840496Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:26.029878324Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:26.029878324Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:26.760634823Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:26.900569644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.282884417Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:30.282884417Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.390062427Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:57815a9e2faaef2acb55dc3d53aec454e9dbe2b1e6d4ceb2b5c783d40fd895d0",
                    "sha256:7ce1c3f1ec1c007ea480d56ab1f71d9ea11a0fe5aed5768f31038a09c64b1877",
                    "sha256:4161ee02f5d734cbfc76cbcb99882b0e77c08830a2057bb36bb750ad3eb40a7f",
                    "sha256:50456656e9084a14e93207ab2edbc0d55f6d57b956ba5c17ce098e3456991eb5",
                    "sha256:2a612f9f095c3139be7db6e4881ae7d63be707a9eefb1eb417bc7a90ec047ef5",
                    "sha256:89c74a1ef252b5bf8cd202def68c26aac432f292fafe752ac93bc4cdd1122a33",
                    "sha256:a0f8174efde092ae33bc9e1658a073214ab10f4fc895b28835def8ea344c7d73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:932987b8ecd7a424b9163cb24c8abae0d5adeddfaef7a18db01849b7951c7f18",
                    "sha256:bd6904202a5f229176446dd21345d768d7aaf8e9f0385452fa8ab21592c2da01",
                    "sha256:33785187b21318770aaf019d8013a8bbf9003c96bd67b84e661ffaf5f7b0a5e4"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:50.149936049Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:53.316103473Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:53.316103473Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:53.316103473Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.986416826Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:18.696457317Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.709231677Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.709231677Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:19.719811209Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.729731566Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.739797471Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.739797471Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:20.224602203Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:20.353170032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:50.018694019Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:50.018694019Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:50.149936049Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:9c7422b18b56e09ff0a6ced3c017c383caec45d5ab69c8f7624f0f9ff85bdefa",
                    "sha256:d281157bb738bd82d2ac71548567fa0d16dbcac31ba69093138461087d273886",
                    "sha256:808079f3e251b158068d8ecc599d0a24b0eeb0c697239edeeef63cce3759323b",
                    "sha256:6c624d8b5acdddc979457c8d9c4d696d53e58c02146c9d9f0b92e6df614a46f5",
                    "sha256:73a46a9453eccbe7e5c31ebb2550866e9da391b9ab5fb0101cbdd81bdb3b53b7",
                    "sha256:474429173c06f0cf98e3616b7728cbe1653eb3e943d57244e1e3eeea5a63157c",
                    "sha256:922ced96ffc5a6ea8b6e9d16bd1e61c1c8ea07e7cf483d213f23ffa7d0030140",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c0c49733b00a92997a069b5472841fcc694729955989ff8e9bc16bbf7ae0b01a",
                    "sha256:c56c84471d1ff5ed319023e8f12c35d9fe61ce887cc6e4bdb60b0e5428e7eedc",
                    "sha256:de24f330dd06b39b8b25c1c28d2791cfe4ed46b4aea4a4b1d8ba62718b3055b7"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:03.959448771Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:37.931938139Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:37.931938139Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:37.931938139Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:40.948164783Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:00.840943293Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.489796261Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.489796261Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:01.498384889Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.506362927Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.515032128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:01.515032128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:01.971997762Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:02.075280365Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:03.883527461Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:03.883527461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:03.959448771Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:878df8539362f022dbf637e99b194bc736bcdd394846e508cea5dc299add646e",
                    "sha256:c8fc766a6d2ae091d5b9a261348275486de43b97304aea78acfbb6c79af7a103",
                    "sha256:a14206a31e44c4d4feb57833d34c3bd09030da513d3490c90ea224adf8cbcee3",
                    "sha256:248465e3e59d120eda0805a8dadf8c70e3379bced1cf57043433eb3ba051a964",
                    "sha256:63b948a52144654dc1a406613efe16120fe01167372670a401170f5eba226700",
                    "sha256:d7c36254ca015c9da8938f91175a891671cc43d6ea58da22c32bff1efb85a609",
                    "sha256:f92119e0494a413378fa89101e54124ffc5fa1140a43b67b7ba667f9bce4d4b6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f96805330dd6097e665d885e821359e45e87c701a254ec9ee850e7c3b95481f0",
                    "sha256:4190927e01b2a78843ed2d1fd5b50868470638218462bcd55f12a72c61ae88ae",
                    "sha256:788f12b8e749fdd05afe17f0a9819f2646c39b297ca2ccc5dcd239f8ff3e4282"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:05.158102129Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.286621893Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.286621893Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.286621893Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.451398062Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:57.778512097Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.242994454Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.242994454Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:58.253038776Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.305574982Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.318789317Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.318789317Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:58.762925474Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:58.858734677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:05.069028219Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:05.069028219Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:05.158102129Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:a6a07255d881e3ff48b8d1da057a9c6d1242064a37d8853727d902b699dc2804",
                    "sha256:72aef7904220805eb347d4aff8d18fabe576390c155d8f7d640d3465dad9373a",
                    "sha256:33c1c9e14762c82f48799983f5bec8e604c9e624e2f64641be961e00b08a9ac8",
                    "sha256:48f0ca393abec099513169d4520473f3e87b13e1d75ba83fc028e8f1652b813b",
                    "sha256:f1cc64e52ebc8a3ec43c16fb6e0b4019aa53f9619d1d331655c58f12da6c1141",
                    "sha256:60bf40f6226b426337e62d5de0c93a8594cbfd059137d3e0d42925051b2fbf3c",
                    "sha256:d2f8d9b62d14f6fed2dec8532db621d76853a2faa6891f4b6bbcc16c8103bd9c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:eb245992d18bd063981c8384e03a412a1b4b27799fd2247870a8c8ddd898fed1",
                    "sha256:574654a7ccb8ca61cf13adc3d9acf235830cd6e5df7f2fd769ab48c7f8af7df8",
                    "sha256:61b1b91bc2db47d1453a0228a714fdeea00bc2b6e01d4fad49609648c1a8800a"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:37.835459569Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:03.88128869Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:03.88128869Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:03.88128869Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.27561676Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:24.794066817Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.312090396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.312090396Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:25.322987615Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.359138065Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.367943527Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.367943527Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:25.832685351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:25.925618925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:37.758253471Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:37.758253471Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:37.835459569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:3541ccb864521f306e6d94fdd25f1cf068236583b88a50cfbfeb9c436678e709",
                    "sha256:21b9904769ac83052b46f797b672c4b25d689fd4c40d1c26f2d7c366817ee990",
                    "sha256:554f0be06818b8264eb7c6655716513f5ee6ab5a14f575f5a87381e39075aa29",
                    "sha256:ae018abf42b419e8d5c29c288245d4da167137707f1d3afa6588406340296a0d",
                    "sha256:8166558bb079b0c6bf6a354d9d1439bc45cac473c2786c38f5529dd680510699",
                    "sha256:a9550925deb67cb14e9cf775c24eab89e64066c55b7a1085acd2d9d661db47cf",
                    "sha256:295aad41d8b40faa2a3b31289179a73ebed9ef74d610c599f7d3fd57a8056cc4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:15a58994f6008159b2b6580204f02012a4670a59312bd996d2799fb7be900237",
                    "sha256:ea5f97b370459ddd5d996336964137b2711f4e90fba4a289e39320f9da40a9de",
                    "sha256:425968bf7df7722d907b205b5e0244851e2e0306a06dead67fdf75884281896a"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:05.54195318Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:39.422028286Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:39.422028286Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:39.422028286Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:43.71908829Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.392593336Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.877169798Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.877169798Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:04.888110321Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.914515996Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.928173036Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:04.928173036Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:05.374058862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:05.456279011Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.460857261Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:05.460857261Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.54195318Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:271fd6e90a9e5c65a4cd9d46ca2448a010bd9ddb5a1212f87eb36ae6910b0e77",
                    "sha256:a9335d73c48f66c552a09bb9ee35a7cbd0adaf0d2b4f13c63eafbbdf9b5fa529",
                    "sha256:3c9e5b9fdae562c6ab10e03a05e00b8b585949288ca7761d6d69c2bfa63e2efc",
                    "sha256:50eea92b0ac6bafb43ebf6cc63a6f294b0bb9818bccf901670216bb359791082",
                    "sha256:dd49d536f7fd96ece4ef699dfa9071f040374bcc6f3c9515dcafe1636a63cbe8",
                    "sha256:bc9aae1acee18c0a489575ebd589b3396a1170d1ff56d6e84a485ca3e5a2d92b",
                    "sha256:7f39ffe00b175f92e32ac9ce38e59b4af55c89726d1e87d81dd01c8c56322875",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a6a813196da06a0d8d43fd9115549d9864485311f0b1382290555361bd0bfbc",
                    "sha256:eb94290bcf12e39f242fee9710853039dad6965f5487a57860bae3e4efed982d",
                    "sha256:f2bdc1b20141412b2f6a40f36359c8a3c2f177159d2484addff1aaedf9d4dfab"
                ]
            },
            "variant": "v8"
        },
        "3.12-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:45.328377391Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.303709909Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.702676093Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.071468958Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.71910895Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.728190657Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.765102603Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.774742885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.241036859Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.336576806Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:45.25230099Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:45.25230099Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:45.328377391Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:9bbe355a7c34ac989ef11665c4fe070a07f4dee23c66818c368395864b85a6d2",
                    "sha256:a1320a697a9f47be74dc7e8d6a6531cbd56bf5b348ee85093a93aa699ec83641",
                    "sha256:2ef1dc2b8b653b03f13cf28ce48df440f5f0cafc043e273217bfb2b877d370a0",
                    "sha256:4d47a8c0edbdbba8f50facaa55d18ee32e3ff41394f7fa4cd312ef5cf1254403",
                    "sha256:c692b9f4ac81ef8699cc5d6e72c90e5ed1755e99ab4ab76b94019e61327b9474",
                    "sha256:daf36de3cc49824eafe7055efd6fb22f9f1b5983e77c19f5a11cf21bfcce9384",
                    "sha256:4290a86a8107fc4f77fe1bbad7e16cfdc39f67b342049d985c3f94f3811bdaea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3305c9ec9792089640e44f7fbe491ad47f9581a433083cc592a5550e7f8438de",
                    "sha256:9330ab49f1c5852c6cf625def7a8cc88f0fb4605ae13f666017f0db1d837c8d4",
                    "sha256:24449a8caaa56f649a2a3cf8aaa14a4cf928a9271661c9a6949976e8a9264ddd"
                ]
            },
            "variant": "v8"
        },
        "3.12-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:39.97981091Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.97981091Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:7d7c7c84ea55db7ebb5195f0aa1bdb8f47a249387af8adcceaf97334d4ebe76c",
                    "sha256:414cfeeaae88e06939a00a34ee5088993c2e450d9fe934348ccfb300d90a520b"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:33.840393616Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.621664552Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.621664552Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.621664552Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.072313878Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.726644187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.726644187Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:44.736514277Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.744975949Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.753607964Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:44.753607964Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:45.344814884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:45.465383225Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.702176171Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:33.702176171Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.840393616Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:cad4c9bad84a86b6fbe16b41ccb2654b33f7d8b28d69c4fb96a2f4a20a70c88e",
                    "sha256:57c1949119e76735dd8ffd12cf5af9a9491a905d3d93f794ab16f0a1f1ba6467",
                    "sha256:08bc2f314762f82617a84baef2b0a30ef4afbca01738cdced69508ccc0b2cf38",
                    "sha256:64174bc538e4493d56b2389e3bc646b84bf29b6e3b848c33af2e1d3809787add",
                    "sha256:1d0802f473c692f31939ad8d3e39bb2ff6a5c86f8252ea01b3779159f61876f7",
                    "sha256:f4f62276c8fffae24fcf29bffecf71cdc414ffcc50420d45b5019f5cf5196296",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2c1e08892425e2f47060bb70bc5d1af49a28378423477c7bfb2a6a291c09f861",
                    "sha256:28f5b78002dc1e8f4b5f8c3a8cec6cd3a3bbe015d04264ebd4a8e20a7bba333d",
                    "sha256:415551bd36b44aac55290394d4d1034f13b8506f2228a141ac253c88adb0e0b8"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:35.666764648Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.358167048Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.964514877Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.871925038Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.884234985Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.893657341Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.904177748Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:58.464040655Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:58.573042753Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:35.557560372Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:35.557560372Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:35.666764648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:a5b2d84231cb49047e21c341b2b2f865fbd472a19534714b3ed2f1af4734fbba",
                    "sha256:0eae052f40dc29f2255645515bdffafb35a97ffa3ac334db9213d6f3294dbd87",
                    "sha256:98a85f136bc6ad9a1fa2ec0b422d1f7339d9cf6acdfc4762de115252c10c3d8d",
                    "sha256:3bebbbdb0478c895789760d8232bac4b6295108ddb5201ec4e6f263a4e7ece64",
                    "sha256:a3bec3cb520934c4f3fdd9bf9fbffcfef4203be8999d2b6c23337a48de59da88",
                    "sha256:c1c3ecb70549b72f53e3855bed52be6413e9f1ff99c4f3256490668bf18c7c74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2429c8b839dae6579c6088b8970b6aa53650e3829fe4c16938d3b54c5982f425",
                    "sha256:c0d71992b3ff7a43e8a0bab8b9cea9e3c26e402b7d8807408a9e43cb6af4f03b",
                    "sha256:2ffcf2ce0ae986e6b11004356af46a5d8f1c636c29b7e8a5906acc5c70a27f06"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:57.509981414Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:41.58784995Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:47.394549332Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.199271027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.209047991Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.217582661Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.243274128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.842175856Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.95907778Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:57.390354223Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:57.390354223Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:57.509981414Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:0b3c5898be9ce9028c12e6d3da8baea3f2990bd8dbaf90d8d388ef711bc0f9b3",
                    "sha256:26dc65654abf30fcdf82b59a1c73d90391cd2dbeae5c1c1bb4d998b69c8b48c9",
                    "sha256:46956f605c1647c6e9937752e67e786dc42d2af8566ef2b0f778b6507ab1c652",
                    "sha256:0b6bbfe5ff95f5e7a83bcaf23bbb42ca6d23949033832b861cf97f27e62b3ebf",
                    "sha256:13f355db23cf796472c87a95eb074c951ae8b7c36736423db05e4882c5f5af2a",
                    "sha256:9294a66c9c9db832569559d6e394d7f860cc9a46013139e4ef367ed6047c0fae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d74112973233879b541ba90a036afe8411715a078a6bc5cb9306a234a3fe300a",
                    "sha256:37d3a1bc23972de0501ae05074566dac2f81500f5bd0f99db5a1c86d8f2bb6e5",
                    "sha256:816831098fe8c1770df61e7ed7d93cde347f6b0ed625a46eab57e21aaffd5d75"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:55.503641862Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:36.567957949Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:39.949012498Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.418808559Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.427262796Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.453029838Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:40.462204331Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.01925081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.099711458Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:55.41558822Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:55.41558822Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:55.503641862Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:89d8efdd504d9f2fadb2b1f0df5adff77b8ec12f01370b1895d8a7a954a750b3",
                    "sha256:6ed779304d72f427061166e5701f017bf33c12afcd617cd7a6550c7245517608",
                    "sha256:5b71eae92d9fae27d8f85ed2a43d2d8a04af22dd0b46b8a248cb9739492eb388",
                    "sha256:ab752fe64d69515f5613043a57c7bcadadad80f07bdae29d5e25922a148cbb2a",
                    "sha256:9395fb388b4c3c75548dce27fcb2d3c28088b725bac2ba0838147d8ace749b43",
                    "sha256:aa5cee052ee3673f60c8c26d0caaf5802c92d681614fe5a225aceacf73b3bfa4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5b1883183c859953b5b2c80dae8f407817de7f3595a51448b86c1a52775c8fea",
                    "sha256:dc259cf2d2f36acceab8f62d27ebfe164fea4f0d33c0e359c0e2e54e1c65c718",
                    "sha256:e665b7fa16b287853cc2a9d800bccccc2e1be9588a45b3cb5ef37e8cf1ceb7ea"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:36.787772953Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360725553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.187487124Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.935354446Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.945580538Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.955510726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.989421135Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.54347434Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.627679546Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:36.717922505Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:36.717922505Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:36.787772953Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:6dc952d308da28d1a8478c1971e9b22a8801943d0df69bce478229ee054d09ef",
                    "sha256:19824869b955baa1311534a5013ea34b4cc7d094074689e28554e4d3bd49a338",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a70efab3e8ac0316c97eb99ce320d48d8ba29182146478a477214f0e5c4d819",
                    "sha256:21ec70c497e248ec540deee6404cdd7ee4ac5658176032764fe293d15fbbfb19",
                    "sha256:1c58f76e96f214af1cd75cc1d5bfb6d384168a2c51109043a22b0e8bcc1c13a6"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:06.930911064Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.621323832Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.051114059Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.628009019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.637825364Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.667069431Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.676724271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.208930134Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.288845915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:06.852951083Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:06.852951083Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:06.930911064Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:c194541055416c9b27c5a9fa9af6fed6e2bf1b8396183c510d7930b4ecb04937",
                    "sha256:3efdc4fd0bfce3b2dbe4826879fcc937c42771716cb3aa5b6e859766e2fcc211",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:dfca87d870c26b8fce6eb62db5bad3213c7dd6951ae1bd381eaee4d5888ee594",
                    "sha256:734157304bdb05f3e2441b26d8970e9cddb60f550c82e1ef444c38092c8cb667",
                    "sha256:592d5d4de6cf241517de8069434aabbfea47636eedb78d69c91168c2b81c8614",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:95a47e9fe272cae8079ccc10063d57572373872e408df9229f27fb2157831147",
                    "sha256:018d8b143cdc5d55e23ea0cff8e978506a46362e810d611f4cac8f1f33c1ca0a",
                    "sha256:99ae456480b4586a9683034ee5358e96aec3eff3550db52fc17fb0e4a3f0dfaf"
                ]
            },
            "variant": "v8"
        },
        "3.12-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:39.97981091Z",
            "history": [
                {
                    "created": "2022-04-04T23:39:53.434744204Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a2a992b7f6af1e6f8f5648f329f4a4058d8c4377417ac23ae211290c0cdc8f4b in / "
                },
                {
                    "created": "2022-04-04T23:39:53.555422536Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:56.669362713Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.204536356Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.021043238Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.035186972Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.071575958Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.084333928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.666640559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.12   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.753126702Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:39.901210839Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:39.97981091Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.12 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d80e0208345a5c0e0e5575f11f35d99a179bcdfec9a075828e774145c0245eb6",
                    "sha256:1b87bdc0fd381cd542843b12ef3042718bd4a2310f69224ead36e966a8ff45b9",
                    "sha256:ac86fe6d2c2d2b147a854a76cdc8641d09389562b4e60c623e8bc03c98d78e51",
                    "sha256:be7b0e82027522f2d92eb7eaef4189f4a2ef675560f36584b632f7f9200a649f",
                    "sha256:cf0de42326131a473db93d317c09191adffba5f4a3baf5953aada1e393a21f85",
                    "sha256:4b0180d410edf76e56b0229ffee5a6bb32d21e322ec5a02272b57b5064685495",
                    "sha256:cdadc7d73e6aac9dce3380208715e92deabbfb44f942789ecd0049c2bf78a368",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:472530068993624bdb4cbe392840d385d350891404e7412cf7d2e6a299de30f1",
                    "sha256:7d7c7c84ea55db7ebb5195f0aa1bdb8f47a249387af8adcceaf97334d4ebe76c",
                    "sha256:414cfeeaae88e06939a00a34ee5088993c2e450d9fe934348ccfb300d90a520b"
                ]
            },
            "variant": "v8"
        },
        "3.13": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:40.554767879Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.554767879Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:707ba9b86e155766bcb5e68c0c24f1c3e22595785d72afb2f576f59a5453214f",
                    "sha256:899b8ba5e88aecd1c43ecc818448574f0fa5f06d9e54eb13502e9dbefeb4695c"
                ]
            },
            "variant": "v8"
        },
        "3.13-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.311080534Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.080095981Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.080095981Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.080095981Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.546754838Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.433739426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.433739426Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.444674836Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.45697556Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.485353146Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.485353146Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.369587857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.514204714Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.191328638Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.191328638Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.311080534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8b0657c26d62e4fad16976ec687b38d7d170ef5f7797b50106dc1ceb09b12269",
                    "sha256:4da19a70e08ebae38235672618dc93fd5c8ec59e5b527bab792c2bfdc861c092",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:909259f8f1d47c4e771e816fa69268a81de30c6d051aa362ec383ce289165d3c",
                    "sha256:2bca309541faf8ce37a12342ee9b3b528ff16c33777fd0e44fb67d4ac9a95e4b",
                    "sha256:d2682a9d36707df5edc2445f2779c1c7ecca2ef7f2e8ddf47bd097a5cb5104f0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ae504ad005bee2ae8af3a0733729a1157d5e3e6ce3ff61aaa846a3630fc48a7c",
                    "sha256:ec7ed18876d5f0354a1c610ef9008785493307c73b74f12586a1d5874f26e6cd",
                    "sha256:b2f642d217cb365c1e50a1921c300a3d71ef5d85ebd1b1ea4c9af551f651f32b"
                ]
            },
            "variant": "v8"
        },
        "3.13-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:43.819061821Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.528797628Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.106355174Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.11375246Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.699294455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.800488145Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.69678716Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:43.69678716Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.819061821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:b62835df51dd17f551e5538a1a65369c2badbaebecd4871460056c3f30a74e2d",
                    "sha256:51d1631aad6fcb12c7a95975a1d754caa377d9f92074b7171de6f25bc4df1e76",
                    "sha256:370de0a6a18146f05fe3af7702c1963191c47c89e416faa0dd0c271d311cc187",
                    "sha256:4dceee5c6b96c57b40464bc652e1b0fa44b453ab8fa698d8b994520a79d0e493",
                    "sha256:836aeb9c5ef44d4e6b1db67b81a65c4c1424b9db7b50226b3ebea6f4da858749",
                    "sha256:6a5346977bbbf75ab5679d985947f09c73624cd174f63f109110fab7f56f32a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8983bbf1524c5824bc5b97f3823ca0ff3f5f9dd650318512fe161f3f2104362e",
                    "sha256:6a4d8029c43115cee45cdbda9ce92d1c9e01dd48c13795b93fc015a709f08756",
                    "sha256:f01e6d0c8f908e897d23e04494052e322591be33a0c34924157a2f771c464561"
                ]
            },
            "variant": "v8"
        },
        "3.13-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:51.576475618Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:56.863685878Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:57.762114286Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.770943526Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:58.441174747Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:58.5371236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:51.470654724Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:51.470654724Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:51.576475618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5eb3c4bcb7cfa011d00506b5ffef6c31a67c2dd3f9382056d560331040ad7eed",
                    "sha256:7e1e7b0b5a28f5848b430224ebe0503c4b7b4c25b1ae65b6ea27ffdd80986aaa",
                    "sha256:f6a43efe761ec6bef274c134227dedad927c524a075de18e1b172437fb7fe3ec",
                    "sha256:29c6273356158142b44074613128eba1ef149d60f0b0890650660b32adfcc1ac",
                    "sha256:0ae563fac5351053d1806e699284bac86a46da101c3848b206f373ec16ee9e58",
                    "sha256:fd45a2a0be2d1e15e25f55a5c53af796199bbe8e6bf17fda1cff0686a61236d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c81c53057e2f507ba45a5426b445dea2fe197ede7b8f345b16b55d1ce0684c22",
                    "sha256:e1374bbf3bf1dc23f6b9760ba0f64351e11f001e57403c23dbac31af3f1c4d7b",
                    "sha256:2d12af1a25afd63e14b71ab11f72d51b75cf5e0b04e57dbbed5892bdebaf6f9f"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:52.774782932Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.834301143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.292180121Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.311403856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.813877508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.902838866Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:52.699851821Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:52.699851821Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:52.774782932Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5fbe060049cc1f0f8c87bb0b04ac43dffceacf667878acb8ec5692983f7053fd",
                    "sha256:78b0c37883cf908621b19db1f0aa69ab605bd8c72823a37903584a1ad93bc151",
                    "sha256:2062f4b9c8a396c6d1ddd1302041ada9cf7ca917cdfa1e844583ee441744607a",
                    "sha256:13f3bca77808d9795c6eb3747d970949ea75fafe78eeb966ae0d42ad38264ad3",
                    "sha256:2b5d4db0676f79866b856a362ddb734a2795389c411ae84b285299af703690e2",
                    "sha256:85cfec31723270db06ce718c1366fb8bf149379098af3289d1a229cf732a0771",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22701552b2d556b0e105a4b70aa7ffe8b55756f15db7934582b8526e6e313dd6",
                    "sha256:fba4ce8cbc55a17af064913fac91a6535084cfcdd12702cd37134ee9652f5a47",
                    "sha256:8ea66098598a1027965332dc69e0fbb414ddc3ebf82ce97ec47137fc14b94fa4"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:50.030327756Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.275486556Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:06.753597894Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.788060646Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360005546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.448097006Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.94771425Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:49.94771425Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:50.030327756Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:d3b394049c09acf9487f922a916d6bbe543cfb3ff82424f1841c575c05416fcc",
                    "sha256:a0b5919752f68e73e13389d0b9aeee7fd528c209c6ab0371399bf00004003c93",
                    "sha256:a5f763b40029663bfc55a676b801db80b2681f40747e5e2916506d5964206ac3",
                    "sha256:00ef40b9017cfdb6983e571c7647338267b28ed2bd3cecc7e2eac40707a2ef66",
                    "sha256:310c0d80b732f333f7707a99d95f10485388043f201e0c3a7f22a0272501fc8e",
                    "sha256:7b035d07c22c1c94d655e187fb41b5f33bf7e12766d684ffc30f261a2e22f6be",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ff5a48c298e404afe8fffeaa3ce35e0d0ea70cf52b454b504bb74316ec8db350",
                    "sha256:3d05b7e12f72952d85ad353a5eba2a3c7a786e998919ae7116f54f85206d64c6",
                    "sha256:fd183ccb9575585883e7fa9b799bea6fed351691d6aa98dc4ec695cf40a997b0"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:02.144242713Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.093715176Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.989331351Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.997095499Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:56.473201897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.581648639Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:02.062954595Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:02.062954595Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:02.144242713Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8612c4245e6da33b34db157add4e185506c3003c4724329366b72de559f69ccb",
                    "sha256:acdc2d6c29cf2394d2a14e5b4ab6f0729ee503890c8509c0bed21eee53cc1d22",
                    "sha256:6ac9b958a6d5bd47f46163ac332f0473b4ae1ea1072dd8d2415edd4f8b26d6e2",
                    "sha256:a97fe0538c520f1164b2e6fbff130ce309c2cc24a670b53827667b4f360a1102",
                    "sha256:0ac027e6cdc5c005f4f0f93c74da7b3f741c27bed2a6f37790ab71c254502720",
                    "sha256:e4897c27aeddfa6e623ec01d98ce2d1e040808902869115b7256d7a1eeb2e9c4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b03ba8359c6e7a9f3710b2fa3f0692917fe57a2530c4efc5c7f70a311399368",
                    "sha256:292361e1b95d8e8825d756a2af1fa5c8a4a4e2bc253ec3bb9e7f6ba81eae568b",
                    "sha256:8f3bebab75fe770662d3633e126c249e6fdf21273a80b6cd5df2e3b439304185"
                ]
            },
            "variant": "v8"
        },
        "3.13-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:40.554767879Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.554767879Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:707ba9b86e155766bcb5e68c0c24f1c3e22595785d72afb2f576f59a5453214f",
                    "sha256:899b8ba5e88aecd1c43ecc818448574f0fa5f06d9e54eb13502e9dbefeb4695c"
                ]
            },
            "variant": "v8"
        },
        "3.13-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:56.733825586Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:57.103265546Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.036391323Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.727202158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.787711772Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.267936765Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.355977086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.66085954Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:56.66085954Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.733825586Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:a264368fabf41c94c612dfc1e615c7c3952e42044c41d4f7c76cd53f22e58d74",
                    "sha256:f811d8e87538a57c0abe61204627fd9e23db874378abdc62087a6e595c9e1432",
                    "sha256:9a95d337373efbb697e3e394385c86f2429ec4152e79c9f92ab9800876f913fe",
                    "sha256:589eb99b49b3fc04a8f1be9841e2c861c5e81754b95f49adff7494febb665654",
                    "sha256:16934b278b1a90ed578ab30b22c1a8176889ebb4519e7267e4554a0fc22e55f5",
                    "sha256:f19898c5dfeb605a4beed27bc8c08a79066a38e764f19623313404f273ae103d",
                    "sha256:7dd6a2967ef7e83f5decafa31195534eef20d8eee29d71ecb76752c274248d37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:022561cb16a0979e8a40bd35fcfdcd60999e63cb52c05acc9c07872624ce8089",
                    "sha256:640256b395e23fd5e820614d6cf34c92d7285ef965c8c97f8502dd0f61e1d5fd",
                    "sha256:28f34f6f6c0a2048d41e4ff41fe9e04b20c8fce94696ff92e9ae2cf164977b9c"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.769132245Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:39.440845373Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:39.440845373Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:39.440845373Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:43.441412673Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.048474368Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.717211804Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.717211804Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:06.726826658Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.734950163Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.74277894Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.74277894Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:07.201951906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:07.302561427Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.67485352Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.67485352Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.769132245Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:05f52a4450886f36ca6fc9e03e8590ca8b2c0c4c1ba6a8471272014f7fb4f28d",
                    "sha256:80937ff9a00c7f9fe20574ba9fd468ec7f4e3b26a7ea44a81c7e37cc17b2689b",
                    "sha256:893aa81cc95838a391ebfbd88b5f1b017330062bcb4a31f33426cc637412a6a1",
                    "sha256:e00c4adb5927329a376f14c8fd66425fb515c3c568d90fbe8470264a49337948",
                    "sha256:fd82e002ac9adea8c6dab97fa8b28f880daeb99f2afa44445fd662c89a1e6500",
                    "sha256:9a155666f20a8135db899f38c1099eb72edf3d8e0997d12b00f0398b0adf6529",
                    "sha256:51892c4b46f4ac30524646e0b6af092f28fefb6c5cd021dfdae3d613864a3de0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c06f03a048c263c3ad855861eca9de02fba62cb308a340a8db6b997e0b69ea44",
                    "sha256:95ee474bc43c0e3c2964069d0688b7d06f411bcc31c2710ba8cd819baa4a1e28",
                    "sha256:c98c0342b0a984617c08813cd11454bb446c5a5d2c82e4a2a43567669de539bf"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:49.282535471Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.489612478Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.489612478Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.489612478Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:59.169460718Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:27.26530017Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.260481167Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.260481167Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:28.272134602Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.288060379Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.298720268Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.298720268Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:28.767164129Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:28.87896795Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:49.168105976Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:49.168105976Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:49.282535471Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8035a2675dcdd22d2f54bcd71df2f61dad6a2bc404e641accfc62b56ba19b6bb",
                    "sha256:130a2a67e2c828887dcf93f8371859647bddcacfa2ad0c9a4d5dc1f16a6ea3e7",
                    "sha256:40f4dc8586cc48efbc0d756bddd7dae8aa01c47ec29a765b16c47d475d796182",
                    "sha256:23578f369e4004943c275663a678be856c5228ea4362eed9fd1076437545a349",
                    "sha256:c7c59db0d1ac488382458d2c405ccfce5519b26eb01f1ede36a56ee351fcd77a",
                    "sha256:e8bcb895b2c7cc9a5953688c86ba4c703b40ee91c04949ca70322f7c35b7a80c",
                    "sha256:b106a66ec08db331d2b6415e2bf4a64765a091b9aabff51f8746fc4b11c289c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a5332cdb9c424ba94da23df12268964160815836606047f6a3afd91f527c32f2",
                    "sha256:351ac06e65a08c4c81363550b4f1e7b421a675f7028022f87b7e468b8dc1c98c",
                    "sha256:14023561d0ab476313498b9678a950a16934c133a3471a6621a0bb37fd48925f"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:56.559537493Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:36.198997416Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:36.198997416Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:36.198997416Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:41.350482389Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:07.46870915Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.0694083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.0694083Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:08.078886647Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.087979778Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.117468723Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.117468723Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:08.584141369Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:08.671534779Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:56.447562033Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:56.447562033Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:56.559537493Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:19aff3418f3f3ab6f60f1347b07da35b2f0ab61208565fb8d630935bdeec3e1b",
                    "sha256:bddb1095036986fe4d79068502259b0a371b3011d0faf82e2ff0f0e908e6cef3",
                    "sha256:5a2abcd1f02c367a221b7e391b69dfbbdef5938a19de94a1d1112f0d201ddf5d",
                    "sha256:5fd5af594ab43dec962c34a24b99506eb89d3b5f049e815e7c9fcaa169512dbf",
                    "sha256:4d0e8e66dd4dbf0be382e2d90fe0bb9e84cd6afc27820ce635179b262846ed8b",
                    "sha256:cdcca36c6fd2a15c7f68e7dad962ee2b959780d79503e70bcaaed28f31f85d06",
                    "sha256:e79d58bdfc8f33606583c9f0fee9d24babf73b761adc4d27a426a64634c658da",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4a485a77153dfd33e394a1d9374e3d89ad8986111eca6172dabcf36211e1bf27",
                    "sha256:59e7720a73b26294c9ce17069e60049874388a7f3fa48c61c478c43ff8c5dbad",
                    "sha256:167f1cbed80027c8e161a417a94c49a243412a06039e66c6cd9ae5f8e449b316"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:08.328459263Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.164308819Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.164308819Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.164308819Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.858055775Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:04.664561855Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.152165498Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.152165498Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:05.169214134Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.215860506Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.235555071Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.235555071Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:05.715280902Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.826104816Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:08.245837322Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:08.245837322Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:08.328459263Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5fbe060049cc1f0f8c87bb0b04ac43dffceacf667878acb8ec5692983f7053fd",
                    "sha256:efd6a06fb10644f8f9a6b4aed513019336d8cb532352f4953ef2bac33e0c0571",
                    "sha256:bc7b85cd7b33324465caafa981bad31c916f0305407523c684750edaecbf1520",
                    "sha256:60d8d66e0e0a22c1ba06d91045f66b54321c0519dce7ea0f3bb02156d5ac84d5",
                    "sha256:af59f6431bfed89e492837d6a9e0ec285eebb1d00287baff83621e6a9e9e83e3",
                    "sha256:16a57156ff0ec24a802457c19e8af35111359862a029fdf636710a14114e0749",
                    "sha256:d388901cdaf65719d9ea4e305348de0e4b4ab3a968ababeed983f7b04790fc8c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7cb41bc70381ffdb0a87d73d87821f42baaa55d0c74f70cc152923425899577d",
                    "sha256:2a647406da5a406c09b1db41b72fd4d8dd3d6ccd6efc7f45a21bd5d1cea9de25",
                    "sha256:f4980b39d8a884abfcb61ecbaf8eafe3344edefc4a23eb60780cc83a2c57c016"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:40.747639867Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.300493645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.300493645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.300493645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:20.735261494Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:46.331203729Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.177253819Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.177253819Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:47.185949821Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.193531603Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.224583708Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.224583708Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:47.723362194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.806799338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:40.663519433Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:40.663519433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:40.747639867Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:b75b8ffc576c7a07d9a162669d383116635bde8867859d4a176ae31374d42de0",
                    "sha256:0dbf009533e194e1f67e5bbcbb65c4057dfb26990a77c335b3f08ba9f332e01f",
                    "sha256:f4b2ff5e49184e0e9f9159dbe9ff927229730f3000ee09d9d85c312b7569700a",
                    "sha256:a04cef2cb7573d2b987619bb6f5ba60274fa7d459c5fbbafc88d64eec7367ff4",
                    "sha256:3aec3e290926a2ba6e809f4d327d412bd8bdadb8a7aaea42ad176f4f1e33744c",
                    "sha256:d1e53c45c0dead4dda725a6fdb9051caa159e470c1fd2553da2c761cac196856",
                    "sha256:01e581b73bae40496a9f4cb5fe98c0c7b229aea6539e5337539f8c15e9df823a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ebb061eed61bd11653594e814d77e78e20bfebaf0ef35cd4e46291dad0fd4cb",
                    "sha256:aa799fa3bdacae0f28f9380c97707d22ccdc6c1d05e1083672cb303acbd37fd2",
                    "sha256:004cd67fc40a973fa7c3601de96e41c174bc183871dcbff0b544f86d1504a212"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:05.272045343Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88489769Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88489769Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88489769Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.081831725Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:28.560332754Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.532078596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.532078596Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:29.541295836Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.585552891Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.596150637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.596150637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:30.03906388Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:30.138638463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.193720009Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:05.193720009Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.272045343Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8612c4245e6da33b34db157add4e185506c3003c4724329366b72de559f69ccb",
                    "sha256:b7cf8287e8b3460ae5232b83c170be62d8a6c3748b11e0f017bba2483f7e3b95",
                    "sha256:4135d1758bba4fecc0d2fb00fff210086969ae82d5ab1ef81275111196082bcb",
                    "sha256:69bc67a142eef08f4e9c0e64a09aba1e31fb34aa4926a88f262fe7b5395c4f1e",
                    "sha256:476b7477ad56af9eb293d5c39668b189c76f3e25e5e0661b896601caf8bfe058",
                    "sha256:0f64208f780e059705384c768aebb083ec32257f6cf9c1923c631aa70a4fe2b7",
                    "sha256:8c3c22aa239a2378e9c16c70a16db2a87df452a608747929b2550b7ea33febf6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ecac496bf8947a3c12ca3b526916691b4bc03c78a38d191d1d644439ba29e6f6",
                    "sha256:74a0855c98c439e7602a115f59747eeddef023d8ea6ef7682f05fa8ef91818ed",
                    "sha256:0872bded83a5dd8eb553c9c5ba3b188a17037cc3bf6b9847ddb1087b1549a0c3"
                ]
            },
            "variant": "v8"
        },
        "3.13-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:56.733825586Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:52.636065878Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:57.103265546Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.036391323Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.717892095Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:22.727202158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.787711772Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:22.79890571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:23.267936765Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:23.355977086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.66085954Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:56.66085954Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.733825586Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:a264368fabf41c94c612dfc1e615c7c3952e42044c41d4f7c76cd53f22e58d74",
                    "sha256:f811d8e87538a57c0abe61204627fd9e23db874378abdc62087a6e595c9e1432",
                    "sha256:9a95d337373efbb697e3e394385c86f2429ec4152e79c9f92ab9800876f913fe",
                    "sha256:589eb99b49b3fc04a8f1be9841e2c861c5e81754b95f49adff7494febb665654",
                    "sha256:16934b278b1a90ed578ab30b22c1a8176889ebb4519e7267e4554a0fc22e55f5",
                    "sha256:f19898c5dfeb605a4beed27bc8c08a79066a38e764f19623313404f273ae103d",
                    "sha256:7dd6a2967ef7e83f5decafa31195534eef20d8eee29d71ecb76752c274248d37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:022561cb16a0979e8a40bd35fcfdcd60999e63cb52c05acc9c07872624ce8089",
                    "sha256:640256b395e23fd5e820614d6cf34c92d7285ef965c8c97f8502dd0f61e1d5fd",
                    "sha256:28f34f6f6c0a2048d41e4ff41fe9e04b20c8fce94696ff92e9ae2cf164977b9c"
                ]
            },
            "variant": "v8"
        },
        "3.13-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:40.554767879Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.554767879Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:707ba9b86e155766bcb5e68c0c24f1c3e22595785d72afb2f576f59a5453214f",
                    "sha256:899b8ba5e88aecd1c43ecc818448574f0fa5f06d9e54eb13502e9dbefeb4695c"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.311080534Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.080095981Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.080095981Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.080095981Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.546754838Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.433739426Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.433739426Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.444674836Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.45697556Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.485353146Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.485353146Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.369587857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.514204714Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.191328638Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.191328638Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.311080534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8b0657c26d62e4fad16976ec687b38d7d170ef5f7797b50106dc1ceb09b12269",
                    "sha256:4da19a70e08ebae38235672618dc93fd5c8ec59e5b527bab792c2bfdc861c092",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:909259f8f1d47c4e771e816fa69268a81de30c6d051aa362ec383ce289165d3c",
                    "sha256:2bca309541faf8ce37a12342ee9b3b528ff16c33777fd0e44fb67d4ac9a95e4b",
                    "sha256:d2682a9d36707df5edc2445f2779c1c7ecca2ef7f2e8ddf47bd097a5cb5104f0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ae504ad005bee2ae8af3a0733729a1157d5e3e6ce3ff61aaa846a3630fc48a7c",
                    "sha256:ec7ed18876d5f0354a1c610ef9008785493307c73b74f12586a1d5874f26e6cd",
                    "sha256:b2f642d217cb365c1e50a1921c300a3d71ef5d85ebd1b1ea4c9af551f651f32b"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:43.819061821Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.448621721Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.528797628Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.097679598Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.106355174Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.11375246Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.121276619Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.699294455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.800488145Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.69678716Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:43.69678716Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.819061821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:b62835df51dd17f551e5538a1a65369c2badbaebecd4871460056c3f30a74e2d",
                    "sha256:51d1631aad6fcb12c7a95975a1d754caa377d9f92074b7171de6f25bc4df1e76",
                    "sha256:370de0a6a18146f05fe3af7702c1963191c47c89e416faa0dd0c271d311cc187",
                    "sha256:4dceee5c6b96c57b40464bc652e1b0fa44b453ab8fa698d8b994520a79d0e493",
                    "sha256:836aeb9c5ef44d4e6b1db67b81a65c4c1424b9db7b50226b3ebea6f4da858749",
                    "sha256:6a5346977bbbf75ab5679d985947f09c73624cd174f63f109110fab7f56f32a7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8983bbf1524c5824bc5b97f3823ca0ff3f5f9dd650318512fe161f3f2104362e",
                    "sha256:6a4d8029c43115cee45cdbda9ce92d1c9e01dd48c13795b93fc015a709f08756",
                    "sha256:f01e6d0c8f908e897d23e04494052e322591be33a0c34924157a2f771c464561"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:51.576475618Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.930600104Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:56.863685878Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.753073588Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:57.762114286Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.770943526Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:57.780245058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:58.441174747Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:58.5371236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:51.470654724Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:51.470654724Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:51.576475618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5eb3c4bcb7cfa011d00506b5ffef6c31a67c2dd3f9382056d560331040ad7eed",
                    "sha256:7e1e7b0b5a28f5848b430224ebe0503c4b7b4c25b1ae65b6ea27ffdd80986aaa",
                    "sha256:f6a43efe761ec6bef274c134227dedad927c524a075de18e1b172437fb7fe3ec",
                    "sha256:29c6273356158142b44074613128eba1ef149d60f0b0890650660b32adfcc1ac",
                    "sha256:0ae563fac5351053d1806e699284bac86a46da101c3848b206f373ec16ee9e58",
                    "sha256:fd45a2a0be2d1e15e25f55a5c53af796199bbe8e6bf17fda1cff0686a61236d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c81c53057e2f507ba45a5426b445dea2fe197ede7b8f345b16b55d1ce0684c22",
                    "sha256:e1374bbf3bf1dc23f6b9760ba0f64351e11f001e57403c23dbac31af3f1c4d7b",
                    "sha256:2d12af1a25afd63e14b71ab11f72d51b75cf5e0b04e57dbbed5892bdebaf6f9f"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:52.774782932Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.223461123Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.834301143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.25062037Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.292180121Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.311403856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.322783255Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.813877508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.902838866Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:52.699851821Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:52.699851821Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:52.774782932Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:5fbe060049cc1f0f8c87bb0b04ac43dffceacf667878acb8ec5692983f7053fd",
                    "sha256:78b0c37883cf908621b19db1f0aa69ab605bd8c72823a37903584a1ad93bc151",
                    "sha256:2062f4b9c8a396c6d1ddd1302041ada9cf7ca917cdfa1e844583ee441744607a",
                    "sha256:13f3bca77808d9795c6eb3747d970949ea75fafe78eeb966ae0d42ad38264ad3",
                    "sha256:2b5d4db0676f79866b856a362ddb734a2795389c411ae84b285299af703690e2",
                    "sha256:85cfec31723270db06ce718c1366fb8bf149379098af3289d1a229cf732a0771",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22701552b2d556b0e105a4b70aa7ffe8b55756f15db7934582b8526e6e313dd6",
                    "sha256:fba4ce8cbc55a17af064913fac91a6535084cfcdd12702cd37134ee9652f5a47",
                    "sha256:8ea66098598a1027965332dc69e0fbb414ddc3ebf82ce97ec47137fc14b94fa4"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:50.030327756Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:01.940076265Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.275486556Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.742252965Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:06.753597894Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.788060646Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:06.800003391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:07.360005546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.448097006Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.94771425Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:49.94771425Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:50.030327756Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:d3b394049c09acf9487f922a916d6bbe543cfb3ff82424f1841c575c05416fcc",
                    "sha256:a0b5919752f68e73e13389d0b9aeee7fd528c209c6ab0371399bf00004003c93",
                    "sha256:a5f763b40029663bfc55a676b801db80b2681f40747e5e2916506d5964206ac3",
                    "sha256:00ef40b9017cfdb6983e571c7647338267b28ed2bd3cecc7e2eac40707a2ef66",
                    "sha256:310c0d80b732f333f7707a99d95f10485388043f201e0c3a7f22a0272501fc8e",
                    "sha256:7b035d07c22c1c94d655e187fb41b5f33bf7e12766d684ffc30f261a2e22f6be",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ff5a48c298e404afe8fffeaa3ce35e0d0ea70cf52b454b504bb74316ec8db350",
                    "sha256:3d05b7e12f72952d85ad353a5eba2a3c7a786e998919ae7116f54f85206d64c6",
                    "sha256:fd183ccb9575585883e7fa9b799bea6fed351691d6aa98dc4ec695cf40a997b0"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:02.144242713Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.947205505Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.093715176Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.979526002Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.989331351Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.997095499Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.025510344Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:56.473201897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:56.581648639Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:02.062954595Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:02.062954595Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:02.144242713Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:8612c4245e6da33b34db157add4e185506c3003c4724329366b72de559f69ccb",
                    "sha256:acdc2d6c29cf2394d2a14e5b4ab6f0729ee503890c8509c0bed21eee53cc1d22",
                    "sha256:6ac9b958a6d5bd47f46163ac332f0473b4ae1ea1072dd8d2415edd4f8b26d6e2",
                    "sha256:a97fe0538c520f1164b2e6fbff130ce309c2cc24a670b53827667b4f360a1102",
                    "sha256:0ac027e6cdc5c005f4f0f93c74da7b3f741c27bed2a6f37790ab71c254502720",
                    "sha256:e4897c27aeddfa6e623ec01d98ce2d1e040808902869115b7256d7a1eeb2e9c4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b03ba8359c6e7a9f3710b2fa3f0692917fe57a2530c4efc5c7f70a311399368",
                    "sha256:292361e1b95d8e8825d756a2af1fa5c8a4a4e2bc253ec3bb9e7f6ba81eae568b",
                    "sha256:8f3bebab75fe770662d3633e126c249e6fdf21273a80b6cd5df2e3b439304185"
                ]
            },
            "variant": "v8"
        },
        "3.13-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:40.554767879Z",
            "history": [
                {
                    "created": "2022-11-10T20:39:56.523308612Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f23c059b4312458fbf0fc018d4695f36157a3eb6e5a83167912a39f9a738f4eb in / "
                },
                {
                    "created": "2022-11-10T20:39:56.601468255Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.887559115Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.056090887Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.879003122Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:08.938940126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.947336199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:08.955585545Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:09.430958749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.13   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:09.502482749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:40.478363273Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:40.554767879Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.13 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:de51348d431b23f0be552f83fe8efd4504db8a384d5d6efc9e01550958e09fd5",
                    "sha256:43195c4cc8658c229296090b6055e1e9d3561ec49f72c96ceba822cb9df4b286",
                    "sha256:7835b25a6a4b334d659d2a7a57e5e1386f8657237618b80373d2bc05a2210c97",
                    "sha256:888146503c2ce79bf5844d684776836da44ccdee62a7625df38d338573664f80",
                    "sha256:689fe0fc4e573418dce5c44702236c6f44652477369391c0aa93116deb8cfb0d",
                    "sha256:8e8f4886b5f78a6855cf2873deac0ab3793843246fe8c39f2258ff5660c312c8",
                    "sha256:aabc34e890b29bfb58745a0f34065ea9c456152ae3814407c04dddf27f988bb0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec4948ec71c5cf8812dea1b6c6e8646956eaf5fe126f2e69cb12f0d1e1bb2742",
                    "sha256:707ba9b86e155766bcb5e68c0c24f1c3e22595785d72afb2f576f59a5453214f",
                    "sha256:899b8ba5e88aecd1c43ecc818448574f0fa5f06d9e54eb13502e9dbefeb4695c"
                ]
            },
            "variant": "v8"
        },
        "3.14": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.904870199Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.904870199Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:5780503a47a45b303bf8d18ded45043f538e3b482963a282cf43e7f58695c963",
                    "sha256:aca5c284b3211c1e366cd2da855bd3faddfa0d97db1d5cc0bc66426821ff0d04"
                ]
            },
            "variant": "v8"
        },
        "3.14-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:35.555013539Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.441353942Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.441353942Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.441353942Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:05.155333937Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.337887989Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.337887989Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:06.355018674Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.390888952Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.406957631Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.406957631Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:07.311545008Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:07.444429365Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.411416642Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:35.411416642Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.555013539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:15b6270799d69a2b5d600f3afc9102469cf1ac5d8eccb7dd7793e7106268656a",
                    "sha256:b73bea17b29cab4acac009b1fd84ebfd24b7c2961ac5fd194abc1e95378d21bf",
                    "sha256:f78d5d9a5cf524e9691c27d8108953219d071abf466a8ffdcd0dcb722d373d1f",
                    "sha256:ab9391c0247a6c2caf9e3dcbb2e07dee81738291ee31b5df92232f0c754ad488",
                    "sha256:6fbb10c69309fb9b5b7032104f9e883404cb4dedf57c01d19d8a3657deb8f539",
                    "sha256:58a6488b0b1d2c4f6c2c3516866d389c84587d39e1722ac4f2373308186198ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2ae4a9d9fab9e0340d2bd783178fdda6735b283a0102f051f612de4d236ceed0",
                    "sha256:4c5dbb3cab6e4043da4e23778eadc0f3712cebd7d2ee9ca475fb6a88b8e267d7",
                    "sha256:bf78255903432b7b7f1220551cfbc2402dd8acb87d5a5a75860d3f4c47db273e"
                ]
            },
            "variant": "v8"
        },
        "3.14-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:41.192506511Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.418566901Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.841920283Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.850244033Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.319754213Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:51.435156183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:41.056718681Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:41.056718681Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:41.192506511Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:dbe9aa81b9052a0a1d464eb0978ea756cbf66fd127ed18a7f6e388469fc053ab",
                    "sha256:9330db15193cf28ae6da8140c96a68726e45a624924e425f913274fbf45b0779",
                    "sha256:4a0a1ce73e81974250b996f31eb443593cb2b3f68544822378f529bd8245f762",
                    "sha256:34ad31bcc05e107cf3ad401f69453826e04677109bb1c518039b0e10d6b7c13f",
                    "sha256:6dc548d9319b468480e2c1a55b32c0fdc917404875bab8c1a917e43b92a3522b",
                    "sha256:a3484f1fb3fbdfdfd19401893d7561c4ebbf2f2378a4f77f3512ee7672b0f03d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46ef77d5c06fd317892cfb35090082458fec1fe16bfe40a3de6f83ab89654df6",
                    "sha256:ea9e30bdffe93e07823aab8564541a5a74ff2b041a7db3cf879cbf4f012a7293",
                    "sha256:ec236dc2c2134e157aa53a504f23a9e45ea4321d5215c1659f12e5e948a127ad"
                ]
            },
            "variant": "v8"
        },
        "3.14-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:58.853578625Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.282490291Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.176257511Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.185562057Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.909143713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:55.02138485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.740081749Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:58.740081749Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.853578625Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:9ef7c6952d9cf8db1bd83fc80ab71d71cc0a1ca1a6db04e54c136092da93d0ad",
                    "sha256:b1a92b46ecd2ed6082ae17094e900f649bcacf7f279707a2e58829ea579cc514",
                    "sha256:09cb0a63c8617d64d6d1a853a455d14af59c554c999096649ad5e12e6254318c",
                    "sha256:1e7afa1f8af8446cb87b4955b2d60dd9f37c886fe41efbc692d92adc7439e1f2",
                    "sha256:70787d6742b03deee653f079b8b6a65837ea5e35a2af5d0d66618b94873370d4",
                    "sha256:6868a578331f6033b1879542e01952b06e5c20d0e22e89372eb5cf45c8be9e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b0f4150ad57aef2046e51155118260f4f5f6da7398f5b5c79179898584515326",
                    "sha256:7b0073fb8c94959e8aa254161d14c331d264fa78871b24b71df3bd325e430a71",
                    "sha256:a0439527bb205afccbccb652b921e5c72a5293cc896b356ea9ff334a056b6ef9"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:56.613617547Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.258730022Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.147742376Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.187483495Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.65150525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.752429636Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:56.531733681Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:56.531733681Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:56.613617547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:1123baef93b38bec742c638af1a98568897a3b2bf9f8793a50f51e80bdb37002",
                    "sha256:d60b65741522ee713ed1000d9f908bc70b5717bff9d6c2a80d196c1ad6844b6c",
                    "sha256:d68a3d9c29db65ac346134f44d5c58956ee121966d391eb0a9df714e1fdeb15a",
                    "sha256:f3c5c7e591c77dd3d3b2cbe61d5996930accf22ad3d6e0f5fc9006e0880ad6e2",
                    "sha256:1878ec63542dc70febb473b1d8d27d1d7dad7e07dbff97c1a3e9b1f6ba2bdf31",
                    "sha256:ddef8bc06515f2d3e7f2a213421666b41cce48d447257621bbf0b381ede01813",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46cc807e964d723a32b01a3a179148f57552041464cc17ea1e2301dfc7552f9b",
                    "sha256:e83f22f716f8fe3eef8f3c256e7f10c49ca3ea03ccc0a074f977f63557c63be2",
                    "sha256:02bd60a09741e6fd81003b876980ecbaac87720706ea289165f9bf15c1a0cb42"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:43.440708055Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:10.639226678Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.227773848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.267891501Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.761523927Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.848943859Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:43.356606758Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:43.356606758Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:43.440708055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:bb74e7471a678f340a4554a2ed8900d2aa7c87197d6286c749eedad02379c60d",
                    "sha256:8fbc34a55a8b4fe5fc12ac2c110bf2225ad6389467ff7eb328bb026c39b80002",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b12139ae1b2072c814b8d50eb226161c1279b867a4cb4cdbf40bfb411d04c65",
                    "sha256:af8dc7f8d9639d12d475f72d37991903748962d0e2bf273e123e97e7669f3d55",
                    "sha256:dcb50ca5c02206d3a3393931c082ca7d7555f04d2f2ffe50b4444e7f0f520ab8"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:14.411006317Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.309081373Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:01.877688088Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.887166317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:02.371110918Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:02.459096485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:14.332092403Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:14.332092403Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:14.411006317Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:3c55492053b115aa2e1d424ad228bd17d034b101be03c97dfc814a0e853ff8f4",
                    "sha256:7460907b41f9518562b95e86e55dfe30e58fbe6fd5d6c70874efb5a25de5f7ff",
                    "sha256:332ce1aac2561b68d72229b0f7a17470bf3b4698e836acbfff1fd673cecfe418",
                    "sha256:04a00af8dcf481c7df6da66f3ec43a47419a1c42865d1c8925b9ea063abf7c89",
                    "sha256:5d7bcd3447c16053f1889cb4ddd5ba212cd202f4965a7c293a9afdfe2bd5cfa4",
                    "sha256:213e5bee489cb7c2f790dbbd361cc10040916dfe4255b4bfd673c1713a963256",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b51be10095cbd5634f1889197d5135de7a6710be707ea4b795ee79e9cba70bc",
                    "sha256:09799cef99059c9cf40be3610326189efed11fe33d3ba39532feb2584fe92b00",
                    "sha256:661b3311658e99cd614d2e9e4cef81b069684020ee31c684aeb0d8fd4b9a849f"
                ]
            },
            "variant": "v8"
        },
        "3.14-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.904870199Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.904870199Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:5780503a47a45b303bf8d18ded45043f538e3b482963a282cf43e7f58695c963",
                    "sha256:aca5c284b3211c1e366cd2da855bd3faddfa0d97db1d5cc0bc66426821ff0d04"
                ]
            },
            "variant": "v8"
        },
        "3.14-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:56.543490473Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.082174906Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:16.972560389Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.442445373Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.490909943Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.974591815Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.067947167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.470274734Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:56.470274734Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.543490473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:42da25a692484966fef2ec596bbd5a6a2b81bb3dcd0d04ed42ff4fb87a881dfb",
                    "sha256:64029f4bb13fa9c659fbace7a3eecf2f1f9bd574fda734daa1e31540039ee170",
                    "sha256:403fd43c518c27d3fc51eca6ec8cd4a6f551114a9e69a61ad495e5ed46916c86",
                    "sha256:a9d1e018e75f7d41edb87fa5431d84070d550afdf1c14ca840d1a0a37a10956c",
                    "sha256:fb46d0fda68d8993450254a1d779659bd4b5df890d844e38eb1f7f6eb065cd4f",
                    "sha256:002debc8cf76566e99d826bf8e26d278747ab3a60e5362e8b6353f270f9d8936",
                    "sha256:1a3d8745ad43a06257ae41df248daf070f72ba7052f9d29724392195c09eb7ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:315861aed57c5bd31c1fb91554392b4b7af360815657c7c31c3ccd7cb5eb0fe0",
                    "sha256:8e31d9d07f14dff1a0d19a0061f303d603b39fa584c00a8fd8d161802406f19b",
                    "sha256:d98daa6501235a593cb4a49c0e4c7a4a27e847dd656d38b4f9756ca956308ecc"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:28.504909279Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.152901077Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.152901077Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.152901077Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:57.692716413Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:28.419176807Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:29.552887382Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:29.552887382Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:29.562237573Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:29.585132453Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:29.601309939Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:29.601309939Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:30.247623473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:30.362991671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:28.385689919Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:28.385689919Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:28.504909279Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:9aef889cc256e0553cc44159a0281e8f84fa3e71b8519bebe737429bb6a4d24c",
                    "sha256:1a8cc7b45575724634ff6799383e27724d93a603836f805474672da118a62d19",
                    "sha256:b61e559ac0454d091396e15f45e02177f0f3bfe399595331b049768b6e11c5d7",
                    "sha256:e755237d65e6c3336920566ccdcc24c066c672aa2bb8eb74ca56ab9a343d86e5",
                    "sha256:ae3871f6c12c6b42ee0f4f49ec5f1045cf4f698873fefde017e0125a6ccd8ab9",
                    "sha256:381691a0de64575addccb40f469db33956ed31da9b5c633264c1d4f7f11dd89c",
                    "sha256:ffbcbf8fc47aeaac1adbd1e75c9b64d5bfa8b59c1f99107cfc641ee89771469a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb7b51117f0979964c91b8bf3fc777ce27fd1484cc9f1610d9b6ab13948163d",
                    "sha256:5aa708d53fc5c68931886676811d89ee5add6cc06908adb21898a3ae9efe834a",
                    "sha256:5543411c950adbeb49162a6d6782b437ddde2875bce0e42c1d335fb2226954ec"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:47.50161132Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.220863708Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.220863708Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.220863708Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:57.414816882Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.882183603Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.830792969Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.830792969Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:26.840677176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.84966869Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.858474028Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.858474028Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:27.343870973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:27.44585044Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:47.424621029Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:47.424621029Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:47.50161132Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:093441866ae783b9b52b9b5b5ec156af88a342de55f6ce992d104e245ee35dfb",
                    "sha256:6dd867e043ca446402978f49ee692a078bccfa99243fd974be791d8853304580",
                    "sha256:98f68e90d640857319c2c2cffe1eb197c0721649fe0473023b6811d4a6334022",
                    "sha256:6139d2f9040f1e4ff4cab562b3f321cdce87e6447f826a62bde8a82a109f7542",
                    "sha256:f5f28bd07cb57acc989d757c13f6f3d6073a7352c655a8bbc88d5fc1c00c5524",
                    "sha256:cd5bb0262acf9decee4e4076d600eae448e052888da796aacef90b20a69d01e6",
                    "sha256:69dbf947051b0e390fa0c8654ddf28c2921b7da5a79f70851ee4b1be5fb0ed8f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a6172ee77cad90379fee032ac5f4a426573805123db475194a88a844d3c508f0",
                    "sha256:e4d138efbf72a4d85ca5c801af825bd6786f118f443e69fa2560c9018e4642fb",
                    "sha256:28e4202f2ff50fe5ced0f10bdac962c82eaa2a93f37a4e17d28d3b46c1096bdc"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:05.788783394Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.582155574Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.582155574Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.582155574Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.258115499Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:19.299006014Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.202325737Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.202325737Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:20.212692071Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.225190049Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.235400859Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.235400859Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:20.737276594Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:20.828384292Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:05.656208474Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:05.656208474Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:05.788783394Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:b92dcd05acba47e39ae919900d926371001963f8bd2df7671c0725a601d9eb34",
                    "sha256:abcf1f01fed69bdcb257285af4ac7d605078701f3720ef33d5a60a046e6710ef",
                    "sha256:a5d149ed2cc2a84d8a80b7c377134c3e57ed521e56ad95d820de843c2f6e20d1",
                    "sha256:c03b44aa7a864c2d27e76f93a79cf65fc54f9afa935a05374bb40da616145c7f",
                    "sha256:2bd8e4125ab9e9b64b59709e13031cf40dfc1df9340bb2b6aafd550b0b605035",
                    "sha256:abdcfe4b142f166d761d598e56d6730dd79284e69887d00ce3cb97f4b7479a95",
                    "sha256:8a96c80c4324d10ca5371425356fa01cb0219ab1484115f3dba3ecac7da40b74",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:358e5b6c02107fbcba603aeb458647d9ea49f34c5cafb04f62bcfe6d0c236b83",
                    "sha256:406e2af1a0c87139d344cc9455988dbed87182ba0d1bc0d9f3654dc4f14dcad2",
                    "sha256:a3319bd5c2bb006958b3bf02e0e88ec33ef1ff07029bdfa5fe01cf6b52fcdc25"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:15.03267393Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:52.243860043Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:52.243860043Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:52.243860043Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:00.914123938Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:49.33021943Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.326340477Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.326340477Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:50.3358527Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.344620008Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.392150407Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.392150407Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:50.866060141Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:50.954912633Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:14.946788073Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:14.946788073Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:15.03267393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:a4cba162c8454c69db0173d74077c498270d7f6c351090d0762e20fb3442574a",
                    "sha256:5bb78ef3587cb0554c1c507b61c89617c192225e4b5272f12ef22d11a5890156",
                    "sha256:a2bc8900bddcbdf189d4fe235305abd03be51b8d24319127d4c68273140e34f4",
                    "sha256:baee141e05888940f4df3e3e40ea41f49f96eaa4132b11a24c722a6ba352a390",
                    "sha256:e7004225e72858bdca55a764767bd89308d55c4d94d50aef4216c851ae41a692",
                    "sha256:d2ca484ecbf5f53c9f23a5a35fac420ae4531f1549438b4608cd7ee8fb48bdd8",
                    "sha256:b58a354aab490c7c682904410b54020a54972f8b09c17635a4653f246fe7702f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e7bdb98643db9164fb0c88b77448b28563b0c3de6556dc31b775d9c51202f161",
                    "sha256:07da98d2a48210375f3eeb913710155f2f298065b523d6a19c60446b0befcf46",
                    "sha256:60810a052e45aff5e5c374cb7ab6dc3171cc2c1ff09b836d87b891f5d240c520"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.247164316Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:10.513654264Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:10.513654264Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:10.513654264Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:14.031920577Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:37.943621798Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.608504194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.608504194Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:38.617752414Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.625660525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.661298785Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.661298785Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:39.129019046Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.217643554Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.172352873Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.172352873Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.247164316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:163ae3218880f004692200373b988197c9035b0aa2bac8a3c66b634b366a4c3f",
                    "sha256:589640d8c57c4cf67c46582f8b3227aaba17143c79bf05064e3c8deb288af09c",
                    "sha256:b47f31752d1747d519e1a181e9c7a16831b70dfcdb324f83d41976ea6de595b7",
                    "sha256:70a18c1f5e8ce8543f63ce45d1e1eb90f91d8c665fc494332f405232c5a3da89",
                    "sha256:1ff4a1e1995f113b33aa7fccf99015fd499954186df610a3a5f760a4eaf346e7",
                    "sha256:25ab5f4511b7ee861197dda8683b6c7b0ec63010fb9810185004eb3f1b8f2be3",
                    "sha256:30215ec399064513824612efb8480520ea87e260fa85ad38d841eef269f6fbee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9759a04c713802c545c93dbabd145dd650a16a1da949c0f19692021cd42e1bf5",
                    "sha256:8625eb7a09617d0e0b285f967747b88f2c3ef8f9936581ffd6d5d7d2fa4e1173",
                    "sha256:665026b2d3e6d51cc70c5bbc3dcd664a57efc5b23ee5d41201d6ea8b16c52d29"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:11.950991969Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.5446413Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.5446413Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.5446413Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.713630548Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:28.96351244Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.811031557Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.811031557Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:29.82264323Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.830745153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.861635397Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:29.861635397Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:30.397049633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:30.48055084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:11.875184659Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:11.875184659Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:11.950991969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:cf3b204d96fb43182af2a6bd042b54a63f592b824a204b683037278e0efee7c0",
                    "sha256:1e020fd2d92b063471a5fa16393a110cc4b4caff9140cde8d86bde3c21ab23fd",
                    "sha256:1c3ee301576e45c6827ed96e2e43083ffb28e5c1ab70a60a90527806f2c61b93",
                    "sha256:169743540f4e7fdb9b4cbac5b0d4d8c5662a1b8db533ad7ce19ada41b9a9c145",
                    "sha256:a6538c7a0f6d08cd203d773030e32a8fa61e892309d389acb3b1ce4197ed1a2f",
                    "sha256:1a1329b39a28a3106d31cc0323835ad7f9a612db4f86f6cbb8b6dd967c5322f8",
                    "sha256:e10a212e62a0a241d8e3e13497efc08ec0f9b08e663d3c0cd825201ad41d282a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9352628b35def1a40155b787975acf4aca5bdf98560aaf40d82347b9f6d83134",
                    "sha256:4fb36393dec7c5d44f10e3ab91a8fafbc05e783a590a298a49f3d23be777b592",
                    "sha256:4a5d27a33835b9055c170b9ef94995119e6fc8b309f55ac528dac1a76843b708"
                ]
            },
            "variant": "v8"
        },
        "3.14-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:56.543490473Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.044773417Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.082174906Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:16.972560389Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.430381757Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.442445373Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.490909943Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:17.500303195Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:17.974591815Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.067947167Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.470274734Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:56.470274734Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:56.543490473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:42da25a692484966fef2ec596bbd5a6a2b81bb3dcd0d04ed42ff4fb87a881dfb",
                    "sha256:64029f4bb13fa9c659fbace7a3eecf2f1f9bd574fda734daa1e31540039ee170",
                    "sha256:403fd43c518c27d3fc51eca6ec8cd4a6f551114a9e69a61ad495e5ed46916c86",
                    "sha256:a9d1e018e75f7d41edb87fa5431d84070d550afdf1c14ca840d1a0a37a10956c",
                    "sha256:fb46d0fda68d8993450254a1d779659bd4b5df890d844e38eb1f7f6eb065cd4f",
                    "sha256:002debc8cf76566e99d826bf8e26d278747ab3a60e5362e8b6353f270f9d8936",
                    "sha256:1a3d8745ad43a06257ae41df248daf070f72ba7052f9d29724392195c09eb7ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:315861aed57c5bd31c1fb91554392b4b7af360815657c7c31c3ccd7cb5eb0fe0",
                    "sha256:8e31d9d07f14dff1a0d19a0061f303d603b39fa584c00a8fd8d161802406f19b",
                    "sha256:d98daa6501235a593cb4a49c0e4c7a4a27e847dd656d38b4f9756ca956308ecc"
                ]
            },
            "variant": "v8"
        },
        "3.14-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.904870199Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.904870199Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:5780503a47a45b303bf8d18ded45043f538e3b482963a282cf43e7f58695c963",
                    "sha256:aca5c284b3211c1e366cd2da855bd3faddfa0d97db1d5cc0bc66426821ff0d04"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:35.555013539Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.441353942Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.441353942Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.441353942Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:05.155333937Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.337887989Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.337887989Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:06.355018674Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.390888952Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.406957631Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:06.406957631Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:07.311545008Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:07.444429365Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.411416642Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:35.411416642Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.555013539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:15b6270799d69a2b5d600f3afc9102469cf1ac5d8eccb7dd7793e7106268656a",
                    "sha256:b73bea17b29cab4acac009b1fd84ebfd24b7c2961ac5fd194abc1e95378d21bf",
                    "sha256:f78d5d9a5cf524e9691c27d8108953219d071abf466a8ffdcd0dcb722d373d1f",
                    "sha256:ab9391c0247a6c2caf9e3dcbb2e07dee81738291ee31b5df92232f0c754ad488",
                    "sha256:6fbb10c69309fb9b5b7032104f9e883404cb4dedf57c01d19d8a3657deb8f539",
                    "sha256:58a6488b0b1d2c4f6c2c3516866d389c84587d39e1722ac4f2373308186198ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2ae4a9d9fab9e0340d2bd783178fdda6735b283a0102f051f612de4d236ceed0",
                    "sha256:4c5dbb3cab6e4043da4e23778eadc0f3712cebd7d2ee9ca475fb6a88b8e267d7",
                    "sha256:bf78255903432b7b7f1220551cfbc2402dd8acb87d5a5a75860d3f4c47db273e"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:41.192506511Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.946082026Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.418566901Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.832877744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.841920283Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.850244033Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:50.859739149Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:51.319754213Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:51.435156183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:41.056718681Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:41.056718681Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:41.192506511Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:dbe9aa81b9052a0a1d464eb0978ea756cbf66fd127ed18a7f6e388469fc053ab",
                    "sha256:9330db15193cf28ae6da8140c96a68726e45a624924e425f913274fbf45b0779",
                    "sha256:4a0a1ce73e81974250b996f31eb443593cb2b3f68544822378f529bd8245f762",
                    "sha256:34ad31bcc05e107cf3ad401f69453826e04677109bb1c518039b0e10d6b7c13f",
                    "sha256:6dc548d9319b468480e2c1a55b32c0fdc917404875bab8c1a917e43b92a3522b",
                    "sha256:a3484f1fb3fbdfdfd19401893d7561c4ebbf2f2378a4f77f3512ee7672b0f03d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46ef77d5c06fd317892cfb35090082458fec1fe16bfe40a3de6f83ab89654df6",
                    "sha256:ea9e30bdffe93e07823aab8564541a5a74ff2b041a7db3cf879cbf4f012a7293",
                    "sha256:ec236dc2c2134e157aa53a504f23a9e45ea4321d5215c1659f12e5e948a127ad"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:58.853578625Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:43.841435652Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.282490291Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.166878263Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.176257511Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.185562057Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.194587534Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.909143713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:55.02138485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.740081749Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:58.740081749Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.853578625Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:9ef7c6952d9cf8db1bd83fc80ab71d71cc0a1ca1a6db04e54c136092da93d0ad",
                    "sha256:b1a92b46ecd2ed6082ae17094e900f649bcacf7f279707a2e58829ea579cc514",
                    "sha256:09cb0a63c8617d64d6d1a853a455d14af59c554c999096649ad5e12e6254318c",
                    "sha256:1e7afa1f8af8446cb87b4955b2d60dd9f37c886fe41efbc692d92adc7439e1f2",
                    "sha256:70787d6742b03deee653f079b8b6a65837ea5e35a2af5d0d66618b94873370d4",
                    "sha256:6868a578331f6033b1879542e01952b06e5c20d0e22e89372eb5cf45c8be9e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b0f4150ad57aef2046e51155118260f4f5f6da7398f5b5c79179898584515326",
                    "sha256:7b0073fb8c94959e8aa254161d14c331d264fa78871b24b71df3bd325e430a71",
                    "sha256:a0439527bb205afccbccb652b921e5c72a5293cc896b356ea9ff334a056b6ef9"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:56.613617547Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.347472794Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.258730022Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.138123659Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.147742376Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.187483495Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.196472573Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:49.65150525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.752429636Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:56.531733681Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:56.531733681Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:56.613617547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:1123baef93b38bec742c638af1a98568897a3b2bf9f8793a50f51e80bdb37002",
                    "sha256:d60b65741522ee713ed1000d9f908bc70b5717bff9d6c2a80d196c1ad6844b6c",
                    "sha256:d68a3d9c29db65ac346134f44d5c58956ee121966d391eb0a9df714e1fdeb15a",
                    "sha256:f3c5c7e591c77dd3d3b2cbe61d5996930accf22ad3d6e0f5fc9006e0880ad6e2",
                    "sha256:1878ec63542dc70febb473b1d8d27d1d7dad7e07dbff97c1a3e9b1f6ba2bdf31",
                    "sha256:ddef8bc06515f2d3e7f2a213421666b41cce48d447257621bbf0b381ede01813",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46cc807e964d723a32b01a3a179148f57552041464cc17ea1e2301dfc7552f9b",
                    "sha256:e83f22f716f8fe3eef8f3c256e7f10c49ca3ea03ccc0a074f977f63557c63be2",
                    "sha256:02bd60a09741e6fd81003b876980ecbaac87720706ea289165f9bf15c1a0cb42"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:43.440708055Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:05.936749067Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:10.639226678Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.218539686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.227773848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.267891501Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.276331966Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.761523927Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:11.848943859Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:43.356606758Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:43.356606758Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:43.440708055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:bb74e7471a678f340a4554a2ed8900d2aa7c87197d6286c749eedad02379c60d",
                    "sha256:8fbc34a55a8b4fe5fc12ac2c110bf2225ad6389467ff7eb328bb026c39b80002",
                    "sha256:a26b252706717e47727bcd164214e988fcd76c174a66e8949d47cd67bede264e",
                    "sha256:5205354bc31d22bc7ed65dba745bcdf6bc8cd580c1d0ed2aacb625abcf834db2",
                    "sha256:fc0f5b3cec6618341d34cb67b4ee3887ed77daa5bad5bfb7b9b5166369fe83b1",
                    "sha256:3cb8d41abbfeaf38402d9e14c85884846b45969cc8f5f00b848da30f8e342ae4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b12139ae1b2072c814b8d50eb226161c1279b867a4cb4cdbf40bfb411d04c65",
                    "sha256:af8dc7f8d9639d12d475f72d37991903748962d0e2bf273e123e97e7669f3d55",
                    "sha256:dcb50ca5c02206d3a3393931c082ca7d7555f04d2f2ffe50b4444e7f0f520ab8"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:14.411006317Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:54.745063368Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.309081373Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.868135211Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:01.877688088Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.887166317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:01.922931922Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:02.371110918Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:02.459096485Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:14.332092403Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:14.332092403Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:14.411006317Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:3c55492053b115aa2e1d424ad228bd17d034b101be03c97dfc814a0e853ff8f4",
                    "sha256:7460907b41f9518562b95e86e55dfe30e58fbe6fd5d6c70874efb5a25de5f7ff",
                    "sha256:332ce1aac2561b68d72229b0f7a17470bf3b4698e836acbfff1fd673cecfe418",
                    "sha256:04a00af8dcf481c7df6da66f3ec43a47419a1c42865d1c8925b9ea063abf7c89",
                    "sha256:5d7bcd3447c16053f1889cb4ddd5ba212cd202f4965a7c293a9afdfe2bd5cfa4",
                    "sha256:213e5bee489cb7c2f790dbbd361cc10040916dfe4255b4bfd673c1713a963256",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8b51be10095cbd5634f1889197d5135de7a6710be707ea4b795ee79e9cba70bc",
                    "sha256:09799cef99059c9cf40be3610326189efed11fe33d3ba39532feb2584fe92b00",
                    "sha256:661b3311658e99cd614d2e9e4cef81b069684020ee31c684aeb0d8fd4b9a849f"
                ]
            },
            "variant": "v8"
        },
        "3.14-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.904870199Z",
            "history": [
                {
                    "created": "2023-03-29T17:39:25.334983269Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3d52cc254959a9ff493e7347e6b1bc25c0ccfdcf9532dbf43173ddd182d0e4d in / "
                },
                {
                    "created": "2023-03-29T17:39:25.426780975Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.526878559Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.06989921Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.53734712Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.550371607Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.5818858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.592617566Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.145813669Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.14   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.240409673Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.834087354Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.904870199Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.14 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6979b741102e5c5c787f94ad8bfdebeee561b1b89f21139d38489e1b3d6f9096",
                    "sha256:ce9e2d688264551eca29fcee5880812e9571d0bbfcccc2953fc6aa2a6c9ef017",
                    "sha256:9187f85c094a135719237c268268201c789f8645f9dd9c4ba8a158b9d6e94631",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6af28850fa8a0050922f4c6d764f8106ef59e350ac7d381caa921ba27ccdf4e9",
                    "sha256:5780503a47a45b303bf8d18ded45043f538e3b482963a282cf43e7f58695c963",
                    "sha256:aca5c284b3211c1e366cd2da855bd3faddfa0d97db1d5cc0bc66426821ff0d04"
                ]
            },
            "variant": "v8"
        },
        "3.15": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.184373161Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.184373161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:57af513c7d9fff477f2f9d07abc2318137eb8f93ce99eef11396aa46d4d1632b",
                    "sha256:2f1d83a57f74eb3412bd272025cad58bb7f6d8d61c407c9d51bfe945aaf3d6e6"
                ]
            },
            "variant": "v8"
        },
        "3.15-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:33.64535648Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:29.533332463Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:21f240e1e33b25dacee7291cdd8c7750995aa0f460d13496a08c4a2dd92323aa in / "
                },
                {
                    "created": "2023-08-07T19:39:29.623113456Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.720997699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.720997699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.720997699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:55.793693868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.351618089Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.351618089Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:56.362111247Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.372469504Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.39541725Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.39541725Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:57.066290975Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:57.169545134Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.518801434Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:33.518801434Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.64535648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31551975770e02673675ed1bce761714a24d7803f70a905740f7d4c248c7d77e",
                    "sha256:7646db54a8f3c862313819a034cfecb0a1785612add11a685b3a6df23ea48944",
                    "sha256:ba1388dda63b8d368966c536c7bff60a1ed8311831bd695d8116f934920e7812",
                    "sha256:3ee39e5ddce152944253758841f73655a523f0c373fd097bdddff525213d23dc",
                    "sha256:691c3d629c520b2d62e4108d3e5cad9495b6d54003bae0fff81df4f38e628f77",
                    "sha256:1a1aec77da69bef887beea6707efa7a3c65472589044f3ef7c6cb5d861c926ee",
                    "sha256:cb2029ca7696a266ca8a98c0fc5dcf19838e120d0c1c267d10b17f2759fe7da2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:eb1a7a5331adc9162b384cd34efece03767fb722cfcea4ecde91e5d7de66acc3",
                    "sha256:9d3393233f053cde25b803c32601a35741bc08c11b3f0ca2e4a1bb6bdbb8eb61",
                    "sha256:9966a715dfd26642dde6aea9857bcbd7f09c86c5dfecb337ef02f7a842402ac0"
                ]
            },
            "variant": "v8"
        },
        "3.15-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:43.892793829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.622574097Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:55.529995888Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.542542258Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:56.147992128Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.288576521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.780323863Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:43.780323863Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.892793829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db5a7c9fd1180fd2c6e4a2a1002014b019b8132bae3dba623cf8057aa16f0394",
                    "sha256:7396b7916284ae4a3618ab7d64e1f16a86747a8f846fad6d55bfb5944dea2f88",
                    "sha256:d616dba19a7b71117a8c7eeffd0112c8992c80437c72c1d1a833a66844dc8721",
                    "sha256:e4cc72e0480d8e263b3e3a80a7acbf9459e5b1d2876420a5b39139df40602007",
                    "sha256:5d339741851b95aab45ce74a52fd269110d6b5e6592a307246bbea8d05a815b1",
                    "sha256:7aa69c0759e29a59047c0da597eef816587d5b87149b7bd179cc51fd6db1466d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21856899e044ee57698bf3e9ebcc27a0b63c0e241d012718d9b7a1f776aa9e8e",
                    "sha256:3d9247e02ef66dde8ced4ddd65747bc7f7255aaa3aae56145ad0003f8ce78e7d",
                    "sha256:11a3394d0606b620ad781ab324cbc15a1fdfa700a6b7e686dd08257f79ed9437"
                ]
            },
            "variant": "v8"
        },
        "3.15-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:00.167181473Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.277226143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.051735239Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.061515158Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.571789044Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.721670084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:00.047628656Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:00.047628656Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:00.167181473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:a9cc6b86ce8c8c8d671f5471379e638ba7d54ff2d9ef224ae462dadc5e210a36",
                    "sha256:cd88b41bc0abbdecadbfa0bac7040e0c9e74b46ec0a69cd95b46d7c544e547af",
                    "sha256:6221f3f1be26dd3d60741376b12a6b51fa07870cf65427be5ca8c61cfa4df608",
                    "sha256:66f83629a2fc69de35db566234f1b6ca28f45f3d8713cb1cb176b40ac58ff655",
                    "sha256:45da6e81dae3889b2a2a14d84070f2dd6936c4d0e54a5a884dfdebfa9e243c5b",
                    "sha256:7e2f74793f5d6ac7a9bb7e96028fbec37efdd83aa3d9bd143cabbbcf08d187e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a61205938433b75fbb4a353be694ada857b77a3dec40999755411651c481277",
                    "sha256:8daee5ee94c0c4e97d4a7a8b588b3908b14014332c52bb016a7ccf217728d699",
                    "sha256:a1f1377a4e91067f356d916c9e94b89ac7b0b67151e72adcdb423176a3a6dc9a"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:56.077188869Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.045873256Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.901847386Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.937867925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:47.550288769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.636405874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:55.989456692Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:55.989456692Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:56.077188869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db54e0c396ca8293e80818c872eda8c3ccfe1b5ec30179109345dcb8be044c02",
                    "sha256:30f235bb611196a01513ccb15b8f14878eb39cc6b73dacaf5087004d3db72065",
                    "sha256:c380607e42559f69b7bcc2016d11800c416cc20b507b42091048b15c48d8646f",
                    "sha256:3f31d36e77e89394d583c88193f6bfac9132ef5f8fa23d34ae849c11230ac2c3",
                    "sha256:b05a1292425df7b2fb3c5801a41db1ba0aea3756c3af5cc2f39de94c4decbe66",
                    "sha256:4f34d953f2518b5267f2d5ebfc75658d33de8efb3e4db87f83887d72822750a0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94a2fc587078913959a6bd367daafb030c53a19501201f704453a11c2463c4b7",
                    "sha256:fa0a8d4b882d61baea90e260681588bed5a892f9412aed68cd6c92852b65e177",
                    "sha256:a61bc7a2061801856a2b33342b6736377c9695c17e7b916bb49266812a0cf854"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:38.875899278Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.344677904Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.824559741Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.832411314Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.310496991Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:13.393712209Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:38.803407261Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:38.803407261Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:38.875899278Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:7865aa16a72ce9494560e4630c3e1460d35c29836633a22f63ef9e57d9bbcf16",
                    "sha256:0b476da29880c714490858dbb8ca0a59c6038ee64ee9f2dde27d5ad718244b56",
                    "sha256:bb88cc70fdd5df8d55a9594f84ab2a5472fba7bf3d5cedb15531dd8905707ef8",
                    "sha256:ef742c5af3085ad28bd59633168ee87a985231e353c50f4355450942d5c788bd",
                    "sha256:c1f4b95fdd84fbc74849411bb7d1585f380a9451d74b3468cac86c4d1328e4b3",
                    "sha256:52aadc0c1195878f7434631f5df9d2e9c707681bb8930edcca8aa8d72ba503b9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:09408b90601c9b2566f0983d775886db7be3904b7fa5e79c597ae2a48f2b8b69",
                    "sha256:d788a54c130b27e0d3f7ef8cd79299bcc7356cffd59f75c7460e593c1ca01a22",
                    "sha256:7ea4761eb34a7c9d8bb158175bcc7eaf8c6078c4b495055d76b9c01037085d21"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:05:59.972752453Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.541377612Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.04164606Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.077330446Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.674573037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.76109544Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:05:59.884626213Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:05:59.884626213Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:05:59.972752453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:283f92790975f677e7c3a578f852abe40145bed179c1aa4864db453e0900b0d7",
                    "sha256:93133571da46b8d245c03a4390c6f2098f55435027d9233cfe53dec0143b627b",
                    "sha256:ac88fa80aa3263b2eb8bf2ec0397d82d1c453130f5efc861f3b0219720d95b65",
                    "sha256:cc2872e29e9d8cc7177290be29374063dfab0222e61889ba7235d0ad9327fcfc",
                    "sha256:14f6be3335df7e5092698a74843ee37a0b4614b3e4605c48d2a7ca44704fd0af",
                    "sha256:1243afdcee894015d8c636deae9ea551b62da31699feddbdb91cbaf3cb05a3aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2bad70d869531b756af915e2668a74d91ee53c5368a6c00fc8492ea2c69eb622",
                    "sha256:bad6c2525e28829d9544766246920b74582441fc4ba46f6e8a677b805e9bd697",
                    "sha256:374c276f3c487575b0be24bd4a2e50168e3c3eeefe665e754e352e9d7f8115db"
                ]
            },
            "variant": "v8"
        },
        "3.15-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.184373161Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.184373161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:57af513c7d9fff477f2f9d07abc2318137eb8f93ce99eef11396aa46d4d1632b",
                    "sha256:2f1d83a57f74eb3412bd272025cad58bb7f6d8d61c407c9d51bfe945aaf3d6e6"
                ]
            },
            "variant": "v8"
        },
        "3.15-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:51.434576733Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.669813918Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.895363869Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.641196241Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.693448094Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.178137207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.290910868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:51.352814276Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:51.352814276Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:51.434576733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:02d1889898e8ff73199db676f022faca6f9e0e0c85e7e0593c02e659b4cf437f",
                    "sha256:6e7f0f9a39eea1a405196646ef8e896eb2471667cd5d1188512774dabdd54e47",
                    "sha256:6fd5c155a80b5a229cf2dc76ada7c3f9222e4db2c166756822cb262fc3c2d717",
                    "sha256:7665642698974a0f78d9378e3d8e447e922017c5b01051e94b709f04d14060a0",
                    "sha256:dad9952402181795121fe1fc7709a6fb9b421493321d94a638adfe13e3ec04ec",
                    "sha256:0f921f36de69a0e7b1eee7955ff38de36abe4f588d17d6595b162a98128f4ab8",
                    "sha256:d0b6f0b455310b04cd33642828be440d38f900ed86e68851ccd8e60b74c8ac96",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3cba918085edd12cda31f24663dd10577e976b91a6f7e9ee363ccc6a0681fcd3",
                    "sha256:99857a78443daf1e9db3b4ea9545c2fd27465240f54052a0461dc45509e20353",
                    "sha256:83f59cb9efe0416e75ae69479a6863e7afc4de4bf9bbeb232efec97fc3fa3ce4"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:30.896263233Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:29.533332463Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:21f240e1e33b25dacee7291cdd8c7750995aa0f460d13496a08c4a2dd92323aa in / "
                },
                {
                    "created": "2023-08-07T19:39:29.623113456Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.795666735Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.795666735Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:38.795666735Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:42.027396884Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:03.104730324Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:03.622847224Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:03.622847224Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:03.63570468Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:03.645800259Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:03.6549838Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:03.6549838Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:04.13684234Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:04.249784646Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.769872249Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:30.769872249Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.896263233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31551975770e02673675ed1bce761714a24d7803f70a905740f7d4c248c7d77e",
                    "sha256:59fdb74fb041a4b4d5af105839d04e9dcb60ffcb077abf50462a2de7aa607e61",
                    "sha256:aba5a0ddcff51341b0998133e7021aec4d9dc40d143ea627b361fd60999b866d",
                    "sha256:c944af20552dcb20d9261129e0b2c3ad5ff327f104d1586a2b11a8b4430ed7f1",
                    "sha256:4ba21580d8ee44ef02747bcdeecced6cf0c4c95f1cd5ae46e2645fee71afd57c",
                    "sha256:870f31dd1d1c7ccc22ba4b7821900d71a1a3d307bb87ce3c3a9a79019b881ef2",
                    "sha256:d5f99cbac49d047a45b94f4af3b9414b6c5f60ecc057dfa02b2870c603db89ab",
                    "sha256:b48e1bc62717f142c3ca463e4edadb3257c0a7fb0762147060093c14711526b7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:319862cd159a35b201d538b2a27a62470bed595a79714c67979b6c809fd3abde",
                    "sha256:c71f64baf8c709c1d7e3db804052b52a39b9c69c87d34960503c789ed75f02fa",
                    "sha256:659a0cada751dea6d25ade3eabde63841c1530828c5486ec524a461e39261a22"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:44.276852887Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.349424704Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.349424704Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:45.349424704Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.770340409Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:11.769207Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.434474749Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.434474749Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:12.443674604Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.45222451Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.461350025Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:12.461350025Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:12.945441479Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:13.049425623Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.161596613Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:44.161596613Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.276852887Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:6ff9cef0afecc235a1fb4339f11a97ec8006f89533f47314eea25a96ef4d1bcc",
                    "sha256:65ec207a39e5b22c05a807a260c8f3c541478798a124203bdd5bb9d75b18b9a6",
                    "sha256:d65ad321df945afb21ab90dd3b27865c2f133b8d0664307ff267e0af0b17ab08",
                    "sha256:12bbff10fd00b52a51197d0f13762ff30a22210e01b79be856fd64fe688fe185",
                    "sha256:07ee2f37e0666f6fc5c39cc68e3f9012de6c6a21e40227a18a9e62c9bdf3fbcb",
                    "sha256:16d4cb065b4b2a9fe90bd27854a4637b3f3d51fe4327e5a342490fefbcb200b0",
                    "sha256:46003efd900833b3c257a0352662afb515c01376b4a8bddb671aec49b290b119",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25d86a69ada53bced87b6a879c6ca415ec265607fb535867fa06f8f09b8b6be4",
                    "sha256:bea45d238b39b4d284349fd740e967686f74935d3b852db07c1e8b30e62682e7",
                    "sha256:2e496fadc5702d6b2a5a04c9053df654b687c0fae8a366c553e816d7aaea8aca"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:59.003490978Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.115440582Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.115440582Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.115440582Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.168543199Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.116427787Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.967280402Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.967280402Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:11.975394367Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.983217942Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.991280301Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.991280301Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:12.453423502Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:12.558811624Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.87990081Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:58.87990081Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:59.003490978Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:a9cc6b86ce8c8c8d671f5471379e638ba7d54ff2d9ef224ae462dadc5e210a36",
                    "sha256:013cbda468284641c30cf0ccb2fd77b520f9263bda27825eb6f016e754e54c2e",
                    "sha256:92a0882a8c4fc4f7d196fa657e23d3b8db7791113bb043a1124cb88fbea1a51a",
                    "sha256:1c7badeaad471567554d8407916ec081ce21dcf5b4b093b1997152fa5fac5a79",
                    "sha256:54bc81b68035f2b48d84a9bcf5ba4084cdde7441e0141614dae4dd18703807ac",
                    "sha256:35a18ccd4552b2ff575ef145b437c10132e21ab22269b6aeffd0670046519511",
                    "sha256:22dccb2d1f57c7a35bd145638bf1603e4e508e7c425add77be3c50b5215bcc1c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4fb7cf25aa837fd53ea016f0e8d1567a3e7572d51ab7987ee199b6df275e5987",
                    "sha256:b66478fb4041d6f9c58d669faf62acc77492852b24a616a3fb2c3936661fe196",
                    "sha256:05d6e274e84a170451f36eb1f23c0ee72ffd37815b82f49ca1f832887bd0a40a"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:00.582685823Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.877949978Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.877949978Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.877949978Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.447916125Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.463509735Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.387481646Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.387481646Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:13.399162079Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.411823333Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.452962285Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.452962285Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:13.927754774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:14.022653855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:00.505948183Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:00.505948183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:00.582685823Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:e32c83839d11ce9cbc2b2dc2c77734ff1fff54468616edfbcf336ed6e7bec7a7",
                    "sha256:0c0c5c22cef58b3a5b79c56f763c6280bff57089fd9cc582565f66a823a70c06",
                    "sha256:7ad2a98ba114867091149cdb5dded5f8df8bdb7624e01ea3f2a2c11b534eee06",
                    "sha256:67f8447403f94eca1283869710724c5f0513c992822a04a0cc0523c22fec39e9",
                    "sha256:65881da9e32fa05de7eecd60c15899435aeb4a570f2e1c104173b18184c7a7b8",
                    "sha256:13c41ae409ba5ddabca936465ae0fcc6dd5224b82dc7e1d54014bf0e966b90b7",
                    "sha256:bedb83b18f33242b8f8a9c64286da5facbf4360ce0b1a6c459163024d8014548",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac4ae12bd925b164b062ab4073060ead9f101cc4b6cbedd00100cfbefa4c5fc5",
                    "sha256:aaaed306fed5a0e519c013d2e73e1a37c997e5551a8525045241bea165673ddd",
                    "sha256:e421d9c91f4aaf7e38d36b535fd58790b8d6d0f3fd79004057e00141a88018a7"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.977250118Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.891107714Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.891107714Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:14.891107714Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:20.415226303Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:47.576700915Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.556582215Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.556582215Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:48.577450244Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.604098643Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.624029142Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:48.624029142Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:49.095359479Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:49.184271677Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.901393107Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.901393107Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.977250118Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:9d45a0b0a880bdf7660c957f7d0ad666ff18e62ed986c355d4b5d640e25c2370",
                    "sha256:20efd2c128ca783fc2cab64c8ee0007c4c8d254241485cbbbbc80ce3e7e2e6e9",
                    "sha256:5cbc195ab39b9f590bd001f15ec686b171d8aa93332a5c8c01bce9fbba7d19c3",
                    "sha256:d4fd6cd98df5035d2dedf77c0da2395381a73bfd0e481c89a035eb4da1ebec60",
                    "sha256:d477ef382b6df7930ef2b5a1479c28255fe8a23dfd3b6478389c9ff5c7d8661e",
                    "sha256:09aef51f3343fe866baea3c21687fb64be393078b1eba85fc551c8e0ac3577dc",
                    "sha256:6d66b8f0496fb4b006ef14acc5973bb3eb73661c47dc56ce07bd50bab80fd137",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:29aa71c999b2f5b4f23c3b7b8064ac1ac9fef0d574d45fbbe7103f1dd8496315",
                    "sha256:ec07aea453f4af790ca06ee11a41c9d938f9e3e52446ee143c4c6ba080f1ec1a",
                    "sha256:d59a35bf6965ca41df275dbc12f0c2c661c6be87fec2572220ea26f2de7e92ff"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:11.611734079Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.734016754Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.734016754Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.734016754Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:50.580098656Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.055228627Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.677906049Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.677906049Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:13.687145683Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.736816533Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.746020583Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:13.746020583Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:14.219915427Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:14.308263039Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:11.53444611Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:11.53444611Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:11.611734079Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:5042c0531e670df1bad6c1e50edb18c06daed1c9967fd7f6c37fc1ca8a1523a0",
                    "sha256:022985e5230e61a1e7337c8d23fe7234cee73bb5901d108d59085d0d57220fa1",
                    "sha256:193a82a9be25950dd08e09c5dc51df1883a86aa7c3d910f07bbe54416fdbcd64",
                    "sha256:e95255ad6060a649cb5dd66d7015f209069a15a33395dfc01e9da1b0941e0384",
                    "sha256:d8fe899b3bd435afe13f60ff326e00f0fb6b7d908614e97cfecc4f35c5efda29",
                    "sha256:2e30c328e43ec1ce2e1738b6cc55cfd6b49e25ebfc3fe1a56664e29e79faa1ba",
                    "sha256:9ea83f538094fde9b982caba23848ae619c4d2e29e38c6c04be9ef1cf7adcdc9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b54b30a83b4adfc4d4b77bc8ae97c1955d16c2663f410283e07072aefd973ccd",
                    "sha256:ee2fa7522d0e333da8f2f9431280ea89f576425d585bf2b5c6bb63dd08dbfd9f",
                    "sha256:7c1055b320192140632688f2d740a2548fd21d094f882e4c2421f5b6b712707b"
                ]
            },
            "variant": "v8"
        },
        "3.15-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:51.434576733Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:53.369507718Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:56.669813918Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.895363869Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.629420933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.641196241Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.693448094Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.703639557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.178137207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.290910868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:51.352814276Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:51.352814276Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:51.434576733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:02d1889898e8ff73199db676f022faca6f9e0e0c85e7e0593c02e659b4cf437f",
                    "sha256:6e7f0f9a39eea1a405196646ef8e896eb2471667cd5d1188512774dabdd54e47",
                    "sha256:6fd5c155a80b5a229cf2dc76ada7c3f9222e4db2c166756822cb262fc3c2d717",
                    "sha256:7665642698974a0f78d9378e3d8e447e922017c5b01051e94b709f04d14060a0",
                    "sha256:dad9952402181795121fe1fc7709a6fb9b421493321d94a638adfe13e3ec04ec",
                    "sha256:0f921f36de69a0e7b1eee7955ff38de36abe4f588d17d6595b162a98128f4ab8",
                    "sha256:d0b6f0b455310b04cd33642828be440d38f900ed86e68851ccd8e60b74c8ac96",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3cba918085edd12cda31f24663dd10577e976b91a6f7e9ee363ccc6a0681fcd3",
                    "sha256:99857a78443daf1e9db3b4ea9545c2fd27465240f54052a0461dc45509e20353",
                    "sha256:83f59cb9efe0416e75ae69479a6863e7afc4de4bf9bbeb232efec97fc3fa3ce4"
                ]
            },
            "variant": "v8"
        },
        "3.15-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.184373161Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.184373161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:57af513c7d9fff477f2f9d07abc2318137eb8f93ce99eef11396aa46d4d1632b",
                    "sha256:2f1d83a57f74eb3412bd272025cad58bb7f6d8d61c407c9d51bfe945aaf3d6e6"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:33.64535648Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:29.533332463Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:21f240e1e33b25dacee7291cdd8c7750995aa0f460d13496a08c4a2dd92323aa in / "
                },
                {
                    "created": "2023-08-07T19:39:29.623113456Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.720997699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.720997699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.720997699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:55.793693868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.351618089Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.351618089Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:56.362111247Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.372469504Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.39541725Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:56.39541725Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:57.066290975Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:57.169545134Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.518801434Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:33.518801434Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:33.64535648Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:31551975770e02673675ed1bce761714a24d7803f70a905740f7d4c248c7d77e",
                    "sha256:7646db54a8f3c862313819a034cfecb0a1785612add11a685b3a6df23ea48944",
                    "sha256:ba1388dda63b8d368966c536c7bff60a1ed8311831bd695d8116f934920e7812",
                    "sha256:3ee39e5ddce152944253758841f73655a523f0c373fd097bdddff525213d23dc",
                    "sha256:691c3d629c520b2d62e4108d3e5cad9495b6d54003bae0fff81df4f38e628f77",
                    "sha256:1a1aec77da69bef887beea6707efa7a3c65472589044f3ef7c6cb5d861c926ee",
                    "sha256:cb2029ca7696a266ca8a98c0fc5dcf19838e120d0c1c267d10b17f2759fe7da2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:eb1a7a5331adc9162b384cd34efece03767fb722cfcea4ecde91e5d7de66acc3",
                    "sha256:9d3393233f053cde25b803c32601a35741bc08c11b3f0ca2e4a1bb6bdbb8eb61",
                    "sha256:9966a715dfd26642dde6aea9857bcbd7f09c86c5dfecb337ef02f7a842402ac0"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:43.892793829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.24586523Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.622574097Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.517106897Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:55.529995888Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.542542258Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.554976632Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:56.147992128Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:56.288576521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.780323863Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:43.780323863Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:43.892793829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db5a7c9fd1180fd2c6e4a2a1002014b019b8132bae3dba623cf8057aa16f0394",
                    "sha256:7396b7916284ae4a3618ab7d64e1f16a86747a8f846fad6d55bfb5944dea2f88",
                    "sha256:d616dba19a7b71117a8c7eeffd0112c8992c80437c72c1d1a833a66844dc8721",
                    "sha256:e4cc72e0480d8e263b3e3a80a7acbf9459e5b1d2876420a5b39139df40602007",
                    "sha256:5d339741851b95aab45ce74a52fd269110d6b5e6592a307246bbea8d05a815b1",
                    "sha256:7aa69c0759e29a59047c0da597eef816587d5b87149b7bd179cc51fd6db1466d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21856899e044ee57698bf3e9ebcc27a0b63c0e241d012718d9b7a1f776aa9e8e",
                    "sha256:3d9247e02ef66dde8ced4ddd65747bc7f7255aaa3aae56145ad0003f8ce78e7d",
                    "sha256:11a3394d0606b620ad781ab324cbc15a1fdfa700a6b7e686dd08257f79ed9437"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:00.167181473Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.902371795Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:48.277226143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.040615207Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.051735239Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.061515158Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.071399783Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.571789044Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.721670084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:00.047628656Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:00.047628656Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:00.167181473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:a9cc6b86ce8c8c8d671f5471379e638ba7d54ff2d9ef224ae462dadc5e210a36",
                    "sha256:cd88b41bc0abbdecadbfa0bac7040e0c9e74b46ec0a69cd95b46d7c544e547af",
                    "sha256:6221f3f1be26dd3d60741376b12a6b51fa07870cf65427be5ca8c61cfa4df608",
                    "sha256:66f83629a2fc69de35db566234f1b6ca28f45f3d8713cb1cb176b40ac58ff655",
                    "sha256:45da6e81dae3889b2a2a14d84070f2dd6936c4d0e54a5a884dfdebfa9e243c5b",
                    "sha256:7e2f74793f5d6ac7a9bb7e96028fbec37efdd83aa3d9bd143cabbbcf08d187e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a61205938433b75fbb4a353be694ada857b77a3dec40999755411651c481277",
                    "sha256:8daee5ee94c0c4e97d4a7a8b588b3908b14014332c52bb016a7ccf217728d699",
                    "sha256:a1f1377a4e91067f356d916c9e94b89ac7b0b67151e72adcdb423176a3a6dc9a"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:14:56.077188869Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.267895246Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.045873256Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.892116074Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.901847386Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.937867925Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.946987357Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:47.550288769Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.636405874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:55.989456692Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:55.989456692Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:56.077188869Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:db54e0c396ca8293e80818c872eda8c3ccfe1b5ec30179109345dcb8be044c02",
                    "sha256:30f235bb611196a01513ccb15b8f14878eb39cc6b73dacaf5087004d3db72065",
                    "sha256:c380607e42559f69b7bcc2016d11800c416cc20b507b42091048b15c48d8646f",
                    "sha256:3f31d36e77e89394d583c88193f6bfac9132ef5f8fa23d34ae849c11230ac2c3",
                    "sha256:b05a1292425df7b2fb3c5801a41db1ba0aea3756c3af5cc2f39de94c4decbe66",
                    "sha256:4f34d953f2518b5267f2d5ebfc75658d33de8efb3e4db87f83887d72822750a0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:94a2fc587078913959a6bd367daafb030c53a19501201f704453a11c2463c4b7",
                    "sha256:fa0a8d4b882d61baea90e260681588bed5a892f9412aed68cd6c92852b65e177",
                    "sha256:a61bc7a2061801856a2b33342b6736377c9695c17e7b916bb49266812a0cf854"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:38.875899278Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.249145498Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.344677904Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.814839901Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.824559741Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.832411314Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.840845311Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.310496991Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:13.393712209Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:38.803407261Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:38.803407261Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:38.875899278Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:7865aa16a72ce9494560e4630c3e1460d35c29836633a22f63ef9e57d9bbcf16",
                    "sha256:0b476da29880c714490858dbb8ca0a59c6038ee64ee9f2dde27d5ad718244b56",
                    "sha256:bb88cc70fdd5df8d55a9594f84ab2a5472fba7bf3d5cedb15531dd8905707ef8",
                    "sha256:ef742c5af3085ad28bd59633168ee87a985231e353c50f4355450942d5c788bd",
                    "sha256:c1f4b95fdd84fbc74849411bb7d1585f380a9451d74b3468cac86c4d1328e4b3",
                    "sha256:52aadc0c1195878f7434631f5df9d2e9c707681bb8930edcca8aa8d72ba503b9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:09408b90601c9b2566f0983d775886db7be3904b7fa5e79c597ae2a48f2b8b69",
                    "sha256:d788a54c130b27e0d3f7ef8cd79299bcc7356cffd59f75c7460e593c1ca01a22",
                    "sha256:7ea4761eb34a7c9d8bb158175bcc7eaf8c6078c4b495055d76b9c01037085d21"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:05:59.972752453Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.06484036Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.541377612Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.030916767Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.04164606Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.077330446Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.087977084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.674573037Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.76109544Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:05:59.884626213Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:05:59.884626213Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:05:59.972752453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:283f92790975f677e7c3a578f852abe40145bed179c1aa4864db453e0900b0d7",
                    "sha256:93133571da46b8d245c03a4390c6f2098f55435027d9233cfe53dec0143b627b",
                    "sha256:ac88fa80aa3263b2eb8bf2ec0397d82d1c453130f5efc861f3b0219720d95b65",
                    "sha256:cc2872e29e9d8cc7177290be29374063dfab0222e61889ba7235d0ad9327fcfc",
                    "sha256:14f6be3335df7e5092698a74843ee37a0b4614b3e4605c48d2a7ca44704fd0af",
                    "sha256:1243afdcee894015d8c636deae9ea551b62da31699feddbdb91cbaf3cb05a3aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2bad70d869531b756af915e2668a74d91ee53c5368a6c00fc8492ea2c69eb622",
                    "sha256:bad6c2525e28829d9544766246920b74582441fc4ba46f6e8a677b805e9bd697",
                    "sha256:374c276f3c487575b0be24bd4a2e50168e3c3eeefe665e754e352e9d7f8115db"
                ]
            },
            "variant": "v8"
        },
        "3.15-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.184373161Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:15.614205761Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:3982c510455cc0ceea8cf8dd0b50b69588e35fd4f84522cb4000582c73781672 in / "
                },
                {
                    "created": "2023-11-30T23:11:15.705929481Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.511063202Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.673913948Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.105953612Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.153840858Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.16400185Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.17540438Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.625607957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.15   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.738819084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.102768893Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.184373161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.15 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5d3a1326148f9d026568b20b7dcda09e350227b61039b689a6fde54ea7828b66",
                    "sha256:1718109852acfdbab4872e7df8e61f3a4b5306ebecd869c4f6d807be5174f204",
                    "sha256:8147ed565bd6e6295311e0d9097ef9b1a5bf5af5be4417ba81b073647ec357a2",
                    "sha256:8d5a87d4493719c8304d9950ac3cf214b20e24faee93a9a090e7e57903c41fe1",
                    "sha256:e870f4b627eefcbfcd5611eff133afca69efce7b8f8ec35c614954e26a4bbd89",
                    "sha256:592db647cd28f6d4b296a5caca67d9a1448d4a718a57f058e7156c1b66782f59",
                    "sha256:d4bc14bae19385fdc9703c5a7c4bd6748348e02be0d44810a799d9b8b9a3cf7c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d32f84cbefe55be7b17a013ec30a44e2be98ccf619cb9ba8566f579d38e2fb7",
                    "sha256:57af513c7d9fff477f2f9d07abc2318137eb8f93ce99eef11396aa46d4d1632b",
                    "sha256:2f1d83a57f74eb3412bd272025cad58bb7f6d8d61c407c9d51bfe945aaf3d6e6"
                ]
            },
            "variant": "v8"
        },
        "3.16": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.47186385Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.47186385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:d0de88c16f980a2e5a3d2bfa0535f57ddcb6f852ff3d4c540061a2e644864b75",
                    "sha256:520af304b95161ea3e5554de0c810fec6987fe76feeddda051ace45e2772644c"
                ]
            },
            "variant": "v8"
        },
        "3.16-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:30.228949107Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:26.268314889Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cf85500a1f5b87a88587b279c8b8018eebeb3092f402b7e2cc4ad3873e078580 in / "
                },
                {
                    "created": "2023-08-07T19:39:26.357718482Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:48.936485844Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:48.936485844Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:48.936485844Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.870753366Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.74337884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.74337884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:54.755570747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.783843562Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.795467868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.795467868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.531187868Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:55.66432214Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.108989111Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:30.108989111Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.228949107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bf92d2fc2cfdabdc0943f77fb101868515b16d40f6a78826e9ac94d42fa2a6d",
                    "sha256:93b51b9dec9a841ef0a175706e2b6f24b1c8043ffd2526f2106b846954381eda",
                    "sha256:dc832779905be1711f834c4bfc7cf0c792cc92088d741c219b5b7b8b128d2d81",
                    "sha256:6639afb0ef8f9a391a66ff2b950383a1a218b3f5cfccb8e7970460a7ab16b788",
                    "sha256:d84c0d07f1d693c306e175ebb079eb12cb045c7612283b1c72c966322d8b41bc",
                    "sha256:5bb1542d995930173d2399dabb6615eefd998381991db2738e296cd8b6224b8c",
                    "sha256:52a1a1b2b19039de6c8b480dba97f1fe086b7db7fa7f363a086bea71b67df804",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ecf754ba97de5bd0d2ad9fc4b6c24ba2ca618dcc5d79e72c271f6a8da189c5a",
                    "sha256:e7e62fabe05ff704ab7605083b57ac9f2d02fb942fb871293303bbc393164402",
                    "sha256:c5e29f393b76faa278f0c6be38e1b24b09654757f0d15394b35e518a87d10e52"
                ]
            },
            "variant": "v8"
        },
        "3.16-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:44.138222442Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.033243196Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.505559223Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.514202741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.125537407Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.225501066Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.012287194Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:44.012287194Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.138222442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:1ceb38d2eecb9f0a8bbf6326b807e04ba4a43c72ce85f09d7f0e8304f0e754fd",
                    "sha256:ffbbdcf7fa65e10e737f36d8445c383c4b307c478ffc60d118ebca80b810f4cb",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:7ca5b3d67130421a8d2899cca64a276e36d0b809cb755bc0d6f252674f122f55",
                    "sha256:92608796f6df48a9e71b645b8baf34db8b71f98d607a395ada9c7485fcd56c02",
                    "sha256:05694f71fc42eeff0b334fe232d44cfb355ba6001c499cf5ba143d368bd3f528",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a6f37c5b4af0e52b41bdebd28fedca279e2eb472132d90d887d63e106de2d2d",
                    "sha256:3798686e9a198d33beae27d5d09b45f893070b875ae2402ba472439b3ecafa9f",
                    "sha256:e6cd87399e3007cd308a225157a6baad6208eab985b64ba63468a7ef302edc1a"
                ]
            },
            "variant": "v8"
        },
        "3.16-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:04.829757389Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.460987765Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:45.915869671Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.925541706Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.532773845Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:46.641997078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:04.71713761Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:04.71713761Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:04.829757389Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:a01956d7a69477c35afe7a9199349fe7dd59605567a0247411a7d791e57114ff",
                    "sha256:d59f19be416cc496d73be3a5daf1c69e3920867986aaa67fda88abc38a6ab6fa",
                    "sha256:2d0356040e6b3fecf0a2b65263f8a10438444bb787a65bdb5fe77c574bd6e0ec",
                    "sha256:f5c3072fbac0bd48976e9d02617069efd6d39bdffda15bc18c5fe2c75bce5002",
                    "sha256:ae15eb0bfcdc047f112704fdda1bac5af387045a776882650febf47324add159",
                    "sha256:8504577380ae2143eca3bdea29d87cbdf4d95bdbebf8b6ced9638df97881f7cd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2b86c5b31dc4ba9ab3ef31aaf666d95df03776d39f3f514f00d26db7e3c749da",
                    "sha256:62986b6d2aa1d62a2ceb73e715a4808a2138861e19228390edb8cb66820ce148",
                    "sha256:f9881aeac19c4e1afd8e43c4ddc5a1d3f212975aecd9113be75ddc6346dc0fb7"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:01.302788933Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.228059731Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.124832389Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.133489485Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.634244025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.726176061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:01.22876955Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:01.22876955Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:01.302788933Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:48411b679e4a81ea4e0dd90f1adb80868608433d1e5922f291218b39ecaf9206",
                    "sha256:bbfd3d751f8d48fb5dcb33e4f01a8e595e42de56682f303cb8f2ac51a5fa4c39",
                    "sha256:26edee748661616c5a78fea11a739162ae720d88a32f3841ec385f76e103a6ae",
                    "sha256:017d65142b660f3442220069defd556441a5227babe9f4e235ded83a163a6513",
                    "sha256:ebf9631c7185bab3df8c83634dad3b5b2fcf18c5b3b0c8a5147f6d08cc3c255e",
                    "sha256:164870c3c02d3c2eba33cca708bbec1145ba99154f28a46ff3c38e2bf8a4d0d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a1434b186d6b03672474327affc103f8a6a51e03f5fae7f675f6888e07fe441",
                    "sha256:053db61557775ed409735f286933841bcf7c32ded8c790ab754b2f5869024e41",
                    "sha256:0ea60d833a044ad9b31c36d0eedd2b42582c1be1c171fe0cc3f768c15742624a"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:44.505319418Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.558813267Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.043938441Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.052376287Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.542969416Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.626536218Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:44.432887456Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:44.432887456Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:44.505319418Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:b80d663732cd5ed672b52f49ce37b118b4c39c1ebc414a1f8d10b21cb1484600",
                    "sha256:d977b57ec4b41c0b02f7551114f5a960ef7ed1008baa1c10fd2c06466fecf7aa",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d93c91ace80682973bc37de7256dd0df9b164e56412172b0b2e42d74045a0a56",
                    "sha256:4f448571209813d78b94752e0a32dbb085f5b17889d0430f62ca1b6ce37fc751",
                    "sha256:e90d4175535ae20aa66a1ed246d3e7e8a4a917f6298707ca8b254d4e5b170068"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:00.153719502Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:52.26242401Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.113305031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.142388545Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.706626087Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.790502945Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:00.078823512Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:00.078823512Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:00.153719502Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:843dd3f7e4310d4fedf408a1a5a17fb62e87150ff8d51ec884d1f2d71c1ec87b",
                    "sha256:c6868007fb2ffb25437ca5670494724481099531bd491065a67188c2f530e306",
                    "sha256:109a5741e0b32280bf122a8c6d2b1f9b50213140ce2c81aa3f3126a6a7d0d4b2",
                    "sha256:7b4bdb6c3c4004c1153b19b2624708afc26a7d9e96ed3c1b15ab0f0f57a20feb",
                    "sha256:6b32de8e6ddc7fae302b43a4d0b6f931a684645e2aeafb67a0c964172bf897c9",
                    "sha256:cd4274c81abf9066bfd04c40aacab28193cd8dc0baf72542f2f4542ffab32d1c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:23f97c6d9d00f3f5d2fde632ada8158e4b7e45332114d961fe5bf2a21d3c8113",
                    "sha256:64e2ac5307909903325c2830a94320a12942974f42a26f7a8b2ce53f5ae26677",
                    "sha256:0c7220d0eccdf34f5f11c5520110722442065bfea909cbd5d46b51f8d0825b0d"
                ]
            },
            "variant": "v8"
        },
        "3.16-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.47186385Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.47186385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:d0de88c16f980a2e5a3d2bfa0535f57ddcb6f852ff3d4c540061a2e644864b75",
                    "sha256:520af304b95161ea3e5554de0c810fec6987fe76feeddda051ace45e2772644c"
                ]
            },
            "variant": "v8"
        },
        "3.16-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:52.167228682Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:53.21741275Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:12.840083994Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.342715288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.353081876Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.878660455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.969546123Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:52.088524479Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:52.088524479Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:52.167228682Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:549c5a70596c68f8b10d5159fd8f0de37d4441fd54bfc4b9e3433bf0dc921457",
                    "sha256:cd4092f255f5b2834061431f3bd14d407807ead3a078b653aa142dbc49a4b5ac",
                    "sha256:5211dca4de3a063f3c6d93e9d56e0753dfa09ff6f63050887c791c08077af490",
                    "sha256:f76faddbcc7229391fe4127487ef995c51c2d72ed601bb2d92dddf649c5e6573",
                    "sha256:9aa66a20c677dfae7c1a0434f26446138b6e57d1c54f1c2a7ca4682597c50ca4",
                    "sha256:c3a0e116878838836cee09a1d9fcb11ac84f354da4cabf9f6249b0fb2e414417",
                    "sha256:34f6e3d1bfd4f5aaa5ec1f0ffb915478b38ba538bb8eaf5ba883c41572148cc7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:508a3c41b7068da374ec6de720a3be78bf69b78cd78d0652c1369ca869b908d3",
                    "sha256:ea466b0984666f36e0dbda193e987ccae95387d71d8675332a2e55f428768e53",
                    "sha256:972540055326f325f77e235cc0a4e089ef9f6881fa6a19d3c87925e20d127539"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:27.466740196Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:26.268314889Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cf85500a1f5b87a88587b279c8b8018eebeb3092f402b7e2cc4ad3873e078580 in / "
                },
                {
                    "created": "2023-08-07T19:39:26.357718482Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.341721624Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.341721624Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.341721624Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.027933435Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:45.856783022Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:46.83738246Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:46.83738246Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:46.855536833Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:46.908677354Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:46.928157925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:46.928157925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:47.7500263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:47.904683769Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:27.383528055Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:27.383528055Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:27.466740196Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bf92d2fc2cfdabdc0943f77fb101868515b16d40f6a78826e9ac94d42fa2a6d",
                    "sha256:e621f5d45b2f92eb9f731f3ec76461c5e05896c28b8f38ef61513c4ee53adb03",
                    "sha256:85e2ea1e0740d1ee33793d4324b58f44ccd0008219763f0f2bc1b618692fcabe",
                    "sha256:246f83a134d27c013b8291a759cdae8fba35e12bff94fd466e5e6786aad8c926",
                    "sha256:cc10a1fe93b3aae06d2f824351b29cbe5c3a058f30b970ce8f263efe7acbf5b6",
                    "sha256:7f2ccc44372a689253fd91143476aa6d067e7abf4ce18574294db44c9b0e4ff0",
                    "sha256:df9701b06ab2429a774f9cdbc160efd623419b1f48d28599845f25e37319e14d",
                    "sha256:205774a9b1e6e8cb09b751936d4e67eacb583511f2f5f6385a07f08acc80bea9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d82d9f0fa4e7d589bc160b9d570d5e00febaf97a23a1d4b8e83ad90e44c896e5",
                    "sha256:d92ba42940614eaf64eab5986e8ea803239addd5d782f4887d824ce0e05d83a1",
                    "sha256:81c1a2b19c884ca3c2dc63f955f413cc6172898ba746d08b516c534f39eb8b86"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:44.986504901Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.785356409Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.785356409Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.785356409Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.022786672Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:07.662900432Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.184320109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.184320109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:08.194597407Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.204366025Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.215137315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.215137315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:08.686661839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:08.821031175Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.864864409Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:44.864864409Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.986504901Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:1ceb38d2eecb9f0a8bbf6326b807e04ba4a43c72ce85f09d7f0e8304f0e754fd",
                    "sha256:e7baf277bca03bdf8c66b8973df7287d3dcb9678318cdade27781a5cd509d9cb",
                    "sha256:d92e219ee7de0075f69a291d6faf3089e9ac47f8a876da1ddf3540d0e57a28ce",
                    "sha256:31ad8425560d05a532d150a9d2f0e3a99fae3291c50580567275a0ea78e5315b",
                    "sha256:631cab598b2b3e4d2ec65ee1d58ec9186f2f76261111c1aaec9e05524997d122",
                    "sha256:c4be90aaa6f598178773aa69d68b480e0f1792c8327d58a2821a6eba02b2a934",
                    "sha256:e8305b98dc8d2cb39ea39a4563785c99cdd043e2173f91e3e158bb97f1f5b664",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4acaf00d72c94215e378697ef5262e4a89f9343dedabb03a85b24400fd2e5425",
                    "sha256:fe22010010d9c12efdf48dfa5af40cd40b51e8413d6d3d54c09d81fb8d85beca",
                    "sha256:ee6aa352691c62e90b2d3e4425944c1e61d768e2339d9d9c9f7258d44ada4224"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:05.717799385Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:38.863907638Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:38.863907638Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:38.863907638Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:42.425595245Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:03.669057775Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.275893631Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.275893631Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:04.285146885Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.323014891Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.350113428Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.350113428Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:04.854373494Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:04.938759115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:05.603283162Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:05.603283162Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:05.717799385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:82b4f63fcd25dec48526e8e5bf4df496490fc16d38b731011c159029362bbe70",
                    "sha256:cf22e99173a60b0c3148be90bdc7304ce34d2674c00699f8535eb3dd062155d6",
                    "sha256:31edf243e39a44f935bd884f5f3bd759e5083a5107e82b13cb3ea9e6a483f831",
                    "sha256:b418122e22f4a25dc504e3925257f5ca6e37d44035d504b71ea76c50f2fc3cfd",
                    "sha256:c0ecc977c41a237bec49dd00b254e27f3ef958e204d4eaae2e8c2b5291abac33",
                    "sha256:3d9576703cda752a3f6634a4d6c1a8dc10b3ff63dd20cc400575eb5e4362f680",
                    "sha256:75b0b8404e934cfa65941a7d5a01b7e18404c794195b77c0dab54cd8f543c525",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:99978b8d0dde93f4c2b7533d8c67de1f7c86374fa9af76108b212c33d8a187a5",
                    "sha256:08c7dc9d86c9cd80916c39a5c059d4e6b7ed078bb01a3f9b6580a8b924d48bac",
                    "sha256:796c63e248cfcc152c708b12d59e411377dfd3a6b0e8a99f4ae8a36b845e0b58"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:08.656717839Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.010081698Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.010081698Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.010081698Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.875984158Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.03603787Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.983909314Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:12.983909314Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:12.99376265Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.037792145Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.071922964Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.071922964Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:13.630329205Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:13.717087799Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:08.576613283Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:08.576613283Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:08.656717839Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:3765b7aea0127f4c46913d99ff8dcce56fdbc07f4cbb32c183b5c4512f48ae21",
                    "sha256:d9f00dce96f68150eaf1819de34fdaf533e6e26f2e974923be921cac6a11d3cf",
                    "sha256:dc338f66e28e11a760da58fc3d2dc52681af8fb12f3d5f5e0e1fc13267146c6d",
                    "sha256:910eeb9f71cd3176bfede309f5e0947f9f1e4037d4f8648c87be43a29f150380",
                    "sha256:a4cfc1d8a18d2ed3e5cbdf698722104babc584f65117a4744cc853bd55cb3476",
                    "sha256:4a4db771994c5b5bde18161f3bb6c9c2a58f0e4839f8681ae57919f7283051e1",
                    "sha256:8f8103b4499bf3522d050accd0863389ce264121da165ae97c93632966f9dc4d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:31a9f0c50d722f72fa0e8677962a9d9a27902d22fabde108983e2e0e8d86cd63",
                    "sha256:5f8e0dadcca0e9a1eae2f9b4ee94e9568dfaec416109a807925867754bd60c12",
                    "sha256:14ef2687d1ecfd3c3126f3d3ddf626a4adf64f86b52f34afce83da49cb4b8bdb"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:54.942284601Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.132128519Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.132128519Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:13.132128519Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.117062131Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:38.919717251Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.780774245Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.780774245Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:39.793765153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.837348729Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.849687927Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:39.849687927Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:40.319474638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:40.419934082Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:54.870420992Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:54.870420992Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:54.942284601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:e98579f19c68943e55387e816223594e1c3445dbdf44ec8ac832081775b32907",
                    "sha256:96dd10e63c4540902a4d9c62d420552af2a27150eb4c5967aaf9808a2aebca82",
                    "sha256:ddf5f377eab5e4af0d7ea2f958fca1ff94f180f16d894387e87a8ef724c9a727",
                    "sha256:94e138a1ef597aa4b1081842dbe75d17dbb9e8e6cb812cbba8f41c1d22ff720a",
                    "sha256:72df1678866f3f3deeda350de9f1b5708415e0325e5969f5fb62d40ae01d57ae",
                    "sha256:a810980c89b3bed4ad755d82039330f5ed539679cbc5fcfaa07ee4e7ffcac38f",
                    "sha256:e3cb17867c478c5d548503f38cc8d3e921fd6ff1b36e03780797488e94c0fff4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37109cf4f76e634d9c381035369ec2e53d23be9da8ef157dfab4e364fe2547e1",
                    "sha256:cadba7bcafaebb2cac2d661ff689d6769954746ad7768cf284d3ba5890f81427",
                    "sha256:b34f3077aae0923bb1649dce01f2ef5b396722548bf7eadb94eb1b4c229769d2"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:14.030900364Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:43.329519249Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:43.329519249Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:43.329519249Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:47.453844048Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.353351037Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.00248464Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.00248464Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.01157951Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.0515101Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.079461051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.079461051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.559796307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.648168203Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.953012715Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:13.953012715Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:14.030900364Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:8510a3f6c5da66626658588ac389c24d48433ac6020652f6f081329b83b8eadf",
                    "sha256:122177479b24ef8d2bbef6d4ac39e7252e42044a6243c44f627a2de0e48f835b",
                    "sha256:31f3e69b7ff58f0e2f3540c03172ae71a6af2b41a812b6455f6609e93df0c8f0",
                    "sha256:8f46997afa9462824943807895acfcfd83295801930e7d730a838f060149c87f",
                    "sha256:01e7ea254fe392dd8a45fa3afce34c411d4e1437f6327f8f599d1f0f2c94b001",
                    "sha256:985de276cf6c652664faa9f409650cee112c5da6ce607a4c35c914531be41c45",
                    "sha256:7cc8648d1f416704880aacb59f97281493d719f9990ccbddbd8f9443d6bf54f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d61a5130c01d1258f85cb450e0e9ca0b5bb346858626276fec3761dfb29e09f8",
                    "sha256:b879eda0c47f9290ad098f0b8e235f14fcfe3b53fc0d5414070235e7779dce9e",
                    "sha256:2cfc9311aaad29474a205138d84d6710a4b83347b2c797ee54947d1db54b2b40"
                ]
            },
            "variant": "v8"
        },
        "3.16-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:52.167228682Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.181134647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:53.21741275Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:12.840083994Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.333981084Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.342715288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.353081876Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.402609317Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:13.878660455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.969546123Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:52.088524479Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:52.088524479Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:52.167228682Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:549c5a70596c68f8b10d5159fd8f0de37d4441fd54bfc4b9e3433bf0dc921457",
                    "sha256:cd4092f255f5b2834061431f3bd14d407807ead3a078b653aa142dbc49a4b5ac",
                    "sha256:5211dca4de3a063f3c6d93e9d56e0753dfa09ff6f63050887c791c08077af490",
                    "sha256:f76faddbcc7229391fe4127487ef995c51c2d72ed601bb2d92dddf649c5e6573",
                    "sha256:9aa66a20c677dfae7c1a0434f26446138b6e57d1c54f1c2a7ca4682597c50ca4",
                    "sha256:c3a0e116878838836cee09a1d9fcb11ac84f354da4cabf9f6249b0fb2e414417",
                    "sha256:34f6e3d1bfd4f5aaa5ec1f0ffb915478b38ba538bb8eaf5ba883c41572148cc7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:508a3c41b7068da374ec6de720a3be78bf69b78cd78d0652c1369ca869b908d3",
                    "sha256:ea466b0984666f36e0dbda193e987ccae95387d71d8675332a2e55f428768e53",
                    "sha256:972540055326f325f77e235cc0a4e089ef9f6881fa6a19d3c87925e20d127539"
                ]
            },
            "variant": "v8"
        },
        "3.16-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.47186385Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.47186385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:d0de88c16f980a2e5a3d2bfa0535f57ddcb6f852ff3d4c540061a2e644864b75",
                    "sha256:520af304b95161ea3e5554de0c810fec6987fe76feeddda051ace45e2772644c"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:30.228949107Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:26.268314889Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cf85500a1f5b87a88587b279c8b8018eebeb3092f402b7e2cc4ad3873e078580 in / "
                },
                {
                    "created": "2023-08-07T19:39:26.357718482Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:48.936485844Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:48.936485844Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:48.936485844Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.870753366Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.74337884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.74337884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:54.755570747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.783843562Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.795467868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:54.795467868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.531187868Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:55.66432214Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.108989111Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:30.108989111Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:30.228949107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5bf92d2fc2cfdabdc0943f77fb101868515b16d40f6a78826e9ac94d42fa2a6d",
                    "sha256:93b51b9dec9a841ef0a175706e2b6f24b1c8043ffd2526f2106b846954381eda",
                    "sha256:dc832779905be1711f834c4bfc7cf0c792cc92088d741c219b5b7b8b128d2d81",
                    "sha256:6639afb0ef8f9a391a66ff2b950383a1a218b3f5cfccb8e7970460a7ab16b788",
                    "sha256:d84c0d07f1d693c306e175ebb079eb12cb045c7612283b1c72c966322d8b41bc",
                    "sha256:5bb1542d995930173d2399dabb6615eefd998381991db2738e296cd8b6224b8c",
                    "sha256:52a1a1b2b19039de6c8b480dba97f1fe086b7db7fa7f363a086bea71b67df804",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ecf754ba97de5bd0d2ad9fc4b6c24ba2ca618dcc5d79e72c271f6a8da189c5a",
                    "sha256:e7e62fabe05ff704ab7605083b57ac9f2d02fb942fb871293303bbc393164402",
                    "sha256:c5e29f393b76faa278f0c6be38e1b24b09654757f0d15394b35e518a87d10e52"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:44.138222442Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.871131441Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.033243196Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.496497041Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.505559223Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.514202741Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.522898396Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.125537407Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.225501066Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.012287194Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:44.012287194Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:44.138222442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:1ceb38d2eecb9f0a8bbf6326b807e04ba4a43c72ce85f09d7f0e8304f0e754fd",
                    "sha256:ffbbdcf7fa65e10e737f36d8445c383c4b307c478ffc60d118ebca80b810f4cb",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:7ca5b3d67130421a8d2899cca64a276e36d0b809cb755bc0d6f252674f122f55",
                    "sha256:92608796f6df48a9e71b645b8baf34db8b71f98d607a395ada9c7485fcd56c02",
                    "sha256:05694f71fc42eeff0b334fe232d44cfb355ba6001c499cf5ba143d368bd3f528",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a6f37c5b4af0e52b41bdebd28fedca279e2eb472132d90d887d63e106de2d2d",
                    "sha256:3798686e9a198d33beae27d5d09b45f893070b875ae2402ba472439b3ecafa9f",
                    "sha256:e6cd87399e3007cd308a225157a6baad6208eab985b64ba63468a7ef302edc1a"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:04.829757389Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:11.583469343Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:1efd26ad638f3c262f37eb81a32e3f026121dcd60479e91c42097bfc8329ed3b in / "
                },
                {
                    "created": "2023-11-30T23:11:11.682508872Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.17844687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.460987765Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.905603291Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:45.915869671Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.925541706Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:45.934670022Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.532773845Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:46.641997078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:04.71713761Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:04.71713761Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:04.829757389Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:4b1641f97782ee3dca1f15f79458a94ede02bde617df61aa077ec06aa8211f6b",
                    "sha256:a01956d7a69477c35afe7a9199349fe7dd59605567a0247411a7d791e57114ff",
                    "sha256:d59f19be416cc496d73be3a5daf1c69e3920867986aaa67fda88abc38a6ab6fa",
                    "sha256:2d0356040e6b3fecf0a2b65263f8a10438444bb787a65bdb5fe77c574bd6e0ec",
                    "sha256:f5c3072fbac0bd48976e9d02617069efd6d39bdffda15bc18c5fe2c75bce5002",
                    "sha256:ae15eb0bfcdc047f112704fdda1bac5af387045a776882650febf47324add159",
                    "sha256:8504577380ae2143eca3bdea29d87cbdf4d95bdbebf8b6ced9638df97881f7cd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2b86c5b31dc4ba9ab3ef31aaf666d95df03776d39f3f514f00d26db7e3c749da",
                    "sha256:62986b6d2aa1d62a2ceb73e715a4808a2138861e19228390edb8cb66820ce148",
                    "sha256:f9881aeac19c4e1afd8e43c4ddc5a1d3f212975aecd9113be75ddc6346dc0fb7"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:01.302788933Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.710201249Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:47.228059731Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.1152871Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.124832389Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.133489485Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.167939156Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:48.634244025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:48.726176061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:01.22876955Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:01.22876955Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:01.302788933Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:48411b679e4a81ea4e0dd90f1adb80868608433d1e5922f291218b39ecaf9206",
                    "sha256:bbfd3d751f8d48fb5dcb33e4f01a8e595e42de56682f303cb8f2ac51a5fa4c39",
                    "sha256:26edee748661616c5a78fea11a739162ae720d88a32f3841ec385f76e103a6ae",
                    "sha256:017d65142b660f3442220069defd556441a5227babe9f4e235ded83a163a6513",
                    "sha256:ebf9631c7185bab3df8c83634dad3b5b2fcf18c5b3b0c8a5147f6d08cc3c255e",
                    "sha256:164870c3c02d3c2eba33cca708bbec1145ba99154f28a46ff3c38e2bf8a4d0d7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a1434b186d6b03672474327affc103f8a6a51e03f5fae7f675f6888e07fe441",
                    "sha256:053db61557775ed409735f286933841bcf7c32ded8c790ab754b2f5869024e41",
                    "sha256:0ea60d833a044ad9b31c36d0eedd2b42582c1be1c171fe0cc3f768c15742624a"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:44.505319418Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.290256756Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:07.558813267Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.032193261Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.043938441Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.052376287Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.06118805Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.542969416Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.626536218Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:44.432887456Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:44.432887456Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:44.505319418Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:b80d663732cd5ed672b52f49ce37b118b4c39c1ebc414a1f8d10b21cb1484600",
                    "sha256:d977b57ec4b41c0b02f7551114f5a960ef7ed1008baa1c10fd2c06466fecf7aa",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d93c91ace80682973bc37de7256dd0df9b164e56412172b0b2e42d74045a0a56",
                    "sha256:4f448571209813d78b94752e0a32dbb085f5b17889d0430f62ca1b6ce37fc751",
                    "sha256:e90d4175535ae20aa66a1ed246d3e7e8a4a917f6298707ca8b254d4e5b170068"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:00.153719502Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:47.707938157Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:52.26242401Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.104500791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.113305031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.142388545Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.151132058Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:53.706626087Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:53.790502945Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:00.078823512Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:00.078823512Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:00.153719502Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:843dd3f7e4310d4fedf408a1a5a17fb62e87150ff8d51ec884d1f2d71c1ec87b",
                    "sha256:c6868007fb2ffb25437ca5670494724481099531bd491065a67188c2f530e306",
                    "sha256:109a5741e0b32280bf122a8c6d2b1f9b50213140ce2c81aa3f3126a6a7d0d4b2",
                    "sha256:7b4bdb6c3c4004c1153b19b2624708afc26a7d9e96ed3c1b15ab0f0f57a20feb",
                    "sha256:6b32de8e6ddc7fae302b43a4d0b6f931a684645e2aeafb67a0c964172bf897c9",
                    "sha256:cd4274c81abf9066bfd04c40aacab28193cd8dc0baf72542f2f4542ffab32d1c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:23f97c6d9d00f3f5d2fde632ada8158e4b7e45332114d961fe5bf2a21d3c8113",
                    "sha256:64e2ac5307909903325c2830a94320a12942974f42a26f7a8b2ce53f5ae26677",
                    "sha256:0c7220d0eccdf34f5f11c5520110722442065bfea909cbd5d46b51f8d0825b0d"
                ]
            },
            "variant": "v8"
        },
        "3.16-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:44.47186385Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:05.235107209Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:0808047bc74f297cb13abd2ad67e5778ee4abaa5d69f2c5b133d11c0ce0e51aa in / "
                },
                {
                    "created": "2024-01-26T23:45:05.336336824Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:57.489592083Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:01.604879995Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.469599581Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:02.478694982Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.486557107Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.516895843Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:03.06882862Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.16   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:03.152548296Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:44.39693588Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:44.47186385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.16 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:edbfd2db8ef28e86f5114c34e426bba38bf1a2b9f3aef4dfed6a27c4581f6c4c",
                    "sha256:32067593c872c5acab67388a46f3b83803e9cf638feeac0ad4b63f4c5e7db21c",
                    "sha256:bbf6206e1d96039eb78e415c09969e90409208f51b8854f27862a915015786ea",
                    "sha256:a9999f265a93d65276a725d9c93c0a79cf47fcfef90682c3c7dd3c294d70be0f",
                    "sha256:c89c9727dec9f14f0ee77718ba2b4dcb0369a0f34c3494df7fab55e0555eb53a",
                    "sha256:4944a6d8fa119cce628d139e82fc4f139e1856ca1455cf39be0bd32dfd2bc06a",
                    "sha256:448f87216e2f09e00cff8c560a0de2de340abd93dfc3242bfdaa32b0fb0bbea8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:72c91f0d79fbe4cb84f8a9d0c29b315a7afb16595658ef958abcd285f15b5394",
                    "sha256:d0de88c16f980a2e5a3d2bfa0535f57ddcb6f852ff3d4c540061a2e644864b75",
                    "sha256:520af304b95161ea3e5554de0c810fec6987fe76feeddda051ace45e2772644c"
                ]
            },
            "variant": "v8"
        },
        "3.17": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.165127936Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.165127936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:9af110d4fc5265deac17bc4c26fddec3b67f04b7cb9f7afa75f62e6d73000425",
                    "sha256:4af7b63caab42e5d8fe4cf8698de13cd71bc90f28647e203c89f7ab6c950dd99"
                ]
            },
            "variant": "v8"
        },
        "3.17-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:35.201184385Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:22.888379446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e054a25c83111adc857a7f988336ee40eea5e1794ed30a80d465e8d472342e2 in / "
                },
                {
                    "created": "2023-08-07T19:39:22.987747086Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.946551486Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.946551486Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.946551486Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:51.807961441Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.317362301Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.317362301Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.326055881Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.333795714Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.355746815Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.355746815Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:53.175982985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.291747758Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.059689154Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:35.059689154Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.201184385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d9d24a8c2a7ad73a7247738096e24c1ef2c2b02a3690dbf7d63641d26e26cb",
                    "sha256:7fd1727dd674aeab91c4e11a0ab7c8758612c5a8dd6c5ef08243db8639501816",
                    "sha256:2094c258e00478d4cb6790f251f8d7d4ba41a58c830cff4f9a8bcccfe9e834e3",
                    "sha256:0665b154cb9e4ef3a94b57ecea9fe2e936b6d1163a93293ed26f7731b08c3947",
                    "sha256:7b00f13bf532f844daeec617cd7bc2fb2710c0bd22df0387cbbb1a2bf07ac5e9",
                    "sha256:7d7557e43af9f80bd2abd151b2c1d72f1e25a17411d85acfd0fdfad62e855df8",
                    "sha256:41c8800bd7a99d44b872bf63e8a78b4cfa17df6cd25b6034ae4c1d7d43df5e58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119849db6082bd82a08ba5892b2e0b45a1c998da616ffe39a15ae21c73bb0630",
                    "sha256:2564043a4fc2dd95862922820d1b83303fecf76a7d03d9bad24cd1a19809134d",
                    "sha256:41c0ee0e505a243b3d75eb1586952d1a27bb24b7bc6b0d5cd2d8da7465964ad6"
                ]
            },
            "variant": "v8"
        },
        "3.17-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.464332262Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.645943126Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.089658925Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.101214939Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.858857472Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.951451797Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.32578103Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.32578103Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.464332262Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:4f1040f1689456c65de714add7c97d18e944d6919b5e49029b65e32b57826166",
                    "sha256:fd502bc626ed9463c15589314bd078d0d4f8fdd9bdda504a9152b59978fed6e8",
                    "sha256:aebdeaa76b09c94dd2d92414f8f9147de6e2615043fcaec024ff9193520965b7",
                    "sha256:92e997c867e14758a83f2430b45c53ee4268e7e2ec7a8d69370c16e5c61d6d9a",
                    "sha256:66b8499fd02566bc22dfc9466b56efad7dfba68759bb28c19968441ed617f4e6",
                    "sha256:97dd803c41f0d5ddd8f6e2204c40c2efadcdd5d6220812d5cbf7f3a9a455a132",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b96923f2e2a1c602b2f491d344e6359f84a9892bd90f8fe42b819ce9a1f2fc85",
                    "sha256:a9e4f0abb509a5941605cea6204f48f26c8ef09b17274e3d66b050b776653c28",
                    "sha256:2b0a823f173a5987f65ff61f7e880aacb8c6aa518e4de219f85e0f97c5dc68f9"
                ]
            },
            "variant": "v8"
        },
        "3.17-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.561428244Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.502233696Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.277549163Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.292832201Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.189039764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.309754582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.443976001Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.443976001Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.561428244Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:c16955a0ecfce47414a3c42328d056bddfddb06ba1ecad69fe0193da39249670",
                    "sha256:7594a9fe9c0c630895e2704ead844dd0c662847540136da8cd6df70ae666a874",
                    "sha256:ef2187d9c0535d904b4da69b7b0ff8a01b98bf806b11d127c97286c39f8fb2b7",
                    "sha256:7df94082c1e4102f6cebebb265f0c2ada4d35a3dfbedaf4d4c3324d24ab118e5",
                    "sha256:686aa97ef0cc3dbaab735b28f6cc3ba5f0ca3ee4e63c655c764568c86f5110da",
                    "sha256:34770ea58a4b0dd4c91ef0ecd08961b6fde2313161239db3868a03920f612b60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d82dadebcb5f55b9a71cef3be8a2061575ceb97898dfe50856e0daabc5abce7e",
                    "sha256:c203c365c3ad5c8c53499b3ee24a7f35a81b839df78af1ecaa9a4a1ccfa09697",
                    "sha256:72dd549c378238d37bf10455d76bb64123b61c1c44f51dfa7c860a15ad6554c0"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:00.036788429Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:44.644266847Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:45.206630865Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.215357193Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.085878664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.19217519Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:59.954259772Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:59.954259772Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:00.036788429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:12aa3e676e14ba34bbc34f0b3af3b4973e710a45c65ab3c79b37249ae33aa6ae",
                    "sha256:7b6df875a1daa78f41f82a0b1fdc84c7b311e846f72fc3c795559f3f44697715",
                    "sha256:40814a5b2db046dadadee5fcb08c69f99619e0907ff2a682836c455415e9d8e1",
                    "sha256:0d1faee003a74a77d75cb69162a721df8085b74e35b4c26ccb2ef09179c0e93b",
                    "sha256:62dd898ca9dc0722648d04f8d613b78026a050f3eed9900ec323308dc23bf7d0",
                    "sha256:e4052305ab106555798772e270e77ae291e6a2c69e9a4221cf5c88de2e3fcea9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4f15c21ca4db42fe2f51cb6ccf032202af9cfc5c114e3a7498cdc7251a3be728",
                    "sha256:c556dab157bb2539149def7bd910413e2ea4848c6cbb514a4ebc5f5a69234baa",
                    "sha256:8fcf15be1eede1883ba5b6554cb51d4a520bb6e23cf459f5e5eb38aa169041c8"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:40.61602877Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.298894775Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.748198814Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.780118622Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.561995331Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:09.650580096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:40.54137869Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:40.54137869Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:40.61602877Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:c9fb2fbe95b60168dc6519fa8be3c51978965b5da4282cc87fe8637769dd3045",
                    "sha256:7d8c0902958a983ac2cc504cf605cbc37494fa443bd0b2034f31240e78fb482c",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d154d89911b4ea15a696d4fc7b0ad310450ed86ad7f2e4e2488ce64442b363d",
                    "sha256:b6d1a943d854c1c01fb3740a2e834f9e5d15d83184f537b5a716bdaa1f9ffafe",
                    "sha256:3dc91eff9c1c6cfd201036c734f3043aaad4b1bb6f10629e4dcb6309663dab29"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:05.230066898Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.604895531Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.023372368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.063123512Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88313006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.9760236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.155483495Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:05.155483495Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.230066898Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:6f5063e38a8be7df8372695159f4eecf15f11dd29c9198de1a342b892d1026c9",
                    "sha256:661a7aaeacced283a6594b0c30a562bd55c182861ab9d6b2d489df3fe0b2d397",
                    "sha256:2d7fb1c6c1b7d84b61792b67695513a0dff3c6107aaccb3779681b1b21f4ff89",
                    "sha256:1da1c6a8f45ac998fe2761e4ffbd55632691cdc0f07d82fbba046e9dfe43e1ef",
                    "sha256:602bd362dd105fd3702129a49208a7991139d0f6f345bcffa46b0c6c8ab7a3a9",
                    "sha256:92e86f8c81768970b72ba0e319b4d37c805b9b0ceb8bea4b0d4bc387c6440338",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27801a6917fb1cccf2d5f793da8f0c3888951e54d631d74da338e23655cc6902",
                    "sha256:84b69a7207e552427fa188fd1a25c5839492bf78f0ee817817fea11adca48e93",
                    "sha256:5d23ad21457304362b34ca71e4f2415c55a19439bb4f4701828ca8bd68d6676b"
                ]
            },
            "variant": "v8"
        },
        "3.17-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.165127936Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.165127936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:9af110d4fc5265deac17bc4c26fddec3b67f04b7cb9f7afa75f62e6d73000425",
                    "sha256:4af7b63caab42e5d8fe4cf8698de13cd71bc90f28647e203c89f7ab6c950dd99"
                ]
            },
            "variant": "v8"
        },
        "3.17-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:55.789402233Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.899104175Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.782971567Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.293938765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.326210714Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.131052439Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.233576539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:55.712669517Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:55.712669517Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:55.789402233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:d0e9b744a53292187f94ffab021bd8283069cc88405bdb03166ed5dab5be5a0b",
                    "sha256:fd5ceaa99076611f0327b109a40a7c98102315ab5f9023d5b3394090d91bb6c3",
                    "sha256:01df988521635d98ce5b25b9ea28e04af79f083502c70764dc995b90fcd01f52",
                    "sha256:25b7bf703aceb497af9c6059b4492d8dd4cce8e28a545d104b66dfcfb172148a",
                    "sha256:cbab7aa9ce2055a569475e78c1b1870344229a84a70f9811204998b67e00ff05",
                    "sha256:56af6758d36fa08d569add93ded1bfff98ba598cab907c28377b869625480839",
                    "sha256:c84ce3e1be47c5f0c74c91564f51e2ee3e18e4dc40b86f134309d58c29616b33",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e540443c57af5d569167ac8d85e9489ec85966326883db11147e35b8bb4f0745",
                    "sha256:fcfb69e91378c2fb60eb1dfef40cd3ea01b3a76d51371ff0961783c2f30a98cf",
                    "sha256:4b83597113e42e25e2c00d4029d494aa3c63fb5e86dd5d7fddec5116458970a8"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:43.223704751Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:22.888379446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e054a25c83111adc857a7f988336ee40eea5e1794ed30a80d465e8d472342e2 in / "
                },
                {
                    "created": "2023-08-07T19:39:22.987747086Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:44.568332809Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:44.568332809Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:44.568332809Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:49.285052729Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:18.425354381Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:19.394289828Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:19.394289828Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:19.404274491Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:19.413628387Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:19.423582008Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:19.423582008Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:20.222153354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:20.360102105Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:43.05964371Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:43.05964371Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:43.223704751Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d9d24a8c2a7ad73a7247738096e24c1ef2c2b02a3690dbf7d63641d26e26cb",
                    "sha256:015a42d0a5704d9267552d977751ba611f2898f004c4c05053721406101a5bae",
                    "sha256:870a74e4265ba92c0705a2a6349af12b1e4a2a2863dd4b6fd7859113d23da912",
                    "sha256:1be95b0433c95fc60b59ec7f6c4111ec98281b3b4c3503a94fdaa7ddbd98ee4c",
                    "sha256:af73479e708932664b795036f4bc3d7ba11f39598ba058f638378502d32969e5",
                    "sha256:45dde7be7e8b9e564931418ab82a5e9e51bbb686f6f36510ab2ded0b419bbe84",
                    "sha256:3c4be3298d2242e9f614eee5c63da5c9337de256525596b2b35ad7573ae16de0",
                    "sha256:e4529e735c9d6717573e1a82827a633b53befe3b14432713d43ab0971b6ff11b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39a060721dfc7f80e3a9d859521709c5cd5e1a5377883e5bc727b5dd73f550c9",
                    "sha256:75a76bf92d115cd3b230c6f7bbdcc083af392d76d06f4e9c06038074cb914856",
                    "sha256:e61d3de1d7e62be922e979d6c50bb08b74abe7ad30847ed66c3f3499e879eed0"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:47.679026911Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.684243633Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.684243633Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:50.684243633Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:55.285763777Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:19.977170517Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.010312203Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.010312203Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:21.020295619Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.029155323Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.038619636Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.038619636Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:21.811581546Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:21.942014099Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:47.52735639Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:47.52735639Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:47.679026911Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:4c1b7bcb45834d25a12dd0a7af324f6b52f8b3a5244fa4fde896f972cc608067",
                    "sha256:10ae7ecf92f0deb6ae483975a4fc3707c43dc0c10b0e3a83b01aca483f8df60d",
                    "sha256:98284e0684f56167a0bf58b3c252398b7668fc3cef46fc2d30aa4c56e710bbb5",
                    "sha256:4faebe8382bcaf39481f96784c7ef5746f304555374ed205cca07f9519b5b1ce",
                    "sha256:62be3108375ea614c4bb7d6bbee74eeb2b392c16e00022d1cf33c917d04a6639",
                    "sha256:7be303ce6f1c5849592edd2657e39b5bedf02e58af1aabb1cc052c02c417d0da",
                    "sha256:d3999be818893998dfabf3f72e21ff53dc378c40fd99e404e14ec1a7e2adae51",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:11c45f3ed7b17a189e631bf3fca4814583c087f6a5e5b957719a308db0e4af62",
                    "sha256:cca3a1349f53e94bb0f1c92af79b4a1c0120b500e32086497e52f1215f66fbd4",
                    "sha256:c12e0761f2a7cddca788e8a806504a2090e24ae6f32e987f13ec41276813ebe5"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:58.610200962Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.427714589Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.427714589Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:42.427714589Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:46.943620039Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.638229461Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.275658101Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.275658101Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:11.285434202Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.293693432Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.306982011Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:11.306982011Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:12.081682551Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:12.187519761Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.534967758Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:58.534967758Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:58.610200962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:84d4eb12fc9fef2a79f72d57d82b73cea4e9b846df82928273a3dd31ecaecc23",
                    "sha256:54db10cae451d21e1d2a34f92f42cc0ddf999f112d442a2d351b1506c9d05a9e",
                    "sha256:b77175199e1da3274edd7cd9bee4662670d911488f9e18d06c0334ef6db76c02",
                    "sha256:7fb14e2dfaf7323be605530549c4442ee94d611a7068081c0c2b8360c062f004",
                    "sha256:e96e85e2ea446f4b151037d87770ead5de06c93227fb9ef36faf70bb27e2b751",
                    "sha256:7446c1d0ac03a78c9d2f0762078bbca97927a1a0c3f3c173babf3d3a8816ddaa",
                    "sha256:9e364fc05dddb5097be52b3614e505d418dd07307720104609ca3569c5638c36",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1fbc5df15a7afb9d5d298a92bd81681447d68cc1b8bf470d48c157de9bc2186f",
                    "sha256:31d619c45617da29748c9cc627387308ce52a71b94a9e942b51bc235bb615f3f",
                    "sha256:566fb70178eaae17272fa2056360ec89527752542b6aeaeb5629892ce44ee157"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:09.36515001Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.933194892Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.933194892Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.933194892Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:49.105448097Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:18.119482706Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.046840444Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.046840444Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:19.0566609Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.067560536Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.10338325Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.10338325Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:19.870120444Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:19.958900949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:09.284485364Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:09.284485364Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:09.36515001Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:68d768d4f0fd6e2df7d83527ceaac0917119920eed31903604dec8d701d912bf",
                    "sha256:0ddc4329f98313b640a889cce2e2472ece40b1f218930ff589289db0e0118640",
                    "sha256:67c283e39210f52952edfeff047dbc67630cb2795289385df025d88ea2e76aaa",
                    "sha256:e8631e0d63cc9336d46674570835fab910ae328bdea8b00aa430b2d0b87d2069",
                    "sha256:e269d4cd5cfdae833d8f4c2a723ec722d0cc980501222a666d3a41429cd7ba98",
                    "sha256:93696462153cc48b064b7a793e979974e4320234c702a6549a340658b4f90c8f",
                    "sha256:53ad4434387c81f1c5395e698d636c6044842b5fae0baec3c7c527fce1ac3c13",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:59fb160a56edcf6fa40af92d93d914c811794d0940a57e28ff31130a698affc8",
                    "sha256:85dd9fd6de2bd3f115a5132eb7503b722f7db970bf656626cd700200328bcbb2",
                    "sha256:b81309ea8902ba1b01852e150743601df4cbd9f88b6c558546f55c4c9410dd8e"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.957603383Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.659213054Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.659213054Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.659213054Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:15.892896891Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:43.921466188Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.886540342Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.886540342Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:44.897371841Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.952803888Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.963336038Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:44.963336038Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:45.826448219Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:45.913851107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.872492265Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.872492265Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.957603383Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:e5e7577f32a01bddfd3ae8ff1b02f8fb368a73bb3edebcc2adc230ffaa3efbbb",
                    "sha256:91bafdf2a7a34e3f911a4c9973a9ced042bc8bb83cc8d0380bc3bd5800910f24",
                    "sha256:dc2055df92807198be1b5e57383d8cc17b6f4575da333bff54cb9a4fa9c8227b",
                    "sha256:a663a694732ca446fee2ab892114f3e8d01c0ebb4c1cb0b390361a69d663fdda",
                    "sha256:d2f45e2f7556255fd1b4c27fc8c8acbc3da3e5b169c686b41bb6124ace7a0d51",
                    "sha256:e7fdd8b91f563be99a5c8c7958cd6c1bdbaab14d9f40813bc02c3ab870649ca4",
                    "sha256:aea0eb3eedc3b76536ff19240be21e47f77e2e7d982a29b8188c17859089fa9d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c2cb135ae851f2a3b9561113c4dce67bd88e4f1db2959635a853c9f6521d40e7",
                    "sha256:15a80ddd899cff6478736f02a9473a1d29fb08f00e23c13e4d7d45cdd99f31a1",
                    "sha256:030183463b5d55d3eca059de0ce0fd3d0b356ff0bd31cc1e020bf9ba06ffb45a"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:25.284002116Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.53644498Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.53644498Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.53644498Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.683755416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.900715457Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.405493946Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.405493946Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.415462626Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.424896899Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.474323111Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.474323111Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.268747382Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.355914463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:25.201755718Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:25.201755718Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:25.284002116Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:6f5063e38a8be7df8372695159f4eecf15f11dd29c9198de1a342b892d1026c9",
                    "sha256:c82fadd7b6c21a79a85e7db8c07b53c07f6cb7ba7b7571fb8e44751ae54e68ff",
                    "sha256:706ce327bbdaa60afc950b167abb0365b07976db5d79e5aee89286c385fdab9d",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:eddfd80dcd125314c860746a384e05047b8c1bb56d60a809758feb91518a87a4",
                    "sha256:6f13c0d951f38ca1627f868a0776220dfac43a75b343722f607ad17f47039c96",
                    "sha256:af85d9ff37b36e4dacf8c53f092d88bff9f3ce47f0080e95b28d2458a78d6f07",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6f7abba0fea682f053f7a934d73048abdffda70835b25cd8dbc3cd0109842bbc",
                    "sha256:1e63930b0206ddb427067c1f89314cffb7b6aa6667eb1e072a026d2dbcc64a23",
                    "sha256:dc3067c10c80bc3e3fd18819540d91c575c0fb677396c51830370637122a5996"
                ]
            },
            "variant": "v8"
        },
        "3.17-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:55.789402233Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:51.830345428Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.899104175Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:18.782971567Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.281392235Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:19.293938765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.326210714Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:19.357363033Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:20.131052439Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:20.233576539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:55.712669517Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:55.712669517Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:55.789402233Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:d0e9b744a53292187f94ffab021bd8283069cc88405bdb03166ed5dab5be5a0b",
                    "sha256:fd5ceaa99076611f0327b109a40a7c98102315ab5f9023d5b3394090d91bb6c3",
                    "sha256:01df988521635d98ce5b25b9ea28e04af79f083502c70764dc995b90fcd01f52",
                    "sha256:25b7bf703aceb497af9c6059b4492d8dd4cce8e28a545d104b66dfcfb172148a",
                    "sha256:cbab7aa9ce2055a569475e78c1b1870344229a84a70f9811204998b67e00ff05",
                    "sha256:56af6758d36fa08d569add93ded1bfff98ba598cab907c28377b869625480839",
                    "sha256:c84ce3e1be47c5f0c74c91564f51e2ee3e18e4dc40b86f134309d58c29616b33",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e540443c57af5d569167ac8d85e9489ec85966326883db11147e35b8bb4f0745",
                    "sha256:fcfb69e91378c2fb60eb1dfef40cd3ea01b3a76d51371ff0961783c2f30a98cf",
                    "sha256:4b83597113e42e25e2c00d4029d494aa3c63fb5e86dd5d7fddec5116458970a8"
                ]
            },
            "variant": "v8"
        },
        "3.17-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.165127936Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.165127936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:9af110d4fc5265deac17bc4c26fddec3b67f04b7cb9f7afa75f62e6d73000425",
                    "sha256:4af7b63caab42e5d8fe4cf8698de13cd71bc90f28647e203c89f7ab6c950dd99"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:35.201184385Z",
            "history": [
                {
                    "created": "2023-08-07T19:39:22.888379446Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:9e054a25c83111adc857a7f988336ee40eea5e1794ed30a80d465e8d472342e2 in / "
                },
                {
                    "created": "2023-08-07T19:39:22.987747086Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.946551486Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.946551486Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.946551486Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:51.807961441Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.317362301Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.317362301Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.326055881Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.333795714Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.355746815Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.355746815Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:53.175982985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.291747758Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.059689154Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:35.059689154Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:35.201184385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d2d9d24a8c2a7ad73a7247738096e24c1ef2c2b02a3690dbf7d63641d26e26cb",
                    "sha256:7fd1727dd674aeab91c4e11a0ab7c8758612c5a8dd6c5ef08243db8639501816",
                    "sha256:2094c258e00478d4cb6790f251f8d7d4ba41a58c830cff4f9a8bcccfe9e834e3",
                    "sha256:0665b154cb9e4ef3a94b57ecea9fe2e936b6d1163a93293ed26f7731b08c3947",
                    "sha256:7b00f13bf532f844daeec617cd7bc2fb2710c0bd22df0387cbbb1a2bf07ac5e9",
                    "sha256:7d7557e43af9f80bd2abd151b2c1d72f1e25a17411d85acfd0fdfad62e855df8",
                    "sha256:41c8800bd7a99d44b872bf63e8a78b4cfa17df6cd25b6034ae4c1d7d43df5e58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119849db6082bd82a08ba5892b2e0b45a1c998da616ffe39a15ae21c73bb0630",
                    "sha256:2564043a4fc2dd95862922820d1b83303fecf76a7d03d9bad24cd1a19809134d",
                    "sha256:41c0ee0e505a243b3d75eb1586952d1a27bb24b7bc6b0d5cd2d8da7465964ad6"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.464332262Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:44.555380463Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.645943126Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.078828549Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.089658925Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.101214939Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.109930332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.858857472Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.951451797Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.32578103Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.32578103Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.464332262Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:4f1040f1689456c65de714add7c97d18e944d6919b5e49029b65e32b57826166",
                    "sha256:fd502bc626ed9463c15589314bd078d0d4f8fdd9bdda504a9152b59978fed6e8",
                    "sha256:aebdeaa76b09c94dd2d92414f8f9147de6e2615043fcaec024ff9193520965b7",
                    "sha256:92e997c867e14758a83f2430b45c53ee4268e7e2ec7a8d69370c16e5c61d6d9a",
                    "sha256:66b8499fd02566bc22dfc9466b56efad7dfba68759bb28c19968441ed617f4e6",
                    "sha256:97dd803c41f0d5ddd8f6e2204c40c2efadcdd5d6220812d5cbf7f3a9a455a132",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b96923f2e2a1c602b2f491d344e6359f84a9892bd90f8fe42b819ce9a1f2fc85",
                    "sha256:a9e4f0abb509a5941605cea6204f48f26c8ef09b17274e3d66b050b776653c28",
                    "sha256:2b0a823f173a5987f65ff61f7e880aacb8c6aa518e4de219f85e0f97c5dc68f9"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.561428244Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:07.603746135Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5c66967d6570e36da50c9d42dd8f8f55e6c6a65b92c79601ea9e750c076fa2a in / "
                },
                {
                    "created": "2023-11-30T23:11:07.707251622Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:47.300463409Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.502233696Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.264281103Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.277549163Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.292832201Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.326059233Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:54.189039764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:54.309754582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.443976001Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.443976001Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.561428244Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dcb5ba173dd4ea13356a2533054d308e54f2696002ddc6acec8b6f6a13759b46",
                    "sha256:c16955a0ecfce47414a3c42328d056bddfddb06ba1ecad69fe0193da39249670",
                    "sha256:7594a9fe9c0c630895e2704ead844dd0c662847540136da8cd6df70ae666a874",
                    "sha256:ef2187d9c0535d904b4da69b7b0ff8a01b98bf806b11d127c97286c39f8fb2b7",
                    "sha256:7df94082c1e4102f6cebebb265f0c2ada4d35a3dfbedaf4d4c3324d24ab118e5",
                    "sha256:686aa97ef0cc3dbaab735b28f6cc3ba5f0ca3ee4e63c655c764568c86f5110da",
                    "sha256:34770ea58a4b0dd4c91ef0ecd08961b6fde2313161239db3868a03920f612b60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d82dadebcb5f55b9a71cef3be8a2061575ceb97898dfe50856e0daabc5abce7e",
                    "sha256:c203c365c3ad5c8c53499b3ee24a7f35a81b839df78af1ecaa9a4a1ccfa09697",
                    "sha256:72dd549c378238d37bf10455d76bb64123b61c1c44f51dfa7c860a15ad6554c0"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:00.036788429Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:40.508107344Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:44.644266847Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.197233892Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:45.206630865Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.215357193Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:45.224170108Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:46.085878664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:46.19217519Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:14:59.954259772Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:14:59.954259772Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:00.036788429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:12aa3e676e14ba34bbc34f0b3af3b4973e710a45c65ab3c79b37249ae33aa6ae",
                    "sha256:7b6df875a1daa78f41f82a0b1fdc84c7b311e846f72fc3c795559f3f44697715",
                    "sha256:40814a5b2db046dadadee5fcb08c69f99619e0907ff2a682836c455415e9d8e1",
                    "sha256:0d1faee003a74a77d75cb69162a721df8085b74e35b4c26ccb2ef09179c0e93b",
                    "sha256:62dd898ca9dc0722648d04f8d613b78026a050f3eed9900ec323308dc23bf7d0",
                    "sha256:e4052305ab106555798772e270e77ae291e6a2c69e9a4221cf5c88de2e3fcea9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4f15c21ca4db42fe2f51cb6ccf032202af9cfc5c114e3a7498cdc7251a3be728",
                    "sha256:c556dab157bb2539149def7bd910413e2ea4848c6cbb514a4ebc5f5a69234baa",
                    "sha256:8fcf15be1eede1883ba5b6554cb51d4a520bb6e23cf459f5e5eb38aa169041c8"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:40.61602877Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:04.271190191Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.298894775Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.737571841Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.748198814Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.780118622Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:08.78911702Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.561995331Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:09.650580096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:40.54137869Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:40.54137869Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:40.61602877Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:c9fb2fbe95b60168dc6519fa8be3c51978965b5da4282cc87fe8637769dd3045",
                    "sha256:7d8c0902958a983ac2cc504cf605cbc37494fa443bd0b2034f31240e78fb482c",
                    "sha256:e3dd71f35f50d0e0a7c4655e3e7ccb4efe306587d8fc22b9790ec6929304edc6",
                    "sha256:073e1f900e0865342d89d022ddc38e98add57ec1da5f01d378ae5066ffb00be6",
                    "sha256:6ad5a61631f659ac47f3206a66e22beb620819e717053ab4cbeeed7b63e0e533",
                    "sha256:b8325317e3ff2ded98416698229ef3e8b8eacf8838159d4baf8b3f0e689e137d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3d154d89911b4ea15a696d4fc7b0ad310450ed86ad7f2e4e2488ce64442b363d",
                    "sha256:b6d1a943d854c1c01fb3740a2e834f9e5d15d83184f537b5a716bdaa1f9ffafe",
                    "sha256:3dc91eff9c1c6cfd201036c734f3043aaad4b1bb6f10629e4dcb6309663dab29"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:05.230066898Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.80084488Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.604895531Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.013389064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.023372368Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.063123512Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.076586267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:46.88313006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:46.9760236Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.155483495Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:05.155483495Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.230066898Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:6f5063e38a8be7df8372695159f4eecf15f11dd29c9198de1a342b892d1026c9",
                    "sha256:661a7aaeacced283a6594b0c30a562bd55c182861ab9d6b2d489df3fe0b2d397",
                    "sha256:2d7fb1c6c1b7d84b61792b67695513a0dff3c6107aaccb3779681b1b21f4ff89",
                    "sha256:1da1c6a8f45ac998fe2761e4ffbd55632691cdc0f07d82fbba046e9dfe43e1ef",
                    "sha256:602bd362dd105fd3702129a49208a7991139d0f6f345bcffa46b0c6c8ab7a3a9",
                    "sha256:92e86f8c81768970b72ba0e319b4d37c805b9b0ceb8bea4b0d4bc387c6440338",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27801a6917fb1cccf2d5f793da8f0c3888951e54d631d74da338e23655cc6902",
                    "sha256:84b69a7207e552427fa188fd1a25c5839492bf78f0ee817817fea11adca48e93",
                    "sha256:5d23ad21457304362b34ca71e4f2415c55a19439bb4f4701828ca8bd68d6676b"
                ]
            },
            "variant": "v8"
        },
        "3.17-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:42.165127936Z",
            "history": [
                {
                    "created": "2024-01-26T23:45:00.507374598Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c3b6b575eb741f914ec12bd4df43de0cb044a1f2bae7ff15d176e49b5986d903 in / "
                },
                {
                    "created": "2024-01-26T23:45:00.611362359Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:01.951769854Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:05.983629311Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.547443883Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:06.558382983Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.58673262Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:06.597892187Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:07.399772475Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.17   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:07.487542629Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:42.082046082Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:42.165127936Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.17 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:458ecd8dac6739be741006504b1fe187dda55ab9eb124e7cd79d5f1c9bb74975",
                    "sha256:686b64aae2a39600f10d8d1fda56464b419bdb9116d44f1f6635cf899d950dd8",
                    "sha256:f580f5daa471a4e114f59e00321a07fef5a5c55647758bd250565d4f1e3c711c",
                    "sha256:3b395bf9b12535f23c28bc8aa602bd75cbd698301f0cd97c0c1daa4c873ad463",
                    "sha256:d423299534e2977c90036f22ece83a7eb76fddda52bb1038bf877171c3890154",
                    "sha256:8b83568ec06b94d5696da1a6d59fb1a925a2ecba8fcbfeddb4578d061c0eb062",
                    "sha256:798c9b354ba6622749af8043c29cc536eeb3f038cc5d84677dd405c5c843c845",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0ad2795807a84f4b36eb86b9e988dea177a3789efcd05d37b980ed72257bb7b",
                    "sha256:9af110d4fc5265deac17bc4c26fddec3b67f04b7cb9f7afa75f62e6d73000425",
                    "sha256:4af7b63caab42e5d8fe4cf8698de13cd71bc90f28647e203c89f7ab6c950dd99"
                ]
            },
            "variant": "v8"
        },
        "3.18": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "3.18-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.388345509Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.520631223Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.400767522Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.424722792Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.386379792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.519583764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.388345509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:cea3169001ff8c114d2946b6e37474448266e4c091ff763bb732b6b0ecdd4a3c",
                    "sha256:8511770d79aa88ed07a3c1000dd8c5e6761b8812fe5a84de2ab00afb54318df5",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:7d94879af8e1979e6d0363ed899a39a72fceb1d0851adb4188ec41aa5a88222c",
                    "sha256:63f492c7f5a4503ff4e4f76252e9a73b2cd1c6f69d551cf04aa7a6adf4a166ee",
                    "sha256:95e88c375acc611534350d591c731f40a1cfefc95a25bb90fa22778e2251c188",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4d3161e8777398bd42a177d5e078894232efed7a1ebb418d8dc62a8ebc79cf8",
                    "sha256:69faca25e68680215dd8915e95c9f668e6be5e607fcff6dc568d60cd5babf180",
                    "sha256:6d30bf5aa7e9ea4d6f75efedeff6df91e3f064c5798cddde5580e2a8c54490a0"
                ]
            },
            "variant": "v8"
        },
        "3.18-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.673224829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.673224829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b3a8612c7960695fde07b7ef38519a0f7f61859e937131a7250fbeb41e42ccf5",
                    "sha256:a2fbb914179d2459863a279d36871c7219e63fec201bbbb6f289274fa92e6a26"
                ]
            },
            "variant": "v8"
        },
        "3.18-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.960667253Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.960667253Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:5c00383d854434b338b53f86b3c470a4c32bb8ad82c8db26e3b941226d0ced42",
                    "sha256:f91d95298a975349623f27dd9463effd7d4b74143870567b6745358e66ffd88a"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:03.637549969Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.637549969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:9aff0815dc9027f75219dbc593f78b7b1c180e5d8fdd88fb2da1d87066691227",
                    "sha256:72417644adaf7aa4866a299a9f6ad7bf5759d45ac643a11511b5198629acdfe1"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.50391899Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.50391899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:7e84d2b37271dd126b2e2261a454be3be2e8ee9bf47f0fe30111de4b9089bdde",
                    "sha256:c85c115c38295986894b87e9e51ab16c2d33d123fa7d36a345e80abb7d94e00f"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:01.124872367Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.124872367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:8f49d715223ebd719fe9788ddd3785d78c5d30e9ee4c23b5fd3c2d805a0e89be",
                    "sha256:b46d1e94d3cd228c9a8887a82607356eb000de7d2029de678fa0b164026b1e7f"
                ]
            },
            "variant": "v8"
        },
        "3.18-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "3.18-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:54.645967894Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.645967894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:5162a9c211af409356be9c0b69a7b1eed267bc294d3fcbaabdec24ebc9b81a2f",
                    "sha256:6bea1f4fb6fa2cbf3314610390f9d5c9757adb72ee5b0418bfc88f69d40640eb"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:39.691469828Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:01.419529941Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:38.3756502Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.533571816Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.533571816Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:39.54611839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.582311826Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.605661668Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.605661668Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:40.685765374Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:40.808939482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:39.553532132Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:39.553532132Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:39.691469828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:25fa8626c4380fcdc9b61825af5b981be093e2777710729a56b2f2e9514c6974",
                    "sha256:7d35c4e8afe5a54c242be1165dd514af5f47c985fe569e93d45929e0b8290531",
                    "sha256:2772b07f2c12e4c82598b70703489d0e910c2e3bcc4bc47faa6a093fcdee6cd9",
                    "sha256:367be9cca80871c693ecfed8f9e7db503c118d98a77d9bc58fb70f73bc0298c2",
                    "sha256:e357e9a6466f365fbc30ccc84628b67a51ede367a7d0be3869b4ff3a62b30647",
                    "sha256:73188b38197bb88c17775d47f8ea9687f3de7bc41f59df14b22d909387997889",
                    "sha256:d51e137f11ba51b8a0820584a9bce7863531c2745513dfe70688a0c19e5093e4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:285346f83892cbbb247518b29e893c514afe62fbdf065620454f75d09c8ff704",
                    "sha256:1e60f6a77cba0efaa4bc4d1b26c3f74de3d63d639660f903d15051644e25eb29",
                    "sha256:5e57fb68d1ba39e93669276d79ed5488396e3357559846b9fc337b1ef4ac1259"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:48.405142434Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.105257163Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:16.256678676Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.259002872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.269564494Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.859381257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.946779685Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:48.27945442Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:48.27945442Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:48.405142434Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:0dfae6631fa6687a5608cf91ad4d624240c5205b560cdcff5cc0ecbb61692b2f",
                    "sha256:d4a7c415a623758151614d31484fb309c86b2a9c52cc0aa20efb49caacbb06b0",
                    "sha256:abc9550e0ca2d01aa5c99a987b5536170534e36f40d6bb37956b66ab5cf6bfd0",
                    "sha256:609ba038ba46c0b51fc75a92dc2874b9a3f239c821322fc513df1812899c332a",
                    "sha256:fa957db6a0dbbb0d19e83e2c1ded07eac3b113b68a9b7dcd10f731dcc5473d83",
                    "sha256:232a5b87ffa8c1ebe28a8597d85849defa46572805ca5502b3ad7b41637d92c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfbbc02c54863a5338f373f4c261bda17b5f0692fb4444c3f8d891c693536b12",
                    "sha256:488f764e01836eac770950ca6c42a311910089a3704d96b11a8f3c8c7dd02d0a",
                    "sha256:2f13d4199fcbeee045b5fa623d69c985dd0ad713dfa45c52e141d2659d3d21a1"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:02.398697479Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.745979143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:16.505680087Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:17.548708627Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.557118407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:18.235667988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:18.366712531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:02.288104657Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:02.288104657Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:02.398697479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:1b45cbf5267a9f0ab8ecbd86988784f1e2e2c28f3af0376717b255cf8b453d6e",
                    "sha256:b088866c7d9fa5dd49be6293b68fffe8bda095f770fd112520941385f1179944",
                    "sha256:82627c9307aaa497704a23b1d8332d9937463da738c9d71269fa852dde40d869",
                    "sha256:f5dbcc73acf8960a9d7fbde49a823a58540ad63cc704e56358ecf2d5377af7ea",
                    "sha256:549b93b36a841c9c5b31488dc0adddb05a9c783af6395f67663262e0505944d5",
                    "sha256:d45d30428664b00301e2a9ccbbeb03db3edbfcf14facaa40a577cdf49b119435",
                    "sha256:4fb806f6509ee624a9d9cc447ff6f50cf138dad08a362975ee49b5e8e68487a2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:49618e63f30922f50a0225f928f5c47de4cd3498e121dc19848a4062fddc6de6",
                    "sha256:3f7a6bd7d9557df5c7fdb74f2e1e69fa967bbf075e3642f021a5fe7ece35dabb",
                    "sha256:71d06fc292c7e85716369ae04e7c9decefb2beedf1850ba8071d569ab5c7a494"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:02.798403039Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.085484298Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.480942433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.264805583Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.308090459Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.889432067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:07.009584647Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:02.721751499Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:02.721751499Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:02.798403039Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:c20deb350aad2eb4ae4a89c3fc2f66aa0466e5fbfb2fd7c8a258cd3f05590c46",
                    "sha256:1f35f18ef2a8df5ab25bc4703d6a41a0d80e4f3a535b8d8b1031ecd719b23cec",
                    "sha256:08d716f6517cc3c8939c159dbf5c85a225cd310710a5307c756862fca6a14175",
                    "sha256:f0696b003b26c46a5335e52aa2d00f2b1e4dfacc257a173795bfa11eed0e3343",
                    "sha256:c88a735e5ee6b912224198888739e38d6656165619623cd7d6218203ef9aa355",
                    "sha256:bdf5d66e2db4143c6eb4ca17515013073e21d5539628b3b8de676b3a2c81173e",
                    "sha256:c48b4479ea6c223c53c91711e04ad6eb9b0b8f105915c4472a8dcbf8d2f0fdda",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b1772c03d0917295ab7c56a866053757c66f0c6a1ec69355c6e10df2ec64b59b",
                    "sha256:e4ccc3f1183b5926019579a3804ff6dcd856ad500358fb1ce625ac2791110980",
                    "sha256:d77d42e47cfb1a3bdd3e0ea5c744b2f985af744c68fe88ee071862be0a6e9de3"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:49.626595292Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.183480416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.773229632Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.266661371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.322821115Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.921538197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:35.012499009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.520138976Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:49.520138976Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.626595292Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:d1b4aa9b8d8d566d3023ab6d554c77c9d97f4bcfba1deabf094ee6789b405dc8",
                    "sha256:fe211da828d0e15f8a01c14a556e1aadb7ea31311774b6a7a46d606efef0cfc6",
                    "sha256:044ef28db9747af95d90ca62b4bb9dec1ce6b4897397ac6e7533062763847f7e",
                    "sha256:ec50ae9763bed240d51fdfc66a9382ca6b56258bd9d64c459a9af6dfc6ef24ff",
                    "sha256:f85a56666b71b6321754d718dc093871923bf3670f69b17926e4b824df15a079",
                    "sha256:90f4dea91a39ec46b6ba7204507c860bd02e4e6ccc1256f0cca64467defd88fc",
                    "sha256:e973170aa6c02283418cf56b474a2cf61dc175f5fe63ce4a370151ca4d155f40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:acc451c64dbe80fe945046f6b95818e8159e6712dc5a1c427c1964979a301cf0",
                    "sha256:9809009b0a13596b7fe347ce98f360038161ba29fcb7b07aa6b2e30e649a8fa8",
                    "sha256:85624d351ff71c3b407d863c36dba36459fed2afe9a23e0f0f0ce6265ba565b4"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:13.157230356Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.918568213Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.036691183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.531065902Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.573452099Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.152887787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.252828137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.08565666Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:13.08565666Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.157230356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:4b13f483083c8617698a2e81f6118c9859d0dab4721212a761acf188c121f5ad",
                    "sha256:265c972314b7022b2704a7ff0ce70e7d013599c84c597244cedac1efd08c043b",
                    "sha256:5993dcd1264b67af9e13370fd826998c611ee99870202d76537008bd9f53ee91",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:2da16ffc1b870e830396a6437675c45300c40a78ae6362399d8145ac415b16c4",
                    "sha256:537218bc2b0cd2dc44fddab16c472f85e669dedd32e818254a6a726427b752a2",
                    "sha256:cb37913cc8e5a0f895952dd86a4d6abed4e4cb565225dc51d5d458269384dac3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd7253e36259cf80a3b18d75646c5e2e1fb5ac02a90fca8c04bf650c71f3484d",
                    "sha256:d80dec735555781a8108f8b2a568087cb8d27b65107fb780af79cdd3999bc309",
                    "sha256:15a95beac71d5fcd9425b6e09bdf464e926339d99b683befa403c1b1eb29d53f"
                ]
            },
            "variant": "v8"
        },
        "3.18-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:54.645967894Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.645967894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:5162a9c211af409356be9c0b69a7b1eed267bc294d3fcbaabdec24ebc9b81a2f",
                    "sha256:6bea1f4fb6fa2cbf3314610390f9d5c9757adb72ee5b0418bfc88f69d40640eb"
                ]
            },
            "variant": "v8"
        },
        "3.18-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.388345509Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.520631223Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.400767522Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.424722792Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.386379792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.519583764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.388345509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:cea3169001ff8c114d2946b6e37474448266e4c091ff763bb732b6b0ecdd4a3c",
                    "sha256:8511770d79aa88ed07a3c1000dd8c5e6761b8812fe5a84de2ab00afb54318df5",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:7d94879af8e1979e6d0363ed899a39a72fceb1d0851adb4188ec41aa5a88222c",
                    "sha256:63f492c7f5a4503ff4e4f76252e9a73b2cd1c6f69d551cf04aa7a6adf4a166ee",
                    "sha256:95e88c375acc611534350d591c731f40a1cfefc95a25bb90fa22778e2251c188",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4d3161e8777398bd42a177d5e078894232efed7a1ebb418d8dc62a8ebc79cf8",
                    "sha256:69faca25e68680215dd8915e95c9f668e6be5e607fcff6dc568d60cd5babf180",
                    "sha256:6d30bf5aa7e9ea4d6f75efedeff6df91e3f064c5798cddde5580e2a8c54490a0"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.673224829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.673224829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b3a8612c7960695fde07b7ef38519a0f7f61859e937131a7250fbeb41e42ccf5",
                    "sha256:a2fbb914179d2459863a279d36871c7219e63fec201bbbb6f289274fa92e6a26"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.960667253Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.960667253Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:5c00383d854434b338b53f86b3c470a4c32bb8ad82c8db26e3b941226d0ced42",
                    "sha256:f91d95298a975349623f27dd9463effd7d4b74143870567b6745358e66ffd88a"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:03.637549969Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.637549969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:9aff0815dc9027f75219dbc593f78b7b1c180e5d8fdd88fb2da1d87066691227",
                    "sha256:72417644adaf7aa4866a299a9f6ad7bf5759d45ac643a11511b5198629acdfe1"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.50391899Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.50391899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:7e84d2b37271dd126b2e2261a454be3be2e8ee9bf47f0fe30111de4b9089bdde",
                    "sha256:c85c115c38295986894b87e9e51ab16c2d33d123fa7d36a345e80abb7d94e00f"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:01.124872367Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.124872367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:8f49d715223ebd719fe9788ddd3785d78c5d30e9ee4c23b5fd3c2d805a0e89be",
                    "sha256:b46d1e94d3cd228c9a8887a82607356eb000de7d2029de678fa0b164026b1e7f"
                ]
            },
            "variant": "v8"
        },
        "3.18-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:54.645967894Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.645967894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:5162a9c211af409356be9c0b69a7b1eed267bc294d3fcbaabdec24ebc9b81a2f",
                    "sha256:6bea1f4fb6fa2cbf3314610390f9d5c9757adb72ee5b0418bfc88f69d40640eb"
                ]
            },
            "variant": "v8"
        },
        "build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:39.691469828Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:01.419529941Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:38.3756502Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.533571816Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.533571816Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:39.54611839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.582311826Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.605661668Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.605661668Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:40.685765374Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:40.808939482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:39.553532132Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:39.553532132Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:39.691469828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:25fa8626c4380fcdc9b61825af5b981be093e2777710729a56b2f2e9514c6974",
                    "sha256:7d35c4e8afe5a54c242be1165dd514af5f47c985fe569e93d45929e0b8290531",
                    "sha256:2772b07f2c12e4c82598b70703489d0e910c2e3bcc4bc47faa6a093fcdee6cd9",
                    "sha256:367be9cca80871c693ecfed8f9e7db503c118d98a77d9bc58fb70f73bc0298c2",
                    "sha256:e357e9a6466f365fbc30ccc84628b67a51ede367a7d0be3869b4ff3a62b30647",
                    "sha256:73188b38197bb88c17775d47f8ea9687f3de7bc41f59df14b22d909387997889",
                    "sha256:d51e137f11ba51b8a0820584a9bce7863531c2745513dfe70688a0c19e5093e4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:285346f83892cbbb247518b29e893c514afe62fbdf065620454f75d09c8ff704",
                    "sha256:1e60f6a77cba0efaa4bc4d1b26c3f74de3d63d639660f903d15051644e25eb29",
                    "sha256:5e57fb68d1ba39e93669276d79ed5488396e3357559846b9fc337b1ef4ac1259"
                ]
            },
            "variant": "v8"
        },
        "build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:48.405142434Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.105257163Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:16.256678676Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.259002872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.269564494Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.859381257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.946779685Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:48.27945442Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:48.27945442Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:48.405142434Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:0dfae6631fa6687a5608cf91ad4d624240c5205b560cdcff5cc0ecbb61692b2f",
                    "sha256:d4a7c415a623758151614d31484fb309c86b2a9c52cc0aa20efb49caacbb06b0",
                    "sha256:abc9550e0ca2d01aa5c99a987b5536170534e36f40d6bb37956b66ab5cf6bfd0",
                    "sha256:609ba038ba46c0b51fc75a92dc2874b9a3f239c821322fc513df1812899c332a",
                    "sha256:fa957db6a0dbbb0d19e83e2c1ded07eac3b113b68a9b7dcd10f731dcc5473d83",
                    "sha256:232a5b87ffa8c1ebe28a8597d85849defa46572805ca5502b3ad7b41637d92c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfbbc02c54863a5338f373f4c261bda17b5f0692fb4444c3f8d891c693536b12",
                    "sha256:488f764e01836eac770950ca6c42a311910089a3704d96b11a8f3c8c7dd02d0a",
                    "sha256:2f13d4199fcbeee045b5fa623d69c985dd0ad713dfa45c52e141d2659d3d21a1"
                ]
            },
            "variant": "v8"
        },
        "build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:02.398697479Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.745979143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:16.505680087Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:17.548708627Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.557118407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:18.235667988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:18.366712531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:02.288104657Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:02.288104657Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:02.398697479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:1b45cbf5267a9f0ab8ecbd86988784f1e2e2c28f3af0376717b255cf8b453d6e",
                    "sha256:b088866c7d9fa5dd49be6293b68fffe8bda095f770fd112520941385f1179944",
                    "sha256:82627c9307aaa497704a23b1d8332d9937463da738c9d71269fa852dde40d869",
                    "sha256:f5dbcc73acf8960a9d7fbde49a823a58540ad63cc704e56358ecf2d5377af7ea",
                    "sha256:549b93b36a841c9c5b31488dc0adddb05a9c783af6395f67663262e0505944d5",
                    "sha256:d45d30428664b00301e2a9ccbbeb03db3edbfcf14facaa40a577cdf49b119435",
                    "sha256:4fb806f6509ee624a9d9cc447ff6f50cf138dad08a362975ee49b5e8e68487a2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:49618e63f30922f50a0225f928f5c47de4cd3498e121dc19848a4062fddc6de6",
                    "sha256:3f7a6bd7d9557df5c7fdb74f2e1e69fa967bbf075e3642f021a5fe7ece35dabb",
                    "sha256:71d06fc292c7e85716369ae04e7c9decefb2beedf1850ba8071d569ab5c7a494"
                ]
            },
            "variant": "v8"
        },
        "build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:02.798403039Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.085484298Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.480942433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.264805583Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.308090459Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.889432067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:07.009584647Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:02.721751499Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:02.721751499Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:02.798403039Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:c20deb350aad2eb4ae4a89c3fc2f66aa0466e5fbfb2fd7c8a258cd3f05590c46",
                    "sha256:1f35f18ef2a8df5ab25bc4703d6a41a0d80e4f3a535b8d8b1031ecd719b23cec",
                    "sha256:08d716f6517cc3c8939c159dbf5c85a225cd310710a5307c756862fca6a14175",
                    "sha256:f0696b003b26c46a5335e52aa2d00f2b1e4dfacc257a173795bfa11eed0e3343",
                    "sha256:c88a735e5ee6b912224198888739e38d6656165619623cd7d6218203ef9aa355",
                    "sha256:bdf5d66e2db4143c6eb4ca17515013073e21d5539628b3b8de676b3a2c81173e",
                    "sha256:c48b4479ea6c223c53c91711e04ad6eb9b0b8f105915c4472a8dcbf8d2f0fdda",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b1772c03d0917295ab7c56a866053757c66f0c6a1ec69355c6e10df2ec64b59b",
                    "sha256:e4ccc3f1183b5926019579a3804ff6dcd856ad500358fb1ce625ac2791110980",
                    "sha256:d77d42e47cfb1a3bdd3e0ea5c744b2f985af744c68fe88ee071862be0a6e9de3"
                ]
            },
            "variant": "v8"
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:49.626595292Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.183480416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.773229632Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.266661371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.322821115Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.921538197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:35.012499009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.520138976Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:49.520138976Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.626595292Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:d1b4aa9b8d8d566d3023ab6d554c77c9d97f4bcfba1deabf094ee6789b405dc8",
                    "sha256:fe211da828d0e15f8a01c14a556e1aadb7ea31311774b6a7a46d606efef0cfc6",
                    "sha256:044ef28db9747af95d90ca62b4bb9dec1ce6b4897397ac6e7533062763847f7e",
                    "sha256:ec50ae9763bed240d51fdfc66a9382ca6b56258bd9d64c459a9af6dfc6ef24ff",
                    "sha256:f85a56666b71b6321754d718dc093871923bf3670f69b17926e4b824df15a079",
                    "sha256:90f4dea91a39ec46b6ba7204507c860bd02e4e6ccc1256f0cca64467defd88fc",
                    "sha256:e973170aa6c02283418cf56b474a2cf61dc175f5fe63ce4a370151ca4d155f40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:acc451c64dbe80fe945046f6b95818e8159e6712dc5a1c427c1964979a301cf0",
                    "sha256:9809009b0a13596b7fe347ce98f360038161ba29fcb7b07aa6b2e30e649a8fa8",
                    "sha256:85624d351ff71c3b407d863c36dba36459fed2afe9a23e0f0f0ce6265ba565b4"
                ]
            },
            "variant": "v8"
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:13.157230356Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.918568213Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.036691183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.531065902Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.573452099Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.152887787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.252828137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.08565666Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:13.08565666Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.157230356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:4b13f483083c8617698a2e81f6118c9859d0dab4721212a761acf188c121f5ad",
                    "sha256:265c972314b7022b2704a7ff0ce70e7d013599c84c597244cedac1efd08c043b",
                    "sha256:5993dcd1264b67af9e13370fd826998c611ee99870202d76537008bd9f53ee91",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:2da16ffc1b870e830396a6437675c45300c40a78ae6362399d8145ac415b16c4",
                    "sha256:537218bc2b0cd2dc44fddab16c472f85e669dedd32e818254a6a726427b752a2",
                    "sha256:cb37913cc8e5a0f895952dd86a4d6abed4e4cb565225dc51d5d458269384dac3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd7253e36259cf80a3b18d75646c5e2e1fb5ac02a90fca8c04bf650c71f3484d",
                    "sha256:d80dec735555781a8108f8b2a568087cb8d27b65107fb780af79cdd3999bc309",
                    "sha256:15a95beac71d5fcd9425b6e09bdf464e926339d99b683befa403c1b1eb29d53f"
                ]
            },
            "variant": "v8"
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:54.645967894Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.645967894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:5162a9c211af409356be9c0b69a7b1eed267bc294d3fcbaabdec24ebc9b81a2f",
                    "sha256:6bea1f4fb6fa2cbf3314610390f9d5c9757adb72ee5b0418bfc88f69d40640eb"
                ]
            },
            "variant": "v8"
        },
        "edge": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:49.084403401Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.084403401Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:a6c48a77b24d7afff53cb35dd1b48f0e249a7c2139c1e8edd091bf4d99b1b260",
                    "sha256:a2768ca26d3f8aca4aff12f44c097c50ea945a6745cf6636aca97eec5e251cd8"
                ]
            },
            "variant": "v8"
        },
        "edge-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:29.407893982Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.735906746Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.735906746Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.735906746Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.337656644Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.850511092Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.850511092Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.85891695Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.868512016Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.883881022Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.883881022Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:53.582744357Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.711559148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:29.328292827Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:29.328292827Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:29.407893982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:c27308664c1d4345a49f3bf48eab2446a452c1dd5566fa6d0c8e364e5eae90d6",
                    "sha256:eb1715c85e2c1b88572caa48c34f13b7838eef70e54dabdf0aecbb68cd08efd6",
                    "sha256:0665b154cb9e4ef3a94b57ecea9fe2e936b6d1163a93293ed26f7731b08c3947",
                    "sha256:74732a91e5971f3edf4b5929be331f029ec3b4fa1165fd98c34188863b5fbe31",
                    "sha256:78b932971e47af2f7422f47697b9e13f40b64a959d15b8be459cf63e6c89f7b8",
                    "sha256:9ac9772b1691c2b9253c20d63441191695440fce35ad26dcff40449d70b489cc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6c2d87ddb1c15f0e5d52427b9d6cd604503af1a360eac6adacb372229d68b9a8",
                    "sha256:f94fa3facee21dc0ae65dd75edeecb4dd0029e665e924858124685a32c9454d6",
                    "sha256:74da3fc808e14af21ee5d02f5d8e67c5b61cb4d99a7bce76da4d0a030a6135e3"
                ]
            },
            "variant": "v8"
        },
        "edge-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:40.571192674Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.20982661Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.650848529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.66566915Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.310249952Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.418470344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:40.497645636Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:40.497645636Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:40.571192674Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:a8d74d374185d15ee1f255c5029e8b24ec70bcddef0edd45aa5ab7a422d83059",
                    "sha256:080bc064e45a164ea18b4f693a3cd91cafacaf65065db2bfd908f0d688f441d6",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:f916d273073fa628208cd213c006109569d4d5d642301dcbfe280cf3a09901e2",
                    "sha256:6d15e40424b01661b9f2e2b05a40e8d4073187b5fb7c73d9e11e1c64968d9d3b",
                    "sha256:0cfd7db61aee691e45b26fe559dd46932d6e44cb2d8e215fc959660251cd05fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00c4db1cabbd12ddb10c88c15d2ff6e5cfe707e8c216b922fb98eea9f58db7a5",
                    "sha256:fe71d1b9fc068a243f2b8e06cd22474bd57687270c34ad29a9754328db808d53",
                    "sha256:bec460223461d7232ae9b55e7008cb8d9282939ddb8a51ef71af03cd6f4bc9d3"
                ]
            },
            "variant": "v8"
        },
        "edge-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:01.172903957Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.201563231Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:50.785642495Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.813029016Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:51.504465829Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:51.627690935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:01.04593548Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:01.04593548Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:01.172903957Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:3714b8cf417294d83577eed2d41a8310ceb4a5b94bc5cf539d6e1e8c151466a7",
                    "sha256:e85e88ac6d3f9d4ebd9cea6c648c03b0a66b9c52246d356883e87839cf548c12",
                    "sha256:f999311f51144aaecd41a9eb1dbe8b3855ea3942de9bcbf01d786ac527c42f76",
                    "sha256:06367b31eb9d353155cf2fda621fa55e6bed3203574c04a36e5676d3a128a11e",
                    "sha256:f4fa602be1406ced6423a61550b81418cd27ad2cab850c264d152c9e5bfad81d",
                    "sha256:39621ce239b64416c48a5d4ec9c87d81e410c86f7a1dee68a1008687b425adb8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aa2b6186124869cdba12845ea166824d9686f0dc94d1250f76251176ea60c22",
                    "sha256:d881b84838597dc2db6f3a0d576353522cce6aec1ce0fe6ecfadc22b8c96107e",
                    "sha256:eec4504faf224ebb38c76256087408991a6e23f7b1050aadd12a6ca644485d53"
                ]
            },
            "variant": "v8"
        },
        "edge-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:05.242281974Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.563384828Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.99926054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.028984069Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.610183733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.706664447Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:05.165913595Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:05.165913595Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:05.242281974Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:acf945858f21d55090956ab68feef5519c134db3d35c4a60add5851806f737b3",
                    "sha256:4809cc964e839ad12df3e39c2d8a9af635a3484d5f3a8bb3d4461b70c8068573",
                    "sha256:1536f5f523e12a81a19bcf3121bb72b8d5a47e5715d65a8d553a3e4c4bf6be6f",
                    "sha256:9bf96c77dab58bee2bda9ad58fa4685ab40d1ab075d194af6805ee7062a1cb3c",
                    "sha256:6c661a91758923c2f4a8c87d040bcbeea77dce5bc2ba68a70a7624d1c9c92712",
                    "sha256:a06a7a1dfe7d3815dc3bece268840ab7f34a1131dd0be55e8c684ea37a328fed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:87a12700e9994cbbb7f2da3129171691a775a2ca128941610c75c1e472e85025",
                    "sha256:5f26807abf00522b8086dc92094e67f73dbf7850a813d5f2d02c1f217d96dffa",
                    "sha256:0d46ea105842fd3679f002a139bf8b7cdea7c72aa663b2892c1a00ab1d61a071"
                ]
            },
            "variant": "v8"
        },
        "edge-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:37.738337657Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.108332988Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:16.847213198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.890794732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.484169098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.566572473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:37.663546882Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:37.663546882Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:37.738337657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:69265675208218e82360188eedcd2fb00f10071aab69379d0abfd252a499d194",
                    "sha256:3b8e5d938890933bba092c0697d0d3a11db4cc58595cd97526aea5fe42a54e17",
                    "sha256:07e9071f6af9bba6f74b7d537fb7a27c72a63e38ad72c1a3d756f94dbaad6808",
                    "sha256:8aa84076d1ca53df8e1226dae158b6e3d2bc64fbf6922852dc50ebd8eff94107",
                    "sha256:6e358c23739cca005efe72fd93f01f5aeea13b0f0fc56184552f2a43aa40734f",
                    "sha256:f0c1048fdc4f2f5590128806dc16f31e19362a66e2c3234a2a99dffa638d77b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46976bbf2c89806fa9b12e3b41084881a45aeb3e08314b2c66631a7ebcf00382",
                    "sha256:b887004b4dce03c3415a3e8bafa963ef42372715793774b324883d0ff49476bd",
                    "sha256:013e3ec826b6d66b9d98a5c49d909165501d0e89513b1c4c90fd7ce224bf45ac"
                ]
            },
            "variant": "v8"
        },
        "edge-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:05.9821895Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.306954561Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.851382754Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.859240993Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.407394161Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.495079842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.905288921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:05.905288921Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.9821895Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:7ad508c407e90259a8d49fedc3ff2967970f18eac31cc7918fc315071e9de40d",
                    "sha256:5ab0884ae40da0a48886c82780d828dec0ca8128e303c03a8e570a20a681a897",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:fe2e4b120899f408ca419c44309793afa71e212f1ebcad332e3f82abd563c32d",
                    "sha256:2a701c39ec12aa3b70387d8e6f7c5d5d3b932fba7a523fd18215475877991707",
                    "sha256:57da73dcc55a7d8b28235744b2010bc71d51321adaf9064646d24e5cbf206ec1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78126b2b0eab9eb45e86ad8f7ef1e4d92f3ec73111d9d41d8fdd707aa859f37d",
                    "sha256:43d7d8a1c56d50337dafa23219aa990d599d2b1daf8aa18bab7146a0de40c5ef",
                    "sha256:abafcfc5f6ee114a0c96a3b3f35ac0f294e06a6a0c713ce307379129daa4be5e"
                ]
            },
            "variant": "v8"
        },
        "edge-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:49.084403401Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.084403401Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:a6c48a77b24d7afff53cb35dd1b48f0e249a7c2139c1e8edd091bf4d99b1b260",
                    "sha256:a2768ca26d3f8aca4aff12f44c097c50ea945a6745cf6636aca97eec5e251cd8"
                ]
            },
            "variant": "v8"
        },
        "edge-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:28:02.252502041Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.839006237Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.806951053Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.28407341Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.292304594Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.829861099Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.933510465Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:28:02.173957819Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:28:02.173957819Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:28:02.252502041Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:488117bc890689b3c41ff5ef346d22694ccf79609529973d2636c09620ff8c86",
                    "sha256:60969cf69e366128d2d2bb53e0a94fcc9687055476f4824de17cf9284d02a85e",
                    "sha256:9ae63cb6c1a6bc862caf26fc27174bf6ad57e7c0597efa165b5585e6b5cd72df",
                    "sha256:c5f47c01325f973a8e89c02fbef2a71db895c30c5bf1aa87efc56a9dc4d9adde",
                    "sha256:91247282fc0152f97f49f7313dc98efd9405db0fc1f7b51cdec8fdbe65d86c3d",
                    "sha256:46f46d0c4baba5fcbaebf6aced664e0554d861b7c83328dcaf6ef8aa3550818a",
                    "sha256:00d067ff30140f67f646e96919810fefd07a3d4f41c1ea6a04c281e38def6aeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a58917c11d24712d45f148b01f63f7b0df2a354ce7d657954e8d3ad259c950c8",
                    "sha256:42be3c9de02598bd0a9c0f54efa8708624bcd026dbae2ab4984c82ebc8b3522f",
                    "sha256:4340274ec89b16c729506db98df10e015ead2857b6aabbaa402bab2e6d303a2e"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:49.628366362Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:47.375422601Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:47.375422601Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:47.375422601Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.407677776Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:20.805239107Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:21.490019855Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:21.490019855Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:21.506173888Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:21.563145514Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:21.578319221Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:21.578319221Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:22.489836344Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:22.627250326Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:49.472086104Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:49.472086104Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:49.628366362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:22f238a68a67870326670336abcce44902fd5d19b92354bbe39f34b8e2d66fe8",
                    "sha256:f2fdbf719ae96dd6f6c88e4cf47040fe1e4624c7645f158ab8e7af33cbd7aea9",
                    "sha256:7be23e967fbd52a1deaedea31b1d11ef5be2a5733e4eea684b8d24dea619cf82",
                    "sha256:6868afbfff2f87c46bbb3299141e8c4ecda8f3f649a89f83cf3cac3f753426a5",
                    "sha256:623b80104917983487e12e4c3187ead3c6d1132454a46f8ecc8c117e903df657",
                    "sha256:5fa9808e8a005dd0bf798a11aadf11c20b7e0f7d36ce25a29c1416c1db15a568",
                    "sha256:60286a06038310586b611d02a0cc0b6064dd9c3638b8f99b53aa30460bebdcc8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3efdb141e8397f55019b9ef33b5ad5ee92210a840fe0d21fe98708727914c601",
                    "sha256:9054a736c135c0a2d722dbe394bec70da657e1566919122b0a23bd6e8d62f1e7",
                    "sha256:f719c771d1eb774cceece7c746593ab6f24056836869de7e54a664d5eb278aaf"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:51.465406161Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.340676636Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.340676636Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:57.340676636Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:02.492059105Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:24.487007585Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.472844784Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.472844784Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:25.483597102Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.494366881Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.506450526Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:25.506450526Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:26.076574394Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:26.18751393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:51.38933172Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:51.38933172Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:51.465406161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:c7cd9defab9418807d33459965830d1beeb1c944a811f7af949de4a50bf23e5a",
                    "sha256:522a80391666462e01d095b8b30925b02c9d6b66049da94b2b2245333ffe2235",
                    "sha256:0617350609761a1e6e7d1550f1e83e5cfb01421fc09fa53bf5e691a2597202ab",
                    "sha256:d83f7bc277695a5f3cc94c1cca6acb4ec27bfc1883d88b05847f7bb223a98cac",
                    "sha256:cb148e42f6752c5eac91c299b8109c0afd6939393e8115ff38fd3c7188b6c66d",
                    "sha256:c2eba35ca21e377b30a1598ae987a70c56b866c787c30addbd475dea5071e1cb",
                    "sha256:4e986b5ca48300ba89a6b6ffe7d441a2cbf81dcb74c791576a4e1da7dd04cf6c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a657e93e90d1fc6113183964764c75708e7d13c766cf348d153f52d3379d74af",
                    "sha256:7224d6ae9745f60372c2d919d5c0d8fee712316d6bf4c57e0f8e35d1eb1e922c",
                    "sha256:67733e9df243df409c2f24999932655c4cabc9d3261dc8a84bd19d3d53ccd26c"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:07.528407364Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.539960009Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.539960009Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:44.539960009Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:49.101287212Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:09.684722537Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.286057884Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.286057884Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:10.294559717Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.302158078Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.310063164Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.310063164Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:10.875481331Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:10.976758723Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:07.410556586Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:07.410556586Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:07.528407364Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:38dbac42d3f75205e3979ccc293e44adf5683f68205974c792199b4cdb881f88",
                    "sha256:08033a9f0e03807f0a8318f5444fc60c0308721b1db3f3e8b3e97bf4ec02d34a",
                    "sha256:0293fbe7fe8c8e7748918563fdb3ac776253f305e5fee9232ed96ea314fb1c9e",
                    "sha256:b6902821cdf8b4ef080ec7f2996c66048570a494f585bff8a18448fe409a8b9d",
                    "sha256:bbd2d0d2a39d90b3a22ab7104bf88567aca4e81fc4eae36752388710655dd9ee",
                    "sha256:ef7eb40471789948ec36878df591e30d94e86f785d21c04207b30242c196e162",
                    "sha256:ca0d283a1de85e6a11b5898364c94bff22521ff089be71280746a121b41cd294",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9d2a3c09d0e9744e38b1029025068a8bfc50efc35df529f3daba163ea35d7",
                    "sha256:b04c86fe527b6d610d2644bde3bf82b8dfe704ea258fb546a9e07b6bc71475f9",
                    "sha256:1da7fbb105169cc9669a56a4ea4bcf86a688dd50c402a1b639ae34c693a3d798"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:11.378926218Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.036380148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.036380148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:38.036380148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.075945731Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:01.577945754Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.061492708Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.061492708Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:02.074156601Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.123884009Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.133521055Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.133521055Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:02.693138442Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:02.787451287Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:11.298848614Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:11.298848614Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:11.378926218Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:bbc4b25a74c37800c6abf24255d149738b4cc28c19f3883cff1d5d4c094943dc",
                    "sha256:adfde6bc24c720a66088a220a45a0609f97d4f36e6b1a58601d9e9f477f3dfbf",
                    "sha256:eae39ad29b2072ccb146a4b7eb235b50b7d3a8464e5c6c475f33553ccd7f6f1d",
                    "sha256:71b52c49b4748a56174e8b8ea05b7edb282a8d94cac0d4ce6526769680685a6b",
                    "sha256:2bf909053c4903b5aa80141c6cd883b3b7869113c16f59256f91406c44ca2bc3",
                    "sha256:f344b2a40e21e6f3c6e18a5d0f3ee0b7074a8d86881e428200e1061e7f2c1dc1",
                    "sha256:91b790dc0f916587f6c1de677448951dddff6cb9f48348258f7fe271454eb145",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:40305dc49fa6635562fdece0eba8d814218d3729098d7ffe23314c3f89b8421a",
                    "sha256:2290aed88311f71d54b6984b5628eaf6bb96318b1effd6343f7af903a0b2d25a",
                    "sha256:efb70edf43fec6c77a68420ceac219e1d2cec7563372cff977490de05097bb39"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:51.40988451Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.661652468Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.661652468Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:09.661652468Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:14.678468822Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.036629428Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.662283711Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.662283711Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:33.670973575Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.678792827Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.734048698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.734048698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.299345679Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.387315429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:51.323494969Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:51.323494969Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:51.40988451Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:efa0380f226c927f2506701446ba7999836776ab4dc45e624920b0df1382a7b2",
                    "sha256:d96f64a9c488f9fc57d1254b3fe6a1b612cce91e27b577bc92b35537188e7fd5",
                    "sha256:efe827fae0ac5674e5e30d29c9c423ede2f96950bed98b963e49d494cd9283b2",
                    "sha256:16babf3e9f1651ca5f1c6b53be10fbd84f7bf666f0e4c90259db07cdfe4e6884",
                    "sha256:d71ebb609145d04f7e4804223cc802e65b96452db0f2805cda9ae135bdfb0ea8",
                    "sha256:56d1531ff27e0bb2fa5d7face0850f9c97114488ab099d17213fbf93950a3ca6",
                    "sha256:606cb0b0f3f6538e5cd88326ada7081e38ef2d9791f043004b3b26080bbdc2ea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:701f1fa7b3f81043cc84abe20b02b814e98ae1cfed163d21e8d5e4dd92387ff2",
                    "sha256:a158a227a2084d4687bf3edd0629be42db47f06a7b80213b46dbe08d8ecbb885",
                    "sha256:2f814cf0f71a414cde217b287a9e092f96c81505c66bc7820445e4f46a7da51c"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:15.704622266Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.162482794Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.162482794Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:42.162482794Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:47.093061204Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:06.56100574Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.165222362Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.165222362Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:07.177349054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.188155752Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.221527029Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.221527029Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:07.734767024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:07.828798653Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:15.625852191Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:15.625852191Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:15.704622266Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:0f27a994f709de1f9cfaa67bf732229dd305737edfa03e22883862ce0ff01532",
                    "sha256:0638101669c5be460824b539ac27a51a7d7b44fd771f1cc5aff093cd07f4e72c",
                    "sha256:2a7f77e624039d174d41bbde434e12d0480d65b98d8c54a7060c054cc684af03",
                    "sha256:934481ca223d927f97cd89880aeaef716871065486b3da0a3640799ac8dc35e8",
                    "sha256:90b8bd5c9ccd62032d15504c5a23af48913ab8e3c203508680ca41fbb8a2c124",
                    "sha256:404a181f5f2d6f018d30321164d658f994841d2315793dab54105c9cc793d613",
                    "sha256:ca5a6c0c2cf0ee5d097c31471b213757c4ac60ef1983518cc5ce0b37eba30b22",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:407804d3454c4b49a72e4e210a5b25596f9e0eabf0a4c78b005db3c062d4d2a1",
                    "sha256:d4ddb9be2baa2f1af0e5e4511bb704e843511ad14b738591f665a0fb1867e808",
                    "sha256:6dd298c44e593f2b2c71e300c3ab11b459acf6d9421e39189d814a6231f1774b"
                ]
            },
            "variant": "v8"
        },
        "edge-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:28:02.252502041Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.602707934Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.839006237Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:13.806951053Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.275079455Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.28407341Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.292304594Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.327111687Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:14.829861099Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:14.933510465Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:28:02.173957819Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:28:02.173957819Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:28:02.252502041Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:488117bc890689b3c41ff5ef346d22694ccf79609529973d2636c09620ff8c86",
                    "sha256:60969cf69e366128d2d2bb53e0a94fcc9687055476f4824de17cf9284d02a85e",
                    "sha256:9ae63cb6c1a6bc862caf26fc27174bf6ad57e7c0597efa165b5585e6b5cd72df",
                    "sha256:c5f47c01325f973a8e89c02fbef2a71db895c30c5bf1aa87efc56a9dc4d9adde",
                    "sha256:91247282fc0152f97f49f7313dc98efd9405db0fc1f7b51cdec8fdbe65d86c3d",
                    "sha256:46f46d0c4baba5fcbaebf6aced664e0554d861b7c83328dcaf6ef8aa3550818a",
                    "sha256:00d067ff30140f67f646e96919810fefd07a3d4f41c1ea6a04c281e38def6aeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a58917c11d24712d45f148b01f63f7b0df2a354ce7d657954e8d3ad259c950c8",
                    "sha256:42be3c9de02598bd0a9c0f54efa8708624bcd026dbae2ab4984c82ebc8b3522f",
                    "sha256:4340274ec89b16c729506db98df10e015ead2857b6aabbaa402bab2e6d303a2e"
                ]
            },
            "variant": "v8"
        },
        "edge-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:49.084403401Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.084403401Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:a6c48a77b24d7afff53cb35dd1b48f0e249a7c2139c1e8edd091bf4d99b1b260",
                    "sha256:a2768ca26d3f8aca4aff12f44c097c50ea945a6745cf6636aca97eec5e251cd8"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:29.407893982Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.735906746Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.735906746Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:46.735906746Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.337656644Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.850511092Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.850511092Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:52.85891695Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.868512016Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.883881022Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:52.883881022Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:53.582744357Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:53.711559148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:29.328292827Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:29.328292827Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:29.407893982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:c27308664c1d4345a49f3bf48eab2446a452c1dd5566fa6d0c8e364e5eae90d6",
                    "sha256:eb1715c85e2c1b88572caa48c34f13b7838eef70e54dabdf0aecbb68cd08efd6",
                    "sha256:0665b154cb9e4ef3a94b57ecea9fe2e936b6d1163a93293ed26f7731b08c3947",
                    "sha256:74732a91e5971f3edf4b5929be331f029ec3b4fa1165fd98c34188863b5fbe31",
                    "sha256:78b932971e47af2f7422f47697b9e13f40b64a959d15b8be459cf63e6c89f7b8",
                    "sha256:9ac9772b1691c2b9253c20d63441191695440fce35ad26dcff40449d70b489cc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6c2d87ddb1c15f0e5d52427b9d6cd604503af1a360eac6adacb372229d68b9a8",
                    "sha256:f94fa3facee21dc0ae65dd75edeecb4dd0029e665e924858124685a32c9454d6",
                    "sha256:74da3fc808e14af21ee5d02f5d8e67c5b61cb4d99a7bce76da4d0a030a6135e3"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:40.571192674Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:43.978311491Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.20982661Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.638392111Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:48.650848529Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.66566915Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:48.704085618Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.310249952Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:49.418470344Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:40.497645636Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:40.497645636Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:40.571192674Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:a8d74d374185d15ee1f255c5029e8b24ec70bcddef0edd45aa5ab7a422d83059",
                    "sha256:080bc064e45a164ea18b4f693a3cd91cafacaf65065db2bfd908f0d688f441d6",
                    "sha256:fb9f1eadd9ee007970dee893bfaccb09838d518e32a4922156b1129e5cf06cf3",
                    "sha256:f916d273073fa628208cd213c006109569d4d5d642301dcbfe280cf3a09901e2",
                    "sha256:6d15e40424b01661b9f2e2b05a40e8d4073187b5fb7c73d9e11e1c64968d9d3b",
                    "sha256:0cfd7db61aee691e45b26fe559dd46932d6e44cb2d8e215fc959660251cd05fc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:00c4db1cabbd12ddb10c88c15d2ff6e5cfe707e8c216b922fb98eea9f58db7a5",
                    "sha256:fe71d1b9fc068a243f2b8e06cd22474bd57687270c34ad29a9754328db808d53",
                    "sha256:bec460223461d7232ae9b55e7008cb8d9282939ddb8a51ef71af03cd6f4bc9d3"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:01.172903957Z",
            "history": [
                {
                    "created": "2023-09-01T19:39:33.176652315Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b81cd408aa91fe72b137a25268d416bfe02b0d5f4364d33fff62c7b779bf6a4 in / "
                },
                {
                    "created": "2023-09-01T19:39:33.303619349Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:46.264450215Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.201563231Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.776170117Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:50.785642495Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.813029016Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:50.848952049Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:51.504465829Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:51.627690935Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:01.04593548Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:01.04593548Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:01.172903957Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:759e7308839b7ddb4fbe0237b5c6ac751b757585470faae2e6fb4113689330c9",
                    "sha256:3714b8cf417294d83577eed2d41a8310ceb4a5b94bc5cf539d6e1e8c151466a7",
                    "sha256:e85e88ac6d3f9d4ebd9cea6c648c03b0a66b9c52246d356883e87839cf548c12",
                    "sha256:f999311f51144aaecd41a9eb1dbe8b3855ea3942de9bcbf01d786ac527c42f76",
                    "sha256:06367b31eb9d353155cf2fda621fa55e6bed3203574c04a36e5676d3a128a11e",
                    "sha256:f4fa602be1406ced6423a61550b81418cd27ad2cab850c264d152c9e5bfad81d",
                    "sha256:39621ce239b64416c48a5d4ec9c87d81e410c86f7a1dee68a1008687b425adb8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aa2b6186124869cdba12845ea166824d9686f0dc94d1250f76251176ea60c22",
                    "sha256:d881b84838597dc2db6f3a0d576353522cce6aec1ce0fe6ecfadc22b8c96107e",
                    "sha256:eec4504faf224ebb38c76256087408991a6e23f7b1050aadd12a6ca644485d53"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:05.242281974Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.28513971Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.563384828Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:41.987384639Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:41.99926054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.028984069Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.039940816Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.610183733Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.706664447Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:05.165913595Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:05.165913595Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:05.242281974Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:acf945858f21d55090956ab68feef5519c134db3d35c4a60add5851806f737b3",
                    "sha256:4809cc964e839ad12df3e39c2d8a9af635a3484d5f3a8bb3d4461b70c8068573",
                    "sha256:1536f5f523e12a81a19bcf3121bb72b8d5a47e5715d65a8d553a3e4c4bf6be6f",
                    "sha256:9bf96c77dab58bee2bda9ad58fa4685ab40d1ab075d194af6805ee7062a1cb3c",
                    "sha256:6c661a91758923c2f4a8c87d040bcbeea77dce5bc2ba68a70a7624d1c9c92712",
                    "sha256:a06a7a1dfe7d3815dc3bece268840ab7f34a1131dd0be55e8c684ea37a328fed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:87a12700e9994cbbb7f2da3129171691a775a2ca128941610c75c1e472e85025",
                    "sha256:5f26807abf00522b8086dc92094e67f73dbf7850a813d5f2d02c1f217d96dffa",
                    "sha256:0d46ea105842fd3679f002a139bf8b7cdea7c72aa663b2892c1a00ab1d61a071"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:37.738337657Z",
            "history": [
                {
                    "created": "2023-12-20T01:18:50.848501687Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4e8137413d9f18d24a8e5fdd22421b709b9cbd7b90be9decf20fa4449e7bb381 in / "
                },
                {
                    "created": "2023-12-20T01:18:50.962977731Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:11.144712687Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.108332988Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.836695019Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:16.847213198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.890794732Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:16.900813837Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.484169098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.566572473Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:37.663546882Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:37.663546882Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:37.738337657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2f7e86f9a990e093cc428d04381e03e3c0cf74715bcb4549304f17d20cde0fe0",
                    "sha256:69265675208218e82360188eedcd2fb00f10071aab69379d0abfd252a499d194",
                    "sha256:3b8e5d938890933bba092c0697d0d3a11db4cc58595cd97526aea5fe42a54e17",
                    "sha256:07e9071f6af9bba6f74b7d537fb7a27c72a63e38ad72c1a3d756f94dbaad6808",
                    "sha256:8aa84076d1ca53df8e1226dae158b6e3d2bc64fbf6922852dc50ebd8eff94107",
                    "sha256:6e358c23739cca005efe72fd93f01f5aeea13b0f0fc56184552f2a43aa40734f",
                    "sha256:f0c1048fdc4f2f5590128806dc16f31e19362a66e2c3234a2a99dffa638d77b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:46976bbf2c89806fa9b12e3b41084881a45aeb3e08314b2c66631a7ebcf00382",
                    "sha256:b887004b4dce03c3415a3e8bafa963ef42372715793774b324883d0ff49476bd",
                    "sha256:013e3ec826b6d66b9d98a5c49d909165501d0e89513b1c4c90fd7ce224bf45ac"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:05.9821895Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:44.547103477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.306954561Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.843052925Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:48.851382754Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.859240993Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:48.886929916Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.407394161Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:49.495079842Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.905288921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:05.905288921Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:05.9821895Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:7ad508c407e90259a8d49fedc3ff2967970f18eac31cc7918fc315071e9de40d",
                    "sha256:5ab0884ae40da0a48886c82780d828dec0ca8128e303c03a8e570a20a681a897",
                    "sha256:2a7a44d8457d3a6f87ccfb8e99f46d33975fcc4f525910bc81594c6a182ada8d",
                    "sha256:fe2e4b120899f408ca419c44309793afa71e212f1ebcad332e3f82abd563c32d",
                    "sha256:2a701c39ec12aa3b70387d8e6f7c5d5d3b932fba7a523fd18215475877991707",
                    "sha256:57da73dcc55a7d8b28235744b2010bc71d51321adaf9064646d24e5cbf206ec1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:78126b2b0eab9eb45e86ad8f7ef1e4d92f3ec73111d9d41d8fdd707aa859f37d",
                    "sha256:43d7d8a1c56d50337dafa23219aa990d599d2b1daf8aa18bab7146a0de40c5ef",
                    "sha256:abafcfc5f6ee114a0c96a3b3f35ac0f294e06a6a0c713ce307379129daa4be5e"
                ]
            },
            "variant": "v8"
        },
        "edge-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:49.084403401Z",
            "history": [
                {
                    "created": "2024-03-29T18:06:18.697915556Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:69e9ca740b67298fe82777bb62a9104f028f1f65735e34518aa76bd73128302a in / "
                },
                {
                    "created": "2024-03-29T18:06:18.803299164Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.456381884Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.009176193Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.589618109Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:59.601064273Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.612439696Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:59.6581571Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:00.280188659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine edge   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:00.371141855Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:49.007161511Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:49.084403401Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux edge \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0686b36697e3e57c5480b12b45cbe01da9b7c46926aa624e53bf42bab6062520",
                    "sha256:bd502153b53d138a941c959aaf9249470ffbeceebff5ac589c273fd85997aff5",
                    "sha256:b7883c6f3c9e824d6c9ea765262fefdbdd171a599257c7704ab4f532a7ee9b20",
                    "sha256:90d024b9b4b35c01254d631b7c2a2453eb147861fc7dd55db490f88e4970ce78",
                    "sha256:8dd3eb8233cede80f649fa7de92923e82d1d4fbf5c9ceda543f2f76a5d2a597a",
                    "sha256:1023239937a2023c06d4e1b0d23077a50cdb42e79d5cbe53159ed24fbc3d141f",
                    "sha256:6b4fb5d9b1022841c00b566077c943865a944196b1bafec5dee1954e4c8f051d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b199cdc9dd4ca7df09fc33460bb48acda284f746540f22e71b88436a9e89fa62",
                    "sha256:a6c48a77b24d7afff53cb35dd1b48f0e249a7c2139c1e8edd091bf4d99b1b260",
                    "sha256:a2768ca26d3f8aca4aff12f44c097c50ea945a6745cf6636aca97eec5e251cd8"
                ]
            },
            "variant": "v8"
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "latest-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.388345509Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.520631223Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.400767522Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.424722792Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.386379792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.519583764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.388345509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:cea3169001ff8c114d2946b6e37474448266e4c091ff763bb732b6b0ecdd4a3c",
                    "sha256:8511770d79aa88ed07a3c1000dd8c5e6761b8812fe5a84de2ab00afb54318df5",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:7d94879af8e1979e6d0363ed899a39a72fceb1d0851adb4188ec41aa5a88222c",
                    "sha256:63f492c7f5a4503ff4e4f76252e9a73b2cd1c6f69d551cf04aa7a6adf4a166ee",
                    "sha256:95e88c375acc611534350d591c731f40a1cfefc95a25bb90fa22778e2251c188",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4d3161e8777398bd42a177d5e078894232efed7a1ebb418d8dc62a8ebc79cf8",
                    "sha256:69faca25e68680215dd8915e95c9f668e6be5e607fcff6dc568d60cd5babf180",
                    "sha256:6d30bf5aa7e9ea4d6f75efedeff6df91e3f064c5798cddde5580e2a8c54490a0"
                ]
            },
            "variant": "v8"
        },
        "latest-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.673224829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.673224829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b3a8612c7960695fde07b7ef38519a0f7f61859e937131a7250fbeb41e42ccf5",
                    "sha256:a2fbb914179d2459863a279d36871c7219e63fec201bbbb6f289274fa92e6a26"
                ]
            },
            "variant": "v8"
        },
        "latest-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.960667253Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.960667253Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:5c00383d854434b338b53f86b3c470a4c32bb8ad82c8db26e3b941226d0ced42",
                    "sha256:f91d95298a975349623f27dd9463effd7d4b74143870567b6745358e66ffd88a"
                ]
            },
            "variant": "v8"
        },
        "latest-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:03.637549969Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.637549969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:9aff0815dc9027f75219dbc593f78b7b1c180e5d8fdd88fb2da1d87066691227",
                    "sha256:72417644adaf7aa4866a299a9f6ad7bf5759d45ac643a11511b5198629acdfe1"
                ]
            },
            "variant": "v8"
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.50391899Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.50391899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:7e84d2b37271dd126b2e2261a454be3be2e8ee9bf47f0fe30111de4b9089bdde",
                    "sha256:c85c115c38295986894b87e9e51ab16c2d33d123fa7d36a345e80abb7d94e00f"
                ]
            },
            "variant": "v8"
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:01.124872367Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.124872367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:8f49d715223ebd719fe9788ddd3785d78c5d30e9ee4c23b5fd3c2d805a0e89be",
                    "sha256:b46d1e94d3cd228c9a8887a82607356eb000de7d2029de678fa0b164026b1e7f"
                ]
            },
            "variant": "v8"
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:54.645967894Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.645967894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:5162a9c211af409356be9c0b69a7b1eed267bc294d3fcbaabdec24ebc9b81a2f",
                    "sha256:6bea1f4fb6fa2cbf3314610390f9d5c9757adb72ee5b0418bfc88f69d40640eb"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:39.691469828Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:55.549744165Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:01.419529941Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:38.3756502Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.533571816Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.533571816Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:39.54611839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.582311826Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.605661668Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:39.605661668Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:40.685765374Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:40.808939482Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:39.553532132Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:39.553532132Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:39.691469828Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:25fa8626c4380fcdc9b61825af5b981be093e2777710729a56b2f2e9514c6974",
                    "sha256:7d35c4e8afe5a54c242be1165dd514af5f47c985fe569e93d45929e0b8290531",
                    "sha256:2772b07f2c12e4c82598b70703489d0e910c2e3bcc4bc47faa6a093fcdee6cd9",
                    "sha256:367be9cca80871c693ecfed8f9e7db503c118d98a77d9bc58fb70f73bc0298c2",
                    "sha256:e357e9a6466f365fbc30ccc84628b67a51ede367a7d0be3869b4ff3a62b30647",
                    "sha256:73188b38197bb88c17775d47f8ea9687f3de7bc41f59df14b22d909387997889",
                    "sha256:d51e137f11ba51b8a0820584a9bce7863531c2745513dfe70688a0c19e5093e4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:285346f83892cbbb247518b29e893c514afe62fbdf065620454f75d09c8ff704",
                    "sha256:1e60f6a77cba0efaa4bc4d1b26c3f74de3d63d639660f903d15051644e25eb29",
                    "sha256:5e57fb68d1ba39e93669276d79ed5488396e3357559846b9fc337b1ef4ac1259"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:48.405142434Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.606081119Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.105257163Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:16.256678676Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.247517839Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.259002872Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.269564494Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.279840159Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:17:17.859381257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:17:17.946779685Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:48.27945442Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:48.27945442Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:48.405142434Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:0dfae6631fa6687a5608cf91ad4d624240c5205b560cdcff5cc0ecbb61692b2f",
                    "sha256:d4a7c415a623758151614d31484fb309c86b2a9c52cc0aa20efb49caacbb06b0",
                    "sha256:abc9550e0ca2d01aa5c99a987b5536170534e36f40d6bb37956b66ab5cf6bfd0",
                    "sha256:609ba038ba46c0b51fc75a92dc2874b9a3f239c821322fc513df1812899c332a",
                    "sha256:fa957db6a0dbbb0d19e83e2c1ded07eac3b113b68a9b7dcd10f731dcc5473d83",
                    "sha256:232a5b87ffa8c1ebe28a8597d85849defa46572805ca5502b3ad7b41637d92c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfbbc02c54863a5338f373f4c261bda17b5f0692fb4444c3f8d891c693536b12",
                    "sha256:488f764e01836eac770950ca6c42a311910089a3704d96b11a8f3c8c7dd02d0a",
                    "sha256:2f13d4199fcbeee045b5fa623d69c985dd0ad713dfa45c52e141d2659d3d21a1"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:29:02.398697479Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:49.763332611Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.745979143Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:16.505680087Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.53885949Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:17.548708627Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.557118407Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:17.591625105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:15:18.235667988Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:15:18.366712531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:02.288104657Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:29:02.288104657Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:29:02.398697479Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:1b45cbf5267a9f0ab8ecbd86988784f1e2e2c28f3af0376717b255cf8b453d6e",
                    "sha256:b088866c7d9fa5dd49be6293b68fffe8bda095f770fd112520941385f1179944",
                    "sha256:82627c9307aaa497704a23b1d8332d9937463da738c9d71269fa852dde40d869",
                    "sha256:f5dbcc73acf8960a9d7fbde49a823a58540ad63cc704e56358ecf2d5377af7ea",
                    "sha256:549b93b36a841c9c5b31488dc0adddb05a9c783af6395f67663262e0505944d5",
                    "sha256:d45d30428664b00301e2a9ccbbeb03db3edbfcf14facaa40a577cdf49b119435",
                    "sha256:4fb806f6509ee624a9d9cc447ff6f50cf138dad08a362975ee49b5e8e68487a2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:49618e63f30922f50a0225f928f5c47de4cd3498e121dc19848a4062fddc6de6",
                    "sha256:3f7a6bd7d9557df5c7fdb74f2e1e69fa967bbf075e3642f021a5fe7ece35dabb",
                    "sha256:71d06fc292c7e85716369ae04e7c9decefb2beedf1850ba8071d569ab5c7a494"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:02.798403039Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:39.431665725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.085484298Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:05.480942433Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.255166567Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.264805583Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.308090459Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:06.319341535Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:04:06.889432067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:04:07.009584647Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:02.721751499Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:02.721751499Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:02.798403039Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:c20deb350aad2eb4ae4a89c3fc2f66aa0466e5fbfb2fd7c8a258cd3f05590c46",
                    "sha256:1f35f18ef2a8df5ab25bc4703d6a41a0d80e4f3a535b8d8b1031ecd719b23cec",
                    "sha256:08d716f6517cc3c8939c159dbf5c85a225cd310710a5307c756862fca6a14175",
                    "sha256:f0696b003b26c46a5335e52aa2d00f2b1e4dfacc257a173795bfa11eed0e3343",
                    "sha256:c88a735e5ee6b912224198888739e38d6656165619623cd7d6218203ef9aa355",
                    "sha256:bdf5d66e2db4143c6eb4ca17515013073e21d5539628b3b8de676b3a2c81173e",
                    "sha256:c48b4479ea6c223c53c91711e04ad6eb9b0b8f105915c4472a8dcbf8d2f0fdda",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b1772c03d0917295ab7c56a866053757c66f0c6a1ec69355c6e10df2ec64b59b",
                    "sha256:e4ccc3f1183b5926019579a3804ff6dcd856ad500358fb1ce625ac2791110980",
                    "sha256:d77d42e47cfb1a3bdd3e0ea5c744b2f985af744c68fe88ee071862be0a6e9de3"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:49.626595292Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:08.139310667Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:12.183480416Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:33.773229632Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.257635899Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.266661371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.322821115Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:34.331949621Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:34.921538197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:35.012499009Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.520138976Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:49.520138976Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:49.626595292Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:d1b4aa9b8d8d566d3023ab6d554c77c9d97f4bcfba1deabf094ee6789b405dc8",
                    "sha256:fe211da828d0e15f8a01c14a556e1aadb7ea31311774b6a7a46d606efef0cfc6",
                    "sha256:044ef28db9747af95d90ca62b4bb9dec1ce6b4897397ac6e7533062763847f7e",
                    "sha256:ec50ae9763bed240d51fdfc66a9382ca6b56258bd9d64c459a9af6dfc6ef24ff",
                    "sha256:f85a56666b71b6321754d718dc093871923bf3670f69b17926e4b824df15a079",
                    "sha256:90f4dea91a39ec46b6ba7204507c860bd02e4e6ccc1256f0cca64467defd88fc",
                    "sha256:e973170aa6c02283418cf56b474a2cf61dc175f5fe63ce4a370151ca4d155f40",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:acc451c64dbe80fe945046f6b95818e8159e6712dc5a1c427c1964979a301cf0",
                    "sha256:9809009b0a13596b7fe347ce98f360038161ba29fcb7b07aa6b2e30e649a8fa8",
                    "sha256:85624d351ff71c3b407d863c36dba36459fed2afe9a23e0f0f0ce6265ba565b4"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:13.157230356Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:41.633685567Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:45.918568213Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.036691183Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.521653047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:08.531065902Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.573452099Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:08.583142021Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:53:09.152887787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:53:09.252828137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.08565666Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:13.08565666Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:13.157230356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:4b13f483083c8617698a2e81f6118c9859d0dab4721212a761acf188c121f5ad",
                    "sha256:265c972314b7022b2704a7ff0ce70e7d013599c84c597244cedac1efd08c043b",
                    "sha256:5993dcd1264b67af9e13370fd826998c611ee99870202d76537008bd9f53ee91",
                    "sha256:03dbfda41a7eea5c961dfd48e0581560fb5f32c0de27697283a294a1871e49d3",
                    "sha256:2da16ffc1b870e830396a6437675c45300c40a78ae6362399d8145ac415b16c4",
                    "sha256:537218bc2b0cd2dc44fddab16c472f85e669dedd32e818254a6a726427b752a2",
                    "sha256:cb37913cc8e5a0f895952dd86a4d6abed4e4cb565225dc51d5d458269384dac3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd7253e36259cf80a3b18d75646c5e2e1fb5ac02a90fca8c04bf650c71f3484d",
                    "sha256:d80dec735555781a8108f8b2a568087cb8d27b65107fb780af79cdd3999bc309",
                    "sha256:15a95beac71d5fcd9425b6e09bdf464e926339d99b683befa403c1b1eb29d53f"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:54.645967894Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:58.444169405Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:02.74964868Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:27.373529247Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tca-certificates \t\tcurl \t\twget \t\tautoconf \t\tbuild-base \t\timagemagick \t\tlibbz2 \t\tlibevent-dev \t\tlibffi-dev \t\tglib-dev \t\tjpeg-dev \t\timagemagick-dev \t\tncurses-libs \t\tlibpq \t\treadline-dev \t\tsqlite-dev \t\topenssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tyaml-dev \t\tzlib-dev \t\txz \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.280723914Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.332453464Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.347335401Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:28.364570084Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:18:28.984198473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:18:29.066880523Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:54.57564045Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:54.645967894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:7c8ec0e07b96ca2dd856d9e8c8405938dd3df7b62b8f5f8599b09dc604c3b257",
                    "sha256:b0621d3a6380aa2d6362c6fabfe194e1668ca3bda5452ff430c2c3b6f4bd32fc",
                    "sha256:ebdc2523ab58d609f92742a387c4874118a38bc7bbcae1be8565bfe63ff67502",
                    "sha256:7a91abf9ec3deba8282823a3f94413d4699a2b61ae3cbda9eb797ec89c7959ed",
                    "sha256:176c7b9ecc8c6f9effe7c6fe9cdf43e07d5726128f9bf5cf1f38cb0695d9c928",
                    "sha256:fd7e3362e7f36e7fbbb64d77f71755cce940fce2753a2aec7274cf6b758b3257",
                    "sha256:5b6d664c2cf0a2aeaa6583a78c6ae1616ca58fa343b19e7967b0793987b3b8e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a0958f5bc72ed16427237bcadc38f2a7701f2c9d9e5ad645f76dd45dca87d89d",
                    "sha256:5162a9c211af409356be9c0b69a7b1eed267bc294d3fcbaabdec24ebc9b81a2f",
                    "sha256:6bea1f4fb6fa2cbf3314610390f9d5c9757adb72ee5b0418bfc88f69d40640eb"
                ]
            },
            "variant": "v8"
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.388345509Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.520631223Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.400767522Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.424722792Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.386379792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.519583764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.388345509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:cea3169001ff8c114d2946b6e37474448266e4c091ff763bb732b6b0ecdd4a3c",
                    "sha256:8511770d79aa88ed07a3c1000dd8c5e6761b8812fe5a84de2ab00afb54318df5",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:7d94879af8e1979e6d0363ed899a39a72fceb1d0851adb4188ec41aa5a88222c",
                    "sha256:63f492c7f5a4503ff4e4f76252e9a73b2cd1c6f69d551cf04aa7a6adf4a166ee",
                    "sha256:95e88c375acc611534350d591c731f40a1cfefc95a25bb90fa22778e2251c188",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4d3161e8777398bd42a177d5e078894232efed7a1ebb418d8dc62a8ebc79cf8",
                    "sha256:69faca25e68680215dd8915e95c9f668e6be5e607fcff6dc568d60cd5babf180",
                    "sha256:6d30bf5aa7e9ea4d6f75efedeff6df91e3f064c5798cddde5580e2a8c54490a0"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.673224829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.673224829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b3a8612c7960695fde07b7ef38519a0f7f61859e937131a7250fbeb41e42ccf5",
                    "sha256:a2fbb914179d2459863a279d36871c7219e63fec201bbbb6f289274fa92e6a26"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.960667253Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.960667253Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:5c00383d854434b338b53f86b3c470a4c32bb8ad82c8db26e3b941226d0ced42",
                    "sha256:f91d95298a975349623f27dd9463effd7d4b74143870567b6745358e66ffd88a"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:03.637549969Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.637549969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:9aff0815dc9027f75219dbc593f78b7b1c180e5d8fdd88fb2da1d87066691227",
                    "sha256:72417644adaf7aa4866a299a9f6ad7bf5759d45ac643a11511b5198629acdfe1"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.50391899Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.50391899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:7e84d2b37271dd126b2e2261a454be3be2e8ee9bf47f0fe30111de4b9089bdde",
                    "sha256:c85c115c38295986894b87e9e51ab16c2d33d123fa7d36a345e80abb7d94e00f"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:01.124872367Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.124872367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:8f49d715223ebd719fe9788ddd3785d78c5d30e9ee4c23b5fd3c2d805a0e89be",
                    "sha256:b46d1e94d3cd228c9a8887a82607356eb000de7d2029de678fa0b164026b1e7f"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        },
        "run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-06T05:47:23.388345509Z",
            "history": [
                {
                    "created": "2023-09-28T20:39:33.966748405Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ff3112828967e8004a3264d7ece3f81c88e6a1d44d360b9b5613caab15b41717 in / "
                },
                {
                    "created": "2023-09-28T20:39:34.079909813Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:51.571965617Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:58.520631223Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.384555327Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:30:59.400767522Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.424722792Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:30:59.460764203Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:31:00.386379792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:31:00.519583764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-06T05:47:23.275058123Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-06T05:47:23.388345509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5f4d9fc4d98de91820d2a9c81e501c8cc6429bc8758b43fcb2cd50f4cab9a324",
                    "sha256:cea3169001ff8c114d2946b6e37474448266e4c091ff763bb732b6b0ecdd4a3c",
                    "sha256:8511770d79aa88ed07a3c1000dd8c5e6761b8812fe5a84de2ab00afb54318df5",
                    "sha256:76ffcac1d82e8e8b5a293ff2324b242b2b7229f2249715245b3e23bf254b57f2",
                    "sha256:7d94879af8e1979e6d0363ed899a39a72fceb1d0851adb4188ec41aa5a88222c",
                    "sha256:63f492c7f5a4503ff4e4f76252e9a73b2cd1c6f69d551cf04aa7a6adf4a166ee",
                    "sha256:95e88c375acc611534350d591c731f40a1cfefc95a25bb90fa22778e2251c188",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4d3161e8777398bd42a177d5e078894232efed7a1ebb418d8dc62a8ebc79cf8",
                    "sha256:69faca25e68680215dd8915e95c9f668e6be5e607fcff6dc568d60cd5babf180",
                    "sha256:6d30bf5aa7e9ea4d6f75efedeff6df91e3f064c5798cddde5580e2a8c54490a0"
                ]
            },
            "variant": "v8"
        },
        "run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-01T16:27:42.673224829Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:49.256234679Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:53.100416384Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.013804861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.023093249Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.031734547Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.042830957Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:16:54.807741854Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:16:54.910817858Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-01T16:27:42.604027655Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-01T16:27:42.673224829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:516a9cacf29a92bf35c4284c06f168a86eebc6294b0669dd96acb2760c25b330",
                    "sha256:3d46975452cc95ea1aecdb0e5eddedb99485e46be2f405ec43821e122d4fca74",
                    "sha256:cc1bd03bc9b230bbed06074b163db14720feeb4630da7730debde8d24c4a5c8a",
                    "sha256:d65a639e1fd7e3372410df23477b4e5c0af2a63d3a967deeed715f56a8e6a04d",
                    "sha256:feabf034ae5acd07509afa9e7375854db305893fd4e13d2e946aa92213ed6ed6",
                    "sha256:bedfcc30dec907e337f486e6b01ae93cff3ece3db0a8a47900b9da1f8a28e7d9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5a7e2dd4960a95aeb919273da3d779b33e9661d389b15312d89a5b0da3a5b458",
                    "sha256:b3a8612c7960695fde07b7ef38519a0f7f61859e937131a7250fbeb41e42ccf5",
                    "sha256:a2fbb914179d2459863a279d36871c7219e63fec201bbbb6f289274fa92e6a26"
                ]
            },
            "variant": "v8"
        },
        "run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T16:28:53.960667253Z",
            "history": [
                {
                    "created": "2023-11-30T23:11:03.711712577Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:d8a30995bbcd627f084912c728fda5483b6ba486de25af588a0956069d0bd7ad in / "
                },
                {
                    "created": "2023-11-30T23:11:03.827876429Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:48.600744013Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.347069735Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.900139647Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:52.912311092Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.921971345Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:52.934229446Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:14:53.518182187Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:14:53.644589894Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T16:28:53.849096327Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T16:28:53.960667253Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0faf9b67be60a76d473c955d4de2849da5e99e07fcefb753219631e1e7b608fb",
                    "sha256:d7be918aef65ba47908134565d5f7b488f9ade7c35e6de11f07be701546f70fd",
                    "sha256:5318a04b45538f6a3726273b2cad4061cb480423cc85e3e6d5df308b88f536e1",
                    "sha256:3e967c1043d09c8b1f054366c180435a46a9425375605110f5f030bbac1bf7a1",
                    "sha256:b3b28e5fd0a86724c2849ed7381497da720937581b472e4af9745d32c369c8ec",
                    "sha256:947497d5bc8584e8f415a1e9e9a0f1125a46d9e8e54ccc72b00c475aef81faf9",
                    "sha256:f39bb018375e800f3b92c2c16bb09ef94255f6f798137c60a439554c74829312",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:954cf83ddd706dff583e01702ebe34e969ca252637f61ee0d8e38a79f52330d4",
                    "sha256:5c00383d854434b338b53f86b3c470a4c32bb8ad82c8db26e3b941226d0ced42",
                    "sha256:f91d95298a975349623f27dd9463effd7d4b74143870567b6745358e66ffd88a"
                ]
            },
            "variant": "v8"
        },
        "run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-04T11:15:03.637549969Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:37.817299553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.07494693Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.478802542Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:42.488396031Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.496566933Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:42.526949917Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:03:43.10347624Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:03:43.211656618Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-04T11:15:03.563574118Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-04T11:15:03.637549969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:344a764ad23fb8f03074ca01a68d7f49641a65e7c3206ce6d5b6bd99e8bf2c09",
                    "sha256:7c4cff6a6413ef2f14791dff964c5fddd3ffd5f8100c12bbf295cb23060e3667",
                    "sha256:361f96c1242cbed376416aa791877b78b1f738b4066f3146f1e6018c9427463e",
                    "sha256:4fae4f2120be19c5376a9979a584704826cd71f13271f71f150ec443dfbd14d8",
                    "sha256:1830602884a8f30425781bcb06edf19b927e8e96f6aa25f5b928b828a5103634",
                    "sha256:ce709516a90b68fcd892a830d73e8dd2563b0ff9f05ecde1d5f89044e1585511",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0d83c8fadb268eaf71c7a0c590dbe67db0f39d12b69b2bc0172e84dfb585de2",
                    "sha256:9aff0815dc9027f75219dbc593f78b7b1c180e5d8fdd88fb2da1d87066691227",
                    "sha256:72417644adaf7aa4866a299a9f6ad7bf5759d45ac643a11511b5198629acdfe1"
                ]
            },
            "variant": "v8"
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T08:51:45.50391899Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:12.901961408Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.146388792Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.564195098Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:17.573010127Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.581637335Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:17.627521453Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:38:18.214369067Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:38:18.331507454Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T08:51:45.423494404Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T08:51:45.50391899Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:b37baf1bf87d5bfdf999474a043b42462dacc427ca8dd81bdbba660009c95429",
                    "sha256:5680090fc658a6f990356410742dc4bdd5b608feb07ac576a3adb15186dde005",
                    "sha256:532d8a4f0eb4a9670f1f50a41fab3ce470632507d1a2900909f7d8fafcef985a",
                    "sha256:3724cbca50eeaaf86f3a6cf78bcd6a6dcb7f6b54ffe39cce0fa48fbf39327b16",
                    "sha256:d41fb7eabe06f95db10e1604ac910655d92547fc51b8cfed87d081b3c2c436ca",
                    "sha256:e35ccb6afc8ffc09e615d22f994ff7250e17ec2b3800b5d0bce5d114e94c995b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9b6c9f0bfbf370dda7376feba78f2dac21ac842b04ae000b0c9cab08cd50c802",
                    "sha256:7e84d2b37271dd126b2e2261a454be3be2e8ee9bf47f0fe30111de4b9089bdde",
                    "sha256:c85c115c38295986894b87e9e51ab16c2d33d123fa7d36a345e80abb7d94e00f"
                ]
            },
            "variant": "v8"
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-06T19:06:01.124872367Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:49.755746563Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:54.672267807Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.247687269Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.25616501Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.264669134Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.297543448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T18:52:55.898027531Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T18:52:55.987737884Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-06T19:06:01.03376148Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-06T19:06:01.124872367Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:162358fd9c4c3d62f9860213ccdb4bcf744a2d98c3cdb118e4606943eab84978",
                    "sha256:c04d8c63ed0105275a88a484b0dc53caee6d255bc8d29cc45b72c28253e3a6fc",
                    "sha256:64a39d6004919992377920d212592e520bc40349435ef27c472c139ad1d1d85e",
                    "sha256:d7485119e4cf7e92c18fef101164aef95663913486bf35c584763582c67abb0c",
                    "sha256:c0ad6b29ddad09d164c4820bcb52de6c662b348247b988906a4f98984dae85ac",
                    "sha256:fe49507ddb7050cf8fc4973aa8427b54ad8aa78dad65b41166097ad5ae2c90ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1a07f06f4be364e0f044472c6c19422c4b75660631e426f4b33ebe7fc7b4246c",
                    "sha256:8f49d715223ebd719fe9788ddd3785d78c5d30e9ee4c23b5fd3c2d805a0e89be",
                    "sha256:b46d1e94d3cd228c9a8887a82607356eb000de7d2029de678fa0b164026b1e7f"
                ]
            },
            "variant": "v8"
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-05T03:27:48.859129005Z",
            "history": [
                {
                    "created": "2024-01-26T23:44:55.650290626Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:6dc287a22d6cc7723b0576dd3a9a644468d133c54d42c8a8eda403e3117648f7 in / "
                },
                {
                    "created": "2024-01-26T23:44:55.750082605Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/sh\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:50.52870477Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.244403454Z",
                    "created_by": "RUN /bin/sh -c apk add --no-cache   bash   ca-certificates   curl   dbus   findutils   tar   udev   gnupg   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apk add --no-cache \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apk failed, retrying\"\\n  n=$(($n + 1))\\ndone' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.721327093Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:54.73154371Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.764415104Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:54.773509051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:17:55.393481659Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh alpine 3.18   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:17:55.472514107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-05T03:27:48.773823993Z",
                    "created_by": "RUN /bin/sh -c apk add --update \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t&& (apk add --no-cache ifupdown || apk add --no-cache ifupdown-ng) \t&& rm -rf /var/cache/apk/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-05T03:27:48.859129005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Alpine Linux 3.18 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7c504f21be85c8ade51b7ade32a39a4269bcbcf0e593352923f1b8ea6278e5ef",
                    "sha256:ee3b8258f49c27166c770ed9deb99f6b4e0a0a0b3904387cf34c49c14b87a3cf",
                    "sha256:1619d2beb51944e4abb1d1c29bcc09a9874938faf089680ebe829cb77a087854",
                    "sha256:5ce9cbf57c671d293031060cde3cf0e7b40a69a935e7fa231b9223e2a5532bb0",
                    "sha256:32ed7cb8529758b9dcb34b55d9556d67c83a754991f0abc25ca307b1ceea4dea",
                    "sha256:ca7bfa99938e942f24ad34ce68e580586b0dc97ee51284d7770469536f3349e8",
                    "sha256:377fc0d5516ad52cee48fec841f4a2a0a54540b6992192ec21c8ce971653aeb4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d524fcbd65c0eee0e2b50d83cf063ab9d7de0a6f15a8b9fc3ee8692304659825",
                    "sha256:b7e001f5216b2331bdc79aed13458b97c0a9239e4f88080fa2e35338ce6a4452",
                    "sha256:eaa69b4a0ffd6b7940e0437d76b60a35f46be50919806923a0f0332a9650dc56"
                ]
            },
            "variant": "v8"
        }
    }
}