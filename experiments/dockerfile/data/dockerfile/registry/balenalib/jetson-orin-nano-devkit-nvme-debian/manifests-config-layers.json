{
    "manifests": {
        "20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20208bb1e28465f9cecd1368be5df49f9d4533b8f3a86d7f9fa52277a5728248",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e9e01669ea83cbf9e82f86f54b71e8c35ec63e57ccd60c59dda9291b48588d",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bda5d49a6f4cecd51e1564371636b646cef710b5d1ef04305a5b460545727d3f",
                    "size": 12068209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a4ccf0a07e05d0c3d6a9b7723507c9b60fb127b0bb7173b91211163cb99877",
                    "size": 471
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6fa73473734a17c1b74876760c017e0a8a13cfd457b7631ec066532dfb3f041",
                "size": 9050
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1af6e33c8c1a0240de24e317081c4e6261418a91607a51a83d47be5d58074d34",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c16f53f6469b65da623b343f4e5435c5a51b66127dc1fadd6b3c5ba20591401",
                    "size": 12068411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c615e5658f61680043afeed3ebf6fe8f9c4eb696bd4372a2b310a0ece1fdfe8",
                    "size": 468
                }
            ]
        },
        "20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f0561e3a9dff1bbca913a688af93028814cf485ab0260784056bab05c508f370",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3018b4d5d2cd8afb7677abfc2b0efc2e5cee1e2d57bd29553825b2de7dec197",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e700f5a83759270ca808b17a33a6bbcf5857e9250dcb1df0fe17a8f639bb350a",
                    "size": 12068180
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69a10f679b36ae0307dfe5c7a055b697d7d0237f6367ad5827fcff6514eabb4a",
                    "size": 469
                }
            ]
        },
        "20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c997978c2ddfebf46f731a083e5710154a1a8a87fdfdb6142e92737567110bdd",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e1e5396d58fa0090dac5db1cb6915b702264b4449002aad30449284b9621e4",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d8f7494576dd4abd31b0c765705a7150fed4b5b53eadb55f59e5997e21f98c",
                    "size": 12068241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76174cd2d6bdbc395bb572d84057585565fb0615adfff8215c0440a8194ae8",
                    "size": 470
                }
            ]
        },
        "20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5edc2f786cf9859acc85755124f358d0368fbeb1f3868b33739d249ab6828686",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1b7d714b72bd7a6a93db0ef25112190d83fbcac67708db58c14f42006a0488",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f201243acc8e57b40ec2d1afb03b181eb5912450e9e453d1548e59467548ac",
                    "size": 12068149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:854236a2e70593288b10311bc6669575b15783b8b79be6c46905f1e73bb4e114",
                    "size": 470
                }
            ]
        },
        "20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2147eb799cfb1114feff7d6873b29592efd95a8f615f973afb78ef6a3822d057",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0ce38574e2ca7434d7c25cebdee71122316e3535cce07dad36fdf4ddf431ac8",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a51baffc0f2d2597114e02775e2ec620bd259475bb16a2472eb22541e72e9ce9",
                    "size": 12068269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b22a524ccf5a2180a99ec4904f079ca7488a9fe5a3a5898c4d0f0fdb1c0e828",
                    "size": 471
                }
            ]
        },
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5eac1f6213474ac7e692c459254a55101b99318fcf23c7655266aef24030291c",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91cc30b28814943d567bd1899342813bdde34b5b4c1c1e6b27110ff035a1b723",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccab5f6b03393f667f61e2d79937a71a336345fd379d9101e5557f4d765a55",
                    "size": 12066154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a341de42f8584e1526ef6e6f83035e8366ef7fce58f4fed7a899d89c5383acdb",
                    "size": 470
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e704d3d944f27d8b297a7571faadf2a8681e33ab981bab4e908d5803a19c460",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c074a98ebd9cadb901e8a1258201bea49bf3cb1aa279417a4b21e8c121245db9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b6e1091917f0216eb3c10842758007e54c6c9fa4944db2b29a88a0b414b49cd",
                    "size": 12065981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dd4d18771a002bae58323607d50df84cb0b2cc14a2c2152892b99268a43a84b",
                    "size": 471
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04c8bec1240015ba47d35bec998bbb2b0f569fa29e3df565099cf6555ed82dbe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511af9f68b0051068d160c297d51c7aa158c03e227327a3848ca9de3b282706c",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6943402209277b691dd96ae22b2440e5ff4bf901fc8168beaeb0f56f954a4a",
                    "size": 12066217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef32cdd0312482c46c204ef8c2f1ad8cbfc65e2666e5ba7b923a5eddcd28c337",
                    "size": 471
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28880571fe6516ed82157de59af1c6118c725841117aa8fe0093434188d7448",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bef8f8fbec0ee0034b0d1d308590c29d005f790783f1683a341f50a056d43b8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f1c461784ac8c8a757e5fdb5fec89e4cba4e135285de3b6ee9cf452d8fd6a8",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc85fabeb889392668ba5194eee89fb7205d0def98591f962353e3be24559a6",
                    "size": 471
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff5ea4495d8d03beeb8873fdca5eff9485811c5e1afcd09b0d3046cd185c1083",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6013ee29be9d0c0bb574d9fab57df3fe13a4986aa9247101abc1707008f15456",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7992eda26e780a3e25e951c2422a58247527da8cec523716cd371085cebd231",
                    "size": 12458467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c1cfa1bc60a150849e20ee9430d053ca0b7e93d0fb7018735141a4ef0f8910a",
                    "size": 471
                }
            ]
        },
        "bookworm-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985122eddf7458786d9aeae11bbd4940aaf5744e726103a6c5979b34b6bb70af",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84b5f7b594b419e106519389a7f664956cc1e4d0d13aa5aa4572f25273581de1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34adb20a00d4cbd68b0b3d7f4c29ec193ca54d462a1a4f1f987df86125d9b678",
                    "size": 17233234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c38e9a4548f72178fbc193313b70a4630d021981b0742e5b5b1e4a82f1b8436",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:911ef0b38c947d1fc9954382a720e14510cab7a30fd023d58b0072789ee97dbf",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2b2e7db1f23405ea6af4a05867062369851c486bb82ee4a32539e47c4b27dc",
                    "size": 256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eed199fb526c966b7a68e813c4f744a182300e41896eb3ca3512d2d751f0c8e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c01e1a7a6c6a2a71ccee156b0f5c00619da72be3b72ec36ee85a2efcde03c743",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676a484c9481b7f9ef360fc6c120bacba3039763b9078cb7a0f4b272a77dd9a3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:668efd96296de5a6ecde068fac9aa699b4a3c9122cd443904bc45716ee2c05a9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:703070e3265e1b2c279a7d43652415b91a340cfdcbc72a16d231b63d28c916c9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b2ebe635e617a009e0f9461c9deab09be37e75b0bd506a942bd84590f0a7d28",
                    "size": 12460973
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f37426082a7a2a26a3bebc3ab67b5d4c677b98811534747d65a3f963d47e4b7",
                    "size": 470
                }
            ]
        },
        "bookworm-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cfb706bd495b03087c8076ad9935ce336e2a54720485c9b195ef9977235d0417",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0ed2dcbe8e41b5a646daad99d68812e69f8b100876d4c17e25c307761b3cb17",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34a34dc8a79ff7d9795881f77bc1031e4aefe365d9f51665565f59dafd03cb01",
                    "size": 17233391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b3dc33eb969e87fe43e57eca3ce3d21c4bc79b63e2fe963ba25d42917e865",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2373e036d8e36b4ba9f1b31ee80d714f2394df16fe7e9100fddad80ebd53c047",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:884ec4f0647b7f5b0e13b995b81336b448606d3069d223505092f6f7df0b87f9",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce83390bf9352f97337ac7b24fa8834327f9a273dbf6ccc3cb3c2ca6952f5775",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6df0776f8fc114913a724161aff5b08d113181efef23ef164ec8b6de5d66cfac",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cb71cd58a25d674182c5b455327177d92d4d1d5a934f01abdf6b3d70bd030a8",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf036aeba5201d8f3d9cc3b88045bc8bc13e376240deccfbaefdd0405bd1097c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07a84c9b2ee6399243f6b98050925f7337ec9ad37f2b516c2c2dfff24d48566c",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f1d5cd329f2afaff8219cee1c82335305238c2ada26e0e7dbb81dfdb42c4712",
                    "size": 12461047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69dff1041bb6c97dfaf42b83a108af77e22f5e884ed0319ff9cb74535a595eea",
                    "size": 469
                }
            ]
        },
        "bookworm-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7593cd322e521a8b1a6ced01947aa45f50121e1fe5bca9c26e58a6a9a1b1a97b",
                "size": 9051
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed333f41be544ee74834fb8bc9f769211a29221f7f89c5a6b84903bcadc0c102",
                    "size": 17270116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46a48fd13877c0ef9821613dd99ad2d58c00a14d14920fabf252f4d7c2d13b81",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49937eeacb156c7d3897c83a2ccbf06c01f4fde677eb70f43ea753fb657a7c86",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4dff182a5a15eeefaa0f1601eca307ef5ef4227b8a96566b1f0b052304b3885",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac946561aabdcbaa7a56471c7432f706891faf1270440615e5fe227398cef286",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8247794ee4e56114f27b3912dac33719e83cac8e6dc4500ab7046cc833bb7478",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4570e560d135bb2e16df82ebcc0250b06af90268586e9ebebcd4497595f2e990",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8571e225437eb8984303849c28bb9dc91a0d8d9027155b331338a8ab24d24230",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:688b3cd4e6eafa27b627dd9497c388168c0896a1a29934c56660915190f9ed14",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c98894e90c68184a759449f3df6390c72daf274c5cef553442ae3320a4c32b9",
                    "size": 12458147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec3974d28e8d6f24abdfc63ecc9370b1c8f89a40ba9e1f39bdf6474a09632f72",
                    "size": 470
                }
            ]
        },
        "bookworm-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0dc1a859449432bce48f783ee83de8ddd6eec3ea8d0db6bb3128f57c9bd8aecf",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5813a1c0e348f0d85925d51173b2f2a36fb33de268820e927f1398edb089a72d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95f1dad3adb10e73750e5eb9f989d177dc502764e1bdddd579c1b05cead36d0c",
                    "size": 17270089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a0002a21e3981691653171d979d774351642122db5cd787ec4ab01396a5460c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d808756a9ef382f423d5683b5483dae56515329606319f8d013b9da611fccd9e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1728099dfcca585525899542066bf8075f6ecf071e7d29d4f9804dad8233b5b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108e087dab4d988c5d111ed64fdb7ea774d1ba000f8048e215f44a21a507b42f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62d8d4db13500e4117218004cdf4f07b1b124fd47b9edb96c3904b6066fe773d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8aeab0168b99b814facc9b5063b2100fd0568ca19ebb6d7a97f4fd517e83b5f0",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a36ca96a7ac822d1933baa344230d413cc53e4d1d4cb3aefc515df9ad76eccbb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be3d8e753a32e37f25b5b1b0d8f001e6a5a44cedc4e0b332b0d90f5fe92dd670",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16be0f3a50d3e3b81017b841e5c1f6e2774ad290d31efb84ebca479df2aa4666",
                    "size": 12458268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52f1beb31ffe4a53c95ca72a481d9cb7e40705c106eabffc60b439cc2fdd7188",
                    "size": 472
                }
            ]
        },
        "bookworm-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d019eb805815f455693de77f5d035aac385d6cc809c04f3b1f2f03f9027397f",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cf99189dbb7780acbaa1388bc434d16873c04af8d2862d1fca3553b4a6b1514",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c7dbe3aacd7d6b8ba7a0d518925d2cc655c1ef1d46ec0ccc602a38bbe432365",
                    "size": 17270146
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c7a68559da92859ffa5ba2f918f20e97ef75145181a654c49f3d02e4eb2afe0",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4290deb6673f9b01d9d62c77a688018c9308c974bcee7b60b3e9446e38000b2e",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ccd16cf299c83dba929bbf9b04fc4664c6d417114890f2b4f2bede4c824ef70",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5f5ab777edd1cb6c5ad5fa6e175ca61fddacef26554ea8030419c64122dff7e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed9ef477fa91d5018787983feff4ec50be6b49b661dfe7256a636f85bc10bc48",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56a7a0b9c3aa08fce71d30eadbd8c091d9182053709a315f909922fe02452ea0",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b11bd33784096d80050fd692dc9410f4c89b92903b5fc031315cf455c7164c1",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78fbed503ac2f14eeeb37aae3efed4258753c7fe7385a75b91ec354f3823eb5d",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21d9866d453eca940437d571db7b52b711d82e9e4ee3475c8e3455e4fa67c68e",
                    "size": 12458279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:217d7b7c0d9f5336ada25a7af2cb67e553379e81beae68ff435bacc2afe8acef",
                    "size": 470
                }
            ]
        },
        "bookworm-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2a6574856b9a4832c006cf569e47b7462a22580be5c6b74fba1a910cb1817c8f",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:580477eecaa127b9a8cb7506388303133d1d735b44d16cbba0070207a8cd813a",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b22c4a8dbfa03f55451073abb18b870e6732cbd7d63391a09d09318378578ed",
                    "size": 12458205
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bdca0ac60768c9330b403bb1eed1af2a73e6cbd87c4bf193db0b43b9b778d2",
                    "size": 469
                }
            ]
        },
        "bookworm-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e581aa3a5a9e7cdd911235855990c61da0da84fdc3faa39dcb50a8c82115f7c6",
                "size": 9046
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8440b90072f5ddf2b3a5cc44aa712305ddaaa3a499515c126bf7897cae869963",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7429e5f92c211b44f138a644afb74ccaa1475b6f1a4f95e870dc47eaf805336a",
                    "size": 17291102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28b55e040c13344e0180fe961d66474a7a824da112b5b04a9efe022ad7b8cbe4",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ff418b76b81ced646377e5144cb3c6e64855ad72a8094924a4adff2d55b8cf4",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32ce0e96c33ce0b25fa917bdaee0892501cc39098d254878ef647809ad250f12",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f62a7d423456619f8e8f6ee4fefd83ab831b40ddc35bd276bf11fc71552839",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9eb1f910289b61fefe4c7145e16e9859c20895ac646dcc3b40c0918f734ae17",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b70e90f9506e910bc421205adc0c978b3c3389bbcd0858c5c9b44421a52c6be",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78efa179cf8468ff2e8295822c76e8828a09bf51493689655ac9d74dc722684b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf35159a2440a91608156647f7493750b9d3434bc58a4800c55e1a20b991f8d7",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f5a18f40c2aecb51fd3975bbad83fbe8e9471bfc47b2b002f347ec653def22",
                    "size": 12458497
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8dfd02c32c64fd251e8d291f65bb65acb95f39d9073937fc81f39242a1cfc76",
                    "size": 471
                }
            ]
        },
        "bookworm-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c7b8184dbf7dfdd676690b7b8326b96685b94b85d0eafa34faf7c5887b40af",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e800a85078ae7f67f3aa27d4f7232ccefe892223ec61bb36f7afd7f90bcc45c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32309a8011bc1274781616b4be13eefa5499c77cf8bfc6f3076ce3e0ddfd917b",
                    "size": 17291043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:97d7090362df78d466f9190e06bd71fcc237a681dec956b3621a20b1e415c65c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67510a8ec989165dd38736bcbb8c1840ccf684a59e5c3b2fc13a3aeb32275b31",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:907cde37128c833ba7004720ffb574fef7fbfc3d404664e2a53a530bd663a6a4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc358e5ff00366d28275b125563e5006feb44ad171f01d734000d8c65fda4c74",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc5e95871931dc2b21adcc9684eab6071e5f29b3a96403eccba366756f469421",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c223d83464ff8f9a3c5441e15ef4ba9161f078a757682e057abdbca6c20a01e",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a157128dc3d8e991b45944b6188a163c93dccf448c830ac310f07ebad350165",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1bb90f0d0719f287349de02916b1ffc61e548aaf0e790d4b5a38b08f5e041452",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:682fa4eb35a571c2f5731a08584de6ec806596d459aebe62d11d46712f676165",
                    "size": 12458493
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86405701d8f65cc2b4f26c5b5a3dd01dd9b4d74df7d8764eb4934223830ae80c",
                    "size": 471
                }
            ]
        },
        "bookworm-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20a478c6530f67d55cb28ed43192ceaa09547c4e4cdee08cd671a963cbbf36be",
                "size": 9036
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91450bce0ec14ebc0a122b25141e10506f4769bca9e06f74ee4089baed5340ef",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b78547d2411f55322cb033b89fe4d30349d950b0505e6766c92d76fe032e446e",
                    "size": 17291107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fc3f1f26f8b59cddf39ac0a0e8fdeae71593ab5936f9b3d06973e02ec4b19ad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:488f4edf6c1cfaf874f5b398ac0fb9ecfd19f3d1420ab593aef8497d19611a22",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc36d679b21baae7c2264d50eb37360ae1e0b470779a8788cbecd70ea09e574f",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:019760aa07be10ca58cd3576aed2e432ff9e599e9b5c90dc07943b7bfdaea7ff",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42f6e9fbc5b750e5fe424587cbcafc4d4bb185dc62678ab031d04e27cf4d271",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c44ab3b6ef2c95d5f7a2794f49df47e851805fe0b0c88f18fe4745dcd05de83",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e710365fac4f74ff84332ccb7510beb82edc7e05c4be21dc53fb84626f505e1f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba1c9be25dd2e62c941c968f4d938ef676849ed858b955807a1e7fbeec55687",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a895c5182eb42ef28317b13ec331ba7e70bd1a138e15f44690b1977057052a4c",
                    "size": 12458647
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bbd94d464cc75cb5078858b1a07c5fde65ad236804b1a344b031d3c0563be51",
                    "size": 472
                }
            ]
        },
        "bookworm-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e539f0354acb27bd89a93d9bef03213f913b146c49def7e50cd100f57916b1cb",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d25f96231021b5dcdfc6f17458892f12f71c910cc88f63f29dc071efbfb8f8a2",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb18e33e1cafb6f9d6e42633acb9b3d88bde59039fa9eea07a6d1721ed717087",
                    "size": 17291138
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d20bfb20cea478be56142533eb3913cc4926be97a8bb8d6f3aa1f4216e31495",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e19e63a023809499cf82eb5d5f248663666dd33b9ef2cfde3de11eebc66d034e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86ebbdeb7b51b2170c1d43b47068820392ed517076b670147107730a7aa51c44",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:479634a3547768dd871b09166a515e995681aa46371ad1e429a3d6a91da463f5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcab80059af90d56875c035653f2e3fbeb918fc69bdcced6433c73df985ac152",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5442132ede36f409d268414f7237498b5c1216b1411e94801666fd83c68ecfe4",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3ce9eb5ac756f15aca1e8e0c4f39a4db2bef4fdc12880d2cc39e0e81af3bd9b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83e2aac95710573fbe9151770f83301084ace6c77b738bf94eb6b75b6b9cccde",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:374da7695dad29bd3ee396a11622852ed0ed126981a5ba74403b86d0b9a5543c",
                    "size": 12458480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4325f0ef555bbdc1c57982917706eccefd19f162995f1bc734b67d454d938bc2",
                    "size": 471
                }
            ]
        },
        "bookworm-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff5ea4495d8d03beeb8873fdca5eff9485811c5e1afcd09b0d3046cd185c1083",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6013ee29be9d0c0bb574d9fab57df3fe13a4986aa9247101abc1707008f15456",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7992eda26e780a3e25e951c2422a58247527da8cec523716cd371085cebd231",
                    "size": 12458467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c1cfa1bc60a150849e20ee9430d053ca0b7e93d0fb7018735141a4ef0f8910a",
                    "size": 471
                }
            ]
        },
        "bookworm-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:417974e16e85fdc863996cc4375fad3707fad2c5a3bab2ba811b8ea697e07a34",
                "size": 10003
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:808423f49e64d17ef6b295f72e203353559e27a632d6cc0c0bdff99024a0cca4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c39dec34bc2c5aed1bf661eafec40178bacde431c055357adb5f208c652f441",
                    "size": 17295095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df9f86e854b5f331d6b082bf72d029678a866b2f0b7b2a1083b1a56d4b2729",
                    "size": 235017563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac0d073a69c158df65f9a9f80abaab3372b5e1fdf3240d69f8b4b13d21f47af4",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:284ef30e3160a6ea3e296c3574ff5153d441febf4015d8030e0cf3e21aeee912",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f415827183e08da6837e069146285665e860787daa8c7a79ddc0b11663207415",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0d0c5a6253847fbf508b52647cd500afa441300588b0a752f1ef9a93196c6e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f82a4b9b283623f9d283f79e12b2cae49850a51b4d70e6cf1f004f4df2c61d81",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a2ab8a049f67ffed970a5cccc56dffb288443f37980937840b02432755e1e94",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb121812cf852cf05746939c05eba760e654cd434baaa8ed3e3e69f296f3620",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89447fd6e14582af3e9c11fdf033bf02e7e9d09b5849003600a6c9cc95158765",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0eac406fc9bc2e398c5b1bdf323f72446fe929787b0210b843f49adc8dee6a2",
                    "size": 1177900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09fade299accb3a09c9c63b60d3b81621f5a1666db31597db9377e435d3ee337",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4480142a91a122de4e04b67b068f841711ebd8b74a084b06ddb29d50d79b4426",
                "size": 10027
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8763b21ad57719252966111e137d5b1b1c11db200b363c3ca0caf6002cf0a15b",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55e4f744465ffe29417fb368f9124fa3e89592783bffa5dacbef57c7d059e989",
                    "size": 17233221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c05c3229ffd319aec16a8d48e898f90998ad58cd6b17f352d609c02b930f53d",
                    "size": 229231006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df544244a278b784a27db58e7236b7c6c10c4773e57750f9398b8ce387c89701",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:922dcbbacfc1c9c1dbbdf3ed1e4b7edda2ecf9ea4a52b05554887a47c1cba4c8",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddc97fb038828412f8c386e634008a62d2b2e7f3c8c275844101a488cad286f3",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2519bceb60f54aebfd5b631fa4d09ae7af0d4f1af1a5e3c53690e34e0f273b2f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db43b162605207dedede99d52cb0cbbbdb785aeaca3744dcfcea1adc2c6917ae",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01991c8ee530a1b11316cb79aa874eb416e82ff4fd1bc6f73742b65fb470e7f9",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:223b7e44fe2988d5574c325d5f1dd3d8c4e072def9ba7f97f6984954984ebed3",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c97317a3ff38d94a5b8e5c91a3732754e37d6a2a9be88094f2a2b9f865b06467",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e716c7517d556a130e937b4139237b25cd79e15ed8cfdf20a51d3fb9be51722",
                    "size": 1176899
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d26d6a56f6206641714ce511c6b62ba6ea53d5b9d6c3d9c322a492c963a6edd0",
                    "size": 472
                }
            ]
        },
        "bookworm-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d7111a8f1b4d74c2a441cb28d7685781ec67c55e4a225a5bb21a3a2c3934b569",
                "size": 10015
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:289930a23525b738766964bc6e2fa97bb9dc95de6405b2a7d204d03adc619643",
                    "size": 17233303
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53ca5685339658d7a6816f4c92fae975748c058c61be05148dec0cd3adf50047",
                    "size": 229231147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb3d8b3669d7c2db08b7e9a7af1ac2479951e2a6d200d3e8813125d6fdc48a39",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ff94e0bb30f8de02acedf100810bfdc0ab606fff865fbebcee49046a63a52f",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2044244d711937f0785bded35d5832e99144db6bd15ecad28be79722a3a21bd5",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e8fbf33ac06db2e047d6317885ea4c274dfd59b6689df5926c5d00dc6bf02dc",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fa8c926fdf095db6143f39f3dd3bc83fdf7e84bbbdc6516eb1628477639bcc",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc7ece7b86a426f914e1b604a90a72e219a82d2ac23dfa99f8a4b3471695ab5f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7049d0e3df2c98df67d1af7df0e50a9883b70824dd22ccf554b7dc9f37b75bb9",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7819c71ba18fe79f56066432407086c96c7d25d0f17bf8253e55ed30cf3802f7",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7253ead643910b245aa7c347052dc6ee91f4b4c2806c2290659ac81597b5fb06",
                    "size": 1176966
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a335b14594e4b4d9c6637e777dcc65c0bab5e78471bccdbd13c27bf10fbb9fe7",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b7b92c9c12b32fe7d88da031efbe87fa046894ce6a178c5e6ee96f0f2280cc7",
                "size": 10026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:004cb8021d8450918fb183fe3f016c0e7100229f06860f9452f7168858b1d1c0",
                    "size": 17270019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c99787fc33e68ff964c21841eeaaf1ad6d5b07259f79d6ce22413f1066092e4",
                    "size": 229229049
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86059a75093e16e085a307332a7b3cda28029c6e00ce10cfd74a169fb1b97af9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:248ebda4592460b67f68741ca8161b6a0715af0c5d4fec513d5f1d8cfa5bcf5d",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:869d5912c0f749a54e3e536d282c6de6c1719e3b64dddd877cd2fabfedb094fa",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ebf93edf2d751cd55120f1873e8dcbabc6c30baa892028d938ecb82a196bc43",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ab275e8b5b3670e8235d64d2465b13399e77fa4a7b93a0d1a5481295586ea3e",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8da4c88fbb72a483ffe7b0e168b97017598efd3ec9d0bf48d478ae676e522365",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e1d1951a0dec9041f4458614b02bfb7704ce8235915007c1dab5a7eed595123",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:629d4d54237146ea413bf8a91c80f62f6fc5a63b855ab959b40e34d11fa35539",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba172290c03e503864d145fba93632478867217164b08168c274612249c666c0",
                    "size": 1176933
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a301d84bebfa0f32cd00bdf4595ea221f61fcc1c8515511e677fabc2ad36fb9",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:707b6987f9f7a79701f1136e5681d1f678d953a3e9063c71fd9315d8fb47235e",
                "size": 10024
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da2f9adb36126e173992f21bc755695ca5bcc0756839781ec6e130b04e7e6973",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb36614d5c7b9d8e35a7827f6c5337a7337972cb149f1685fac24553253cd87",
                    "size": 17270044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f721e1d26261a318a0b15d933ea95f5e3f27fbb3efc0fe705b907c560e6112ee",
                    "size": 229228922
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71bfa479a4cd69dde40ad71ae8f1d4cd69c381f3b76b4abdb9685f728b9ea81f",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19e1e0ea94790940d72110ad690c2c53067d6acde752c9718af3641ae8fa2bf0",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d12c21ccfc339ee44cd11490e2237a3fa999e9c621d2fec707df9e3ff296496",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ee76f19a6859e212fec948a72e9a860320beb0d29513ddb662a6ceac9086ac7",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2133bdb856a3882f948baabbeb919ccd725679e2def0fce787670b81f7dfbe9c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3a19033713d9964c1077162422af2f383bb0aa2ef1d31ea56e7e12733863c23",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16666bd9ed438b34f2c406e7baf24e177f81aa1e993f1f69fd5eead93a01f9d5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b880255963ebf404aefb432b326e4d8917eee43fc66c3d383ea976fed44348c2",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeb2cea5a7576d07e3e55c18583af92ecacdec173a83aae2d5088575d0a65638",
                    "size": 1176994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f22b876613210405d992e39ea1f4d3db19942a8c7e6b8dd39eeb4d6e968c2b0a",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:925709e9baca746cbda473f7e942e2c5851d0b29067f320a9a69fe870461ef31",
                "size": 10018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:813025d273cfb2041642a065fd00cbac2c4850d1d3f51e10b9ac758ca2266510",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9011cb1250527b33a9c592e9341b1cf4b45542b95b5df8e6e4dec263387184",
                    "size": 17270042
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c06124109d62b6713ea30a98155e8310c9afd36dcc2e1c950bf6b3bbd778f00",
                    "size": 229228809
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf35e7c9655884fffaf4e67dba7b18f2e02560fadae16d407f1c49a1bfb627a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faa8c8271959c83a69fabf8c794fa1f1e8578e8efba2c0666400f50883d621a3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6661c0994cc9a39a1140eb40b7001f76ac06d805c2510d6f0cf7964e9edd778f",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:132c26eb4402d32bd17d90f9630b9ce867d8e354aacc0eb721810a548df934c3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e41ff3006a5e409fca6b0f979d73d44bb6c8f8a072c05b6459b62e18f7513518",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92712c41d3ee6449dd4b27f36b57a34b6c3ec218a1aa70c0f07ee1a5598fe06",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bc482a498c598c8c96352caa9bcce6dfc66d77190c4fa6c6f97e2b35dffd53c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1818ae0dd93ef0c95a87527dd62a4277a01b91f508dedc0abe6e5d888ec02c31",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:207ef97f468a5b64f21e7a357ef2ef600eab1bd161be09911009d687802f188b",
                    "size": 1176920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01f655a603f1418c1b17e99f2befcb01f8d196b48dda32aaed884347feba71f0",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0e202f7e999552a3696f421ec751e5d046796ada40bf87cd69ff28822102e4f5",
                "size": 10027
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66347343106088351a16e07b492f2033e8faf8542b82791d6ac8cca23afaac1c",
                    "size": 17273507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09a3a1e94ea04a826ddc0ce63493eb99923768d4c7f29a20b1d489711fae172e",
                    "size": 229229406
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b20e38a8193f0aeb12d6ac5e9b52b9cd32729cc6c489d6ec187e8fde5be0572",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeec2d3b1227a243fcb201cf66d1c85c7eb66596477be0aa3bfa7df7cbbbbc83",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3af674f03068129934029ed6b31ae5add0e5210e3770a002ae5c5d9c0cd74adc",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb7fa8b533ce087bafbb0becd0a58fb36151e5040ee20ca0cc62b532a9cdc3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107ffc46127bd35ca0381c88a3f2fb4a3ecb03036dcf0974e718fce5b3c33e27",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7b5278932798885d4922c426e9a2f2506d531fef000848e774519fa47df6fac",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb47b4ea91a9083e66c7e5ce8b123e88af334101fc31d3c09f6e51785fc4b937",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49179d865d401c16a5589a6b56b6252f4007c791789f5c9d550e5ba6f8c2098c",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76f75feec5dd7195609d9dc8bab48a1e9e16ab2bc6fccfc69da611e7f2b9d8",
                    "size": 1176959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0140d9b11c72c0f4cf173f17cf25ffe668ced8fe639f68d08140818c4eba4c89",
                    "size": 469
                }
            ]
        },
        "bookworm-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b38a806c10af1a0ed0b7a7cf336e3dc3ccc970190ac640cd9969775e17fba257",
                "size": 10027
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10158869648bba4ab22fe71fffd940c1526ecc20bdd01c533ff36825e5ec95fd",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1de25cab7f01661221356f745a81b66df6ea503f9d3c4d09c372b19cf1d1852",
                    "size": 17291255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0487ad88fe75223e784271134fc7820764e5b0d191cbb8f5dfbd436c450fd815",
                    "size": 229238598
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2aa8212993bc54985488a64ddd274286dceaf86efb8e7148b592f278d88c4620",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01f811ce1874bcd8ab99ecb61949119f8725c5ec1fc6ff4af7cfdbd63e11b266",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c31e988a5b008efafd64f9baab9639a27dcc22f714ea40825fb7a3f28c312feb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b69a5bdd70edfdb1dd8681c22af3b62328b9b8d683bf8ceb80e89cc91ca5c8e5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffdac86cd97ac841b0566abaeaf53eaf0eaf31c7f32c0802a7cac820cba4d28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa00a1b9731245ce6b5e954912bf3bc13b652aab00e591f3afb4c1ea20ead10c",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4820af98bd74884c1861f2adfa9f8d5186a9698b4c56efd13704b718658d0879",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d94d11d8909f4a21c016c596854691c76b918323e2761f3be3039fd6896908e8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6019d5e854dab705a1faac69b398c5aa3ad7a4347e14a3e44cad24d68f76cd87",
                    "size": 1177368
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:485ffb6dac5cec394c116f7ed68d4e8ae2488f7d2a75120b0aa40ffa76607d26",
                    "size": 469
                }
            ]
        },
        "bookworm-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6430016b323547d656ccaf9bf7628a50ed77393e387d35a5281c99d0a668dd03",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb4092ed45f90f756e5616373ba9f1b371f83653aec14f40f8c4f898004c9d9",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37b94fe7973eb4190eb1eea9a6bab9809067b86d40a1303e07f7bef54513b46e",
                    "size": 17291096
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e017d2f8cc21b026845424cbf4b979fb7e1f0466e45ff78d5943a35958780f",
                    "size": 229238744
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9138cc4c084667120af9bcb0bb3f36876559e26732ab8b17553d142dde900576",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4712502da27ca7b8f805ed307245ba4c77b5d5e74459968ef59d522feca9676b",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c88124fea14316c882b6807bd55cf64b582f8302ee7c45b80a42d5f381e6a4b9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f22a4b7b7dffdf8c613d78c62c28f881708e3894f19ad9a6ce9651225996993",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60b2b2ab5bfe45c22594e1356a956c0b62a0eab765bb4774fa1acbb91595fe19",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd70c9bfbbc490040b46495baabcfa2206d33850a71707990b8e4a82d8daa1a",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd068792a3916adfc505c16be110d9d3c1aaa19f47b37e2e6a2d2e2156ccec35",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c20e2f8983c4a83d86e42dcf09d06526c711dcd6d1aa3c2c10bc2100d2e73312",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b45f18dfd3f404eb40d73d544538f804cfc0ecf04cfbc00aa4a20ba5c9b8a5f",
                    "size": 1177398
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1907134b587ec8351a85960cf9ec69ceb03571e24093ce51592da8792613d79e",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:23da3d366c08362c25936fe6af9f36beab8a4dd9aef35245efe2c79d35f71cfd",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33da92ea60e23811a87625226b9e600a8bc0127ca64388a40010dc94470328c6",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6c0b4cd12f501a494916ae968cec58fa7b22db3b28300928b809a4c3fa18d09",
                    "size": 17291183
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7be111a8a531d01aaaa6d3f4c797d2ca72ed282b4ccd182eb6449b1d1927799c",
                    "size": 232258017
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d625a78e3e3dac079cc6a56b3c95eeba9b4cb55fcb0cbf56824471a2c580f90e",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8acadf268d79f3c2316c257697ffa60fa8457a87a62be1e76b33b1b24c80766",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c843d3190475faeaa4c874e8c7c86e18ac89972ec2f9bd7440b099eae3125a4",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a873bacb6591769e6db43053949da608f480b308f090dbf68c1a8fe8a351298",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00027e804f079f4c3a482625568ce7765a920620543c425656cd5a2122102556",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a03cc2997998e6e60eb2bb472631ae80662cb3348a4642d4fe0cef0f5c861504",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc5491651050fedf7bb34f3ca3e36f2cb936c1635cd06a24755e362913716aa",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06fb8c48c2ca382540cddd5367c84186f98c9f8af9e5c635ee482d744d5514ae",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cfa4ef105b0373abe83b2ddc41ca3a4674fb5b770e38638e5b1a20881774a78",
                    "size": 1178342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511dad609ab92674662496cbc90d9ccb424e83499723b80a783e410e543feedd",
                    "size": 473
                }
            ]
        },
        "bookworm-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f4c50133bb0b38ed2990bc7d7ee9c03aef39ffa6a089adcdbc0080660b11aa6e",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bdfbb4fb728f6794c23ee8d5ba2722743cae1ad303f64fc933068d748f5c445",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7145248d2af1b8f7c4c2277e38b0a3ee949422ab3b686073028c47482e0d065",
                    "size": 17291179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06b5eb7f4e0fd95aaae0bb3b6e39651e2b19d67e0496d87bde2cd288d0d29db7",
                    "size": 232257717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5565731500a80296519b60eb00a21a114ba0cc388d1006b84db7a683d4990137",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38d97d9fa042c6b3707691c915c2dfe482e63cae34ff8c416aded5a59689779e",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5e6ae6a61551024092c08cdf53390f3b415e395700eec097939f1dc1033a3c3",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:414b96251c92e123c79e97904a2be1a14a4dad7960270cb8da0f10dc9f9d751d",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1d1fd9f3f7a0484bbf636984b08a6c8bce8cdac318137ee46cdce5dea4469e6",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f30f2bfa377f86d951d358135fe4c23b05ae32c403bd80a3662d31b0c4912dbe",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d682904173d00a6f756226f9c8bf600b1e04c8f2c8cd9b7fe51947bc0864b32",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:deb2327a7a5f1bf2d19c2f0131f77d37e48e1002646d02aec2e7cd72c1246ef9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a30313fce01811c9a751ede5aded8af1573c72d29b2f8a712ec689e15458c95",
                    "size": 1178236
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3be61d3361292adfbdcf573986130119f977e46d56e791863f9885263675ac0a",
                    "size": 472
                }
            ]
        },
        "bookworm-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:417974e16e85fdc863996cc4375fad3707fad2c5a3bab2ba811b8ea697e07a34",
                "size": 10003
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:808423f49e64d17ef6b295f72e203353559e27a632d6cc0c0bdff99024a0cca4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c39dec34bc2c5aed1bf661eafec40178bacde431c055357adb5f208c652f441",
                    "size": 17295095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df9f86e854b5f331d6b082bf72d029678a866b2f0b7b2a1083b1a56d4b2729",
                    "size": 235017563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac0d073a69c158df65f9a9f80abaab3372b5e1fdf3240d69f8b4b13d21f47af4",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:284ef30e3160a6ea3e296c3574ff5153d441febf4015d8030e0cf3e21aeee912",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f415827183e08da6837e069146285665e860787daa8c7a79ddc0b11663207415",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0d0c5a6253847fbf508b52647cd500afa441300588b0a752f1ef9a93196c6e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f82a4b9b283623f9d283f79e12b2cae49850a51b4d70e6cf1f004f4df2c61d81",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a2ab8a049f67ffed970a5cccc56dffb288443f37980937840b02432755e1e94",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb121812cf852cf05746939c05eba760e654cd434baaa8ed3e3e69f296f3620",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89447fd6e14582af3e9c11fdf033bf02e7e9d09b5849003600a6c9cc95158765",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0eac406fc9bc2e398c5b1bdf323f72446fe929787b0210b843f49adc8dee6a2",
                    "size": 1177900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09fade299accb3a09c9c63b60d3b81621f5a1666db31597db9377e435d3ee337",
                    "size": 471
                }
            ]
        },
        "bookworm-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff5ea4495d8d03beeb8873fdca5eff9485811c5e1afcd09b0d3046cd185c1083",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6013ee29be9d0c0bb574d9fab57df3fe13a4986aa9247101abc1707008f15456",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7992eda26e780a3e25e951c2422a58247527da8cec523716cd371085cebd231",
                    "size": 12458467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c1cfa1bc60a150849e20ee9430d053ca0b7e93d0fb7018735141a4ef0f8910a",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985122eddf7458786d9aeae11bbd4940aaf5744e726103a6c5979b34b6bb70af",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84b5f7b594b419e106519389a7f664956cc1e4d0d13aa5aa4572f25273581de1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34adb20a00d4cbd68b0b3d7f4c29ec193ca54d462a1a4f1f987df86125d9b678",
                    "size": 17233234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c38e9a4548f72178fbc193313b70a4630d021981b0742e5b5b1e4a82f1b8436",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:911ef0b38c947d1fc9954382a720e14510cab7a30fd023d58b0072789ee97dbf",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2b2e7db1f23405ea6af4a05867062369851c486bb82ee4a32539e47c4b27dc",
                    "size": 256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eed199fb526c966b7a68e813c4f744a182300e41896eb3ca3512d2d751f0c8e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c01e1a7a6c6a2a71ccee156b0f5c00619da72be3b72ec36ee85a2efcde03c743",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676a484c9481b7f9ef360fc6c120bacba3039763b9078cb7a0f4b272a77dd9a3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:668efd96296de5a6ecde068fac9aa699b4a3c9122cd443904bc45716ee2c05a9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:703070e3265e1b2c279a7d43652415b91a340cfdcbc72a16d231b63d28c916c9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b2ebe635e617a009e0f9461c9deab09be37e75b0bd506a942bd84590f0a7d28",
                    "size": 12460973
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f37426082a7a2a26a3bebc3ab67b5d4c677b98811534747d65a3f963d47e4b7",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cfb706bd495b03087c8076ad9935ce336e2a54720485c9b195ef9977235d0417",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0ed2dcbe8e41b5a646daad99d68812e69f8b100876d4c17e25c307761b3cb17",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34a34dc8a79ff7d9795881f77bc1031e4aefe365d9f51665565f59dafd03cb01",
                    "size": 17233391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b3dc33eb969e87fe43e57eca3ce3d21c4bc79b63e2fe963ba25d42917e865",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2373e036d8e36b4ba9f1b31ee80d714f2394df16fe7e9100fddad80ebd53c047",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:884ec4f0647b7f5b0e13b995b81336b448606d3069d223505092f6f7df0b87f9",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce83390bf9352f97337ac7b24fa8834327f9a273dbf6ccc3cb3c2ca6952f5775",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6df0776f8fc114913a724161aff5b08d113181efef23ef164ec8b6de5d66cfac",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cb71cd58a25d674182c5b455327177d92d4d1d5a934f01abdf6b3d70bd030a8",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf036aeba5201d8f3d9cc3b88045bc8bc13e376240deccfbaefdd0405bd1097c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07a84c9b2ee6399243f6b98050925f7337ec9ad37f2b516c2c2dfff24d48566c",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f1d5cd329f2afaff8219cee1c82335305238c2ada26e0e7dbb81dfdb42c4712",
                    "size": 12461047
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69dff1041bb6c97dfaf42b83a108af77e22f5e884ed0319ff9cb74535a595eea",
                    "size": 469
                }
            ]
        },
        "bookworm-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7593cd322e521a8b1a6ced01947aa45f50121e1fe5bca9c26e58a6a9a1b1a97b",
                "size": 9051
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed333f41be544ee74834fb8bc9f769211a29221f7f89c5a6b84903bcadc0c102",
                    "size": 17270116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46a48fd13877c0ef9821613dd99ad2d58c00a14d14920fabf252f4d7c2d13b81",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49937eeacb156c7d3897c83a2ccbf06c01f4fde677eb70f43ea753fb657a7c86",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4dff182a5a15eeefaa0f1601eca307ef5ef4227b8a96566b1f0b052304b3885",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac946561aabdcbaa7a56471c7432f706891faf1270440615e5fe227398cef286",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8247794ee4e56114f27b3912dac33719e83cac8e6dc4500ab7046cc833bb7478",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4570e560d135bb2e16df82ebcc0250b06af90268586e9ebebcd4497595f2e990",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8571e225437eb8984303849c28bb9dc91a0d8d9027155b331338a8ab24d24230",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:688b3cd4e6eafa27b627dd9497c388168c0896a1a29934c56660915190f9ed14",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c98894e90c68184a759449f3df6390c72daf274c5cef553442ae3320a4c32b9",
                    "size": 12458147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec3974d28e8d6f24abdfc63ecc9370b1c8f89a40ba9e1f39bdf6474a09632f72",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0dc1a859449432bce48f783ee83de8ddd6eec3ea8d0db6bb3128f57c9bd8aecf",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5813a1c0e348f0d85925d51173b2f2a36fb33de268820e927f1398edb089a72d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95f1dad3adb10e73750e5eb9f989d177dc502764e1bdddd579c1b05cead36d0c",
                    "size": 17270089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a0002a21e3981691653171d979d774351642122db5cd787ec4ab01396a5460c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d808756a9ef382f423d5683b5483dae56515329606319f8d013b9da611fccd9e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1728099dfcca585525899542066bf8075f6ecf071e7d29d4f9804dad8233b5b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108e087dab4d988c5d111ed64fdb7ea774d1ba000f8048e215f44a21a507b42f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62d8d4db13500e4117218004cdf4f07b1b124fd47b9edb96c3904b6066fe773d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8aeab0168b99b814facc9b5063b2100fd0568ca19ebb6d7a97f4fd517e83b5f0",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a36ca96a7ac822d1933baa344230d413cc53e4d1d4cb3aefc515df9ad76eccbb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be3d8e753a32e37f25b5b1b0d8f001e6a5a44cedc4e0b332b0d90f5fe92dd670",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16be0f3a50d3e3b81017b841e5c1f6e2774ad290d31efb84ebca479df2aa4666",
                    "size": 12458268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52f1beb31ffe4a53c95ca72a481d9cb7e40705c106eabffc60b439cc2fdd7188",
                    "size": 472
                }
            ]
        },
        "bookworm-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d019eb805815f455693de77f5d035aac385d6cc809c04f3b1f2f03f9027397f",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cf99189dbb7780acbaa1388bc434d16873c04af8d2862d1fca3553b4a6b1514",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c7dbe3aacd7d6b8ba7a0d518925d2cc655c1ef1d46ec0ccc602a38bbe432365",
                    "size": 17270146
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c7a68559da92859ffa5ba2f918f20e97ef75145181a654c49f3d02e4eb2afe0",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4290deb6673f9b01d9d62c77a688018c9308c974bcee7b60b3e9446e38000b2e",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ccd16cf299c83dba929bbf9b04fc4664c6d417114890f2b4f2bede4c824ef70",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5f5ab777edd1cb6c5ad5fa6e175ca61fddacef26554ea8030419c64122dff7e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed9ef477fa91d5018787983feff4ec50be6b49b661dfe7256a636f85bc10bc48",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56a7a0b9c3aa08fce71d30eadbd8c091d9182053709a315f909922fe02452ea0",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b11bd33784096d80050fd692dc9410f4c89b92903b5fc031315cf455c7164c1",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78fbed503ac2f14eeeb37aae3efed4258753c7fe7385a75b91ec354f3823eb5d",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21d9866d453eca940437d571db7b52b711d82e9e4ee3475c8e3455e4fa67c68e",
                    "size": 12458279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:217d7b7c0d9f5336ada25a7af2cb67e553379e81beae68ff435bacc2afe8acef",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2a6574856b9a4832c006cf569e47b7462a22580be5c6b74fba1a910cb1817c8f",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:580477eecaa127b9a8cb7506388303133d1d735b44d16cbba0070207a8cd813a",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b22c4a8dbfa03f55451073abb18b870e6732cbd7d63391a09d09318378578ed",
                    "size": 12458205
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bdca0ac60768c9330b403bb1eed1af2a73e6cbd87c4bf193db0b43b9b778d2",
                    "size": 469
                }
            ]
        },
        "bookworm-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e581aa3a5a9e7cdd911235855990c61da0da84fdc3faa39dcb50a8c82115f7c6",
                "size": 9046
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8440b90072f5ddf2b3a5cc44aa712305ddaaa3a499515c126bf7897cae869963",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7429e5f92c211b44f138a644afb74ccaa1475b6f1a4f95e870dc47eaf805336a",
                    "size": 17291102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28b55e040c13344e0180fe961d66474a7a824da112b5b04a9efe022ad7b8cbe4",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ff418b76b81ced646377e5144cb3c6e64855ad72a8094924a4adff2d55b8cf4",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32ce0e96c33ce0b25fa917bdaee0892501cc39098d254878ef647809ad250f12",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f62a7d423456619f8e8f6ee4fefd83ab831b40ddc35bd276bf11fc71552839",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9eb1f910289b61fefe4c7145e16e9859c20895ac646dcc3b40c0918f734ae17",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b70e90f9506e910bc421205adc0c978b3c3389bbcd0858c5c9b44421a52c6be",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78efa179cf8468ff2e8295822c76e8828a09bf51493689655ac9d74dc722684b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf35159a2440a91608156647f7493750b9d3434bc58a4800c55e1a20b991f8d7",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00f5a18f40c2aecb51fd3975bbad83fbe8e9471bfc47b2b002f347ec653def22",
                    "size": 12458497
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8dfd02c32c64fd251e8d291f65bb65acb95f39d9073937fc81f39242a1cfc76",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c7b8184dbf7dfdd676690b7b8326b96685b94b85d0eafa34faf7c5887b40af",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e800a85078ae7f67f3aa27d4f7232ccefe892223ec61bb36f7afd7f90bcc45c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32309a8011bc1274781616b4be13eefa5499c77cf8bfc6f3076ce3e0ddfd917b",
                    "size": 17291043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:97d7090362df78d466f9190e06bd71fcc237a681dec956b3621a20b1e415c65c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67510a8ec989165dd38736bcbb8c1840ccf684a59e5c3b2fc13a3aeb32275b31",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:907cde37128c833ba7004720ffb574fef7fbfc3d404664e2a53a530bd663a6a4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc358e5ff00366d28275b125563e5006feb44ad171f01d734000d8c65fda4c74",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc5e95871931dc2b21adcc9684eab6071e5f29b3a96403eccba366756f469421",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c223d83464ff8f9a3c5441e15ef4ba9161f078a757682e057abdbca6c20a01e",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a157128dc3d8e991b45944b6188a163c93dccf448c830ac310f07ebad350165",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1bb90f0d0719f287349de02916b1ffc61e548aaf0e790d4b5a38b08f5e041452",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:682fa4eb35a571c2f5731a08584de6ec806596d459aebe62d11d46712f676165",
                    "size": 12458493
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86405701d8f65cc2b4f26c5b5a3dd01dd9b4d74df7d8764eb4934223830ae80c",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20a478c6530f67d55cb28ed43192ceaa09547c4e4cdee08cd671a963cbbf36be",
                "size": 9036
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91450bce0ec14ebc0a122b25141e10506f4769bca9e06f74ee4089baed5340ef",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b78547d2411f55322cb033b89fe4d30349d950b0505e6766c92d76fe032e446e",
                    "size": 17291107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fc3f1f26f8b59cddf39ac0a0e8fdeae71593ab5936f9b3d06973e02ec4b19ad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:488f4edf6c1cfaf874f5b398ac0fb9ecfd19f3d1420ab593aef8497d19611a22",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc36d679b21baae7c2264d50eb37360ae1e0b470779a8788cbecd70ea09e574f",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:019760aa07be10ca58cd3576aed2e432ff9e599e9b5c90dc07943b7bfdaea7ff",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42f6e9fbc5b750e5fe424587cbcafc4d4bb185dc62678ab031d04e27cf4d271",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c44ab3b6ef2c95d5f7a2794f49df47e851805fe0b0c88f18fe4745dcd05de83",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e710365fac4f74ff84332ccb7510beb82edc7e05c4be21dc53fb84626f505e1f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dba1c9be25dd2e62c941c968f4d938ef676849ed858b955807a1e7fbeec55687",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a895c5182eb42ef28317b13ec331ba7e70bd1a138e15f44690b1977057052a4c",
                    "size": 12458647
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bbd94d464cc75cb5078858b1a07c5fde65ad236804b1a344b031d3c0563be51",
                    "size": 472
                }
            ]
        },
        "bookworm-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e539f0354acb27bd89a93d9bef03213f913b146c49def7e50cd100f57916b1cb",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d25f96231021b5dcdfc6f17458892f12f71c910cc88f63f29dc071efbfb8f8a2",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb18e33e1cafb6f9d6e42633acb9b3d88bde59039fa9eea07a6d1721ed717087",
                    "size": 17291138
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d20bfb20cea478be56142533eb3913cc4926be97a8bb8d6f3aa1f4216e31495",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e19e63a023809499cf82eb5d5f248663666dd33b9ef2cfde3de11eebc66d034e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86ebbdeb7b51b2170c1d43b47068820392ed517076b670147107730a7aa51c44",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:479634a3547768dd871b09166a515e995681aa46371ad1e429a3d6a91da463f5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcab80059af90d56875c035653f2e3fbeb918fc69bdcced6433c73df985ac152",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5442132ede36f409d268414f7237498b5c1216b1411e94801666fd83c68ecfe4",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3ce9eb5ac756f15aca1e8e0c4f39a4db2bef4fdc12880d2cc39e0e81af3bd9b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83e2aac95710573fbe9151770f83301084ace6c77b738bf94eb6b75b6b9cccde",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:374da7695dad29bd3ee396a11622852ed0ed126981a5ba74403b86d0b9a5543c",
                    "size": 12458480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4325f0ef555bbdc1c57982917706eccefd19f162995f1bc734b67d454d938bc2",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff5ea4495d8d03beeb8873fdca5eff9485811c5e1afcd09b0d3046cd185c1083",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6013ee29be9d0c0bb574d9fab57df3fe13a4986aa9247101abc1707008f15456",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7992eda26e780a3e25e951c2422a58247527da8cec523716cd371085cebd231",
                    "size": 12458467
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c1cfa1bc60a150849e20ee9430d053ca0b7e93d0fb7018735141a4ef0f8910a",
                    "size": 471
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7118fc4816a00d400f00e773d9b7335212933720fe0eaf8a0b936f51cb699bb7",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3859050a999c844202537aaf261fa2013e70d65d9aaeea9b27988d76b74b09f8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376d760180a37131dae4c3af65dfd05b30cceeca01be2c7b7f2aa3c30f54db38",
                    "size": 1157657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41534d09e2335ef0b03487295cd03d74b68f711e68ab8b7598f2d7b526ad6a88",
                    "size": 470
                }
            ]
        },
        "build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d49d8053001ead7ed639551bf69f67af75ae4590b039ee9365819e25bd4107fd",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a375dddab470a2b283c99e80e85649bad31584427ec9a4b3e51c6451312720",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449d32c9e52b27aa72b2f52a24a1efb47133b820af075f40f191cd8e10a3e336",
                    "size": 12977481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2baa28e7426d319563465be4c2b0847aa8d2286b2aabf4159075b2c16900665f",
                    "size": 198242553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c8885ec7888248d72f5e4ed640ee91ee931fa3844f2e32257512303c4f77e3",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:758ba1e197e99d9501f27f0d401bb2e3d57b12ce4a350e0830eb6f7f42b1fefe",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb0eb8a31195747cbcc985084c6b63b8eb607a42ccbd5bfbaf699c82963c24c1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:434734840112a44e60d24378b399e4e18128267f9c07f7c424941caee1e45633",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:973ec5288608f45fbc92e7dae14c3935d7d2a845d04620442c3e42342ea6d04e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5c9d449e62b4584fdc1e18a7031a4e1dc0f3e2178c78da050929d87d8176ad3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca6435991ce34103ce2a47bf803e0c2e0760ac418d37d30d3c84a2a83d939d3d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ae47116b713a18f07be900fcd25dfdc675ca3ab3fd884ba4bf3ca9cb78f3a22",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2aeb1dbb046aec88b3c309bd5472e8e7e3ed9bf00d6f0795d9fb26dd1e84236",
                    "size": 1153834
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccc9cd33f61f1fcd895a052e974bc01f7fdf8758e9e7214e1d9bbcf28ac65ec2",
                    "size": 471
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:230fe25c4ece990ac4805edb07921ddd2a7594c216960fdb7f115d2ecb2ee023",
                "size": 10014
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b33149dcc273345736a83f631f8e2de7d9a551d977f274ec8112d80767d02d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae956e5b517d8c58bd3519db6b8781cb386ffe87e78b3cd012e526d8072ef31c",
                    "size": 12977423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8a816a717a21f068fcfa0207d660635a640d27b3b74ab51f20d7faca6a6fde",
                    "size": 198243441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:913274a0c0a02e2c567e257d40d1379235cc5821c08a685704a52c7dbbca914a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0224ffebb6a46b2a2c5199ab8b199efb78048eeb36a1ee5e9a3a95e79b03c7",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44abde36326ac7bb957c906351a71980883f91abf668835904c8d2acee13ae6a",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7d06cb4842538058c0dc848a8894e827ef3dd6932e7ea63683d1ead19007e85",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c30f20aac049c3edff56c046ff9e0790f627f8dcfec2fe8affa90642c4a810de",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935a0f62d1cf7c931f4454c1784f7ea3241c0d4e549d1b8de4dd00eff34c31f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eaca4aa781d5af8a64f1137130d7eb69a1250b6172add8205cdcfc598d17fc1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd2507d15e2541e1abb30b5c3dfcc5a07abd082ac9b0f10d47e5a04d5565f94d",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e11034fd2cffa31d4e30304e3c3191e31780972c54941bc2a86b2896f22ae9a",
                    "size": 1153862
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc736b095a2789e6f5dd1a0405191b2acbae2f2cd5c4f9c73352703b80554521",
                    "size": 470
                }
            ]
        },
        "build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:39971482b8aac3b87a47891f4667aed61d1b95e258088d10d017b2828af474a7",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2cf320e7eab57ab8e4918af133a88fdfd6898ff89531cb22d7ea938676c0ba7",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5389bdd24bf65b5c2066451967db2d7cd09cefc838631b7b74da30132ddd6e6",
                    "size": 198247608
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c134f0570364397dd703b12e89007b55e7c19c7524b3e3a4f1d916dbebd0aa10",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10bfa8b75bfb934917da80f01cd0be8269133bfa6af8ebe617c2c44a3669acfb",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:341b53b10ed2dd5ccca3974c41a73afa9798c70b118bf978b54ba6e5e067ca6a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbe31f685f1476284a13cd445d483e31c63844244db393ff69745c76a4b956f6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea8150c216ae439a8f06b9f1d6c195baba9d9686a11bda4e1729f280460f5",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028422a551c7104b5f0b143aa478c6e5d146533d93c1dead6e8d79efa9f97217",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2c062bce3a1a52c6a866e310bdf328acec7c0ca4f0d3f79c595e82d88c13eb6",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22a08a724bf52ca4fd2df7debd99273b8e645fbeb18293148b1aff6277cc7688",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:209bbbbf25b6e327264596e5970e9c1fecd4a898e2204bb8b54a80f9d2647992",
                    "size": 1153875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3dfac448c200791c8b8109aadfd29b80d76338aa80902c0800be0c2af4bbf4b",
                    "size": 469
                }
            ]
        },
        "build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:375b2a1fe4920e4a8c1a920567051c5c76c1e47fb31e535413b3ae10e342c442",
                "size": 10026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680ba1f3235a9d8c571179d2b4a34a2093ecd6d6eb0ccd48f3d4c79bd460d33c",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b5fe31d070602b084490e298b58f47c059826a05048f721d13a3883f5245bc",
                    "size": 12976816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd412f8fac3867866cdab9c85df150f5f1f81edc833646115f2a229d60368e9",
                    "size": 198248704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a15c086c4541f3fc849f0b885720624d014d998cf43bc983432d9acd3219607a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:965d251b89ec3750ea3b1bf3588f59f4b9b1097d6b6df85f4052147d39f1bd0f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f363d61ae45e4a13ba7331124b73ab793d5f09559c511797e1ac3bd247e262ea",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371138ba663299ae743c170ce32994e2499b11d3d0b6b9565ad4ef7d10fdbb6c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb52e8236270316c95fdf5be1cd4689fc3b577e262599eb983f0fb25c79d63a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e01009a60bfa66916967a536a8469ce2e78fb74c6d76d11a8e899e31fcacc9f6",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9503def2f9871285ad40d27c697d5f7fa0650b692d0d359616df8c0d9495a08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3d1f082c7286e23abae66c7476829cdbac37ce5aff25aa65f4c6743ff8a4f9d",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8c9fc88aff62ffcd15cef3a5128133ed00904870e7d24ca0c73a88d4913f472",
                    "size": 1153832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedb94888cae1fbba412c0092fd09846d88cbf774b95fc8c0348a2cfe17f7a6c",
                    "size": 471
                }
            ]
        },
        "build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a9b14c4139bd237cfa445170ec1a9039ee1dc4d382d45feb847c0725ae8086e4",
                "size": 10027
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e2203ac993142853b9ffc31e205ebd9bc0edc708cf664fffefe5b1d1d7d32e",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccaa466346cb8478da79f73725065d8238a66c7137327093d83bc839ac40f3",
                    "size": 198247212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0752dfa164d11ba28771aa6633236b262008fa3015b5b2bf8b700e625d0b640",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdcefe505f624eb2a9d6b0bf1da0e0c77f3c486c23f96a9f4b6f86fe6534687",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74ae1aa34faca98ebdaa34a726f859372777e03cee8b5c3a755e1e95b9e3d4c",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8084e5e8d8b5f574ded52ec9377c6d83b6efb58ae1a3476d3504e937ba20451",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34499303306f69fbef2cb2e91266188bf1e4ebbdb0cdcdf349a45eb1ef739cad",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1124e94d2ecfc0e4393a596af6a31106140c6064eb182da578be3bf4d3fed92",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f11299395e09774e46f86b8ee8054bc2389bf046d21b01e0a121cb5dd46a9a60",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52e0a6cec3ddc6165f52f664c4368d444d8d22873dc76afaaef1363fe7c68cd2",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa564af7af6c7a5deeebd0772ae0a16d66fd13631c1e22ef19dc0f33a83a18f4",
                    "size": 1153907
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb21ca32a495651c28af6a882e3282bb9cb14fd6155cdfd65b1ee336c6cc518b",
                    "size": 471
                }
            ]
        },
        "build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d9fffbf5c47a3749766cd75dba14f82147ef86a55fad2be4c766db3d1b139a07",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39420b5229d57deb412e2fdfcee637a6052f1978a16a310e5860e02827c776af",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1509677b2897b23daee406814e47c588e94b656405bca8170d39ee5e4e7245d3",
                    "size": 1153859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7335d936749b011bd49e469b14f69acbd0c065683844d1151c20ac4efcf1fa4d",
                    "size": 470
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0d7a76f2d23ae9b4f6f0ca63d9bccdec38d29b92252173fba9aa3ae863130de3",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd7411f510aa59b813e09859d61b504aa1eb5702abef13a90b192469eda3094c",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:774c5cb8ac43c6395ac194ff1d69670ee1d5dd77dafd4290c51a801c621ef660",
                    "size": 1153865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:823a2ac1f02ebe1a82ab5935a4df7ed66682f6576ff9a87f0815c61a1a70f711",
                    "size": 470
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:88a1f4d7bd71dc0079c641d3d53712b284340af7b035d2885d230019aa767650",
                "size": 10016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16dbc03b1fa4b4234997893bd600f1cd231ea9600e6b38c91f68696b6d29fc98",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:567f0eec17bda81b8b96d3c30655ab13dc0fe8befaaa6310bf03efb2ce71d1d8",
                    "size": 1153979
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eef1f4d00e9235945174c6d784dcb64dce88d0ae29f755919fd2a37d1f3ab6ca",
                    "size": 471
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3ff2a09ee7b3e899951280bec98286722a80d023b24b8c6d2ea4b0dce75877ee",
                "size": 10011
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36286cce0dfa530b0424751b53a06c5fdd2a0a5a0667141240ce81bde537dcd5",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d7131814bd855be821b82ac0da69c845dfa1d2ab928e336ceee1acacb4585c",
                    "size": 1154222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1823a283117376a124f0bc5eb2ddb5a94b99c09af991fa695972161ff129535",
                    "size": 472
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d4c19c9243e6c93cbf96d8709efc712c164adcafa9ae64a1c42fe7903a4e851",
                "size": 10005
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff142258b68193ddb71c9a4a3811c28e8f1fd72d84b540a2111e4c49ab14276",
                    "size": 4351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:344a03f087ab3cc4af9a7be224c83814085142367e437ed5e8739234d3cdf12d",
                    "size": 1154223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86b4ad14fc6cc8f56606895fd3e10e859e6232243e2190186edf1190c701a11d",
                    "size": 471
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7118fc4816a00d400f00e773d9b7335212933720fe0eaf8a0b936f51cb699bb7",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3859050a999c844202537aaf261fa2013e70d65d9aaeea9b27988d76b74b09f8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376d760180a37131dae4c3af65dfd05b30cceeca01be2c7b7f2aa3c30f54db38",
                    "size": 1157657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41534d09e2335ef0b03487295cd03d74b68f711e68ab8b7598f2d7b526ad6a88",
                    "size": 470
                }
            ]
        },
        "bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "bullseye-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20208bb1e28465f9cecd1368be5df49f9d4533b8f3a86d7f9fa52277a5728248",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e9e01669ea83cbf9e82f86f54b71e8c35ec63e57ccd60c59dda9291b48588d",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bda5d49a6f4cecd51e1564371636b646cef710b5d1ef04305a5b460545727d3f",
                    "size": 12068209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a4ccf0a07e05d0c3d6a9b7723507c9b60fb127b0bb7173b91211163cb99877",
                    "size": 471
                }
            ]
        },
        "bullseye-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6fa73473734a17c1b74876760c017e0a8a13cfd457b7631ec066532dfb3f041",
                "size": 9050
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1af6e33c8c1a0240de24e317081c4e6261418a91607a51a83d47be5d58074d34",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c16f53f6469b65da623b343f4e5435c5a51b66127dc1fadd6b3c5ba20591401",
                    "size": 12068411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c615e5658f61680043afeed3ebf6fe8f9c4eb696bd4372a2b310a0ece1fdfe8",
                    "size": 468
                }
            ]
        },
        "bullseye-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f0561e3a9dff1bbca913a688af93028814cf485ab0260784056bab05c508f370",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3018b4d5d2cd8afb7677abfc2b0efc2e5cee1e2d57bd29553825b2de7dec197",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e700f5a83759270ca808b17a33a6bbcf5857e9250dcb1df0fe17a8f639bb350a",
                    "size": 12068180
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69a10f679b36ae0307dfe5c7a055b697d7d0237f6367ad5827fcff6514eabb4a",
                    "size": 469
                }
            ]
        },
        "bullseye-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c997978c2ddfebf46f731a083e5710154a1a8a87fdfdb6142e92737567110bdd",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e1e5396d58fa0090dac5db1cb6915b702264b4449002aad30449284b9621e4",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d8f7494576dd4abd31b0c765705a7150fed4b5b53eadb55f59e5997e21f98c",
                    "size": 12068241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76174cd2d6bdbc395bb572d84057585565fb0615adfff8215c0440a8194ae8",
                    "size": 470
                }
            ]
        },
        "bullseye-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5edc2f786cf9859acc85755124f358d0368fbeb1f3868b33739d249ab6828686",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1b7d714b72bd7a6a93db0ef25112190d83fbcac67708db58c14f42006a0488",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f201243acc8e57b40ec2d1afb03b181eb5912450e9e453d1548e59467548ac",
                    "size": 12068149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:854236a2e70593288b10311bc6669575b15783b8b79be6c46905f1e73bb4e114",
                    "size": 470
                }
            ]
        },
        "bullseye-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2147eb799cfb1114feff7d6873b29592efd95a8f615f973afb78ef6a3822d057",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0ce38574e2ca7434d7c25cebdee71122316e3535cce07dad36fdf4ddf431ac8",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a51baffc0f2d2597114e02775e2ec620bd259475bb16a2472eb22541e72e9ce9",
                    "size": 12068269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b22a524ccf5a2180a99ec4904f079ca7488a9fe5a3a5898c4d0f0fdb1c0e828",
                    "size": 471
                }
            ]
        },
        "bullseye-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5eac1f6213474ac7e692c459254a55101b99318fcf23c7655266aef24030291c",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91cc30b28814943d567bd1899342813bdde34b5b4c1c1e6b27110ff035a1b723",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccab5f6b03393f667f61e2d79937a71a336345fd379d9101e5557f4d765a55",
                    "size": 12066154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a341de42f8584e1526ef6e6f83035e8366ef7fce58f4fed7a899d89c5383acdb",
                    "size": 470
                }
            ]
        },
        "bullseye-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e704d3d944f27d8b297a7571faadf2a8681e33ab981bab4e908d5803a19c460",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c074a98ebd9cadb901e8a1258201bea49bf3cb1aa279417a4b21e8c121245db9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b6e1091917f0216eb3c10842758007e54c6c9fa4944db2b29a88a0b414b49cd",
                    "size": 12065981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dd4d18771a002bae58323607d50df84cb0b2cc14a2c2152892b99268a43a84b",
                    "size": 471
                }
            ]
        },
        "bullseye-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04c8bec1240015ba47d35bec998bbb2b0f569fa29e3df565099cf6555ed82dbe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511af9f68b0051068d160c297d51c7aa158c03e227327a3848ca9de3b282706c",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6943402209277b691dd96ae22b2440e5ff4bf901fc8168beaeb0f56f954a4a",
                    "size": 12066217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef32cdd0312482c46c204ef8c2f1ad8cbfc65e2666e5ba7b923a5eddcd28c337",
                    "size": 471
                }
            ]
        },
        "bullseye-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28880571fe6516ed82157de59af1c6118c725841117aa8fe0093434188d7448",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bef8f8fbec0ee0034b0d1d308590c29d005f790783f1683a341f50a056d43b8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f1c461784ac8c8a757e5fdb5fec89e4cba4e135285de3b6ee9cf452d8fd6a8",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc85fabeb889392668ba5194eee89fb7205d0def98591f962353e3be24559a6",
                    "size": 471
                }
            ]
        },
        "bullseye-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "bullseye-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7118fc4816a00d400f00e773d9b7335212933720fe0eaf8a0b936f51cb699bb7",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3859050a999c844202537aaf261fa2013e70d65d9aaeea9b27988d76b74b09f8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376d760180a37131dae4c3af65dfd05b30cceeca01be2c7b7f2aa3c30f54db38",
                    "size": 1157657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41534d09e2335ef0b03487295cd03d74b68f711e68ab8b7598f2d7b526ad6a88",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d49d8053001ead7ed639551bf69f67af75ae4590b039ee9365819e25bd4107fd",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a375dddab470a2b283c99e80e85649bad31584427ec9a4b3e51c6451312720",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449d32c9e52b27aa72b2f52a24a1efb47133b820af075f40f191cd8e10a3e336",
                    "size": 12977481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2baa28e7426d319563465be4c2b0847aa8d2286b2aabf4159075b2c16900665f",
                    "size": 198242553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c8885ec7888248d72f5e4ed640ee91ee931fa3844f2e32257512303c4f77e3",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:758ba1e197e99d9501f27f0d401bb2e3d57b12ce4a350e0830eb6f7f42b1fefe",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb0eb8a31195747cbcc985084c6b63b8eb607a42ccbd5bfbaf699c82963c24c1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:434734840112a44e60d24378b399e4e18128267f9c07f7c424941caee1e45633",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:973ec5288608f45fbc92e7dae14c3935d7d2a845d04620442c3e42342ea6d04e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5c9d449e62b4584fdc1e18a7031a4e1dc0f3e2178c78da050929d87d8176ad3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca6435991ce34103ce2a47bf803e0c2e0760ac418d37d30d3c84a2a83d939d3d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ae47116b713a18f07be900fcd25dfdc675ca3ab3fd884ba4bf3ca9cb78f3a22",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2aeb1dbb046aec88b3c309bd5472e8e7e3ed9bf00d6f0795d9fb26dd1e84236",
                    "size": 1153834
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccc9cd33f61f1fcd895a052e974bc01f7fdf8758e9e7214e1d9bbcf28ac65ec2",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:230fe25c4ece990ac4805edb07921ddd2a7594c216960fdb7f115d2ecb2ee023",
                "size": 10014
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b33149dcc273345736a83f631f8e2de7d9a551d977f274ec8112d80767d02d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae956e5b517d8c58bd3519db6b8781cb386ffe87e78b3cd012e526d8072ef31c",
                    "size": 12977423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8a816a717a21f068fcfa0207d660635a640d27b3b74ab51f20d7faca6a6fde",
                    "size": 198243441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:913274a0c0a02e2c567e257d40d1379235cc5821c08a685704a52c7dbbca914a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0224ffebb6a46b2a2c5199ab8b199efb78048eeb36a1ee5e9a3a95e79b03c7",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44abde36326ac7bb957c906351a71980883f91abf668835904c8d2acee13ae6a",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7d06cb4842538058c0dc848a8894e827ef3dd6932e7ea63683d1ead19007e85",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c30f20aac049c3edff56c046ff9e0790f627f8dcfec2fe8affa90642c4a810de",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935a0f62d1cf7c931f4454c1784f7ea3241c0d4e549d1b8de4dd00eff34c31f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eaca4aa781d5af8a64f1137130d7eb69a1250b6172add8205cdcfc598d17fc1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd2507d15e2541e1abb30b5c3dfcc5a07abd082ac9b0f10d47e5a04d5565f94d",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e11034fd2cffa31d4e30304e3c3191e31780972c54941bc2a86b2896f22ae9a",
                    "size": 1153862
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc736b095a2789e6f5dd1a0405191b2acbae2f2cd5c4f9c73352703b80554521",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:39971482b8aac3b87a47891f4667aed61d1b95e258088d10d017b2828af474a7",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2cf320e7eab57ab8e4918af133a88fdfd6898ff89531cb22d7ea938676c0ba7",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5389bdd24bf65b5c2066451967db2d7cd09cefc838631b7b74da30132ddd6e6",
                    "size": 198247608
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c134f0570364397dd703b12e89007b55e7c19c7524b3e3a4f1d916dbebd0aa10",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10bfa8b75bfb934917da80f01cd0be8269133bfa6af8ebe617c2c44a3669acfb",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:341b53b10ed2dd5ccca3974c41a73afa9798c70b118bf978b54ba6e5e067ca6a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbe31f685f1476284a13cd445d483e31c63844244db393ff69745c76a4b956f6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea8150c216ae439a8f06b9f1d6c195baba9d9686a11bda4e1729f280460f5",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028422a551c7104b5f0b143aa478c6e5d146533d93c1dead6e8d79efa9f97217",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2c062bce3a1a52c6a866e310bdf328acec7c0ca4f0d3f79c595e82d88c13eb6",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22a08a724bf52ca4fd2df7debd99273b8e645fbeb18293148b1aff6277cc7688",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:209bbbbf25b6e327264596e5970e9c1fecd4a898e2204bb8b54a80f9d2647992",
                    "size": 1153875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3dfac448c200791c8b8109aadfd29b80d76338aa80902c0800be0c2af4bbf4b",
                    "size": 469
                }
            ]
        },
        "bullseye-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:375b2a1fe4920e4a8c1a920567051c5c76c1e47fb31e535413b3ae10e342c442",
                "size": 10026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680ba1f3235a9d8c571179d2b4a34a2093ecd6d6eb0ccd48f3d4c79bd460d33c",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b5fe31d070602b084490e298b58f47c059826a05048f721d13a3883f5245bc",
                    "size": 12976816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd412f8fac3867866cdab9c85df150f5f1f81edc833646115f2a229d60368e9",
                    "size": 198248704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a15c086c4541f3fc849f0b885720624d014d998cf43bc983432d9acd3219607a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:965d251b89ec3750ea3b1bf3588f59f4b9b1097d6b6df85f4052147d39f1bd0f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f363d61ae45e4a13ba7331124b73ab793d5f09559c511797e1ac3bd247e262ea",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371138ba663299ae743c170ce32994e2499b11d3d0b6b9565ad4ef7d10fdbb6c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb52e8236270316c95fdf5be1cd4689fc3b577e262599eb983f0fb25c79d63a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e01009a60bfa66916967a536a8469ce2e78fb74c6d76d11a8e899e31fcacc9f6",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9503def2f9871285ad40d27c697d5f7fa0650b692d0d359616df8c0d9495a08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3d1f082c7286e23abae66c7476829cdbac37ce5aff25aa65f4c6743ff8a4f9d",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8c9fc88aff62ffcd15cef3a5128133ed00904870e7d24ca0c73a88d4913f472",
                    "size": 1153832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedb94888cae1fbba412c0092fd09846d88cbf774b95fc8c0348a2cfe17f7a6c",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a9b14c4139bd237cfa445170ec1a9039ee1dc4d382d45feb847c0725ae8086e4",
                "size": 10027
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e2203ac993142853b9ffc31e205ebd9bc0edc708cf664fffefe5b1d1d7d32e",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccaa466346cb8478da79f73725065d8238a66c7137327093d83bc839ac40f3",
                    "size": 198247212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0752dfa164d11ba28771aa6633236b262008fa3015b5b2bf8b700e625d0b640",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdcefe505f624eb2a9d6b0bf1da0e0c77f3c486c23f96a9f4b6f86fe6534687",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74ae1aa34faca98ebdaa34a726f859372777e03cee8b5c3a755e1e95b9e3d4c",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8084e5e8d8b5f574ded52ec9377c6d83b6efb58ae1a3476d3504e937ba20451",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34499303306f69fbef2cb2e91266188bf1e4ebbdb0cdcdf349a45eb1ef739cad",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1124e94d2ecfc0e4393a596af6a31106140c6064eb182da578be3bf4d3fed92",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f11299395e09774e46f86b8ee8054bc2389bf046d21b01e0a121cb5dd46a9a60",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52e0a6cec3ddc6165f52f664c4368d444d8d22873dc76afaaef1363fe7c68cd2",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa564af7af6c7a5deeebd0772ae0a16d66fd13631c1e22ef19dc0f33a83a18f4",
                    "size": 1153907
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb21ca32a495651c28af6a882e3282bb9cb14fd6155cdfd65b1ee336c6cc518b",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d9fffbf5c47a3749766cd75dba14f82147ef86a55fad2be4c766db3d1b139a07",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39420b5229d57deb412e2fdfcee637a6052f1978a16a310e5860e02827c776af",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1509677b2897b23daee406814e47c588e94b656405bca8170d39ee5e4e7245d3",
                    "size": 1153859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7335d936749b011bd49e469b14f69acbd0c065683844d1151c20ac4efcf1fa4d",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0d7a76f2d23ae9b4f6f0ca63d9bccdec38d29b92252173fba9aa3ae863130de3",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd7411f510aa59b813e09859d61b504aa1eb5702abef13a90b192469eda3094c",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:774c5cb8ac43c6395ac194ff1d69670ee1d5dd77dafd4290c51a801c621ef660",
                    "size": 1153865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:823a2ac1f02ebe1a82ab5935a4df7ed66682f6576ff9a87f0815c61a1a70f711",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:88a1f4d7bd71dc0079c641d3d53712b284340af7b035d2885d230019aa767650",
                "size": 10016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16dbc03b1fa4b4234997893bd600f1cd231ea9600e6b38c91f68696b6d29fc98",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:567f0eec17bda81b8b96d3c30655ab13dc0fe8befaaa6310bf03efb2ce71d1d8",
                    "size": 1153979
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eef1f4d00e9235945174c6d784dcb64dce88d0ae29f755919fd2a37d1f3ab6ca",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3ff2a09ee7b3e899951280bec98286722a80d023b24b8c6d2ea4b0dce75877ee",
                "size": 10011
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36286cce0dfa530b0424751b53a06c5fdd2a0a5a0667141240ce81bde537dcd5",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d7131814bd855be821b82ac0da69c845dfa1d2ab928e336ceee1acacb4585c",
                    "size": 1154222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1823a283117376a124f0bc5eb2ddb5a94b99c09af991fa695972161ff129535",
                    "size": 472
                }
            ]
        },
        "bullseye-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d4c19c9243e6c93cbf96d8709efc712c164adcafa9ae64a1c42fe7903a4e851",
                "size": 10005
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff142258b68193ddb71c9a4a3811c28e8f1fd72d84b540a2111e4c49ab14276",
                    "size": 4351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:344a03f087ab3cc4af9a7be224c83814085142367e437ed5e8739234d3cdf12d",
                    "size": 1154223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86b4ad14fc6cc8f56606895fd3e10e859e6232243e2190186edf1190c701a11d",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7118fc4816a00d400f00e773d9b7335212933720fe0eaf8a0b936f51cb699bb7",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3859050a999c844202537aaf261fa2013e70d65d9aaeea9b27988d76b74b09f8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376d760180a37131dae4c3af65dfd05b30cceeca01be2c7b7f2aa3c30f54db38",
                    "size": 1157657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41534d09e2335ef0b03487295cd03d74b68f711e68ab8b7598f2d7b526ad6a88",
                    "size": 470
                }
            ]
        },
        "bullseye-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "bullseye-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20208bb1e28465f9cecd1368be5df49f9d4533b8f3a86d7f9fa52277a5728248",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e9e01669ea83cbf9e82f86f54b71e8c35ec63e57ccd60c59dda9291b48588d",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bda5d49a6f4cecd51e1564371636b646cef710b5d1ef04305a5b460545727d3f",
                    "size": 12068209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a4ccf0a07e05d0c3d6a9b7723507c9b60fb127b0bb7173b91211163cb99877",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6fa73473734a17c1b74876760c017e0a8a13cfd457b7631ec066532dfb3f041",
                "size": 9050
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1af6e33c8c1a0240de24e317081c4e6261418a91607a51a83d47be5d58074d34",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c16f53f6469b65da623b343f4e5435c5a51b66127dc1fadd6b3c5ba20591401",
                    "size": 12068411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c615e5658f61680043afeed3ebf6fe8f9c4eb696bd4372a2b310a0ece1fdfe8",
                    "size": 468
                }
            ]
        },
        "bullseye-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f0561e3a9dff1bbca913a688af93028814cf485ab0260784056bab05c508f370",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3018b4d5d2cd8afb7677abfc2b0efc2e5cee1e2d57bd29553825b2de7dec197",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e700f5a83759270ca808b17a33a6bbcf5857e9250dcb1df0fe17a8f639bb350a",
                    "size": 12068180
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69a10f679b36ae0307dfe5c7a055b697d7d0237f6367ad5827fcff6514eabb4a",
                    "size": 469
                }
            ]
        },
        "bullseye-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c997978c2ddfebf46f731a083e5710154a1a8a87fdfdb6142e92737567110bdd",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e1e5396d58fa0090dac5db1cb6915b702264b4449002aad30449284b9621e4",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d8f7494576dd4abd31b0c765705a7150fed4b5b53eadb55f59e5997e21f98c",
                    "size": 12068241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76174cd2d6bdbc395bb572d84057585565fb0615adfff8215c0440a8194ae8",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5edc2f786cf9859acc85755124f358d0368fbeb1f3868b33739d249ab6828686",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1b7d714b72bd7a6a93db0ef25112190d83fbcac67708db58c14f42006a0488",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f201243acc8e57b40ec2d1afb03b181eb5912450e9e453d1548e59467548ac",
                    "size": 12068149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:854236a2e70593288b10311bc6669575b15783b8b79be6c46905f1e73bb4e114",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2147eb799cfb1114feff7d6873b29592efd95a8f615f973afb78ef6a3822d057",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0ce38574e2ca7434d7c25cebdee71122316e3535cce07dad36fdf4ddf431ac8",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a51baffc0f2d2597114e02775e2ec620bd259475bb16a2472eb22541e72e9ce9",
                    "size": 12068269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b22a524ccf5a2180a99ec4904f079ca7488a9fe5a3a5898c4d0f0fdb1c0e828",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5eac1f6213474ac7e692c459254a55101b99318fcf23c7655266aef24030291c",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91cc30b28814943d567bd1899342813bdde34b5b4c1c1e6b27110ff035a1b723",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccab5f6b03393f667f61e2d79937a71a336345fd379d9101e5557f4d765a55",
                    "size": 12066154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a341de42f8584e1526ef6e6f83035e8366ef7fce58f4fed7a899d89c5383acdb",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e704d3d944f27d8b297a7571faadf2a8681e33ab981bab4e908d5803a19c460",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c074a98ebd9cadb901e8a1258201bea49bf3cb1aa279417a4b21e8c121245db9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b6e1091917f0216eb3c10842758007e54c6c9fa4944db2b29a88a0b414b49cd",
                    "size": 12065981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dd4d18771a002bae58323607d50df84cb0b2cc14a2c2152892b99268a43a84b",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04c8bec1240015ba47d35bec998bbb2b0f569fa29e3df565099cf6555ed82dbe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511af9f68b0051068d160c297d51c7aa158c03e227327a3848ca9de3b282706c",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6943402209277b691dd96ae22b2440e5ff4bf901fc8168beaeb0f56f954a4a",
                    "size": 12066217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef32cdd0312482c46c204ef8c2f1ad8cbfc65e2666e5ba7b923a5eddcd28c337",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28880571fe6516ed82157de59af1c6118c725841117aa8fe0093434188d7448",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bef8f8fbec0ee0034b0d1d308590c29d005f790783f1683a341f50a056d43b8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f1c461784ac8c8a757e5fdb5fec89e4cba4e135285de3b6ee9cf452d8fd6a8",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc85fabeb889392668ba5194eee89fb7205d0def98591f962353e3be24559a6",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7cd525354ead091cf01d6c94befd89d0c026f795e6777d07c51e455f1f8e736f",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acda4a22fc71158a832559f26c4a313724dcf9f413ca92086b8799e6197faffb",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6efbeaf1c16c65655678f37df0243845b30056715a5c67e59a6a9101ba607e83",
                    "size": 11980448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed0da8af41192f1bc39b81a547dc15de06626cb7dc78a2597868c472db3f23d1",
                    "size": 467
                }
            ]
        },
        "buster-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be660108e4520b3b6e17c132a218bc1b6bbe4d4500cc339d18a88262d2c0f666",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b39e783847e982908315a9f832b52861837b83257b9b4f63eb124df47f991f8",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffb4855963dea071715710a022e5c141739ce61b08b538909aa63fe02943e3f",
                    "size": 13793777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e498794702d7a6aa8110ac215bae416d56b8fc86059de1af082a61910d66b2b",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e2ec01b29b9f621f875e8202e789a1690fc33dd25e8cd5406da274b9d5d49f6",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7abdca9b80ea6da2e53942e9842f9e82f94827fd57640f236bea7e02649c4eae",
                    "size": 251
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2014e0a97318f3261493be34e73a27fb95f5f04343ff02598bc5fa4b6830237a",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c926ed1fe1a39c02ca6faec53a087efb70b25f0b5418f473972711d8ac1f6581",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e791cdb390ab6c099a1368881379b6f2eeece847510939076b7fd73526974a9",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ed274800f3f8c104186c56a0cd388e08de6e8a3b9f32de9d124f20c2107f058",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d80e4df31a5deb9e314bc9dd1af3ffa137eb6a6069a05535bf82957b97d07848",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebb643b4e027fcb0483ac8470776dde4526c69a1e48e8a7946c7feb0c5670645",
                    "size": 11980508
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4be11b877bab1d5ca8c07965dafb8abad7a7c24cb88fc73e5a308b4433f6a3c",
                    "size": 469
                }
            ]
        },
        "buster-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d4add088a671134a68fad0372c7ef43cc74092f9b3296b29daade89248798dc",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13ed1f6f0a7094ccd8e0ed67b37517d8e66c896054a073c67a1653aa0ecaf786",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9815ac98034b11aa0ea1ea26180b2156252b6732b79699c8b426d36b63d1e2b",
                    "size": 14065230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a674e5f8b125691030b9b7db3324ce8bfcade9575c11f3e3f340820cdaf88de8",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89eeac9c331767a933a760bb7ed00bad9df0d4ada65d1541a3e4ba93edd862af",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4937b6628654da40e2c6e618886ec45da9353ab6076c0c93dc5a83f782a8739a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f649378f9e7c8c1f2f10dd6e9df1ad4ddb8df26730d2713357a58ea5da4e2532",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:278cf0b5536e4fd596f065afdf1fce5702fceb6910ee6675c479fb5c489435cb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51515e9ffd9f1330e6339a4c1d03bf9ba37836242b45b488dbc14633c2ddee5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2c7df11a752d5f48c9c01fd93bdfdaf05f333849a06e64c26167d468fbee53c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3798fd36de014e4951e10e8f9df21b11fe0774b50c44d0e3c76f80348ff0f651",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cfad893e5a954014e5e86dfe00909a0eeede6aca38bf981ef4844438c0bdec4",
                    "size": 11980866
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfa54daa24caa8e4292736dd163bcaa51f56e4546fa95065889c2dd33ddfd538",
                    "size": 470
                }
            ]
        },
        "buster-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:75b2d0d409c3e0ecc407c15f20a1485a55ae66f823ac80291dabce4cc3fcab07",
                "size": 9042
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c18894bcd34ff7bff587230f1d099e9211a6d6b4afc7f758a075d46ceb2aa2f3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2722e87e738241fe6edbb47fc35bc0188f305a650143fd7e430ee569a11bccc5",
                    "size": 13794157
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee4cadfbf7ccf2c9d614118ecacf4d8b8639e0e8653422ffd49bcfbfae59c250",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a13aefd08d0c16bd7b8dd59a721a93bdedd71e3c53198f28d4f7d0d1339239",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:306bff35bacaf7bee68628b13cb99998a7309af32d611fde5262b1e5e3b07bab",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7526f0b704f343b89a778c12d44f5b54860f8c034059245192d4950c3bc2d6bf",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8cacf8e84071556a082eaab177fb093a47556fb53c212e6b524890744a557c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec32e37f26571eeeac2720cdd0d746ba62d73097eb8cd0e7ff0601157d54b40",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef7c1c763d2df17384b53dbe801ada48c76592ee6ca13174e10e781140d10e4a",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8aa98bca8058b0aa2b5e8da6d2b667a2f1b21cd158ae99d3729620251e096f8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2de092aed069c92c1e64c262ace23e49e0fd5744eb837714be2253c9416d1b6",
                    "size": 11980507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6e8273e231866be782c22c51201adf98ec5efe1d75f72692993828e067cb79",
                    "size": 470
                }
            ]
        },
        "buster-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:82096e1c0193c38617d6bc3c169ef74dda17c6b4f62b77e64b900240620d84fa",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5997a4cfe6863c5d22dd1d9b02ee2a04eae3d7f6954eee4e20fda033ff39a4c1",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89aa9b7da62b952da26628118c56c4dc37373b1507eda7102e2b86a0993c3019",
                    "size": 13794152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:607cafd7da964a82e3403f348ca340a23e0f4ac665d6043de44cb3e6587de6e6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea779a3aecef3bceb1c245f0cdc518c26c873a2850cb78f22fd66bb799e0fbd6",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61f579c82742ac9fdf8009f47ae9a39505dbec141cfeaa3ac57fc77661f9ab97",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8649c2524803dda983ec651a691e723e1c26ea95459e9f453463a4649260c444",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0463be53c2ae909d41e6271906308ab5140d61805af669404f1ef8e987de60c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e29dad497bb39618b6835f3a81ecc807b3c09a3c6a554ebc317bac841a0f9fab",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cee4fc301dd85b6d61ed712b7c273823f1d6948621eed4366ce3dbae3aa2960a",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14992db9856b7c857ca2220a82193be012e95ff84f8e68f550bbf9e472862ed0",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12680bc512928804d9a4cde3e2504110155b70af1a4b3ea029dcc77464f6ad9c",
                    "size": 11980661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a728846f0bd2d8db109b0f096018ef76969cdf8f671161ab842f706b30c07b6",
                    "size": 468
                }
            ]
        },
        "buster-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e8c49c524c3f08090d52d5f721751c75f9c4beb9a0c125798b03a94168c693e3",
                "size": 9041
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d5ce0d45748c9b1a7bdc6c2749844ad24b52f3eb919532c6fe91599acd54b61",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5c3615ccb0b8b5b27e6cedeed57f9f10898582b6baa9ec5381b5c092fc3f93",
                    "size": 13794122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3dc64da1b864fc6612c13781726e1f98b1e2f34427a8da73fb5da8d5479b473",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a727ba8fc6e3f7e3259dae384d22e92f175eca6f823b9144b9a2c1984c93d71",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:650abebc1e76bee2682d427f43e01589ecf4eebf66fa2c4a04c1e15bfcaffbd7",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a9855afb314055e9356209d86df92d53e32550bf864860fcd158bdba2e98ee5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:582efc322c3e6c29072658047fef56e496a72cd64c5c0aee21db5326d1d3129d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bc7a6cc6ba4855364b8d6a632a54828062ed6013b4d7099347c7bbbd5a2192",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:179b4d1928befc385e0f5f425a944201effb120331db4c1684d59448e405d991",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34d7f8ed3bf23018a6935270cb5f86aa3f97c582cf9da6f20fdca9408aa55ca9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c4725e90613d8e3e9d226845db02c7ceea72ebd800ea6ec87d7077dd4415916",
                    "size": 11980414
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2c3cbca11e0dc452192700c5d89a7558fb8e622cb606bf07c47cef2104d841a",
                    "size": 467
                }
            ]
        },
        "buster-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8aaa7b24461792224d278c3de9db43073aa5564ff3e10dae73e5e37072b98282",
                "size": 9046
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f25b824ac93ee8303d466b0a41f29c1998df50a336e0316f031a1f9795e23ab7",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f5f3b5e509ece2ffe0575c5941bfe55617abf916c0899aaaccf72cd464480f1",
                    "size": 11980680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c87b91a3004ca3344932654b53da9cd8daac467ad5bd7b9acf9a2f21bd40999",
                    "size": 469
                }
            ]
        },
        "buster-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f4d2fd002faf4e93bb605cc9968c10fc02938de656c8fbd3c9d7bbb27d7434b4",
                "size": 9039
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3408cf0654b3237e979a6f98bd2c1293fa533c0e3284426abfc5c37ea65aa18a",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc8a85340147c980d1d12ed45dd25196bb6d91b8772a7f634d87105497713eff",
                    "size": 13787386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbedab5dbdfe90ff516594719861f8b7d778273a4f51c0fc58fdc0637e04f745",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f1da5a75eea7746f7564decfec8c1780d0ba5d49bc3af68c979fbb6be8a235b",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88e86113901b173ce46d3437be0827a9f0f5538eb7ea9accd5539ebe5dcdf017",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c83c281a7aad5abee2d68ef46d8bb48b71b0fc1a5e24e12354a4eedbcc89881",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9171c0dba9f720dff8f7560cfbf33056df356883558264c7ccc5337c7044e113",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b4d697de5ee1d679d59dbac6ec3efdd8c04bcb996b92cd3f5e9382365dbcf06",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:194088ddc4656d2af60a599cafabd7825bc242897aee87038c7e9fdeaea93e45",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b643208e5c32ec75d7683a4588f8bd083c7eae1926daded3ee562a9b2a3674f6",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e632fcbf8006d6d0c314f64929dc3763006df1336d0026f08a5aff2a1dc17739",
                    "size": 11980745
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5aeecfe4240ae3e644c64e0360038c4c5d8f7f9b9b83a56595d16d8493e508e4",
                    "size": 469
                }
            ]
        },
        "buster-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0ccde2fdf03102fa179a6c0d58749c93430120fee2331a1cc5cc2717566c07fe",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc2593b81e6002b446e57d403e4313dfde7b1864343454b05828f75ac5e58570",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd66c164fad1a100844f09ac316c9b58d0c0429ee69b6101aa3b8e5702f78a7",
                    "size": 13787299
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ef740b19e8d1d0a22329b303a60f75adef9a93447c117a675dd91484b635e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5458f2dfeb4bd25eb72b87347acccbed8d946dff2e81f89980c7d8aca599a8d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc380240689ae213391343329edccadbdf83e6b9806166531d01dd1e0b25c9ef",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d84784c737442573131b8013985380c0be522e8cbe636aafe7e3503bf78f54d2",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54a3bc9876f925bb6cccb1bc8065730d39491f57de8dd07d0f74646af9c31cd2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2bac34ff1ad1fa4e4142bb273e1e49066afad7c637b47ee2f92c820cc6cc54",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88dd3ca849a28b1be975e39196aebefb6b7a5130f164805ad99b4c295970608c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f4a7b86c2bfee69680824c082b7bee39fd82b812f346a9107315e54ad03c2c9",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57a65dbabb361521b06ea4aa9c3335db68af462b9baf1b7c3921a134167a7953",
                    "size": 11980699
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0f52b750f1ec1cf7eb523716d9917cd1e58c11f4e7998e53cb221c69bcff280",
                    "size": 469
                }
            ]
        },
        "buster-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b693b0c1806aa30edc7461aa7e1efd461b68c1d337b070e8f696262caa767c36",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85a59048b7cb66113b0f480f58b21f5d0fa8f5908909f090bc738b798e598c5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e9d9f709bc526d8baead724514e3b5cd7f1e09a2c90db9921ec63becea49e50",
                    "size": 13787329
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7be450c33d23e41a869346c998e02aff90cbfe4abaff69368a2451eaabda21e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbc7b87b6f47438d9b1332daaf933dc60c63690ffae1e739d51410a8121213d2",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e38cb2313a8eeb0fba081fa80ef2948e1b8d339b1506b66d73ff061b434123e9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5459bd8d4bc1fac5b1c18b332f5444657aab6de5a7504b70b0b629714a47c7f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a26352b57f444f2a5ef4522f64eb0da35869249d23bfc4fc4dc8a726954dd11b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b693524238e40e6bb351e67ddd6f413edd74d4dbe5ccb26e9ed8ca464b7b998",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f16db6e1fe504eef9d3ced46c271598dde07812625ba8533d109fc35a23c9488",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:372e6d41688f640b759c62c1db2d466c073babc861f30833ab3b3fc6d6f12d6e",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed57e42ab2c95e7424e959b41b131483d570b6f1d6b501c4f973f255a450083c",
                    "size": 11980736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:957980a0b670c6a2e61422522a7f27ae1403bad958c630c2d694a5e81a3af42a",
                    "size": 472
                }
            ]
        },
        "buster-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:996ebae5445e7c7e3776d16d86b24a86ed01543bc5d2c063da1184eb17bd20a6",
                "size": 9023
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76c0c721f5260280c88130a75b94b5e0f6270a3b339701621f97e14b30aca983",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5409131516c7e4003811eb609650f2bc519f5e5990bdf94e8cacd171aa6f2db",
                    "size": 13787420
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4d6d887c52c0bf00dda419045f8df10efc63313d30f32734fdafa9c612cd304",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:898e9c6bd0a197d56887b5989b9fd1a4be63708f5c7419033b1dd502a45eb3df",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f011ad87a34c177466fe95434b492422a7ee10c6f58f6d53f38e0bd82c4a9b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:321eff095c69a9e69a638fe51770656cd4303a2d519b6b3e66788fd51672b5b7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec28374d0328a01cea7e09a456a118a4a8573927e31f0129ec6bc5117eaab20",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c2c4ed3c0748136c2e67d89449db5ea6b1453f0cc4e78ecdffa9267f1497d9c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046e6edc01bf85b207d8ce299dbfe9b3069ecd7adedd15ebb361591b5e6657bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5985d53566ec7b1d86c7235c1cdebf93a8c2b0e7f941eff56523803a24721208",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c49afb578003aa74645c1faaafd5c5f3537271aa2f9e49dfdd8e563f8b6dda44",
                    "size": 11980720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:258536f1971a835750fb934fd1e0c6e70073789f889a7430ac479ee647578274",
                    "size": 468
                }
            ]
        },
        "buster-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7cd525354ead091cf01d6c94befd89d0c026f795e6777d07c51e455f1f8e736f",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acda4a22fc71158a832559f26c4a313724dcf9f413ca92086b8799e6197faffb",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6efbeaf1c16c65655678f37df0243845b30056715a5c67e59a6a9101ba607e83",
                    "size": 11980448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed0da8af41192f1bc39b81a547dc15de06626cb7dc78a2597868c472db3f23d1",
                    "size": 467
                }
            ]
        },
        "buster-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18a8b0bd7a32ad8a627c5232a949896b6525fd255ef9bc99d7462be60a7ac100",
                "size": 10004
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21ce456ad17579b821e2dbe65920d0d791a2f27b300de63338b23ba1b0426936",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78151996c382cbaa935a37336e3626182c68440c500f9a98ccaf6c264c897fd9",
                    "size": 13787164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5145cc84456a8ffad969cf2d59e6da0f6853153360d6a0281a5d12b57b29539d",
                    "size": 188996038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020c4cf177be60f72a47ce8a5ca0cf07aed6d846fdb94cff0660a5c00aa6bc99",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e582c4aa877a817e4d6c75a344d5e910a17b9027af5cd2bb9ab80306130e0079",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:943f9e7d8ad42391ff4d82e061ad3f3136de3eac249815042746a7b4b6160494",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bac7fb09bbbe937617acd4aa8a1727184ec11b74250e3d9cfd7f5c70d66f6e7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1d61dec9b52b5164bf809e8b6b47cd82fa7fa2072619f071b6acb9b1712898",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae35eb9c1ed36b2f69c5c50f089de63051c092cb435349be9898a0a304ad7b5a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c852d8f94f09eba7b61719dcdf0af09fae45e4b32cfdaf89f58506c27c0a920",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fa4cc63af2e3dc39b4d55f8e8479f8352698e111337940bc104e1c44c9c6411",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53ef8413f9bbbda38d0c3c56f91cfbe2f3d39db17341d5431aa3613a00d0e1cc",
                    "size": 1285756
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fa85d77dd60a6715519e765d10b6941ae2461e9be9ce02f392ae41c380a2b7",
                    "size": 468
                }
            ]
        },
        "buster-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:26765e3d89641e00a6d3f2a501752f19a93cd8c3139d791beca7239ec94e08c8",
                "size": 10020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e37f8fd5a55cbdd014c619e78069823b2a6e54fbc58ec637782a0ba62b2f56f",
                    "size": 2592214
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94b38252f6ea616f5e958dc0fd6ca88f792ce782e56d355fcb7578b03e973fb6",
                    "size": 13793790
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5fba4a7fa7e14e375d335154a9a397cd512be753c735bdffe2e476446e016db",
                    "size": 185518926
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87ff32b5bb37e2af3be89b3c572e40e92bd61044d37a9fb355c4c78e2a27e220",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:591923b6173b257e89e1762c4a4bde4906e944d85199f7bc23b3f173ed20f147",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb0173c8d666e4603f1eb3d576604be5f8778f2ba4b9a3d730dd135e55af244f",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ef25d1e0c658c4d615b7fa7ba65ed4239b371f29b4eac8e5e17d37eafdf1b16",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043eeea2d0a3fea2af9949ff4d86333f1a506610851a59a57861e0775cd1d3c8",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd25d4ac6cd828749d30fa60f8348b48c198e42d8c70d6976b8f510f1c6fd9af",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b84fc968119a004e47d24b0a0dae4d6129da9e89139c072a086508d014db893",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d36f12b3f0e615384fe40f125b2f1fe2099623656a5024704a4c5baefa0651c8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7c61dfc5a48b106f83618bd7e7725f0e18bb858753ed1fee1e79e91224d6a0e",
                    "size": 1285665
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a2f41f63d8b64a19c02b9f0defef91b1cbf7806522a9d410eee8041c3f737ff",
                    "size": 470
                }
            ]
        },
        "buster-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b5c9d03cb2c305092b930f7edd08a1fbdeec0b57b05e04769f3d2f813713b9f",
                "size": 10016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac328e364a5a311ddf8d364f18952eef97ff9e7a7783876f2015c9e9fc06e19e",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe8993922e5ce4b0e663fd6c9d47d17c8adc253f2a49fedcb2589a151d9acb61",
                    "size": 14065235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ade1bb8db8b6c7553acc5c542235bded8b217f99bda63e32faf03a1ec1051e9",
                    "size": 185518912
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd7845945dea31abf26f27b67e06b501221dc439ea90848c23800e78e9fe51db",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14d9524acab43927ac84a27ff121d83ed06195e5c622c3d4620ea8379618148",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19cc82e5a7fc19bb5b78a6d02d6c70281bb49c3ccb72ed80f7e69a21355d38fe",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60a96820d95cd41db242211be7509aaa2689c0fccb5be5a26215451e16fc9d43",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:127650f09c8b32d3519b069ad8d57ab28b406d522ee0a2f2f143c8ed2324ae05",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c2934b371dc1d5170e65bd525dbd03fd68d722f7265e80d47abfae3682416b7",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0110ad0528cc077a9cfc42595659b17a084ff6904d3034f875463990bf837f49",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12e0d25fa8563ae8f4c45e5bbe100f343efae9d313ff97e52a4e62f5f74afffb",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3a875a4ba1a53b89c3bc767f288796d4bfe1ecdd6e1e90893eb7c6a22863905",
                    "size": 1285915
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91048043c4ad52b90ba363b65e1853845aa0a1355f78603e97a8717340584d86",
                    "size": 469
                }
            ]
        },
        "buster-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8e4207b1c2a9dda8f7d50195bee3b33808605b28ac74f4914f4e837d95c616bb",
                "size": 10019
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:525629375087bc9399725b9947ee599c53004e87ccf0ccd25ec841c34a07f745",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:982aa66d2090a9ef792ab7bbbeb3e40eeb35ef37c6c5bd3d035e429faf022eaa",
                    "size": 13794127
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8caa467b1a39cb79f8fbc7c0e4b7a8cdcf451ba5e29559967943519c8e516234",
                    "size": 184732797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72da783a91209a6248e1ef07825ee941e2ab63a447e3ed7bf453f99ff71d160b",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:315d8b9116fbcc2c3c810df4a0209f285932133c1f6468fe381361f9e942998f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b469e4db79088e9d6aa9764fc665adb4ce169185a983e993ef3c039415774fd7",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0666f3ad890d918ff6d7c753c6586269a0eadd4b6399d8cc6f560a586fa2aab8",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43692c364a9222d5538b6c29d77489a0ab6d167a084f9c128b24f67268cda9e0",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90e46c4e8bb1edf4431e0fbcb8ecaae89bd042a49ab3c53ff7f05fe7d64f762",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:546ec4674ca71e0d4ea9598438577edca9b3166e53ae38d9682ba60c275c16c9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6916c4c7dcb507095b38c4255fc20ed369686b4bd0d5e8a533082ce87351eac",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107cece299236060744be3db424d232681b9f3d6b1db56e1ca3a9c39391d0908",
                    "size": 1285469
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73cf54362456928da95bce0bf8e024592cdef78561d915873791584001bbc68d",
                    "size": 468
                }
            ]
        },
        "buster-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6e52ce078143285d46341194ca7397ead6c5429e892043eb2e6ba74013c0fc5",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ee73bef1b61cc8ad8c6ee3a1296a6554e88b76e4fc590983dfcec9006035379",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71d4504c09bef72b3dd8f807ae5b3de4c8a2e66bc088418d14631fffb25a179b",
                    "size": 13794144
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adc44ce5b65cc4e73c388542ddff30c2bbe3c67bc46fdb0a69f8ae2aa04a3e21",
                    "size": 184732517
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:482dab0c1e64ad8a72062df31dd1b1b227f8648eb1b1a0e6407613117fbeab22",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1389fabc2a33883c4e5abb11ded583d5bf2f3ab4076099cc7e7edff2aef17a09",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f35eae4f739b9dae1837e03f032fa46773e7000c357a54b348838b0cabc616ed",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f7cef34ff24f96e2b2cf38f769140628e549de2d301caa70d99726dba64740f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23c47c9c039a45f7579a9420629595a7838cfcf6eff4a51ee051b77bccaf7309",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8de2bb54d8291f532e79867c668f8538ceb7a839179c0666751186b7fa4e5e1",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9532195b5ba2362e505783b015921a65720d5ae6c821a0bba271b58f8016582",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f203ee5dac0b9c5b1b516442d71781251c8fadf277f5016d2657356ed62e1de",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b2d2600c7a683e176132d25a36b0f42eb0d6df1bcfc8e6b4279fbf56fb32cab",
                    "size": 1285485
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:065cde12708d190227b2f0f1e51c27c4f0d1dd3e0a41a2ff66b41e23147a31a3",
                    "size": 469
                }
            ]
        },
        "buster-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1f115ec89a5d5495db4eaf7b4d85b1f389bf82ca32cef38d18c9c5c99ff38682",
                "size": 10020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fe9b399b1d2aba94f9c57915f69cde38b50ba949feecde359b3e75bd22a40d2",
                    "size": 13794154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac674d3903190b09532b6a85085b34a43c7a06236e1937e42c2de7b7454923b",
                    "size": 184732505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a75ba423827ef6991eb35991d65033e0f85919b5f3236a77c4be641fe05cf7",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52cb6f22c39eff63254e1a1219e27ae79653e079f177fc876c6312c68ee2198c",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0220a2f0346e5bfefdf4a97758385a53ddd65550a5b8deccb689042947a1f359",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:458dc47bf4c7b165ebef565e164e05084025caea8dd40297768f23d6863f22cb",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0314f9b8a2b6ab1cd8e1b1a567ac59489b2442563d88b5820fa1988561f128ac",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4f91b1dd8863e4a8c5a0493a0b435993833480566ed3f890a270354358b8602",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4fc1c51422c81ae93462e06b7a82f6cfd73981386e7915918e5e2b673d735a4",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7956c2657802e77a3070e497291a9bd16d0c9bc855ed2c6566c451e122f83627",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0363b6a496b34a5f5750a459421968e12a2cc80d71210a4056d1f35078a4010",
                    "size": 1285504
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13353e3eb7ad4eafcafe13f7f7f6a55e8bc4f52e0e27b3efb0d903daca96f58b",
                    "size": 469
                }
            ]
        },
        "buster-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a4063b7255d50a10b4864ba5faa58d8c9aa59fed95a151a80e6dd0b402e123a1",
                "size": 10017
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32179b96bd48f3dcf2a19c4b5e207ab251e34d59e8934aa535ec0e143bd31962",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bf9329269d889403c0ce89ffb091c631b6b4ce6c7f2cff8f6489ef1b645abd1",
                    "size": 13794227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5dc6c3c94a84d415b32d4583eb17245af906ab059b278ae33e15661280ab94e",
                    "size": 184734167
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:887954d8dd959ac0647a9ff7ad9eea6e03fb8c87cb186909f270aa9cfefbdd22",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dba9f56ac8bf268247ec5ae003685c8c161bcffd69a085bf184cc6eb482e138",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3954ac88d33ad9a0d87fa1ee8a0d47f0a5cf49c1d3cc09d4153b73cd089e030a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388c344f2bf77b19d0ea4aaf4867274ae10c7d21d5c244b1821acff77b519f8e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:300f8abe4b19fc96239455dbe124d0e51fd3d6c39a1aa02491241d68fae0353c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6465c3c4c8aef3458dd7fd9c5a48266113c344e5fed89df5a0772ccf7e3e14d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:910934ed4e8d778d89ff70a3f4c1a9fc077c52f841ffbf1a018c0f3ca256622a",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c59c5152f58a3f3bce96af79cd820ee595bac3fcd387f943b3faccf3fdc19a36",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e50fdde5e644e0c9b25765e7eead702aafd90d8932799adaac5c50a54926bd09",
                    "size": 1285539
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:644ebd55f6793e0e2030bf574d45e6eebb3260211fb2c663c90736e17ec4ae0f",
                    "size": 468
                }
            ]
        },
        "buster-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3f9cc8df2aa604d3774e4fa2c5a181b4b9f8cc37cc717fdee29e0356c631d618",
                "size": 10018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:788c7684bd41ddf7d908ce8acac08235cadb3785d71996c5720303ae3ca76cc3",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96b6fde737cfdd9e327a5244c6c025d200366a5496a68aa13b67ef1047ae7217",
                    "size": 13787319
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32c4006a6bdacda5cd7ca114b802a8838475da9e65f92fa2a1b783ceedbc548a",
                    "size": 185550593
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:016066669cd24f2b1ff7c65c794bafddd4a822520c50565819f722b269ab9227",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dda0fc11f4b2a9dcaec2e2973ec6e470582f260c057a2273c3993865abe43e4",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327516ac6034d3dc744a55a5e0935665a99ccb2c605761640e0e5540cc733fe6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e127435085df8ef75b33b2540c2d6efc3c91fd471167f0bb5e7aaf11205a832",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04341a2e42e73d0db1eac20c18ad8d44c6549f0941498f27c96e4f7771f45821",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1deee9e012b644a4f01e3b632ffdb0b49a8fcc12b6829693bc3431c573e153a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7b57a41f4dc37c578311c580de41d8ab3c9ba8d5e141980d6d14cbbd8212e69",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b11898f1122fea6ed172f6af67f47f9e62059211646a1b6ca0eac4231abfdc1e",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf551e896064d24cc575562c1c7c4fce6e0c73c3bbc8e5641385dceb1526c65c",
                    "size": 1285699
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0054ace6b7270b93d2496c07d936c8fbe4b292de9b4668b58062c3d92d2633b",
                    "size": 469
                }
            ]
        },
        "buster-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76db36a5007606deb4ec38b1690c42b59fb1a32812afd353e93fb5dd783a11ea",
                "size": 10018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce9db97bc5a6de34061387816c6b6db87997125c9375a1d7be51030acafe3d6e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2439b5b8639f5e60f8a001fd1c6490e762120cd20c823ab5bfa457c0fa984416",
                    "size": 13787311
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:105d15c8eb20b26ff5a286f131b6369f25328220d6b60726664e151e5a88724d",
                    "size": 185550948
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1404c64f3367426679c5ad0b9558b5107b8bcaf9172a2411a9eb7d8bd01d452c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af5e3eb9996de7c86b2728342d07edd7069e2f0c9b10c984814a16d52879ea3b",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05b702b4260f52df9bf3baf344a5b1f715829eefc026522aa41d14e5a7495901",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b620cda6d9198a406774eb4a04b9a3bd0db93bc971caf2fc96188eeb2856ccf",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ce97d65d5d839b40e9ca84320e692955fddd97715816ffef83362f9f331f319",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc3b354e9b23036170208c9e6abefc52b0dc7df9fe06a58ca8f1a6cab1591027",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9824f50cf50521bcacd6504eae5d25322dea7366c621783cfd186bd015bd2c7",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ea01edb45c35e4465682c48764348862449b9a921c9627f1171eb5b74194248",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9090ef2e5c84508ebf44764db4caf6bd201f6223fad1b30e59d652b3f8013ef5",
                    "size": 1285771
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e845dd73b0e9f233f74503d9cee939fce83fb18e00662af66330d506c8c4b210",
                    "size": 468
                }
            ]
        },
        "buster-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:188b96af581e4d2e0e721d8ee102b2f5245827ec09043de234ba638e5310ad93",
                "size": 10005
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f29092138407893e1c356eaba7e9b9b697dbbf18735600426272e547ae0231c",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371978941d0dd43bdcaaf065e9cb6c81c6a0a319ff8176d4d336b7c3a4549061",
                    "size": 13787285
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214b9ab24d8902d97128ec18e58420ece94e564df2c9f8c086572518594bbe8",
                    "size": 184793931
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c901444f1872cef7f686393cfbae560bf12de0704da80eeb8e05b3d0262b012",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e22138e38c99fc63e889a44b83ab03b81781b44e7791d6a8db40339209123daf",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fa5477d5629f19944bbf2420ca7660994053cf04a14d94d985f46e9b6642a30",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a54303cb2624dc49d0d6bf3a1fdbe5223e3538f26e9821e05acd49edc2e77676",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9aa0bdc480ed066a117c4f2cadcbcf293f21f51280c1850281fbf287848f1286",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b41c0cf125e41ffea372c28496b1910de75037748b4aaff78b6217e36b92de69",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da116d2092210714b674370f8e3fa0e2c05c9bb75c293e25d10d47709904bca1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c62d242a79e06bc313be11e3a40ecdc086ce0393e90c07b3c131a8829cfc745",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e01882a48c48df175aa2705961b40a63fefae6c0452c9638c77e383f3359251",
                    "size": 1285641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:874bd7c1c7c8e081cdd7b13cbb614a6d4b74945b0d55a7498ee17759a56df26a",
                    "size": 471
                }
            ]
        },
        "buster-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:30d8f4c7a81252d747b44fc4f652073e3cf72ac8aa3f5a862b84a9f14023cfa8",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1ee6201cc3c329e4b18c796de9708c112ae1754f184e26d4de82919eb8208cf",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43cf170448befc9e85e79eeeaf44096d61f7ea5484f87990bda86a836622e29a",
                    "size": 13787381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b877bdf8592a7b62dc3d77c0d78a7e3cd3e3ac8d1b8ebdca401afd095a443756",
                    "size": 185134643
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b164aa1f2dc7dfbb35e6e4f35f7e198a40f1896abe800da5f6d2fb5213edbe8",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31aee53fe6f28b75505108d7fc52ea0e338e3ed693d71c937a61b47513cb1cdc",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8fbbfbf4a8d0bfff06731bb0b92ba9fd70eda666b9105d3c6f2d0cf4b51d6f8",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c06a7344aac835cc8ede308cf6e1f1c7ddbadbde06f8ee1e97c516706ee26bbe",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:089fdcd4cccce1f09a18c9a88cc9b5948d2b42fbf0000d70d705a688a5b2a1d6",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2fddee653ada4478e29094d1c1e6e511a375d4635bfa6afb07a53e1aa54cd5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcab320be46214715959df4889b54961a60bdebff53004f4524bde5f99bb2a4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:939da8c7bf402bb3252d58d85376d70eb7b0772597948e21348a67dcd10acf67",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07bce0f06364af0896cebade9a8591ebc12b24c5acdf8a0794246074183baa91",
                    "size": 1286021
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d0f0bb02ff5c9ba77ad0eb8821afaa60716c2479feea677912336a65031bb7f",
                    "size": 470
                }
            ]
        },
        "buster-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:18a8b0bd7a32ad8a627c5232a949896b6525fd255ef9bc99d7462be60a7ac100",
                "size": 10004
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21ce456ad17579b821e2dbe65920d0d791a2f27b300de63338b23ba1b0426936",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78151996c382cbaa935a37336e3626182c68440c500f9a98ccaf6c264c897fd9",
                    "size": 13787164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5145cc84456a8ffad969cf2d59e6da0f6853153360d6a0281a5d12b57b29539d",
                    "size": 188996038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020c4cf177be60f72a47ce8a5ca0cf07aed6d846fdb94cff0660a5c00aa6bc99",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e582c4aa877a817e4d6c75a344d5e910a17b9027af5cd2bb9ab80306130e0079",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:943f9e7d8ad42391ff4d82e061ad3f3136de3eac249815042746a7b4b6160494",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bac7fb09bbbe937617acd4aa8a1727184ec11b74250e3d9cfd7f5c70d66f6e7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1d61dec9b52b5164bf809e8b6b47cd82fa7fa2072619f071b6acb9b1712898",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae35eb9c1ed36b2f69c5c50f089de63051c092cb435349be9898a0a304ad7b5a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c852d8f94f09eba7b61719dcdf0af09fae45e4b32cfdaf89f58506c27c0a920",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fa4cc63af2e3dc39b4d55f8e8479f8352698e111337940bc104e1c44c9c6411",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53ef8413f9bbbda38d0c3c56f91cfbe2f3d39db17341d5431aa3613a00d0e1cc",
                    "size": 1285756
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fa85d77dd60a6715519e765d10b6941ae2461e9be9ce02f392ae41c380a2b7",
                    "size": 468
                }
            ]
        },
        "buster-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7cd525354ead091cf01d6c94befd89d0c026f795e6777d07c51e455f1f8e736f",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acda4a22fc71158a832559f26c4a313724dcf9f413ca92086b8799e6197faffb",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6efbeaf1c16c65655678f37df0243845b30056715a5c67e59a6a9101ba607e83",
                    "size": 11980448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed0da8af41192f1bc39b81a547dc15de06626cb7dc78a2597868c472db3f23d1",
                    "size": 467
                }
            ]
        },
        "buster-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be660108e4520b3b6e17c132a218bc1b6bbe4d4500cc339d18a88262d2c0f666",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b39e783847e982908315a9f832b52861837b83257b9b4f63eb124df47f991f8",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffb4855963dea071715710a022e5c141739ce61b08b538909aa63fe02943e3f",
                    "size": 13793777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e498794702d7a6aa8110ac215bae416d56b8fc86059de1af082a61910d66b2b",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e2ec01b29b9f621f875e8202e789a1690fc33dd25e8cd5406da274b9d5d49f6",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7abdca9b80ea6da2e53942e9842f9e82f94827fd57640f236bea7e02649c4eae",
                    "size": 251
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2014e0a97318f3261493be34e73a27fb95f5f04343ff02598bc5fa4b6830237a",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c926ed1fe1a39c02ca6faec53a087efb70b25f0b5418f473972711d8ac1f6581",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e791cdb390ab6c099a1368881379b6f2eeece847510939076b7fd73526974a9",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ed274800f3f8c104186c56a0cd388e08de6e8a3b9f32de9d124f20c2107f058",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d80e4df31a5deb9e314bc9dd1af3ffa137eb6a6069a05535bf82957b97d07848",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebb643b4e027fcb0483ac8470776dde4526c69a1e48e8a7946c7feb0c5670645",
                    "size": 11980508
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4be11b877bab1d5ca8c07965dafb8abad7a7c24cb88fc73e5a308b4433f6a3c",
                    "size": 469
                }
            ]
        },
        "buster-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d4add088a671134a68fad0372c7ef43cc74092f9b3296b29daade89248798dc",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13ed1f6f0a7094ccd8e0ed67b37517d8e66c896054a073c67a1653aa0ecaf786",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9815ac98034b11aa0ea1ea26180b2156252b6732b79699c8b426d36b63d1e2b",
                    "size": 14065230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a674e5f8b125691030b9b7db3324ce8bfcade9575c11f3e3f340820cdaf88de8",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89eeac9c331767a933a760bb7ed00bad9df0d4ada65d1541a3e4ba93edd862af",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4937b6628654da40e2c6e618886ec45da9353ab6076c0c93dc5a83f782a8739a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f649378f9e7c8c1f2f10dd6e9df1ad4ddb8df26730d2713357a58ea5da4e2532",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:278cf0b5536e4fd596f065afdf1fce5702fceb6910ee6675c479fb5c489435cb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51515e9ffd9f1330e6339a4c1d03bf9ba37836242b45b488dbc14633c2ddee5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2c7df11a752d5f48c9c01fd93bdfdaf05f333849a06e64c26167d468fbee53c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3798fd36de014e4951e10e8f9df21b11fe0774b50c44d0e3c76f80348ff0f651",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cfad893e5a954014e5e86dfe00909a0eeede6aca38bf981ef4844438c0bdec4",
                    "size": 11980866
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfa54daa24caa8e4292736dd163bcaa51f56e4546fa95065889c2dd33ddfd538",
                    "size": 470
                }
            ]
        },
        "buster-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:75b2d0d409c3e0ecc407c15f20a1485a55ae66f823ac80291dabce4cc3fcab07",
                "size": 9042
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c18894bcd34ff7bff587230f1d099e9211a6d6b4afc7f758a075d46ceb2aa2f3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2722e87e738241fe6edbb47fc35bc0188f305a650143fd7e430ee569a11bccc5",
                    "size": 13794157
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee4cadfbf7ccf2c9d614118ecacf4d8b8639e0e8653422ffd49bcfbfae59c250",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a13aefd08d0c16bd7b8dd59a721a93bdedd71e3c53198f28d4f7d0d1339239",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:306bff35bacaf7bee68628b13cb99998a7309af32d611fde5262b1e5e3b07bab",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7526f0b704f343b89a778c12d44f5b54860f8c034059245192d4950c3bc2d6bf",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8cacf8e84071556a082eaab177fb093a47556fb53c212e6b524890744a557c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec32e37f26571eeeac2720cdd0d746ba62d73097eb8cd0e7ff0601157d54b40",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef7c1c763d2df17384b53dbe801ada48c76592ee6ca13174e10e781140d10e4a",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8aa98bca8058b0aa2b5e8da6d2b667a2f1b21cd158ae99d3729620251e096f8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2de092aed069c92c1e64c262ace23e49e0fd5744eb837714be2253c9416d1b6",
                    "size": 11980507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee6e8273e231866be782c22c51201adf98ec5efe1d75f72692993828e067cb79",
                    "size": 470
                }
            ]
        },
        "buster-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:82096e1c0193c38617d6bc3c169ef74dda17c6b4f62b77e64b900240620d84fa",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5997a4cfe6863c5d22dd1d9b02ee2a04eae3d7f6954eee4e20fda033ff39a4c1",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89aa9b7da62b952da26628118c56c4dc37373b1507eda7102e2b86a0993c3019",
                    "size": 13794152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:607cafd7da964a82e3403f348ca340a23e0f4ac665d6043de44cb3e6587de6e6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea779a3aecef3bceb1c245f0cdc518c26c873a2850cb78f22fd66bb799e0fbd6",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61f579c82742ac9fdf8009f47ae9a39505dbec141cfeaa3ac57fc77661f9ab97",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8649c2524803dda983ec651a691e723e1c26ea95459e9f453463a4649260c444",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0463be53c2ae909d41e6271906308ab5140d61805af669404f1ef8e987de60c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e29dad497bb39618b6835f3a81ecc807b3c09a3c6a554ebc317bac841a0f9fab",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cee4fc301dd85b6d61ed712b7c273823f1d6948621eed4366ce3dbae3aa2960a",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14992db9856b7c857ca2220a82193be012e95ff84f8e68f550bbf9e472862ed0",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12680bc512928804d9a4cde3e2504110155b70af1a4b3ea029dcc77464f6ad9c",
                    "size": 11980661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a728846f0bd2d8db109b0f096018ef76969cdf8f671161ab842f706b30c07b6",
                    "size": 468
                }
            ]
        },
        "buster-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e8c49c524c3f08090d52d5f721751c75f9c4beb9a0c125798b03a94168c693e3",
                "size": 9041
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d5ce0d45748c9b1a7bdc6c2749844ad24b52f3eb919532c6fe91599acd54b61",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5c3615ccb0b8b5b27e6cedeed57f9f10898582b6baa9ec5381b5c092fc3f93",
                    "size": 13794122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3dc64da1b864fc6612c13781726e1f98b1e2f34427a8da73fb5da8d5479b473",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a727ba8fc6e3f7e3259dae384d22e92f175eca6f823b9144b9a2c1984c93d71",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:650abebc1e76bee2682d427f43e01589ecf4eebf66fa2c4a04c1e15bfcaffbd7",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a9855afb314055e9356209d86df92d53e32550bf864860fcd158bdba2e98ee5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:582efc322c3e6c29072658047fef56e496a72cd64c5c0aee21db5326d1d3129d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bc7a6cc6ba4855364b8d6a632a54828062ed6013b4d7099347c7bbbd5a2192",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:179b4d1928befc385e0f5f425a944201effb120331db4c1684d59448e405d991",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34d7f8ed3bf23018a6935270cb5f86aa3f97c582cf9da6f20fdca9408aa55ca9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c4725e90613d8e3e9d226845db02c7ceea72ebd800ea6ec87d7077dd4415916",
                    "size": 11980414
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2c3cbca11e0dc452192700c5d89a7558fb8e622cb606bf07c47cef2104d841a",
                    "size": 467
                }
            ]
        },
        "buster-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8aaa7b24461792224d278c3de9db43073aa5564ff3e10dae73e5e37072b98282",
                "size": 9046
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f25b824ac93ee8303d466b0a41f29c1998df50a336e0316f031a1f9795e23ab7",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f5f3b5e509ece2ffe0575c5941bfe55617abf916c0899aaaccf72cd464480f1",
                    "size": 11980680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c87b91a3004ca3344932654b53da9cd8daac467ad5bd7b9acf9a2f21bd40999",
                    "size": 469
                }
            ]
        },
        "buster-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f4d2fd002faf4e93bb605cc9968c10fc02938de656c8fbd3c9d7bbb27d7434b4",
                "size": 9039
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3408cf0654b3237e979a6f98bd2c1293fa533c0e3284426abfc5c37ea65aa18a",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc8a85340147c980d1d12ed45dd25196bb6d91b8772a7f634d87105497713eff",
                    "size": 13787386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbedab5dbdfe90ff516594719861f8b7d778273a4f51c0fc58fdc0637e04f745",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f1da5a75eea7746f7564decfec8c1780d0ba5d49bc3af68c979fbb6be8a235b",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88e86113901b173ce46d3437be0827a9f0f5538eb7ea9accd5539ebe5dcdf017",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c83c281a7aad5abee2d68ef46d8bb48b71b0fc1a5e24e12354a4eedbcc89881",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9171c0dba9f720dff8f7560cfbf33056df356883558264c7ccc5337c7044e113",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b4d697de5ee1d679d59dbac6ec3efdd8c04bcb996b92cd3f5e9382365dbcf06",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:194088ddc4656d2af60a599cafabd7825bc242897aee87038c7e9fdeaea93e45",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b643208e5c32ec75d7683a4588f8bd083c7eae1926daded3ee562a9b2a3674f6",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e632fcbf8006d6d0c314f64929dc3763006df1336d0026f08a5aff2a1dc17739",
                    "size": 11980745
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5aeecfe4240ae3e644c64e0360038c4c5d8f7f9b9b83a56595d16d8493e508e4",
                    "size": 469
                }
            ]
        },
        "buster-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0ccde2fdf03102fa179a6c0d58749c93430120fee2331a1cc5cc2717566c07fe",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc2593b81e6002b446e57d403e4313dfde7b1864343454b05828f75ac5e58570",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd66c164fad1a100844f09ac316c9b58d0c0429ee69b6101aa3b8e5702f78a7",
                    "size": 13787299
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ef740b19e8d1d0a22329b303a60f75adef9a93447c117a675dd91484b635e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5458f2dfeb4bd25eb72b87347acccbed8d946dff2e81f89980c7d8aca599a8d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc380240689ae213391343329edccadbdf83e6b9806166531d01dd1e0b25c9ef",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d84784c737442573131b8013985380c0be522e8cbe636aafe7e3503bf78f54d2",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54a3bc9876f925bb6cccb1bc8065730d39491f57de8dd07d0f74646af9c31cd2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2bac34ff1ad1fa4e4142bb273e1e49066afad7c637b47ee2f92c820cc6cc54",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88dd3ca849a28b1be975e39196aebefb6b7a5130f164805ad99b4c295970608c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f4a7b86c2bfee69680824c082b7bee39fd82b812f346a9107315e54ad03c2c9",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57a65dbabb361521b06ea4aa9c3335db68af462b9baf1b7c3921a134167a7953",
                    "size": 11980699
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0f52b750f1ec1cf7eb523716d9917cd1e58c11f4e7998e53cb221c69bcff280",
                    "size": 469
                }
            ]
        },
        "buster-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b693b0c1806aa30edc7461aa7e1efd461b68c1d337b070e8f696262caa767c36",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85a59048b7cb66113b0f480f58b21f5d0fa8f5908909f090bc738b798e598c5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e9d9f709bc526d8baead724514e3b5cd7f1e09a2c90db9921ec63becea49e50",
                    "size": 13787329
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7be450c33d23e41a869346c998e02aff90cbfe4abaff69368a2451eaabda21e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbc7b87b6f47438d9b1332daaf933dc60c63690ffae1e739d51410a8121213d2",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e38cb2313a8eeb0fba081fa80ef2948e1b8d339b1506b66d73ff061b434123e9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5459bd8d4bc1fac5b1c18b332f5444657aab6de5a7504b70b0b629714a47c7f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a26352b57f444f2a5ef4522f64eb0da35869249d23bfc4fc4dc8a726954dd11b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b693524238e40e6bb351e67ddd6f413edd74d4dbe5ccb26e9ed8ca464b7b998",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f16db6e1fe504eef9d3ced46c271598dde07812625ba8533d109fc35a23c9488",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:372e6d41688f640b759c62c1db2d466c073babc861f30833ab3b3fc6d6f12d6e",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed57e42ab2c95e7424e959b41b131483d570b6f1d6b501c4f973f255a450083c",
                    "size": 11980736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:957980a0b670c6a2e61422522a7f27ae1403bad958c630c2d694a5e81a3af42a",
                    "size": 472
                }
            ]
        },
        "buster-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:996ebae5445e7c7e3776d16d86b24a86ed01543bc5d2c063da1184eb17bd20a6",
                "size": 9023
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76c0c721f5260280c88130a75b94b5e0f6270a3b339701621f97e14b30aca983",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5409131516c7e4003811eb609650f2bc519f5e5990bdf94e8cacd171aa6f2db",
                    "size": 13787420
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4d6d887c52c0bf00dda419045f8df10efc63313d30f32734fdafa9c612cd304",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:898e9c6bd0a197d56887b5989b9fd1a4be63708f5c7419033b1dd502a45eb3df",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f011ad87a34c177466fe95434b492422a7ee10c6f58f6d53f38e0bd82c4a9b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:321eff095c69a9e69a638fe51770656cd4303a2d519b6b3e66788fd51672b5b7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec28374d0328a01cea7e09a456a118a4a8573927e31f0129ec6bc5117eaab20",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c2c4ed3c0748136c2e67d89449db5ea6b1453f0cc4e78ecdffa9267f1497d9c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046e6edc01bf85b207d8ce299dbfe9b3069ecd7adedd15ebb361591b5e6657bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5985d53566ec7b1d86c7235c1cdebf93a8c2b0e7f941eff56523803a24721208",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c49afb578003aa74645c1faaafd5c5f3537271aa2f9e49dfdd8e563f8b6dda44",
                    "size": 11980720
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:258536f1971a835750fb934fd1e0c6e70073789f889a7430ac479ee647578274",
                    "size": 468
                }
            ]
        },
        "buster-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7cd525354ead091cf01d6c94befd89d0c026f795e6777d07c51e455f1f8e736f",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:acda4a22fc71158a832559f26c4a313724dcf9f413ca92086b8799e6197faffb",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6efbeaf1c16c65655678f37df0243845b30056715a5c67e59a6a9101ba607e83",
                    "size": 11980448
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed0da8af41192f1bc39b81a547dc15de06626cb7dc78a2597868c472db3f23d1",
                    "size": 467
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "latest-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20208bb1e28465f9cecd1368be5df49f9d4533b8f3a86d7f9fa52277a5728248",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e9e01669ea83cbf9e82f86f54b71e8c35ec63e57ccd60c59dda9291b48588d",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bda5d49a6f4cecd51e1564371636b646cef710b5d1ef04305a5b460545727d3f",
                    "size": 12068209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a4ccf0a07e05d0c3d6a9b7723507c9b60fb127b0bb7173b91211163cb99877",
                    "size": 471
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6fa73473734a17c1b74876760c017e0a8a13cfd457b7631ec066532dfb3f041",
                "size": 9050
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1af6e33c8c1a0240de24e317081c4e6261418a91607a51a83d47be5d58074d34",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c16f53f6469b65da623b343f4e5435c5a51b66127dc1fadd6b3c5ba20591401",
                    "size": 12068411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c615e5658f61680043afeed3ebf6fe8f9c4eb696bd4372a2b310a0ece1fdfe8",
                    "size": 468
                }
            ]
        },
        "latest-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f0561e3a9dff1bbca913a688af93028814cf485ab0260784056bab05c508f370",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3018b4d5d2cd8afb7677abfc2b0efc2e5cee1e2d57bd29553825b2de7dec197",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e700f5a83759270ca808b17a33a6bbcf5857e9250dcb1df0fe17a8f639bb350a",
                    "size": 12068180
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69a10f679b36ae0307dfe5c7a055b697d7d0237f6367ad5827fcff6514eabb4a",
                    "size": 469
                }
            ]
        },
        "latest-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c997978c2ddfebf46f731a083e5710154a1a8a87fdfdb6142e92737567110bdd",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e1e5396d58fa0090dac5db1cb6915b702264b4449002aad30449284b9621e4",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d8f7494576dd4abd31b0c765705a7150fed4b5b53eadb55f59e5997e21f98c",
                    "size": 12068241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76174cd2d6bdbc395bb572d84057585565fb0615adfff8215c0440a8194ae8",
                    "size": 470
                }
            ]
        },
        "latest-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5edc2f786cf9859acc85755124f358d0368fbeb1f3868b33739d249ab6828686",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1b7d714b72bd7a6a93db0ef25112190d83fbcac67708db58c14f42006a0488",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f201243acc8e57b40ec2d1afb03b181eb5912450e9e453d1548e59467548ac",
                    "size": 12068149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:854236a2e70593288b10311bc6669575b15783b8b79be6c46905f1e73bb4e114",
                    "size": 470
                }
            ]
        },
        "latest-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2147eb799cfb1114feff7d6873b29592efd95a8f615f973afb78ef6a3822d057",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0ce38574e2ca7434d7c25cebdee71122316e3535cce07dad36fdf4ddf431ac8",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a51baffc0f2d2597114e02775e2ec620bd259475bb16a2472eb22541e72e9ce9",
                    "size": 12068269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b22a524ccf5a2180a99ec4904f079ca7488a9fe5a3a5898c4d0f0fdb1c0e828",
                    "size": 471
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5eac1f6213474ac7e692c459254a55101b99318fcf23c7655266aef24030291c",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91cc30b28814943d567bd1899342813bdde34b5b4c1c1e6b27110ff035a1b723",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccab5f6b03393f667f61e2d79937a71a336345fd379d9101e5557f4d765a55",
                    "size": 12066154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a341de42f8584e1526ef6e6f83035e8366ef7fce58f4fed7a899d89c5383acdb",
                    "size": 470
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e704d3d944f27d8b297a7571faadf2a8681e33ab981bab4e908d5803a19c460",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c074a98ebd9cadb901e8a1258201bea49bf3cb1aa279417a4b21e8c121245db9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b6e1091917f0216eb3c10842758007e54c6c9fa4944db2b29a88a0b414b49cd",
                    "size": 12065981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dd4d18771a002bae58323607d50df84cb0b2cc14a2c2152892b99268a43a84b",
                    "size": 471
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04c8bec1240015ba47d35bec998bbb2b0f569fa29e3df565099cf6555ed82dbe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511af9f68b0051068d160c297d51c7aa158c03e227327a3848ca9de3b282706c",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6943402209277b691dd96ae22b2440e5ff4bf901fc8168beaeb0f56f954a4a",
                    "size": 12066217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef32cdd0312482c46c204ef8c2f1ad8cbfc65e2666e5ba7b923a5eddcd28c337",
                    "size": 471
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28880571fe6516ed82157de59af1c6118c725841117aa8fe0093434188d7448",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bef8f8fbec0ee0034b0d1d308590c29d005f790783f1683a341f50a056d43b8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f1c461784ac8c8a757e5fdb5fec89e4cba4e135285de3b6ee9cf452d8fd6a8",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc85fabeb889392668ba5194eee89fb7205d0def98591f962353e3be24559a6",
                    "size": 471
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7118fc4816a00d400f00e773d9b7335212933720fe0eaf8a0b936f51cb699bb7",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3859050a999c844202537aaf261fa2013e70d65d9aaeea9b27988d76b74b09f8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376d760180a37131dae4c3af65dfd05b30cceeca01be2c7b7f2aa3c30f54db38",
                    "size": 1157657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41534d09e2335ef0b03487295cd03d74b68f711e68ab8b7598f2d7b526ad6a88",
                    "size": 470
                }
            ]
        },
        "latest-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d49d8053001ead7ed639551bf69f67af75ae4590b039ee9365819e25bd4107fd",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a375dddab470a2b283c99e80e85649bad31584427ec9a4b3e51c6451312720",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449d32c9e52b27aa72b2f52a24a1efb47133b820af075f40f191cd8e10a3e336",
                    "size": 12977481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2baa28e7426d319563465be4c2b0847aa8d2286b2aabf4159075b2c16900665f",
                    "size": 198242553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c8885ec7888248d72f5e4ed640ee91ee931fa3844f2e32257512303c4f77e3",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:758ba1e197e99d9501f27f0d401bb2e3d57b12ce4a350e0830eb6f7f42b1fefe",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb0eb8a31195747cbcc985084c6b63b8eb607a42ccbd5bfbaf699c82963c24c1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:434734840112a44e60d24378b399e4e18128267f9c07f7c424941caee1e45633",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:973ec5288608f45fbc92e7dae14c3935d7d2a845d04620442c3e42342ea6d04e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5c9d449e62b4584fdc1e18a7031a4e1dc0f3e2178c78da050929d87d8176ad3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca6435991ce34103ce2a47bf803e0c2e0760ac418d37d30d3c84a2a83d939d3d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ae47116b713a18f07be900fcd25dfdc675ca3ab3fd884ba4bf3ca9cb78f3a22",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2aeb1dbb046aec88b3c309bd5472e8e7e3ed9bf00d6f0795d9fb26dd1e84236",
                    "size": 1153834
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccc9cd33f61f1fcd895a052e974bc01f7fdf8758e9e7214e1d9bbcf28ac65ec2",
                    "size": 471
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:230fe25c4ece990ac4805edb07921ddd2a7594c216960fdb7f115d2ecb2ee023",
                "size": 10014
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b33149dcc273345736a83f631f8e2de7d9a551d977f274ec8112d80767d02d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae956e5b517d8c58bd3519db6b8781cb386ffe87e78b3cd012e526d8072ef31c",
                    "size": 12977423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8a816a717a21f068fcfa0207d660635a640d27b3b74ab51f20d7faca6a6fde",
                    "size": 198243441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:913274a0c0a02e2c567e257d40d1379235cc5821c08a685704a52c7dbbca914a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0224ffebb6a46b2a2c5199ab8b199efb78048eeb36a1ee5e9a3a95e79b03c7",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44abde36326ac7bb957c906351a71980883f91abf668835904c8d2acee13ae6a",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7d06cb4842538058c0dc848a8894e827ef3dd6932e7ea63683d1ead19007e85",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c30f20aac049c3edff56c046ff9e0790f627f8dcfec2fe8affa90642c4a810de",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935a0f62d1cf7c931f4454c1784f7ea3241c0d4e549d1b8de4dd00eff34c31f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eaca4aa781d5af8a64f1137130d7eb69a1250b6172add8205cdcfc598d17fc1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd2507d15e2541e1abb30b5c3dfcc5a07abd082ac9b0f10d47e5a04d5565f94d",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e11034fd2cffa31d4e30304e3c3191e31780972c54941bc2a86b2896f22ae9a",
                    "size": 1153862
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc736b095a2789e6f5dd1a0405191b2acbae2f2cd5c4f9c73352703b80554521",
                    "size": 470
                }
            ]
        },
        "latest-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:39971482b8aac3b87a47891f4667aed61d1b95e258088d10d017b2828af474a7",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2cf320e7eab57ab8e4918af133a88fdfd6898ff89531cb22d7ea938676c0ba7",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5389bdd24bf65b5c2066451967db2d7cd09cefc838631b7b74da30132ddd6e6",
                    "size": 198247608
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c134f0570364397dd703b12e89007b55e7c19c7524b3e3a4f1d916dbebd0aa10",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10bfa8b75bfb934917da80f01cd0be8269133bfa6af8ebe617c2c44a3669acfb",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:341b53b10ed2dd5ccca3974c41a73afa9798c70b118bf978b54ba6e5e067ca6a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbe31f685f1476284a13cd445d483e31c63844244db393ff69745c76a4b956f6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea8150c216ae439a8f06b9f1d6c195baba9d9686a11bda4e1729f280460f5",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028422a551c7104b5f0b143aa478c6e5d146533d93c1dead6e8d79efa9f97217",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2c062bce3a1a52c6a866e310bdf328acec7c0ca4f0d3f79c595e82d88c13eb6",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22a08a724bf52ca4fd2df7debd99273b8e645fbeb18293148b1aff6277cc7688",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:209bbbbf25b6e327264596e5970e9c1fecd4a898e2204bb8b54a80f9d2647992",
                    "size": 1153875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3dfac448c200791c8b8109aadfd29b80d76338aa80902c0800be0c2af4bbf4b",
                    "size": 469
                }
            ]
        },
        "latest-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:375b2a1fe4920e4a8c1a920567051c5c76c1e47fb31e535413b3ae10e342c442",
                "size": 10026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680ba1f3235a9d8c571179d2b4a34a2093ecd6d6eb0ccd48f3d4c79bd460d33c",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b5fe31d070602b084490e298b58f47c059826a05048f721d13a3883f5245bc",
                    "size": 12976816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd412f8fac3867866cdab9c85df150f5f1f81edc833646115f2a229d60368e9",
                    "size": 198248704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a15c086c4541f3fc849f0b885720624d014d998cf43bc983432d9acd3219607a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:965d251b89ec3750ea3b1bf3588f59f4b9b1097d6b6df85f4052147d39f1bd0f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f363d61ae45e4a13ba7331124b73ab793d5f09559c511797e1ac3bd247e262ea",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371138ba663299ae743c170ce32994e2499b11d3d0b6b9565ad4ef7d10fdbb6c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb52e8236270316c95fdf5be1cd4689fc3b577e262599eb983f0fb25c79d63a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e01009a60bfa66916967a536a8469ce2e78fb74c6d76d11a8e899e31fcacc9f6",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9503def2f9871285ad40d27c697d5f7fa0650b692d0d359616df8c0d9495a08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3d1f082c7286e23abae66c7476829cdbac37ce5aff25aa65f4c6743ff8a4f9d",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8c9fc88aff62ffcd15cef3a5128133ed00904870e7d24ca0c73a88d4913f472",
                    "size": 1153832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fedb94888cae1fbba412c0092fd09846d88cbf774b95fc8c0348a2cfe17f7a6c",
                    "size": 471
                }
            ]
        },
        "latest-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a9b14c4139bd237cfa445170ec1a9039ee1dc4d382d45feb847c0725ae8086e4",
                "size": 10027
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e2203ac993142853b9ffc31e205ebd9bc0edc708cf664fffefe5b1d1d7d32e",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccaa466346cb8478da79f73725065d8238a66c7137327093d83bc839ac40f3",
                    "size": 198247212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0752dfa164d11ba28771aa6633236b262008fa3015b5b2bf8b700e625d0b640",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdcefe505f624eb2a9d6b0bf1da0e0c77f3c486c23f96a9f4b6f86fe6534687",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74ae1aa34faca98ebdaa34a726f859372777e03cee8b5c3a755e1e95b9e3d4c",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8084e5e8d8b5f574ded52ec9377c6d83b6efb58ae1a3476d3504e937ba20451",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34499303306f69fbef2cb2e91266188bf1e4ebbdb0cdcdf349a45eb1ef739cad",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1124e94d2ecfc0e4393a596af6a31106140c6064eb182da578be3bf4d3fed92",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f11299395e09774e46f86b8ee8054bc2389bf046d21b01e0a121cb5dd46a9a60",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52e0a6cec3ddc6165f52f664c4368d444d8d22873dc76afaaef1363fe7c68cd2",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa564af7af6c7a5deeebd0772ae0a16d66fd13631c1e22ef19dc0f33a83a18f4",
                    "size": 1153907
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb21ca32a495651c28af6a882e3282bb9cb14fd6155cdfd65b1ee336c6cc518b",
                    "size": 471
                }
            ]
        },
        "latest-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d9fffbf5c47a3749766cd75dba14f82147ef86a55fad2be4c766db3d1b139a07",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39420b5229d57deb412e2fdfcee637a6052f1978a16a310e5860e02827c776af",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1509677b2897b23daee406814e47c588e94b656405bca8170d39ee5e4e7245d3",
                    "size": 1153859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7335d936749b011bd49e469b14f69acbd0c065683844d1151c20ac4efcf1fa4d",
                    "size": 470
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0d7a76f2d23ae9b4f6f0ca63d9bccdec38d29b92252173fba9aa3ae863130de3",
                "size": 10025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd7411f510aa59b813e09859d61b504aa1eb5702abef13a90b192469eda3094c",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:774c5cb8ac43c6395ac194ff1d69670ee1d5dd77dafd4290c51a801c621ef660",
                    "size": 1153865
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:823a2ac1f02ebe1a82ab5935a4df7ed66682f6576ff9a87f0815c61a1a70f711",
                    "size": 470
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:88a1f4d7bd71dc0079c641d3d53712b284340af7b035d2885d230019aa767650",
                "size": 10016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16dbc03b1fa4b4234997893bd600f1cd231ea9600e6b38c91f68696b6d29fc98",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:567f0eec17bda81b8b96d3c30655ab13dc0fe8befaaa6310bf03efb2ce71d1d8",
                    "size": 1153979
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eef1f4d00e9235945174c6d784dcb64dce88d0ae29f755919fd2a37d1f3ab6ca",
                    "size": 471
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3ff2a09ee7b3e899951280bec98286722a80d023b24b8c6d2ea4b0dce75877ee",
                "size": 10011
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36286cce0dfa530b0424751b53a06c5fdd2a0a5a0667141240ce81bde537dcd5",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1d7131814bd855be821b82ac0da69c845dfa1d2ab928e336ceee1acacb4585c",
                    "size": 1154222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1823a283117376a124f0bc5eb2ddb5a94b99c09af991fa695972161ff129535",
                    "size": 472
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d4c19c9243e6c93cbf96d8709efc712c164adcafa9ae64a1c42fe7903a4e851",
                "size": 10005
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff142258b68193ddb71c9a4a3811c28e8f1fd72d84b540a2111e4c49ab14276",
                    "size": 4351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:344a03f087ab3cc4af9a7be224c83814085142367e437ed5e8739234d3cdf12d",
                    "size": 1154223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86b4ad14fc6cc8f56606895fd3e10e859e6232243e2190186edf1190c701a11d",
                    "size": 471
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7118fc4816a00d400f00e773d9b7335212933720fe0eaf8a0b936f51cb699bb7",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3859050a999c844202537aaf261fa2013e70d65d9aaeea9b27988d76b74b09f8",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376d760180a37131dae4c3af65dfd05b30cceeca01be2c7b7f2aa3c30f54db38",
                    "size": 1157657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41534d09e2335ef0b03487295cd03d74b68f711e68ab8b7598f2d7b526ad6a88",
                    "size": 470
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "latest-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20208bb1e28465f9cecd1368be5df49f9d4533b8f3a86d7f9fa52277a5728248",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e9e01669ea83cbf9e82f86f54b71e8c35ec63e57ccd60c59dda9291b48588d",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bda5d49a6f4cecd51e1564371636b646cef710b5d1ef04305a5b460545727d3f",
                    "size": 12068209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a4ccf0a07e05d0c3d6a9b7723507c9b60fb127b0bb7173b91211163cb99877",
                    "size": 471
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6fa73473734a17c1b74876760c017e0a8a13cfd457b7631ec066532dfb3f041",
                "size": 9050
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1af6e33c8c1a0240de24e317081c4e6261418a91607a51a83d47be5d58074d34",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c16f53f6469b65da623b343f4e5435c5a51b66127dc1fadd6b3c5ba20591401",
                    "size": 12068411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c615e5658f61680043afeed3ebf6fe8f9c4eb696bd4372a2b310a0ece1fdfe8",
                    "size": 468
                }
            ]
        },
        "latest-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f0561e3a9dff1bbca913a688af93028814cf485ab0260784056bab05c508f370",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3018b4d5d2cd8afb7677abfc2b0efc2e5cee1e2d57bd29553825b2de7dec197",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e700f5a83759270ca808b17a33a6bbcf5857e9250dcb1df0fe17a8f639bb350a",
                    "size": 12068180
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69a10f679b36ae0307dfe5c7a055b697d7d0237f6367ad5827fcff6514eabb4a",
                    "size": 469
                }
            ]
        },
        "latest-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c997978c2ddfebf46f731a083e5710154a1a8a87fdfdb6142e92737567110bdd",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e1e5396d58fa0090dac5db1cb6915b702264b4449002aad30449284b9621e4",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d8f7494576dd4abd31b0c765705a7150fed4b5b53eadb55f59e5997e21f98c",
                    "size": 12068241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76174cd2d6bdbc395bb572d84057585565fb0615adfff8215c0440a8194ae8",
                    "size": 470
                }
            ]
        },
        "latest-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5edc2f786cf9859acc85755124f358d0368fbeb1f3868b33739d249ab6828686",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1b7d714b72bd7a6a93db0ef25112190d83fbcac67708db58c14f42006a0488",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f201243acc8e57b40ec2d1afb03b181eb5912450e9e453d1548e59467548ac",
                    "size": 12068149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:854236a2e70593288b10311bc6669575b15783b8b79be6c46905f1e73bb4e114",
                    "size": 470
                }
            ]
        },
        "latest-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2147eb799cfb1114feff7d6873b29592efd95a8f615f973afb78ef6a3822d057",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0ce38574e2ca7434d7c25cebdee71122316e3535cce07dad36fdf4ddf431ac8",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a51baffc0f2d2597114e02775e2ec620bd259475bb16a2472eb22541e72e9ce9",
                    "size": 12068269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b22a524ccf5a2180a99ec4904f079ca7488a9fe5a3a5898c4d0f0fdb1c0e828",
                    "size": 471
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5eac1f6213474ac7e692c459254a55101b99318fcf23c7655266aef24030291c",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91cc30b28814943d567bd1899342813bdde34b5b4c1c1e6b27110ff035a1b723",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccab5f6b03393f667f61e2d79937a71a336345fd379d9101e5557f4d765a55",
                    "size": 12066154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a341de42f8584e1526ef6e6f83035e8366ef7fce58f4fed7a899d89c5383acdb",
                    "size": 470
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e704d3d944f27d8b297a7571faadf2a8681e33ab981bab4e908d5803a19c460",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c074a98ebd9cadb901e8a1258201bea49bf3cb1aa279417a4b21e8c121245db9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b6e1091917f0216eb3c10842758007e54c6c9fa4944db2b29a88a0b414b49cd",
                    "size": 12065981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dd4d18771a002bae58323607d50df84cb0b2cc14a2c2152892b99268a43a84b",
                    "size": 471
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04c8bec1240015ba47d35bec998bbb2b0f569fa29e3df565099cf6555ed82dbe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511af9f68b0051068d160c297d51c7aa158c03e227327a3848ca9de3b282706c",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6943402209277b691dd96ae22b2440e5ff4bf901fc8168beaeb0f56f954a4a",
                    "size": 12066217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef32cdd0312482c46c204ef8c2f1ad8cbfc65e2666e5ba7b923a5eddcd28c337",
                    "size": 471
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28880571fe6516ed82157de59af1c6118c725841117aa8fe0093434188d7448",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bef8f8fbec0ee0034b0d1d308590c29d005f790783f1683a341f50a056d43b8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f1c461784ac8c8a757e5fdb5fec89e4cba4e135285de3b6ee9cf452d8fd6a8",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc85fabeb889392668ba5194eee89fb7205d0def98591f962353e3be24559a6",
                    "size": 471
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:20208bb1e28465f9cecd1368be5df49f9d4533b8f3a86d7f9fa52277a5728248",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e9e01669ea83cbf9e82f86f54b71e8c35ec63e57ccd60c59dda9291b48588d",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bda5d49a6f4cecd51e1564371636b646cef710b5d1ef04305a5b460545727d3f",
                    "size": 12068209
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a4ccf0a07e05d0c3d6a9b7723507c9b60fb127b0bb7173b91211163cb99877",
                    "size": 471
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6fa73473734a17c1b74876760c017e0a8a13cfd457b7631ec066532dfb3f041",
                "size": 9050
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1af6e33c8c1a0240de24e317081c4e6261418a91607a51a83d47be5d58074d34",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c16f53f6469b65da623b343f4e5435c5a51b66127dc1fadd6b3c5ba20591401",
                    "size": 12068411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c615e5658f61680043afeed3ebf6fe8f9c4eb696bd4372a2b310a0ece1fdfe8",
                    "size": 468
                }
            ]
        },
        "run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f0561e3a9dff1bbca913a688af93028814cf485ab0260784056bab05c508f370",
                "size": 9053
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3018b4d5d2cd8afb7677abfc2b0efc2e5cee1e2d57bd29553825b2de7dec197",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e700f5a83759270ca808b17a33a6bbcf5857e9250dcb1df0fe17a8f639bb350a",
                    "size": 12068180
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69a10f679b36ae0307dfe5c7a055b697d7d0237f6367ad5827fcff6514eabb4a",
                    "size": 469
                }
            ]
        },
        "run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c997978c2ddfebf46f731a083e5710154a1a8a87fdfdb6142e92737567110bdd",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e1e5396d58fa0090dac5db1cb6915b702264b4449002aad30449284b9621e4",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52d8f7494576dd4abd31b0c765705a7150fed4b5b53eadb55f59e5997e21f98c",
                    "size": 12068241
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff76174cd2d6bdbc395bb572d84057585565fb0615adfff8215c0440a8194ae8",
                    "size": 470
                }
            ]
        },
        "run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5edc2f786cf9859acc85755124f358d0368fbeb1f3868b33739d249ab6828686",
                "size": 9048
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd1b7d714b72bd7a6a93db0ef25112190d83fbcac67708db58c14f42006a0488",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f201243acc8e57b40ec2d1afb03b181eb5912450e9e453d1548e59467548ac",
                    "size": 12068149
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:854236a2e70593288b10311bc6669575b15783b8b79be6c46905f1e73bb4e114",
                    "size": 470
                }
            ]
        },
        "run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2147eb799cfb1114feff7d6873b29592efd95a8f615f973afb78ef6a3822d057",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0ce38574e2ca7434d7c25cebdee71122316e3535cce07dad36fdf4ddf431ac8",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a51baffc0f2d2597114e02775e2ec620bd259475bb16a2472eb22541e72e9ce9",
                    "size": 12068269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b22a524ccf5a2180a99ec4904f079ca7488a9fe5a3a5898c4d0f0fdb1c0e828",
                    "size": 471
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5eac1f6213474ac7e692c459254a55101b99318fcf23c7655266aef24030291c",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91cc30b28814943d567bd1899342813bdde34b5b4c1c1e6b27110ff035a1b723",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccab5f6b03393f667f61e2d79937a71a336345fd379d9101e5557f4d765a55",
                    "size": 12066154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a341de42f8584e1526ef6e6f83035e8366ef7fce58f4fed7a899d89c5383acdb",
                    "size": 470
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e704d3d944f27d8b297a7571faadf2a8681e33ab981bab4e908d5803a19c460",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c074a98ebd9cadb901e8a1258201bea49bf3cb1aa279417a4b21e8c121245db9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b6e1091917f0216eb3c10842758007e54c6c9fa4944db2b29a88a0b414b49cd",
                    "size": 12065981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dd4d18771a002bae58323607d50df84cb0b2cc14a2c2152892b99268a43a84b",
                    "size": 471
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:04c8bec1240015ba47d35bec998bbb2b0f569fa29e3df565099cf6555ed82dbe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:511af9f68b0051068d160c297d51c7aa158c03e227327a3848ca9de3b282706c",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da6943402209277b691dd96ae22b2440e5ff4bf901fc8168beaeb0f56f954a4a",
                    "size": 12066217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef32cdd0312482c46c204ef8c2f1ad8cbfc65e2666e5ba7b923a5eddcd28c337",
                    "size": 471
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e28880571fe6516ed82157de59af1c6118c725841117aa8fe0093434188d7448",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6bef8f8fbec0ee0034b0d1d308590c29d005f790783f1683a341f50a056d43b8",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3f1c461784ac8c8a757e5fdb5fec89e4cba4e135285de3b6ee9cf452d8fd6a8",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cc85fabeb889392668ba5194eee89fb7205d0def98591f962353e3be24559a6",
                    "size": 471
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:27da64529dac33eb83531c3b8df18a56d18ce87dc58c3d9c2fddc2537bdf0cfe",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b716c124bdd60f2d9f290c1ac4755737bca8ca45f09b350914ae4084c6d30a45",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4bced1d1eb807793622917060ee71074f5bbab6aa3b19f9bf39202191877d79",
                    "size": 12063852
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce8564c12786512e7f8728271060a6e0081174a55cf36e5adb4530d18ec0a427",
                    "size": 469
                }
            ]
        },
        "sid": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c584b34976889d45298ec37fc8b4f76c02a376feb6c1b7c3c0885c9180440b54",
                "size": 9020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:801baf0143b15e3c9fe370effb05de0c26410cf1552d5bfbb2099cd336e6caf1",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46ca1b9aada3451e1578c415e392513feceb48587ff9f353d05e915b88fdf849",
                    "size": 21313127
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214eebe5729c2bf931c972452a9b70b5c03bbb17eccfd963f92f455d22ea2b5",
                    "size": 466
                }
            ]
        },
        "sid-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:405f834780b549d83f1285776e056335932427bb0f3c8093b5640c8911aa7da9",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6c86114e68c3b79e38d7fbafa759ce38eb94f95ce9b40183f13dbb83d406cf",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19a77c4c450138b8577ca4303f6d76a0bb349a129e5041fdae3dd222dc89ec8c",
                    "size": 24819611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76a355f4a7572e85c1a5f9190d12cfbd74f4ef835d9de1dfd14e57ccb58ef160",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f970bc0ed52fbc6189842854e032ea5ff9df948d16b64d6e47ad206210901585",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e3af794ece70e4f258f37e15363783eeb8bd1ecb348aeb39061c7f38379981",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efde464b5d156ab75b25fa8ade19e17b5224602cf8f0dbbee714456fae0b6859",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c963a8787e0754ddff4e7e71a4ed18a0a7b2581f4c50afbbfe765e08edc6cdc2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:782759738f4c9360ea868af0ef5423dab98e12e56c33772121fff04dc9d95be8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c41107d24d17bcf75aa69c245ffdb49ba992a53a031fda4dc2c0b357e1065f58",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1cd3d0465feca3c5697e9979323e05a85974fae63e4494387034cdebd8dacd",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88d09cd68211d093d31bc67fa3b03c4f7290511b94824a5e90fb9bea5dfc93f7",
                    "size": 14725534
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fee0e350f53545329d0af4ea9e32f8a2c38f20cbf029103a7e678772eecfb07f",
                    "size": 467
                }
            ]
        },
        "sid-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:29512f72b57a3ad65c18be6b9bd56cedbef62a4b5ce1de3eaa7e03150462a77a",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba466673c5c9c948c47469bb5bbd41d242110648f7fd0c49a6950a02d7f5e94",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61fb55139ea9bec40f52e8a6fd62041d6c6ebf0cb6e72b0bc81f7481d0232d76",
                    "size": 27978701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e1d0d4f329f4bba76dc764497a20b8869ccee0dda4bda9274f1960a6d78f657",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d8c8f7aa9b94b43e454e89ea300e8274fd3c82d7d394561f3a76e9da4576002",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2b726b7d7ce0e4af67e07bfc87e711f474d36b2a7cb8ab197536f312ac7ec2b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a870b2ecc0463e5e3d118fad21617697f8220cc947ef7374f06c051af969e826",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09fbaf625f19d1fcd8b7e7cb754fd5312efcb49b579d2a39c98874e9f1933af1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d86e2595d11c19b40eeae72eb262b3bf3477211dda6b8e8c931f940924ca7b59",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0f8a6cac19a1be5e706a42126ca29ba1b5cc680a2ccb3b19b3d78a8168b163c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157ad62979f2e96b440a8047527ad7c02b21d51a9c731f7f4831563bccb5bd3f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa8d72e4362d0b6962462204519caf872a16402ac93909ca150805346510d02d",
                    "size": 14726395
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843fc8a79e4d23cd7d05929e2aba515730513b52a37a34738a6084615234d542",
                    "size": 465
                }
            ]
        },
        "sid-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:351f62a9d17fcda67a16aadb22a3a7fb4603fae9ca94f61737691d790b6ef63e",
                "size": 9038
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b486805d58efdf848a75f41a07e7ba807b2706029325bf694b0b6761ca47808a",
                    "size": 24768674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82895744f64ad8af75912d671e0aede779f6da945b39bbd1f28365804f375281",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd4f84ca3ed61792aa0fd3de336cfc38e09c9b770270d286da7e137dbe44b6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99126c990a03708b280954a9d1f1127430f1648aeeb2cbfa998385b444088487",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3b1865866531835f555448ea79b4fbf4e2db4057a8a5967c7b8a7d96caf4553",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:623d2d678acb020a8c6f2f53e8dc78bc46681e51db7da2a89078f3ebc06653cd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b3c7675f8e7d87719508cdc1954251a4185e7c524ece5c9ce0030bfb716e1d",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ca0ea1f998a11a24b843d67ff3dfec4c2d2ae11a8bee8f21637047b6ea9d584",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cde8b8627cd8682ca2d1e9f2d5c063d13a6267277c23bca4163f6350b290e3d",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bc44c8652918e6f1c71e07d8e005fb844c953567e8313c62eaee110657d4e96",
                    "size": 12463392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c7d507984320c55505dcdda3f328f2c85c1fb73760a5642ca4b1c9a6705b00",
                    "size": 467
                }
            ]
        },
        "sid-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f45eff963ce94b323a3158431ed234d5a0fea56ceda89f68a3a2a6991e663820",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b29fa71ed67bb325a7a6cc85a6440a7a0c05ee03ba5e48e031779640f6187eb",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac151d366a196f91b3eb38fd0b7e7d18d6c883ed7b1b1412dfe39f7ca843ddfd",
                    "size": 24768536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc83d2bb1dd85b0da6df0d08427305412c5fda53922671f60b74b95e2ee22245",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fca2f6f978e0645afb78c963b85a7b932b438408967e62782ec1b6f958cd751",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd23ea162c6464dc5b2d0079a02fac71f68cf00be81d201bfeab31a93a81a9",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bff05548f2231efb53fdd60c1b5a9e75b15d95ce684c8b8f23396d9c9b366c",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583e17b12e978ffc94340f16e4ec90ed8690f7edf860952f1495df69561292e1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4468f4d3a6184f73ade84dcb93a8dbc5238e55788447a73e4c907399ed203c3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ecc3cf4152b795fbabd3ded9d27b58f7dd81ecf316ae08eb15ac9f3609aaaf8",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e00aca81106593af22d22deae51c3835ed5286d491f222e6cf200b167fbe57e",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:858344dee258c90223c2f5df1e3f49af57b413bcf1aad92df396b82c4eb29ce8",
                    "size": 12464976
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e27c105019c6b0f9e6de5330603fcda88d42e81dcde4ce0071da2aadeaf2db43",
                    "size": 465
                }
            ]
        },
        "sid-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:863f52a07aa2b6efc9c4ce426909e9da52efef8bda244dccc4f595e520208ba2",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d138aad16a1d72fadf8255725b5213e1d4b7d207cba6d68d8cfb2f97e97dde80",
                    "size": 27950276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19459aec1379fd91cca477ebf5bb5dd7d13261d74cf15b0e805086d03ff2826c",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70cd97912ccaf5613b30a48c837a06f17230101d18324f8c48acf13c13d5fb20",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e803b02a04bcf26b64a0375e151c1860f8ef96e3140b6aee091a0422b29974d2",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d3c68d0683b142bc61793be2eb23d34e09ec306c87b031bfa829c292b562017",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225f30f6f60b7616fc0c2191ea97bf8ad4c3c812452b697f7e233f2a7f95ff90",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96cd0b09b63991b8c012d630d399904b45b932e398205f99b88a411db6806597",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620cadc3e80465d18cf8d7c3706c84e050d565d90cdd56d1c79066d3c869891",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ecb00d4e735cd30b18b7ee5626ea015ea12351b67b50a31accc63e4630ff7056",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fabfba365901e626fd2f830eb140124ac4c231b5d5619a7586d63f61ae3bfa2a",
                    "size": 14700355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ea02a73ad032087c92e4574d510f82c2044935afc695d65a326691ea8ad796",
                    "size": 466
                }
            ]
        },
        "sid-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ef1e82f480b89fe96c1ddd2ae596dfa7be3e97f92f7815ed7867aa9a60387260",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9324a294769989d9425702846a22da5b3839c8e042d5b24ce86ba06a13ab244f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a38278709177dc0650db96cb5daf083664d254c62d55159ac87a498524375cb",
                    "size": 12786813
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3338ef85620616dcd0e439b33cd91bc8d6d7ebf8007aecc24c082eab6d304d92",
                    "size": 466
                }
            ]
        },
        "sid-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:41631df3ab17869d454835776eabfef69b2747cfa105dc0e94d0f3eeedd34cbe",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc77ed921173e0630e7ab45ab6a73133d3fb34d11c36fb327d225532669dab6",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8487993f66d4e19b0267a0b800f697214e6f9c7128dd873605693d38d221411c",
                    "size": 27929468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf376f2efd3380c87c5bed26a3515b2887952e7c510f89b5f42f3781fdc6528d",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46fee49d372d8dd1919f855ce6d1c0b433d2684b9e8b416ac2248ddfaecd7cad",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c263ca0ab0d98ceec572564742461502509a313e4ae6c05c5c38225de3a70ceb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376213124b8071dd80cdeac59566b17c50512691083ffafbeaf4c03bc7ad5c44",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5401d65a09308d5c3568b5df96fbb68024916fb739c544d9a923b121edfbfa",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27f47a786cb34e4b48d75fa567fd49e761a0afeb09fd637dacd907765601163b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5960b9df1a6bfdf6c317dc2c1f7dd4e8ee87e364b9021801bdf9b063271db9b2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca2cbf4a4d2acf0e06e4809db58b29c679bfe8260b18cc2294ac91829ab88b9a",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e2cd9893045d96d9e6adb7320d0b1d154485a4762f5cee9c0a041f6625c50d",
                    "size": 12797302
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccf700ef20a111362c82b3c0beb55403956b3bf496e2b11460302de9cca5d41d",
                    "size": 463
                }
            ]
        },
        "sid-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5cb4d669e7fb4f70a523cfa8335d3f25162d5cc0dbed8c481f2ef02c303c58bb",
                "size": 9036
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fed2ebb8774b84650707f8e99c4e5137c05e35918e120a9259e1210e6f72ca7",
                    "size": 28702762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47836198904efdafbafa8848308674105b90406818ad6490d173184626b0924",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d37a30d71afece4c3257ff3ae87f0f74a3a56c42a90f8b69e1105ef70c5718",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bc0753d504ff27f7533d92ae9bda43939e4ad7f15f7fd871222007848d1013",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf794e1ec756f73a1b16119acc2b7bda4a82ccc2bc5f054493b16c53d115547",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38cceb9adb2494a293857b5270f2bd1390fa3bc9261c9a41ed064e6f51a37959",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e8130e8c509bd4af79178ba802d93cdf525556c911368c2249ffef30bad8fba",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d3d609fdf9eb35fb470bd535c17acbb099bb436a284b406680753529d73272",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1b159005347d070b718e1c24d902d7f93b9aaf108f10479fd21fb44a9ab9a2d",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a1fa3a195a661237878b9ecea4255c3735742ae0173e68c1601a23a1b75f894",
                    "size": 12796827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b930c8d5d8707d3ee24a72f0997e5e7af422ea4c52a04ea3147d4fb10e9af3d3",
                    "size": 466
                }
            ]
        },
        "sid-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b8f831b0226cfa7b0c4afe367498dbfc86cee4702e0dc5b9225fb00911516a58",
                "size": 9020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:606addce47d756f75710c9127014c091a361d7082000d2aa4647a934d0b6a032",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbf59b915ef7e00f3a28eddd01e281b963eb5651eb99fa7186f6610478259459",
                    "size": 22886466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18adb59af4096465955e4848e100f8912fc39827cb555d1dc2e93f76621d2a9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55c8fb96fd0ff56cd40952020adec20474970bf9a58d9fda51b197794aab0aa3",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba23e4e6ee5801f02701ed3302596a405bbf73892b23ac1a9befa6720cc1cd83",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fde0c1acd3c5218963c7bfaec46449db10a039416ead95b5d0644aea74a75a39",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c113dcd6bec16c39b642a91785a49ae109cab57c613a7c89f5bfc78d3e142e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559b238bbbf8b0656f0d98828f621586662a73483ed6e7ae2a3cedbddf8a186",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef95abd3bc018607c606fde7ab299d4a43862a6edab5cfda83b9fe6b8c39de2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f05f99e3a0253dc29d7ef30ff9c7f2ac6ed108ba6863cde21daa8f7cd6d38f9",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4b4f5bea3247c8d9914284634ffb822938883bc92c4bcfccc9e0a28b80bd780",
                    "size": 12801249
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77af4196cc5409d95cb25f966f1a8f0cc200fbf7730f61b004b7e108a2b4f3e1",
                    "size": 468
                }
            ]
        },
        "sid-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7373548d593251d2b09edd02eac3dd1f7024c62095da44b02bd11155bc3b118b",
                "size": 9022
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ead7e6cc20b4dc02f74e6b6e84736275d0244df7863c1df24d49b94112341681",
                    "size": 2592215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5750a166857f965c56bc09c46e7ff5ce450e1eb09d9d089beb35892811cf6",
                    "size": 28830496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f3f255520a0b3a5dac6033ebc2da5bb7bf4e99ea67717d5e85731b683a762f3",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e3c6882e720888d80b98ee45b55f9a6d84b5efdce17e9adba19d4664b3d99ac",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec9ff89a437f373356a30f406aa3ca24453a4a761c7b301958a03fbfd11b151b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1f5ed35ab3cc9cc5d96133100047986b20f86fd2d1898a26cf6bdbed7e58adf",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d523bb1d4de808a083e762d17c8df0845b723c38cb99ac9e02cb8076bd5049e2",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69054fa98365991dc957f6d80c23af72c934be0043b4c3359b9134f8468b2dfe",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8163b91cb135af8c1f25ac6e881d07fe9ca21faeec189c2efe48a50dd2f9064c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a74f7f1af59b7e37dbec749585df0e7b1342a49874673768b2e148b64d0b7731",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246b53f6976738d2fd7d0bb984611f6408f9d0ccc7996bab3f2348345d5d76e2",
                    "size": 15100035
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3442c66ffc541ed363abc55efbb65bb4670dc14b9d721a9acca9d15ec05dfbb",
                    "size": 467
                }
            ]
        },
        "sid-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c584b34976889d45298ec37fc8b4f76c02a376feb6c1b7c3c0885c9180440b54",
                "size": 9020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:801baf0143b15e3c9fe370effb05de0c26410cf1552d5bfbb2099cd336e6caf1",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46ca1b9aada3451e1578c415e392513feceb48587ff9f353d05e915b88fdf849",
                    "size": 21313127
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214eebe5729c2bf931c972452a9b70b5c03bbb17eccfd963f92f455d22ea2b5",
                    "size": 466
                }
            ]
        },
        "sid-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:63e75dc5451d6e74cf9f7d9512b2589c3d07ec9a3e2a43af3854f7a6ef41ec54",
                "size": 9994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726210592f711f05f053eec35e125752f18287fa26d921d3139b7e18163b8e9d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5817abbd60da9db1e306e372857944073d1de28c0c79f6dc7fa63d1dacaf6fab",
                    "size": 25488429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90c1361feb03cfc5734081a25d7a940c76431d3fcc0a4a2ee996f0e6232981e",
                    "size": 274495446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04836d7babd8c3df142fedb38d0d5a7a800fbf5979b08ceffe2e7d792c556e6d",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0115213fd5c10bce9849a4e354ace163ed461123d7b8361c3b23f30f5d3f972",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee3428549ca5eebb2f8d89f59cc7a91a7081ceed31d1d60d2b73fe1483dccac0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab28e3f005507258b1b23b270eb362c1bc1e359d6b11beebc8285668f533e1e6",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b8f9963dd076c25a8cf1d4f3d2f1e230952af1c356671b2d6362f05747d2eb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6841562431e18b69b21b0c075481d9008bf840def7aa697ffe4e40f3e7b403",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f604a1d6278415b070a444d249b9c764ad0544468f77c3c1ae769c86c4b406d",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31fb362ff4690ccb2e8fc233f9fc8ed56cdf78ea0612597104e661d95a4d0c8e",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aeaf8c0f632afb3d31f1ecce295f2d316ea0e3e2d67dc5bf2e725a8b7234f91",
                    "size": 1222468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e887d9b780b74490400b2e51e4dd0dda25d8d437490d804e51a900f723e01888",
                    "size": 466
                }
            ]
        },
        "sid-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:106a3f6c8ee9dc136c67c61d1c7c525b509a895597dfee4ca9c5e29609c5811d",
                "size": 10010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fa2ec33bd3105d11f3520a18c38edf73ac69fcd8bea3192877de39a33d77126",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f665d148fc58b93c08b0c603bc7c4b4c06cad7cf96fbb85f072c979322b0d57b",
                    "size": 24819671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935ec717dca262c8d32f307ce3b2ef3bb9447be98a462680b027d0f60817ec2",
                    "size": 258156388
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:944182ec8acdbf4f87ca54048d76c255089f6f92bf1c445b4400e94accef4466",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16b4211f936334899daefa186cfdbabfb842829ebc3f0313fae922345cbb53b8",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8251c6d55dd1e3169702c0a463131f5e00f1f77e944e7a96520c4c5d0519b38d",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f203b4ae4c0f41f56a9142c071fe4d1a811b18fd07faae871c7ad61cc5fca51b",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abe6799692987693838961c24e9f2fec9b21c155c1c331afc3d2ffb1bc918210",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65b840d14c3b0c4f2a392f52aca53b01f210e92bdff46e8938af00618bd13d07",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6d9313554a3f7f6a9ba7cd84c9a616e7132d1f866ae397d2a4e0bb5765071e",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63a583f1414edca657e467e810d92d9e25ea0711681c608627d87575d75a398a",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:045db79f1d1eb72c163f6dede72d6be0ac9ee58e544cf4fc7cfbc06dd78ba428",
                    "size": 1192089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bd03a3c2e4e79d33144064e5ccb052b6343a30df190db6669611a5a333a17e2",
                    "size": 467
                }
            ]
        },
        "sid-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8f71d730b2fe26484f7ddbde7cfddeb5a8a18bd57ebbaad9d2f6464a164b2cbc",
                "size": 10010
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba466673c5c9c948c47469bb5bbd41d242110648f7fd0c49a6950a02d7f5e94",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d4e03007218574c25442a956bd2e974065fd27ff2a0489bdc997969634abce7",
                    "size": 27978739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d4c1ac7d3c9ab5d2b7a2cf00f8a0b8c205a8c6b0cb4575d9e2c29434c64d1e7",
                    "size": 287631308
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c29261686ebbdb14cf1395f097beecd3f58a7d9962dbfe5f561df60b0be780c0",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57f1718df1c1022e9a6a4ca20ce36328350eecfd9d9c0ce911f2a98685947f4a",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfcb6667dce36625789add1348dfa89cd9d2e68dd0e371ff73ab23cf776e9a03",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fad6380c40990fecb0edcaac64d8da709796babe2747fe0640476749f245437",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14ee05716d924fb2cb72ea6d5d182efd2e1242a34de751cc6338faa862ef8250",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ad9629d05f18f4d8557b507813626b39e3a7f907ed5594d1cb501c5534a8f69",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce55bd9cdc3caec8867da2b163950ee40f677893578ac1767f0f318368b9afa9",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bb4308c2b87c1d447411f2028caad99b825b40d83f3d430ef8772df91081d8",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bffbfb276b816e06266d3cac237ae719e814db233a5895a74a05748a54523e51",
                    "size": 1195521
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2bfc0529af50557fc69f772a36f767ddb18c2d037c03877e8f39f71c78fa9c3",
                    "size": 466
                }
            ]
        },
        "sid-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:951b00dfb692c329038d122334a004286ea404a7176f59705d15e222a7f0f0f1",
                "size": 10008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80224659d60799972fa421700dc1102262489f11555cf869fc6e14cfd322cf1c",
                    "size": 24768638
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32fcc6344b6f61e0873568492fe8c53f8b398a0deb241e355ddbff701fb41218",
                    "size": 279143644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7dd5b9f5ae940b0258ce1d043c348da410e862d5368b468e400818638eaad60",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342607f230887b13f928bdea02849ea9d9be948b22dce75b6446b5351c4b471d",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66803df667259f65f2528ff3a2d218d87cb9f25a9a5de58d6e6eb3870bef7b98",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1336620dc68f7e8b91256eab5998a003afb66db823fe0592c027abd6042a72",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94b109fadacd6884425dab4e6168d211b5d3b761279dfc9d414adffd01527719",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9de3c80a9fe524d2f5f0f282c03c857590f5d57bd59b6ad537160f92434cadc5",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ea1d78a1b2aed3a01529891b37a965a2015cb2dab7cca156e7b23a72b3d0732",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c21939a8c7272b7e15fc194782f9903427083083d7832ce0e47461e097d36d",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddd851883e77aeccd40735a554eb3399facb0bd187f68e342303ec760d15c5d4",
                    "size": 1193178
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96ac857090d1608ca6fd87f21fd4c215b3f942a0cafe06380f1b5d66bfcf3217",
                    "size": 467
                }
            ]
        },
        "sid-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:95e2e1e76bbf3b2af76a3e695409123722f317a0c615066f231747f65e6ffc86",
                "size": 10007
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1f13c6b54b44ab2213b7a6439ebd927e8194e8649382dc691d02e1dc160af8",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a8e68fc5ef3a57aefae923b34a279c005325edd0cf363773b287184df45c444",
                    "size": 24768543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b3499b0d4d5c9aa7b7db50b5069af99017eb876348958adf31436381318391f",
                    "size": 279229577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a27ede60d5f1b65e66bab4adef0a12d858c5b295c24554eaab259fba7da7e2b",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4833dd8c69423884d68e5cdb61fea8d59b8b3c92c9f5505ccb09dd75d872a73e",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8b307d8fbd2ff397971c1a2cb318e82dc6d4de72ed88b1ac1fdb2f24c7bf922",
                    "size": 256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cc6c8d09547b766e3f86c1899d76ed7614be8dc8a6c3fc84fba7e325e683e14",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:340a836b46fe7eb1a0c8d6b04020a3cb6bbf93854fb7b2e2b6e4e678e531bcca",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b5c92ae83d23e5854f92928a21ef8564dee59c4a85a25e718187e8f2e36195",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:354641459fb8e0af89264c61bdc31673de2858f3c8dc368ce3ed03269de479a3",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8b4aa6d80f5440742518e417c3c6aaa065a01417a837cfacb48dabe670a5273",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20a22fa13a8cedeab51e6559a1bfbda3cf041813782c81f48b5d247e78bf3bb2",
                    "size": 1193843
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b37de5a3ab0f77df4a62a22cf0a10efd1dc98abaec68ea0edc43a058dc193ab9",
                    "size": 466
                }
            ]
        },
        "sid-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0d3b2f71758e60ac95bd4f0d09f9b88b5f753901a0325ca4602bc855f4ffdc7f",
                "size": 10009
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b4e125241fbb6fc056ec40d64b9df0c94787c44d250deccf2042ce4af6d290",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b80d42d3aca4ae5d229573a37f59e334db63737127630bd51c9b5823af33158",
                    "size": 27950237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dc31840b23922a5009ba42e63d29ee8c0a4a33e4db1a90cd9bf5ad0e0a71149",
                    "size": 281553444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07a5e0e5359351695a3eeaa17f6ae0a25733cbba6abddacf1a0a1b9ad8b9cb32",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d1a73fd2b404cc9a750eb3248e8dadaf9a1710df9e117bfc2cd7a0234e7a93e",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6858a76a124058f750e545ba6c9eed87434f28d26187ab5bd88f404efb7fc9a1",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4a78525b31e426035c77bde3b37ca6c610092a30938d3acd543b275c596a5f0",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acbf8556e00c4d6384848831cdf7357cb24a9e1f9538b773958a392b346fe2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ba139355ae8c92fd69840f022d7f8c0c99e32230a54df1072f500fab4c3f28",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3b2dcf79a393038df16cbc93ab0bcb81de167b42372bb6f78dfe4dec8a49bf1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:440479ac70cbc6954e08cbd004cc5159c95deef7b4344825ab48dc4b329ef975",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89a89a4f882d741645fa05eb29e324d7eee2bc61647c31eb002d7fb9dde5ea31",
                    "size": 1195730
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fc40ef54e2d9b72d4e1e7c7810adc7bcb376760d5587386c6582f1daa11edb9",
                    "size": 465
                }
            ]
        },
        "sid-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8d877f411603df570c9e60071becd7031740b5abd20ba71892039f5ea4659628",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e665ab656bfa447d62fce5ba068d1f583b0048cb4055d146fff2e7ccc361a15",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8c4d07f97985a96acd2b9776f46bb35ac538c92bcd8136b091ec72a5ec1079c",
                    "size": 21975360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f12dcce10c6f09ae4ec98bd7c7d008a0bca46b4b7bbacc80d7283875e14c33d8",
                    "size": 291768736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b9660367be58f2617cb230f9d496e0a67ac6fb9c623157f74d85eb34380d41",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b272b6c0ada829957879fd50e6aeca336378fb3ad2d75cce3b1bb8fb4364108",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ec894948f8906cdd15045fb80c2102b649b094fd3d7d5f9d54374f3dbae979b",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a712641a569d5a8c194c8edf6c39d406bd06671bcfca2675e5ba0db679cc0d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4faa61d563f57aa2c3b9cb1eb47b865e49a5f5e6aeccd2b48368b0ee17a89964",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:662629ef2653a468ebd8455576e8f4e79e72b3d5eeaf6e1cc4dd4a5a6a395e76",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d67cdf0074b12d5abdb177cfe6e3b39fc0d7ae50a51d87a5679461cf13ea8de",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faeb62faf0153f768a0f446bc8c5760eb231e173920aad53910e981ad83b4433",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d8d7e2442effe7a7601801b2bff8d344f934d0b93b4d0ee6f6ffbf48868780b",
                    "size": 1196228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4140fa6ab9ae21889f4f604e7759f18fb91c5c0ddc76105e0044c5bb7995c76",
                    "size": 466
                }
            ]
        },
        "sid-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:141ee6985298f3c330daf8de749b62b63164f0c5d646766f29da03c305b5625a",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740c9ad1cb4702c732569d5e523e44ec9e9776f987928915221e52a82694d84f",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aac0d3a0604e3d241005be25005e206ff31dcdb05123e0f53fdeac7f1dacce2",
                    "size": 27929451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a912791049973571c5757b35672dc2cb554f8fb91c88f961134d170c040b36",
                    "size": 290328626
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b85278e98e75abc61e7edd06814f06ce506315982fab5fd7602a653cb8cf7f69",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8aeefd6c9046f712c76cad40ab12b16f884baacbe2e00dc9617d5f3251527d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c233d1b5db88a991aee70b2e6908aecfe9ff2a53b5fbc31ddc25aa2bda896a8a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cddb28f1a66c408fa313eb98a439c20e929a347cf61f7212d010b237cbc8500a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bce86f549996da598c0c28fc789b2f18bdf7f0ce0c4cda3f135faa5ae8db2e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dff427991ea61e73ab8019965ee2245c5fee48c22876123247c83995facf4ef",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b1ed12eb61d608bc6b7334185c64617b17c1602cb896bc9b63772bf031d38c7",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6df0e3cf78a4b6693a4574d3dc966f44fc5a3282c97fe8a8f4bd0ec68e619bdf",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ecaddd91ef7e44722c54a7f7f5a1a51e91c1800ed75bc740233b57c5a529a64",
                    "size": 1204039
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:58e7cad8a0ba93c8977c214df96eaf916cb8e3e2080a631d0745183514736767",
                    "size": 466
                }
            ]
        },
        "sid-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97f5d33e1810bd4f9da8ea0d00eb516e2ad27dbddc28694d9a1f4147a74a1789",
                "size": 10004
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec95040402c9c346bb636975cbea6ed712aa5f9b6b8a228b874c60e293419cd",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9442f557c4017168bd48066ce1fe546d18779a978745978e2b4a57f173d34c7a",
                    "size": 28702776
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d549d102abdc748edb003077841908b0f82f7b67290d54e1e9c200d2923e1041",
                    "size": 295666304
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcc7b43d9c1fc91ffa2a7416a1ed23955420fc5b801962c912be841be94fd9af",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:572b8278b7bdbdb72cf64ed44893aa692fa87db60ec5ca34217ba8aed35c2b75",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:299ac018f72074ffe5a72e68ea4ab57c3db22a2a63419cc25ced3b08faa04510",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a5c8dd2a9108ec7fc812aac9a0ea374537f1b6da7f683726349a95209669c8f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcc5d19d7d13b363aa5f54b4bc56e5d9768cffe011ad61140ef746d0846c5826",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:824f57120b0f6ee7e3c2d843ec7df964905d3bb0f7e8f95565cce4387d62361a",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c757193fff4fcce5978535a5c79ea69e5afeb92ef3a508c1bcd02137bfb409f8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1806803fa1dee35a4650bfb6949576d9ec1d66cda4ac5effdc996d097eefbe93",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ecbdb6d84ef9d15f973d01b5fcdef3291afbd8e956dae029f23b142d7c3f2670",
                    "size": 1204826
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02f761c99fab10d35544e544444428dedb2daece02cb98175d6acdf7cac255d3",
                    "size": 467
                }
            ]
        },
        "sid-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:50eac1b9f7136581c764cdac157c574a306dcb7089a975020f488716b3be488a",
                "size": 9997
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfd81996cca1bc5737b917f62a1f790493f5b1545a0ea937ec8ee58ae533ace8",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3d46331af4753aa3a9c360344f62931db4bd83de6fbed8be0002f9a2f8ba9d0",
                    "size": 22886500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98fe6071d6ae25380c4e2e6ccdbd7a30225b27fb6c4d743a5c0d2a1d9b916836",
                    "size": 264518956
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91dc198278b0447fe3ef8b82cac8025d3f6e4071331a0881ed4620a008668536",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85b5bf912e202a4d455c76c88578233013d557e574d345777aa55ea364f14aa",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ef015e1f844f983f1efbc237d325ef6c7d641e628534cebd595e16b5b73049e",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a4350a8cd29443edfd945bd42c19557a4d4e6b6d9bfedb18319c529f1052fa6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac053386fcd9b925f64d5fe9ac3f4fd2ab366d5f24e5c209e4726306643551b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:601e9900a2b7239156fbd66df4c30d699ff146de602a0ddfd2a7e68eb7b659a4",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecbcc73422f2fa13c0f9f41443e464eb65c8c00a7cfaeb1309ea8c70db4181e",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7bf5409eda17c220baf0b4d87515dafa301b52d577d13c5f06a8f5602f45568",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e016167cd28efb090e153b68bec2386573341b541fb3dc244973b49da03d20b",
                    "size": 1202310
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:029bf6a6024985057b90871f31d86e2ba2dd98279a9481697bf424ae28283f6a",
                    "size": 466
                }
            ]
        },
        "sid-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4702202a2bb825964f21f7e9e5c098d0207297381b8e7a9ba41938bc78d9299e",
                "size": 9995
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95e9b283c28b65bf0ddb332ad301504259858dc9d810d91003438fa5c331db6f",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e6df4e73c06d58f83b69b6ac3c009041d50a2cae299f5433f376a97c532f877",
                    "size": 28830532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5adefacf6a9d83b121d86ce4047859d9d66816bf66ea65808591f674a08ff092",
                    "size": 267795525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e470bcf5d43f8f12407ee1b6dca1c9071cd0abab3fde4d5321caeb94c9860f3f",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72efe018d769e9d978e29b634279045c956dd7574360feec17d6fff6ea164cfc",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceba9923ab4cbab8adea819078a2c2c69b8d23a13266f9255a09450aea18f0f6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:577a596f7856d02c40885e9c2beecf65c1e8072a0114d1391f15def82d45de29",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2a7689c21caea467c926b8747edeffa96e7d6daebe32327ca76fce2d7e5cf1",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fa61cbca082cb82a07aba9a93a9c0de706939a2017e76a3dc11259138001c29",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ee9f273e50457952b93fab6f28b08c74b98b11fc4b6bdad86929bafd60ee591",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c74f6dc83014d9d1260ae7d4da92de45975dfe03eecb1de50ab237151a7c01",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fa157fc744e68b319db57681e84e048401551bdc17354e3b932b26b3c3cd67d",
                    "size": 1202900
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14cfee0ff6c89d58d6d449a25c6c8e1227fbb13770ee5ce9c0e2cdc2989c2077",
                    "size": 467
                }
            ]
        },
        "sid-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:63e75dc5451d6e74cf9f7d9512b2589c3d07ec9a3e2a43af3854f7a6ef41ec54",
                "size": 9994
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726210592f711f05f053eec35e125752f18287fa26d921d3139b7e18163b8e9d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5817abbd60da9db1e306e372857944073d1de28c0c79f6dc7fa63d1dacaf6fab",
                    "size": 25488429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90c1361feb03cfc5734081a25d7a940c76431d3fcc0a4a2ee996f0e6232981e",
                    "size": 274495446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04836d7babd8c3df142fedb38d0d5a7a800fbf5979b08ceffe2e7d792c556e6d",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0115213fd5c10bce9849a4e354ace163ed461123d7b8361c3b23f30f5d3f972",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee3428549ca5eebb2f8d89f59cc7a91a7081ceed31d1d60d2b73fe1483dccac0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab28e3f005507258b1b23b270eb362c1bc1e359d6b11beebc8285668f533e1e6",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b8f9963dd076c25a8cf1d4f3d2f1e230952af1c356671b2d6362f05747d2eb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6841562431e18b69b21b0c075481d9008bf840def7aa697ffe4e40f3e7b403",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f604a1d6278415b070a444d249b9c764ad0544468f77c3c1ae769c86c4b406d",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31fb362ff4690ccb2e8fc233f9fc8ed56cdf78ea0612597104e661d95a4d0c8e",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4aeaf8c0f632afb3d31f1ecce295f2d316ea0e3e2d67dc5bf2e725a8b7234f91",
                    "size": 1222468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e887d9b780b74490400b2e51e4dd0dda25d8d437490d804e51a900f723e01888",
                    "size": 466
                }
            ]
        },
        "sid-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c584b34976889d45298ec37fc8b4f76c02a376feb6c1b7c3c0885c9180440b54",
                "size": 9020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:801baf0143b15e3c9fe370effb05de0c26410cf1552d5bfbb2099cd336e6caf1",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46ca1b9aada3451e1578c415e392513feceb48587ff9f353d05e915b88fdf849",
                    "size": 21313127
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214eebe5729c2bf931c972452a9b70b5c03bbb17eccfd963f92f455d22ea2b5",
                    "size": 466
                }
            ]
        },
        "sid-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:405f834780b549d83f1285776e056335932427bb0f3c8093b5640c8911aa7da9",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6c86114e68c3b79e38d7fbafa759ce38eb94f95ce9b40183f13dbb83d406cf",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19a77c4c450138b8577ca4303f6d76a0bb349a129e5041fdae3dd222dc89ec8c",
                    "size": 24819611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76a355f4a7572e85c1a5f9190d12cfbd74f4ef835d9de1dfd14e57ccb58ef160",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f970bc0ed52fbc6189842854e032ea5ff9df948d16b64d6e47ad206210901585",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e3af794ece70e4f258f37e15363783eeb8bd1ecb348aeb39061c7f38379981",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efde464b5d156ab75b25fa8ade19e17b5224602cf8f0dbbee714456fae0b6859",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c963a8787e0754ddff4e7e71a4ed18a0a7b2581f4c50afbbfe765e08edc6cdc2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:782759738f4c9360ea868af0ef5423dab98e12e56c33772121fff04dc9d95be8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c41107d24d17bcf75aa69c245ffdb49ba992a53a031fda4dc2c0b357e1065f58",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1cd3d0465feca3c5697e9979323e05a85974fae63e4494387034cdebd8dacd",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88d09cd68211d093d31bc67fa3b03c4f7290511b94824a5e90fb9bea5dfc93f7",
                    "size": 14725534
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fee0e350f53545329d0af4ea9e32f8a2c38f20cbf029103a7e678772eecfb07f",
                    "size": 467
                }
            ]
        },
        "sid-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:29512f72b57a3ad65c18be6b9bd56cedbef62a4b5ce1de3eaa7e03150462a77a",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba466673c5c9c948c47469bb5bbd41d242110648f7fd0c49a6950a02d7f5e94",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61fb55139ea9bec40f52e8a6fd62041d6c6ebf0cb6e72b0bc81f7481d0232d76",
                    "size": 27978701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e1d0d4f329f4bba76dc764497a20b8869ccee0dda4bda9274f1960a6d78f657",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d8c8f7aa9b94b43e454e89ea300e8274fd3c82d7d394561f3a76e9da4576002",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2b726b7d7ce0e4af67e07bfc87e711f474d36b2a7cb8ab197536f312ac7ec2b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a870b2ecc0463e5e3d118fad21617697f8220cc947ef7374f06c051af969e826",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09fbaf625f19d1fcd8b7e7cb754fd5312efcb49b579d2a39c98874e9f1933af1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d86e2595d11c19b40eeae72eb262b3bf3477211dda6b8e8c931f940924ca7b59",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0f8a6cac19a1be5e706a42126ca29ba1b5cc680a2ccb3b19b3d78a8168b163c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:157ad62979f2e96b440a8047527ad7c02b21d51a9c731f7f4831563bccb5bd3f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa8d72e4362d0b6962462204519caf872a16402ac93909ca150805346510d02d",
                    "size": 14726395
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843fc8a79e4d23cd7d05929e2aba515730513b52a37a34738a6084615234d542",
                    "size": 465
                }
            ]
        },
        "sid-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:351f62a9d17fcda67a16aadb22a3a7fb4603fae9ca94f61737691d790b6ef63e",
                "size": 9038
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b486805d58efdf848a75f41a07e7ba807b2706029325bf694b0b6761ca47808a",
                    "size": 24768674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82895744f64ad8af75912d671e0aede779f6da945b39bbd1f28365804f375281",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd4f84ca3ed61792aa0fd3de336cfc38e09c9b770270d286da7e137dbe44b6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99126c990a03708b280954a9d1f1127430f1648aeeb2cbfa998385b444088487",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3b1865866531835f555448ea79b4fbf4e2db4057a8a5967c7b8a7d96caf4553",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:623d2d678acb020a8c6f2f53e8dc78bc46681e51db7da2a89078f3ebc06653cd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b3c7675f8e7d87719508cdc1954251a4185e7c524ece5c9ce0030bfb716e1d",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ca0ea1f998a11a24b843d67ff3dfec4c2d2ae11a8bee8f21637047b6ea9d584",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cde8b8627cd8682ca2d1e9f2d5c063d13a6267277c23bca4163f6350b290e3d",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bc44c8652918e6f1c71e07d8e005fb844c953567e8313c62eaee110657d4e96",
                    "size": 12463392
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71c7d507984320c55505dcdda3f328f2c85c1fb73760a5642ca4b1c9a6705b00",
                    "size": 467
                }
            ]
        },
        "sid-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f45eff963ce94b323a3158431ed234d5a0fea56ceda89f68a3a2a6991e663820",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b29fa71ed67bb325a7a6cc85a6440a7a0c05ee03ba5e48e031779640f6187eb",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac151d366a196f91b3eb38fd0b7e7d18d6c883ed7b1b1412dfe39f7ca843ddfd",
                    "size": 24768536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc83d2bb1dd85b0da6df0d08427305412c5fda53922671f60b74b95e2ee22245",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fca2f6f978e0645afb78c963b85a7b932b438408967e62782ec1b6f958cd751",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd23ea162c6464dc5b2d0079a02fac71f68cf00be81d201bfeab31a93a81a9",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bff05548f2231efb53fdd60c1b5a9e75b15d95ce684c8b8f23396d9c9b366c",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583e17b12e978ffc94340f16e4ec90ed8690f7edf860952f1495df69561292e1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4468f4d3a6184f73ade84dcb93a8dbc5238e55788447a73e4c907399ed203c3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ecc3cf4152b795fbabd3ded9d27b58f7dd81ecf316ae08eb15ac9f3609aaaf8",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e00aca81106593af22d22deae51c3835ed5286d491f222e6cf200b167fbe57e",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:858344dee258c90223c2f5df1e3f49af57b413bcf1aad92df396b82c4eb29ce8",
                    "size": 12464976
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e27c105019c6b0f9e6de5330603fcda88d42e81dcde4ce0071da2aadeaf2db43",
                    "size": 465
                }
            ]
        },
        "sid-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:863f52a07aa2b6efc9c4ce426909e9da52efef8bda244dccc4f595e520208ba2",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d138aad16a1d72fadf8255725b5213e1d4b7d207cba6d68d8cfb2f97e97dde80",
                    "size": 27950276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19459aec1379fd91cca477ebf5bb5dd7d13261d74cf15b0e805086d03ff2826c",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70cd97912ccaf5613b30a48c837a06f17230101d18324f8c48acf13c13d5fb20",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e803b02a04bcf26b64a0375e151c1860f8ef96e3140b6aee091a0422b29974d2",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d3c68d0683b142bc61793be2eb23d34e09ec306c87b031bfa829c292b562017",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225f30f6f60b7616fc0c2191ea97bf8ad4c3c812452b697f7e233f2a7f95ff90",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96cd0b09b63991b8c012d630d399904b45b932e398205f99b88a411db6806597",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620cadc3e80465d18cf8d7c3706c84e050d565d90cdd56d1c79066d3c869891",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ecb00d4e735cd30b18b7ee5626ea015ea12351b67b50a31accc63e4630ff7056",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fabfba365901e626fd2f830eb140124ac4c231b5d5619a7586d63f61ae3bfa2a",
                    "size": 14700355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3ea02a73ad032087c92e4574d510f82c2044935afc695d65a326691ea8ad796",
                    "size": 466
                }
            ]
        },
        "sid-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ef1e82f480b89fe96c1ddd2ae596dfa7be3e97f92f7815ed7867aa9a60387260",
                "size": 9035
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9324a294769989d9425702846a22da5b3839c8e042d5b24ce86ba06a13ab244f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a38278709177dc0650db96cb5daf083664d254c62d55159ac87a498524375cb",
                    "size": 12786813
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3338ef85620616dcd0e439b33cd91bc8d6d7ebf8007aecc24c082eab6d304d92",
                    "size": 466
                }
            ]
        },
        "sid-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:41631df3ab17869d454835776eabfef69b2747cfa105dc0e94d0f3eeedd34cbe",
                "size": 9037
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc77ed921173e0630e7ab45ab6a73133d3fb34d11c36fb327d225532669dab6",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8487993f66d4e19b0267a0b800f697214e6f9c7128dd873605693d38d221411c",
                    "size": 27929468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf376f2efd3380c87c5bed26a3515b2887952e7c510f89b5f42f3781fdc6528d",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46fee49d372d8dd1919f855ce6d1c0b433d2684b9e8b416ac2248ddfaecd7cad",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c263ca0ab0d98ceec572564742461502509a313e4ae6c05c5c38225de3a70ceb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376213124b8071dd80cdeac59566b17c50512691083ffafbeaf4c03bc7ad5c44",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5401d65a09308d5c3568b5df96fbb68024916fb739c544d9a923b121edfbfa",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27f47a786cb34e4b48d75fa567fd49e761a0afeb09fd637dacd907765601163b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5960b9df1a6bfdf6c317dc2c1f7dd4e8ee87e364b9021801bdf9b063271db9b2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca2cbf4a4d2acf0e06e4809db58b29c679bfe8260b18cc2294ac91829ab88b9a",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16e2cd9893045d96d9e6adb7320d0b1d154485a4762f5cee9c0a041f6625c50d",
                    "size": 12797302
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccf700ef20a111362c82b3c0beb55403956b3bf496e2b11460302de9cca5d41d",
                    "size": 463
                }
            ]
        },
        "sid-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5cb4d669e7fb4f70a523cfa8335d3f25162d5cc0dbed8c481f2ef02c303c58bb",
                "size": 9036
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fed2ebb8774b84650707f8e99c4e5137c05e35918e120a9259e1210e6f72ca7",
                    "size": 28702762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47836198904efdafbafa8848308674105b90406818ad6490d173184626b0924",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d37a30d71afece4c3257ff3ae87f0f74a3a56c42a90f8b69e1105ef70c5718",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bc0753d504ff27f7533d92ae9bda43939e4ad7f15f7fd871222007848d1013",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf794e1ec756f73a1b16119acc2b7bda4a82ccc2bc5f054493b16c53d115547",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38cceb9adb2494a293857b5270f2bd1390fa3bc9261c9a41ed064e6f51a37959",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e8130e8c509bd4af79178ba802d93cdf525556c911368c2249ffef30bad8fba",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d3d609fdf9eb35fb470bd535c17acbb099bb436a284b406680753529d73272",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1b159005347d070b718e1c24d902d7f93b9aaf108f10479fd21fb44a9ab9a2d",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a1fa3a195a661237878b9ecea4255c3735742ae0173e68c1601a23a1b75f894",
                    "size": 12796827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b930c8d5d8707d3ee24a72f0997e5e7af422ea4c52a04ea3147d4fb10e9af3d3",
                    "size": 466
                }
            ]
        },
        "sid-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b8f831b0226cfa7b0c4afe367498dbfc86cee4702e0dc5b9225fb00911516a58",
                "size": 9020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:606addce47d756f75710c9127014c091a361d7082000d2aa4647a934d0b6a032",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbf59b915ef7e00f3a28eddd01e281b963eb5651eb99fa7186f6610478259459",
                    "size": 22886466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18adb59af4096465955e4848e100f8912fc39827cb555d1dc2e93f76621d2a9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55c8fb96fd0ff56cd40952020adec20474970bf9a58d9fda51b197794aab0aa3",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba23e4e6ee5801f02701ed3302596a405bbf73892b23ac1a9befa6720cc1cd83",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fde0c1acd3c5218963c7bfaec46449db10a039416ead95b5d0644aea74a75a39",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c113dcd6bec16c39b642a91785a49ae109cab57c613a7c89f5bfc78d3e142e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559b238bbbf8b0656f0d98828f621586662a73483ed6e7ae2a3cedbddf8a186",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef95abd3bc018607c606fde7ab299d4a43862a6edab5cfda83b9fe6b8c39de2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f05f99e3a0253dc29d7ef30ff9c7f2ac6ed108ba6863cde21daa8f7cd6d38f9",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4b4f5bea3247c8d9914284634ffb822938883bc92c4bcfccc9e0a28b80bd780",
                    "size": 12801249
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77af4196cc5409d95cb25f966f1a8f0cc200fbf7730f61b004b7e108a2b4f3e1",
                    "size": 468
                }
            ]
        },
        "sid-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7373548d593251d2b09edd02eac3dd1f7024c62095da44b02bd11155bc3b118b",
                "size": 9022
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ead7e6cc20b4dc02f74e6b6e84736275d0244df7863c1df24d49b94112341681",
                    "size": 2592215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5750a166857f965c56bc09c46e7ff5ce450e1eb09d9d089beb35892811cf6",
                    "size": 28830496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f3f255520a0b3a5dac6033ebc2da5bb7bf4e99ea67717d5e85731b683a762f3",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e3c6882e720888d80b98ee45b55f9a6d84b5efdce17e9adba19d4664b3d99ac",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec9ff89a437f373356a30f406aa3ca24453a4a761c7b301958a03fbfd11b151b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1f5ed35ab3cc9cc5d96133100047986b20f86fd2d1898a26cf6bdbed7e58adf",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d523bb1d4de808a083e762d17c8df0845b723c38cb99ac9e02cb8076bd5049e2",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69054fa98365991dc957f6d80c23af72c934be0043b4c3359b9134f8468b2dfe",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8163b91cb135af8c1f25ac6e881d07fe9ca21faeec189c2efe48a50dd2f9064c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a74f7f1af59b7e37dbec749585df0e7b1342a49874673768b2e148b64d0b7731",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:246b53f6976738d2fd7d0bb984611f6408f9d0ccc7996bab3f2348345d5d76e2",
                    "size": 15100035
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3442c66ffc541ed363abc55efbb65bb4670dc14b9d721a9acca9d15ec05dfbb",
                    "size": 467
                }
            ]
        },
        "sid-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c584b34976889d45298ec37fc8b4f76c02a376feb6c1b7c3c0885c9180440b54",
                "size": 9020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:801baf0143b15e3c9fe370effb05de0c26410cf1552d5bfbb2099cd336e6caf1",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46ca1b9aada3451e1578c415e392513feceb48587ff9f353d05e915b88fdf849",
                    "size": 21313127
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214eebe5729c2bf931c972452a9b70b5c03bbb17eccfd963f92f455d22ea2b5",
                    "size": 466
                }
            ]
        }
    },
    "tags": [
        "20231127",
        "20231204",
        "20240101",
        "20240103",
        "20240105",
        "20240201",
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "bookworm",
        "bookworm-20231127",
        "bookworm-20231204",
        "bookworm-20240101",
        "bookworm-20240103",
        "bookworm-20240105",
        "bookworm-20240201",
        "bookworm-20240227",
        "bookworm-20240304",
        "bookworm-20240401",
        "bookworm-20240408",
        "bookworm-20240429",
        "bookworm-build",
        "bookworm-build-20231127",
        "bookworm-build-20231204",
        "bookworm-build-20240101",
        "bookworm-build-20240103",
        "bookworm-build-20240105",
        "bookworm-build-20240201",
        "bookworm-build-20240227",
        "bookworm-build-20240304",
        "bookworm-build-20240401",
        "bookworm-build-20240408",
        "bookworm-build-20240429",
        "bookworm-run",
        "bookworm-run-20231127",
        "bookworm-run-20231204",
        "bookworm-run-20240101",
        "bookworm-run-20240103",
        "bookworm-run-20240105",
        "bookworm-run-20240201",
        "bookworm-run-20240227",
        "bookworm-run-20240304",
        "bookworm-run-20240401",
        "bookworm-run-20240408",
        "bookworm-run-20240429",
        "build",
        "build-20231127",
        "build-20231204",
        "build-20240101",
        "build-20240103",
        "build-20240105",
        "build-20240201",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "bullseye",
        "bullseye-20231127",
        "bullseye-20231204",
        "bullseye-20240101",
        "bullseye-20240103",
        "bullseye-20240105",
        "bullseye-20240201",
        "bullseye-20240227",
        "bullseye-20240304",
        "bullseye-20240401",
        "bullseye-20240408",
        "bullseye-20240429",
        "bullseye-build",
        "bullseye-build-20231127",
        "bullseye-build-20231204",
        "bullseye-build-20240101",
        "bullseye-build-20240103",
        "bullseye-build-20240105",
        "bullseye-build-20240201",
        "bullseye-build-20240227",
        "bullseye-build-20240304",
        "bullseye-build-20240401",
        "bullseye-build-20240408",
        "bullseye-build-20240429",
        "bullseye-run",
        "bullseye-run-20231127",
        "bullseye-run-20231204",
        "bullseye-run-20240101",
        "bullseye-run-20240103",
        "bullseye-run-20240105",
        "bullseye-run-20240201",
        "bullseye-run-20240227",
        "bullseye-run-20240304",
        "bullseye-run-20240401",
        "bullseye-run-20240408",
        "bullseye-run-20240429",
        "buster",
        "buster-20231127",
        "buster-20231204",
        "buster-20240101",
        "buster-20240103",
        "buster-20240105",
        "buster-20240201",
        "buster-20240227",
        "buster-20240304",
        "buster-20240401",
        "buster-20240408",
        "buster-20240429",
        "buster-build",
        "buster-build-20231127",
        "buster-build-20231204",
        "buster-build-20240101",
        "buster-build-20240103",
        "buster-build-20240105",
        "buster-build-20240201",
        "buster-build-20240227",
        "buster-build-20240304",
        "buster-build-20240401",
        "buster-build-20240408",
        "buster-build-20240429",
        "buster-run",
        "buster-run-20231127",
        "buster-run-20231204",
        "buster-run-20240101",
        "buster-run-20240103",
        "buster-run-20240105",
        "buster-run-20240201",
        "buster-run-20240227",
        "buster-run-20240304",
        "buster-run-20240401",
        "buster-run-20240408",
        "buster-run-20240429",
        "latest",
        "latest-20231127",
        "latest-20231204",
        "latest-20240101",
        "latest-20240103",
        "latest-20240105",
        "latest-20240201",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20231127",
        "latest-build-20231204",
        "latest-build-20240101",
        "latest-build-20240103",
        "latest-build-20240105",
        "latest-build-20240201",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20231127",
        "latest-run-20231204",
        "latest-run-20240101",
        "latest-run-20240103",
        "latest-run-20240105",
        "latest-run-20240201",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20231127",
        "run-20231204",
        "run-20240101",
        "run-20240103",
        "run-20240105",
        "run-20240201",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429",
        "sid",
        "sid-20231127",
        "sid-20231204",
        "sid-20240101",
        "sid-20240103",
        "sid-20240105",
        "sid-20240201",
        "sid-20240227",
        "sid-20240304",
        "sid-20240401",
        "sid-20240408",
        "sid-20240429",
        "sid-build",
        "sid-build-20231127",
        "sid-build-20231204",
        "sid-build-20240101",
        "sid-build-20240103",
        "sid-build-20240105",
        "sid-build-20240201",
        "sid-build-20240227",
        "sid-build-20240304",
        "sid-build-20240401",
        "sid-build-20240408",
        "sid-build-20240429",
        "sid-run",
        "sid-run-20231127",
        "sid-run-20231204",
        "sid-run-20240101",
        "sid-run-20240103",
        "sid-run-20240105",
        "sid-run-20240201",
        "sid-run-20240227",
        "sid-run-20240304",
        "sid-run-20240401",
        "sid-run-20240408",
        "sid-run-20240429"
    ],
    "configs": {
        "20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.352584415Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.208454071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.352584415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:5d53eab09d84cc152ec2a314c91e3bf8793dfa4a73070ac53e3151f73d005048",
                    "sha256:abb873b4d6ec619e5d934d5605fb06266074eb7901200f52b1f07bb33869d9a2",
                    "sha256:5429722fd18763d8cd5b48100342688f0928e4678d071a04f0d2727738f85f6a"
                ]
            },
            "variant": "v8"
        },
        "20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:08.713095109Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.558377971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.713095109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:7d5dc5c1c282391c2be187e828a7f5faa1dcb7a3979a70a2fae1330f45233484",
                    "sha256:77ed872cac29e01f7fb28045b7e4c209d7c8791e8347681245d10b343d5f0e55",
                    "sha256:3e6379912ace1ef448e3357378e7ccf9be7cb64ff46346dc9a68006a60c14571"
                ]
            },
            "variant": "v8"
        },
        "20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.184213533Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.084213282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.184213533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:bc545dc1b82e2bce00c8feda9632052f597036acd909b46ecb2763eab38d63e8",
                    "sha256:2d2fb1d8ce33a878c2e11f05b49d8644cbab05fc882e4b0e79ff043f277bb7e7",
                    "sha256:84a4a36632376f3dbde45f61a3ee931fa8af7d7751e7491fb18bf618861e9b3c"
                ]
            },
            "variant": "v8"
        },
        "20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:21.398307242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.29462966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.398307242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:f642dbd3132a7218700d496991fa569282469d5635a4c58fc21285d09d91cf65",
                    "sha256:3a80cffbb950b70699dd58975390dc93dccdc7859996db818b7eedfbf3a8e45b",
                    "sha256:5ea70f295f1d0b2e4ab49b9576f01a8ba8a025f5028bff1dd891e7c8beae6a2b"
                ]
            },
            "variant": "v8"
        },
        "20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:17.411324525Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.31053864Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.411324525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:8d115c312525ed7acadf15d4a924006e7aad6aab50c47a2a27b7c0727c11e90c",
                    "sha256:72632b4c06dd8d99219f760078e2ca52e0ea25a334dcaa1719260734d24a8850",
                    "sha256:35af128ddc50e9598df94c3e1648be49e5590c6f301ae6dfbc916fd5e128026b"
                ]
            },
            "variant": "v8"
        },
        "20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:38.457561963Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.349203723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.457561963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:1a7aaacf679b474c9ddd03796772695e0e9eb8a63acbca68fd2df22837bc53c4",
                    "sha256:8603d023289e2ae0d869d64c09fa5ed2f9d6df6ec18e0f70ce4fb66f057155b9",
                    "sha256:6d6aa2a2610176829648fe52276dcd08f805b3f433d13e0f4af7fbd53a5fb182"
                ]
            },
            "variant": "v8"
        },
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.5221638Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.417051734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.5221638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:ba1f9e8f930b8a3f9edcbdcb1ddcabef6dbea7bbe90810fff72c67b7c6fcdd29",
                    "sha256:ad26600a3fb40130e56f8be1e7bb28a3b3a5874bf5bc6648c571d89535a60c75",
                    "sha256:d0ce5cdae4691a1f4da62f9a5134bd486224e312a24ec1b6f3e601f4a7e3ce59"
                ]
            },
            "variant": "v8"
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.737161871Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.635497882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.737161871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:f72e944e459fc19ff4121ae01748da64e74cad323ca694d61e4e40c60e7cde40",
                    "sha256:6166d793ae14dc7d2aa454975240b08e52d4f41262c1272887b80b1ddf46c648",
                    "sha256:1bd4582c17fd269910d1a5ce63267d6e2f9b6e1628b964daeeb89961a7ab1072"
                ]
            },
            "variant": "v8"
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.206833314Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.10688511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.206833314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:d6fa15f231e5f573b4217b8ad6dcead87ec9fb148cdd9a841cc0a269755360b1",
                    "sha256:5434aed8d8ebc71937029db6f870941f41f0b7741d6b12db5cae06f4306a2dc3",
                    "sha256:dd29935feea8f1f4c602ddf1210f5e2550c4ee6b895cfbb1bdb911bf72eca3f7"
                ]
            },
            "variant": "v8"
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:36.234636766Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.131701783Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.234636766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:ebaed2655d9f063e9a73eff43ae86b058a01b55b3335e9510a01dca49a627846",
                    "sha256:5686c9bfd0b08109bf65e508151e416bf72569887d9425af83cd497cf5df70c6",
                    "sha256:737e359f10ad5da0512f6f04f053ed2461891e20f26d381ac1119979e7fb8b35"
                ]
            },
            "variant": "v8"
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "bookworm": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:41.734944058Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.630612431Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.734944058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:78d10f2b61cf9455e08548a49c1a3a90ce31f87ddbb77c0a692d41c168929fad",
                    "sha256:ea3ce7759e293f3dd148d8df3ee64cd1b880fe674ad4d879d2fb66a72688fdc8",
                    "sha256:c4ab860002dbfad0ccffb63e01ff29da6e997240fdbb46d1fb4e4572fa615a9e"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:33.266065664Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:06.716105061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.930799198Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.048023972Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.206984986Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.218315588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.229745456Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:09.408107823Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:09.551150821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:59.854492337Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:59.854492337Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:33.125288086Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:33.266065664Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:316401953f8ab334a3a0a753122a2f969971e9dcd4abee42f7b9918e065a7f11",
                    "sha256:0491259f8c30013e7cf7714099e21dca2d32f765aac298423a43aa9604686a9b",
                    "sha256:d0abcd6aff176b9649a822dea6e9933981195fa944d746c0f46665914e1bf55c",
                    "sha256:3cec69d2b43b8394076870079300499babef94f37c1f4d19b29ddfcad28c6afd",
                    "sha256:4fcb8bed64266ae624da7e418e4c2e386bc3a2d7096280ac02c3611aca5efb35",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f409281d6d41299fad858a2ef832fed3abba62d1b81fca008d392bd081e76e5b",
                    "sha256:05628832807df937d8bbcf3795d3476998ec5de066b931e19af3ed2bf74dd074",
                    "sha256:30008bc6f41ad1bd8b891d21fd15037886e92a5f557d51c503023c6e55d88b25",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a5f00af0c2ab1406136894ed5f738aece00f423a69a5faa85bd3b98c0e8b07e",
                    "sha256:d6ef06325315d58f77d73989ed8bbb4d474afc6a4e80ac89ce4ca29ce061004f",
                    "sha256:be89395e8d7ed54d7d2e6ce28f2b8cd22fd3f68c9804deb7bb8ec98fcdcdf4bc",
                    "sha256:6b341b90262b54b87c61d3b8c2419758d3692c999c33be34ed63ca408e7707ab"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:09.084220435Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.125484136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.860866263Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.97464861Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.113291519Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.124304078Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.166996422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:21.185237509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:21.317621807Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.562256952Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.562256952Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.932378936Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:09.084220435Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:93ed37ecbec63b6a705c0e806bb2672dae44aad8d5ac1ce61d1321f0cdb3b2f5",
                    "sha256:6e9b582fa5384d7f7905e1c0d41a81fb810d86990661bc68a90b45a4172a1d60",
                    "sha256:0d62838d725f04884f464e5e2e954359ae5348959c790f802be10e5bfbb1af0f",
                    "sha256:c870cbd66b3ae132f982fd79f256233ad58895a69ad6cb7656a5c85baaa75400",
                    "sha256:078fb21837288ea35cca62fad5b2037af88f7844f60bd3b0a0da045770152ddc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a65fe06c07fb2b301ace1f8a684b5a1bbbae8f5a78c7a689fb7d54c63b958d82",
                    "sha256:8b0ef62688ca14ff43e0db9d1fddebbd6be8574c3e0b90bc0c3f2daaba70b737",
                    "sha256:f2a888cb5d5332bd211cdb18b49cb1acc310fb3b924bac2d62016b9501f93150",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0d54bf653780011a612c9b24b99effaf185960e5ae6cd5e6ec1b886372e34cc",
                    "sha256:6063829ab4a80876b32a58cd41ad6c69a224b1f19d9d24a43d6044989aa04fd7",
                    "sha256:eb3854288863febd0ea39cbdcfca6e25d479bf48fc79361246e0aa19cc3a12cf",
                    "sha256:b409d756752cd3b3f1932e087c96bed16ffd6c9719b571e0766e22924cf1683a"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:19.19874242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:25.771724649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.458086836Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.546498434Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.667667028Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.679330726Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.691321328Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:27.696126872Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:27.807507547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:45.315391808Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:45.315391808Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.092419286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.19874242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:474f509cb5eea21bf0718e0380d7b13c6fde15504373de439f8909fcf3119a1a",
                    "sha256:d997c907f739fd3f9cbd31e84323d9786df4cd20263fa1e18923e0a524cd508d",
                    "sha256:51310e236ccdd0fb3ceb99b981ef90d66b5f6adbe4766235d8f40b2e8232d10f",
                    "sha256:85591a815f3842c788751e06b7190b26efb241984270087d5fc4df7f2ada659d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d638fcd3d651ed38fac496dafd38205b8b1e7e58a53cca9bcd1e96aadbe56b9b",
                    "sha256:b0ebdab6fd02d5bb8a3fd87b2a10976773d6119f67117072f121837b9706cd61",
                    "sha256:d2e675b8086f49e4aec05988dc6f28d92ee13c1a011b1c497d900c3f7b199d8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b121453fcaf90d2054ed411b1b10a207b06439f037dc717a85c88ad451d3877",
                    "sha256:55473e29375955d1b9c0f577f5740bb4d28f0a5b858a65fdcc6b3a6390f58f92",
                    "sha256:a1228f5a63b2293f0851399347d2a07290ef47b93ebd89bca8a02ad23b82f7bf",
                    "sha256:782028a862c97b69461cb57e5bef1fd8b464d8f6a777caa2a47594f570009c35"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:30.738714459Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:35.062832518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.109739047Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.202273375Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.349151053Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.421020187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.430581869Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:37.624335879Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:37.741679865Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:57.031298399Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:57.031298399Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:30.634842391Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:30.738714459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:5bfad8fe537007bc6b9ca2d485d72c1d1350e5a011dc696a7c0362f8ba861112",
                    "sha256:4d4f2e5f7d8d01cbda94e61a8436ab3badf818b0cecd15b3b6b1fd8df635a627",
                    "sha256:d4d3c43a9051d5d74f85a702e7fc34db246ecda7d2591e891828421a59a1318e",
                    "sha256:f15a352416228e68db80c4562c001ca7738916231f9098315be5431a64ba2059",
                    "sha256:b81c058305163c96461ac297f679c62cfba1d933b1bf582f8fbb11c317d353f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85eb83ebbce9dc08bcb570adc80b870e009f0a5ada812b3937a034114b18aaf2",
                    "sha256:654bbcfb2ed7e65541a7436227c0ba0db40d524b72813e24cc7d6ba4745a24ff",
                    "sha256:30c81c00f93c1a7a1469bd271c3f5b3f9c7e036ad658522d0e7d6cfae354f96d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7a879e8f80c771d0c5f1c2f6554a85ffebbaf33da1e2fe050c4051ba29f5f57",
                    "sha256:1f49247277ee50c487db2c3827352feaee1223de676f7cb30ad824faed33ce4f",
                    "sha256:4001a192cf4f27014b9a0bc38f1dedf23caa533517b831153d754eaba5d371b6",
                    "sha256:5fbddee33ed333621f6e042956b378ca6ce6b886f81157feaf68dae63c368c59"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:12.551412478Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.296400304Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.988367236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.069469162Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.199352103Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.247182835Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.257047156Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:34.332407943Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:34.453373708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:39.019510544Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:39.019510544Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:12.453710384Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:12.551412478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a12ad07276f19b162694defa2ff93fbf1e1d77b382dcd0151977e7c51ec1f15d",
                    "sha256:9f3b41a9885f7a205a6307816a2fe42718c97e11579e3b51bb3a85d6f86bb305",
                    "sha256:a1a70382e0bdafbf708dc719940f71e7a2d41faca32f3539658b752935bfe6f0",
                    "sha256:88208ae6833fa8c3e90102762e560896ce9f225f1b1307a5c463b87bb7e5079e",
                    "sha256:1d57adfe88cf51e552b23a6640a8f0d97a3a64180a01af17e974369323d4e964",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d73f55517713e73317bf9bd90bbe7480a853bce455103463336546d1ddb9f0cd",
                    "sha256:afed1f40cf422efd7d7cdae986cddde5990714f03803397b8218434c2a8aa5c4",
                    "sha256:fef90dfc6a136812006c98e71ff86f2776113f1b79c7f93a0ad4a9c22aac4120",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:91fd19bfa869b188c5148f902bdf512167880f5849d640316eb517e3a50f76c7",
                    "sha256:9f6cecfb3609c68b215452af7910ce80b9c022a367e4bf53e2714cca75aeb465",
                    "sha256:6fe096028e21aa5475c80688e7a613ddc83c0663e1e82cb92b5cfe9c8071351e",
                    "sha256:f416ad15e793af78799a663cbc5a72e7c35845d557ba8f5325d91081ed12ec00"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:45.659475593Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:11.682200983Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:11.682200983Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:45.551174851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:45.659475593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:77523e51f3fa55621d1d7966c7ed4bb2d91744027bc1cf6ab96a7ac22780df26",
                    "sha256:0b9cd83016218889c28cea29aba9377ceaa3563ce9dbf57b7cd4ed1779be0d07",
                    "sha256:5cff7b2b9a0bc6826f2a015f2920eceb221f57d4db8ab553280560e15bb9a4ef"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.763522196Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:39.930352302Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.681119982Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.768938384Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.890357763Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.922301492Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.931927895Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:41.888179766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:42.017213443Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:54.5784183Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:54.5784183Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.658351303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.763522196Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:819afa784c3e2987aef1409e05047cb7a110fcfa980ed6cab9de540fdc82f9cb",
                    "sha256:fa841c5bde2c582d4ad9966a24638ed552c5b89121feb59693bee2a1973c5750",
                    "sha256:af58095d0c29e3e0c6524925e61b55a80e862f78f072b56faac3218958e9e5da",
                    "sha256:5b5306a15e3de2fcdb1e8e5ce2d01ca5719a2f38ea79dbd382def80995d703b6",
                    "sha256:1f829424482353ffeffb2fa28ee8f61964dfcd38e52dc91ad7da0a95a2792747",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7497f5f0860673c8b3718f168710de4ddc6e095bdb37f44f3ebdb9777ab20696",
                    "sha256:09125f579dcf295dc3d0b26be9296c54bd7bbeec45aeeeb039f42e518cb7ef2c",
                    "sha256:e99946c74f0e6583d3369df6e398ecd62d8f229a44314ce82623c9977c2ddea7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5e57825de0fc482adf233a74b9e5821669479c5e91a12081d7d7ab4744e9a5",
                    "sha256:a2117d12309c363206f3038ed0923f3ee59d8025a0a412fa7c5d181a7be0d606",
                    "sha256:e5612e9842f9f05f9f2ec2103f749d64bc63bd70af903f1a359db5bed58d5ddb",
                    "sha256:7b49bc9d44e4a65b813722b82837fb372ecdf1357342d1c4e8109878976f9efe"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:50.685251557Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:30.292139599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.438460441Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.523001967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.636541653Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.662793126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.734763532Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:32.835165297Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:32.953884027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:15.592071652Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:15.592071652Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:50.57916307Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:50.685251557Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:83d700c544e1d388547184b0b58966790d564912d1572a471504bc5c89498e56",
                    "sha256:11cf76cefeaf1112139de1045639cbccd3a57a547ac337fdc588235c7d65e35f",
                    "sha256:ebafff57fd7c429daf8be6dfca41e50fe3a0b3ac7246b7fa0cf6fbbc0420b765",
                    "sha256:75b833b595252828ac5698120664faed2e15081d34a86dd73185948e45afa5ba",
                    "sha256:79788cb6c25987d985dd1de111876e880eb7490a1973770f4c240b5c1d01204e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1bf4235489d8a8aadbcb887e1272aaaa0612c18a23ca3935f00b05861807a92",
                    "sha256:aa75a553a1713912a3a007aa0fb6a8094e45dd3d27ea17974a9aaa469e251f51",
                    "sha256:a240e6900a65724d931acc7625d592d1290f8995ad3b55dced088e079a9df1c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2398f14f78d5851947025b83db3fe6bc7d6c917d203549c127e9a243d25794f6",
                    "sha256:43f0e5de4971e97f366271156f709f91caa54a2bb318f602f7866c11e9628545",
                    "sha256:a64ca149b904a4fd6f7c7ebbdf6dc99003047b00db598901be00654dc79b4e18",
                    "sha256:f5e0d1860788827f0abc25bd7a18384f473dc088da3cee9184ab75efd76868a8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:04.43914599Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.406197917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:07.095814844Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.198030688Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.323577194Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.337495487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.373912066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:08.344650615Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:08.473198876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:30.751469703Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:30.751469703Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:04.337726788Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:04.43914599Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:de0acc254098be57b25b3573d9774773ef65a4fcaa06db4ced68df3d464b75ae",
                    "sha256:6fd16f9591b7e75eda7aa82ad9ca2f2883f73c745b4ae7900094fde6f5f3a182",
                    "sha256:32c191e36568ad3e3b83655eefea02dbfd5d6e6780af68021bf9dc226b7c72b5",
                    "sha256:cacb9e9cf2327e21af2d985de21c7398d4efd1d6ed68736983f3b2dce0ac2cf6",
                    "sha256:de0414d61c5298f55bbbf238cb165da20d3deef342ea10b1027726fc4c2ead29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e6e89d7feb3328bcaee2f80f75581617e21fbefe70715097f78ca83acd939305",
                    "sha256:cc8007c4d44b0595626af5145ab4533af8050e14119ca2a75277de4aa8970ec9",
                    "sha256:5ee8ee93e17be888a2050990ae5264d65232f283f2197e2abf5f0d94eab3b592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119847f5856d27cd4e043cc362634527f7860270820fef41527fd4295815a8f1",
                    "sha256:791b90643ef3468c3aec39dd3ba72ec765120a468e216852275cf6a5008b6ab8",
                    "sha256:b4e815a2d0f9cfe8a255c63f193414d487a7406653b65260cededa664780bb59",
                    "sha256:c8b603b48f4a1f6c63030cadf22aec316ead225c06c19a8b9c67b556cabdcb81"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:50.050198606Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:22.645447635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.313658027Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.402635934Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.53747386Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.561498047Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.571843507Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:24.547695956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:24.675471591Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:15.426315581Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:15.426315581Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:49.942914234Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:50.050198606Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0f23ba39c0652dc1e8f4c7ecc5e21333a0b55fa4db5f1a6a4fb06b005ebe3bcf",
                    "sha256:ff9efbdec5ea3692c38d94cdaf146dc648591772e6309be77b19f6f2a69acd12",
                    "sha256:7fd47df956546e21f9a46974ff89a2e1520dce1b18794d1e46813d6061b62158",
                    "sha256:bb6473d71d44395d7a777fc12fcaa0f41bfb272b57bba4b8c3a96e64e660589c",
                    "sha256:8851df102d3ee94ff51037b8135be86234001503f550b1aa4a51c45708974ea0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2cdf830e7f05f8c6abcdcda9f6a2c69c99ad3dae43534d683fae8b1f927d71df",
                    "sha256:7cb1fd1921fc228059ef7088e8836717999f3d42789694598ebbb1861e7d1724",
                    "sha256:e624c62faad1811af0276668a17c9f2593a4e92140c11f89ff8cf9bcfa8bb73b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16f1112eda98e42d16b34cd4bfed296e8573ed72263e18f0012ff1134c4a7602",
                    "sha256:a23fb01948c336bb1352061dbb443a0dc18f928c92932650329d1493e64806bd",
                    "sha256:e4dc7e9eec2fbc9b5c4e369e181cd2020e5d58fa2e842bbb328548112b072a42",
                    "sha256:5a13696f3a3617985c0b5f93f8784d9ce1001375838384407c20cb845fd1fcd8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:41.734944058Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.630612431Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.734944058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:78d10f2b61cf9455e08548a49c1a3a90ce31f87ddbb77c0a692d41c168929fad",
                    "sha256:ea3ce7759e293f3dd148d8df3ee64cd1b880fe674ad4d879d2fb66a72688fdc8",
                    "sha256:c4ab860002dbfad0ccffb63e01ff29da6e997240fdbb46d1fb4e4572fa615a9e"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:50.994501Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:20.641319513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:54.810673851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.550777756Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.643711244Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.75756289Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.770162739Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.819007638Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:56.7808915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:56.909990889Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:21.546954757Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:21.546954757Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:50.899206135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:50.994501Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:28d4e208a7a00b359594125dd821af14aa8f202a8ec604e2e7da4bec1888529a",
                    "sha256:174f2361902e2846e389337bb3303cc4a8a7345d7adf74bd1e5dd8fdcab0197a",
                    "sha256:607ba54df1c61c1e364e4894a43eaa9e200a3380fa1c25941b9633f5cdf1bf7d",
                    "sha256:26ef1631f9bc0161ddcbd62cb40e71a79b44bf255d7e6a65264edae1987a1729",
                    "sha256:bb0a9b183b38a2276f2829317f6886c6f498d6e5c76c85228f2521da544ace8d",
                    "sha256:3736f03f6d85824da841726d8605393e73b4e677a9f550f10807b0d505161894",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e68f2c2c4acd87cec5fafd4c8914e7a2a49b05afc1d0f44b0adef78d69f7ec8",
                    "sha256:73af136dd09f5932e6899b694d0041ca6b32bfca42409e77577b14c6635fdd7e",
                    "sha256:c81b8a5b064118bf193606a219c626cea60ae2ae1eab3ab9c316a81fdc322f59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fab48beffc82031db3f779a212eb8f136c7e3ab604526698128e420f2bb20a47",
                    "sha256:3d3a3167d0f748fd33f5b43b37a758736ffb04ed380e1bdc12aa93b66dcd06d3",
                    "sha256:dcdb36631df5c5e67643b89a8b805f68091833a0d8dfbdd1495f82b7eeda937b",
                    "sha256:69b124d588acc77ab94748c7e80a40cca43b508e9af8f0d82a0c68ca4a8f9fe6"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:29.072703802Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.971437715Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.971437715Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.971437715Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:03.878363125Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:32.451064443Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:33.265808107Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.380932684Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.522514945Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.534826348Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.545953279Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.559437158Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.559437158Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:34.577132059Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:34.724779192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:59.949984202Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:59.949984202Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:28.987745909Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:29.072703802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:22147cc4da34651a6f6e460756a8ba7315e8286abd56b054c750ef0f4185029a",
                    "sha256:cc2f1ddb65acb44fc2f9990ff495b13e3c56b6347a1e2bee3054e5a8f76e89e7",
                    "sha256:6d2d959b605eeb9f05b20e6bd6fc699657e4b43faacf94b8ab87a73694de934a",
                    "sha256:59db5e17c4fe9a18b9c27f5aceaac533145597de1681d61e4c7f29c64add7de1",
                    "sha256:1c13ce0b034d41a09fb12caedf618b7ad4498516fbc812be4ca51ee2b80353c4",
                    "sha256:7bb0e813d0a60a73fadaaba04f95e09b626eea8bb962eac5bb7f054bb003ff2a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e019ece92592365dbceeac69d52a3b38afe89a81d286df96988e2e8c4d454b9f",
                    "sha256:2bba433a88eed9f9bed2b942629910b1aa49ab09d849f04a2c5d22434d8f9027",
                    "sha256:b40a6bc746fc0ac4ad3697d4ad25053528a01cccf950247b8be3c3274a5818ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ffb9608d7aa1404b90afdb01a4b374c5487833504c650f37a51930b454803bc",
                    "sha256:daa1f9ad4da3296520457e770265ccedd9e2530c11bb57bd83dffbea048b263e",
                    "sha256:3f8708f1fe82dc45595d9c67181c01953b04aba6ae64960b5c66ad09d66658ff",
                    "sha256:dd8ec6d952e9cacdfd968431421e83ce5eced1fe02a3de653f8616316e872081"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:14.019098829Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.67784Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.67784Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.67784Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:23.113604942Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:57.870344961Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:38:58.804765535Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:58.930857356Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.064445553Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.074981384Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.084715311Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.094717632Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.094717632Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:00.086441095Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:00.249624741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:44.128559443Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:44.128559443Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:13.925380159Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:14.019098829Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:20b21b0ed2f15b3014efeb6f5540214ec89e174c8ac4da12a538f603731bc5ce",
                    "sha256:1686df53810252afdee1f9b6922b275bc90f724057d6ce1731cca86d504af729",
                    "sha256:22f44d25df1a3be16f6ffe9f7b8e8f6a3a06446d9ccb7ac0da71f470b754050b",
                    "sha256:f32e77c3d1c4c087c4b6afdb2aef09bac0349cb7671fc983a1d277fa2b1aac34",
                    "sha256:c362c7b770e93dc5455247faf829d94481ede19686fc32a1e09adee29190ca3f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d24b88cc2b8d508cc9e95395b22efee96949b5986d403ab50f8f623c5c6c5b87",
                    "sha256:9184ad0f744526ec81efee6ad39fc2e3a3b0ed2109e65868dcb9dacb7826219f",
                    "sha256:690b807b18cb636fc86843b61211006b3af31bcd5bfb9c12fceb54f4c719e7bf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:646e49e07be7542dbd1985681f1cfca5d43bf73473097e0e1d76a8813b0aa9a6",
                    "sha256:ebfbaff777a29f99e6a950decb340c67f29e35e4863edc18bbcdd79c1c88dd73",
                    "sha256:3bd04e738ce6a9561642fb10e52022009a7b9055c64ff992f1cb9a5969c90931",
                    "sha256:b68745ef46db63b8938d97f076e420cd944f9e7eca614a0f5319afe82d1c62b6"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:13.115658692Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.465994028Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.465994028Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.465994028Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:25.573929543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:54.682393736Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:55.432929724Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.52294669Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.632791042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.645885374Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.682017858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.691678772Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.691678772Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:56.753994341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:56.874142713Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:43.379385177Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:43.379385177Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:13.026923804Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:13.115658692Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:a72b91dba7cd23f3d12160e3139b0698ebb36ed8223ddbd09982c38934f893a2",
                    "sha256:1d88ff96b11d01939233b231bc3fd05357a6ee0a670c8d6ccc52ede89217626b",
                    "sha256:cb4225340cb8f00f39663e506d759bbc5fa2730d55de5f6b0ebe2511ecc6372e",
                    "sha256:7b3f64ae387c72cccb0157a6491555ae3693057c40b1e0ebc3fbb168296be881",
                    "sha256:d5eabf39c2a7322608e19750d8fdb3dcf496748567efe79682dccdc2d53f23aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf588c5305b5b8592976d333a6d90396f673756d4acbbcb94af0487afc307b60",
                    "sha256:615c5dfee9619097904150117068dae347d2ce8efa6e5880f4568bc53bba995d",
                    "sha256:e80129dea28033f0458601756604f1363588102626190054ac833eb3dd292e7b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:764b1605db510755dec95bd5b1a9f98113096adf5910dec6301b8bbcde04b03a",
                    "sha256:5bb1154fd71b4183190888e4ef722be8c520087f06ddcdbf69952fff459715c6",
                    "sha256:23e0682b6d7f5266aa7063fdff98c691c750078f4dcbfaaa121c339d2b87671c",
                    "sha256:108c7f8f6d8a95e3cf38a6ce45f1fc0baf327974dfa8d7c4998079f1fa99736f"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:26.664161691Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:38.991562853Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:38.991562853Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:38.991562853Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:19.445965032Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:46.700035895Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:47.456948599Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.540244401Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.650370803Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.66016165Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.668269636Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.690380746Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.690380746Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:48.795630618Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:48.9155268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:57.170892728Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:57.170892728Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:26.568376801Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:26.664161691Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:354207cadb909910f17f9328d2d37d6095f7a9452ff2d49babbfc8a2d2c71344",
                    "sha256:e7c5ccfad4941864c9c1cafa79c65c7688e92092edc61aa501f22f6b94fff139",
                    "sha256:47ac9ea374c85d1be42007e36293d5d63cb1113825b731bf0175c6f665d35f1c",
                    "sha256:5bfb9d8f592cf06708cedbe87e0b795f2187ea8866485f58300b7c6ac26b331c",
                    "sha256:3b82309a1be4e192db46b7996d7bc382a1542125d12fefaf723719c64668a2d9",
                    "sha256:e70150f51aad54ab25c0d04173285ed92e2d09ed1619e6744239b37557d591ba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0d71b0bee5c8891b41f09835957987739a9dfeca26142c7085fdb754bc5dff18",
                    "sha256:4449c2056a62cf1025783c3f1be2a5686100c95dedc8ca9c8e0a15f525cd73b0",
                    "sha256:f57921b3643fab2a3a37016e6341e36beac7a1f7dddfd5e973b6c93bca4b65a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edeb9a2fe070c5b8825e0c9adc309f1877dca50e6419e3e6ed1f3b5f0b14df3b",
                    "sha256:b1e8991abaf46aa2ce6aad67f3615a8d163b09f722c1834ca6398a383f35deb0",
                    "sha256:fb8e01eb0a267e7f6e94db281876452da328b0417294c93ebc7d2927d3e5bac2",
                    "sha256:79ebb40686ae50b875d2c072baaaf58c7c4396d8ca0660a43da4926f830b3c57"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:06.564676898Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.867924Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.867924Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.867924Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:24.627686635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:53.408744922Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:54.207984067Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.295716566Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.420163453Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.429947776Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.439565891Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.480673448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.480673448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:55.426007869Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:55.550454946Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:37.543653937Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:37.543653937Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:06.474771484Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:06.564676898Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:403dcef4711d6d3f99841ca0fe0164ddfd4fac61ef1587a639f4009d4242918f",
                    "sha256:6c1429d3446602b15c7d37a9512577ea41d5e10b667eddfca8ec739beea56e28",
                    "sha256:04279ac2d7febc5670fca2e565455f183f7d7afee382d0b3e5644da4e9eeb468",
                    "sha256:da9a564e9e7a42b4f28dd574b53964b044c1b5ac9d68ffc9c43625dd56ebd91f",
                    "sha256:006cee11b061bc5a3ee0b2b8f8f0857a0fc04cde25cb132ec25af915c6994c3b",
                    "sha256:8916197e36dae863fc6856becbe169c88fd896229ebebbd17104dbad004c9435",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82c6d47f928047b470eee0d82e90f1c8d095ffd2c581bf2d3dce81aca09841c4",
                    "sha256:66c1318357f1dbf5f5bb1ff15eefcf5dec5631d6b9e3dad42033b8c13ee9fb7c",
                    "sha256:ccc4b1bf9486d0e0dd7a38c2f6313608ea69dda1d61fe1d7b3f10ce7a5dd2042",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0854e568f859ede1d02bd4c051825bc232d4758446d17f30492eff7ecce2d5d",
                    "sha256:0a0915877c478b4454355bd54ece78f9312c074cfaf24f0009752341972099de",
                    "sha256:b94f52077a6d11ce6ee23c7b217b8ad05800018a0c1eeaffabf1a98e350394dd",
                    "sha256:a82aa2655d8be98917565fc3922ddf2d4a858131cb6588994b1e5a0b188936bd"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:45.152587097Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:01.883578278Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:28.737071441Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.496759822Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.576356588Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.719563691Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.767460322Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.779045308Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:30.813151562Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:30.946516429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:14.876224425Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:14.876224425Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:45.057076243Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:45.152587097Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ea3373be7d936f31f8207b274f73cc993c48c81c7ab8ee819f296afd3cb49a21",
                    "sha256:a9f156e3ef14a7f04151439dd0b17637fb1e3e7970856bd04f871dbf65478619",
                    "sha256:5cde9094dc536f9937a992c1cc626625359e81aab0261f5d11b1e54d83069431",
                    "sha256:695d0c30470cf9de706397b15bab4569abd2444a34988a6dc198791260f9ec0f",
                    "sha256:c346940b338e879935067a1b15113b0d822b4d959e62c844167e7b02f542d1a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:64392c8f14539da2389d9ae096011e479a9a4748187bbc1eaa50c31ebf20f9b8",
                    "sha256:1625a1e41fbdf8112242552fa349c4d7e410fc359db2f0c8415c84202dff076c",
                    "sha256:907f4b5f48d5dc0d4475e02e983becc3af028418535b2879f11abdd41177d5b3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:805cff011e719900c41796187634af3f26ac30595fadbc8e0b980e5922abb7ef",
                    "sha256:5d3cd811676abeef41205191459edb336805926b83ac8faafb6bd31101c237cf",
                    "sha256:902d7e24e151c44a167d3bd62fb68dab4ca10bc0764b31461191d14c16b63e0c",
                    "sha256:5f227d5fe8809545b569c59d69c9415f663f0158c69c448f6a667f3c8bbeac45"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:29.058026786Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:47.336383978Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:16.978951726Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.700652956Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.778924516Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.897048728Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.906014284Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.914170307Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.942555186Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.942555186Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:18.980792885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:19.097530334Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:59.892772449Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:59.892772449Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:28.977388395Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.058026786Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:8c57cd7edcca55d07c28a956502eff98fd360cde7a1f92e156a5b9a599b340d8",
                    "sha256:42a61ad581cafa59cf88eac056dc3c381abde76415e731b9e8a285e4a0ad9e29",
                    "sha256:fc941d8900b4d16596f51f0b0674905f236fd2fa372e7f24e00c36623e3023cd",
                    "sha256:52e7634e192ea96c3c259a5ceb8c282cec2193717f8720b86f83373b4cf7ba8c",
                    "sha256:631d12ef05875e1d9b58e11a791ecc1f1eb8fc9d8f735088d9eda3ed00f4df87",
                    "sha256:a183423805df028c18538f66505ee622d027a9104241dfcbeb5b06f174e94e9b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f9fa4807439409f9f3b809c7e1d2872f471cd75aeb02dd3f5c41e28e58f67527",
                    "sha256:946454dde082ebc3fa375c26770f093cdacf096916f2dcfd500e6c5174e16975",
                    "sha256:ccdcc67bfb9f3002433f6df76faa60bdcff4e0cc4ae0fb3e539578fa0b77d769",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ca2ffe85850f6673d0feb4baaa0138180cb85d16e07bc92c8cb639b1b7ae99d",
                    "sha256:28520260e3cd7ad8fb8580c3d7deb252378dd5d0e08c315ceea6740021e6cb50",
                    "sha256:0d95eab15785b47ef750e61153ce17e88ee524b77301e09fb760b35f4276bfa7",
                    "sha256:eca036017d948ef22afd3d0a85415c49839f56bb0aae1144a53531dcdcc822bd"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.340757298Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:33.577608406Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:03.089896647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.31456214Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.399893006Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.505808448Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.516552482Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.52548088Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.534980961Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.534980961Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:05.623952056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:05.737883836Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:19.308424904Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:19.308424904Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.251533924Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.340757298Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:54ddc86c5d71bdaf311afa55eca9bac70d0d92d9584cf65bfe1ea3fbb34028ed",
                    "sha256:80416288105610093d7924b6d88db850228f2582e9620c8e0be874132251bdf6",
                    "sha256:ab1ff5c764221dfaba2c5ecee6449b3597c179120f44d4e1b61944c1efeba552",
                    "sha256:306cd6f03b50d4cfbec092ae62ae0a46913a4660f83c2242342be467037b7dcd",
                    "sha256:d50b53025f7c0538d03067ce9dc68b26967e9a1882dd6f0e5318e21b73e58131",
                    "sha256:886cf4629fd55232c71a11acfb8d23238dd27de35d951e9d47b8407f74853c02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b244cd54d80702f4e50ba111b20c3331eb55340c5bcb9f70e0c4ad23d0336fb2",
                    "sha256:9fe5935d295663c172b04301031b65c77487e69a7327d36a3e96b4ccbaa73fff",
                    "sha256:c8e7435127b40c59655b99fb391b34664f48e8229d9813996e0886d97961913c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0956307497b6c82e3c1549173ca9d48104889a6eb8d0510addd8af3857679a0",
                    "sha256:f04c7093429d8c857152bd666868a5c565363c1ee90d5d5837a966ddb363a7d0",
                    "sha256:3984654181b81b612cf1ea62beb3ef9828e000ed8031c1faf6317547dffd36f2",
                    "sha256:7e2e815415326079a374afcc6510ec2de233a2acdb1a5911fe88612eb92f4539"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:04.751916244Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:18.196344886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:26.438076335Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.704292854Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.786726022Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.908081096Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.917697973Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.927079151Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.963206051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.963206051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:29.069429781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:29.191337555Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.755548744Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.755548744Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:04.661254404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:04.751916244Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0da23169b8f80118d7e34f6d922b825f9133b30a474be202273a66820c98fe65",
                    "sha256:45ff4aeaf39639fd55e65f516d5474697119beda6b2cc6bff82ce6fb3b5f53b6",
                    "sha256:705a288f101f99ffcaa8cfdd23e64e04c906aa19a4ecdd94eea8afed7300e33d",
                    "sha256:23c06aa7a206e14d4a38d67d44e7627d4a3896c1e7f9532e84ca4980f3ae3567",
                    "sha256:3cf1d6bdb5dd01e6edaa341b498c87fbe62eaa016793d5d104af551a3cc48079",
                    "sha256:cac715f750dcba96e38e26c80b400c18e78145834d5495b2cdd0279d314f7a4d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aec11e4fd08e14435662965cb73742979e44f028a50a282352275fd18cd863d6",
                    "sha256:445bc6c556c8df87f1bcb914a5f01083cc72419f188e5fd827069f91a1eb5289",
                    "sha256:f37b6e7e2e4272f0c1831e42058957173f62afd92301ce79eec57a2de80b9236",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ee2c2fb5e1bd0db23673a5a73cdb89de2a229c03dc28e0edc047085c2b2687ab",
                    "sha256:66c703fc5cec8f0cd098dcce8c7560243f6ef0118edbbae9a66dad585c1a70fb",
                    "sha256:52e1fe375395e2d3d74e48f5ceac49fe43126f9d0eecbe0458c592b1099c1f20",
                    "sha256:11b3849147e18ae682c2727fcbb2742eb8b50a1d45ff66c8f6dfc2b893622494"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:18:23.107595808Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:31.140947884Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:06.654886178Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.889437381Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.992729279Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.123948499Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.160003921Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.172658856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.186416346Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.186416346Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:09.261764614Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:09.386382885Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:53.677659735Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:53.677659735Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:23.020359271Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:23.107595808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:f90064830487ba2223fd647346ed8a3be9713d707a619c8f75cbf2b5fdc17a89",
                    "sha256:4298dcd87e0db6a9d13ce10225215fdb897058c5cb683394de48f4f9a81fbdda",
                    "sha256:0ce866eec0971f64147da81363583fbf90b18575710350da22af51108665becb",
                    "sha256:f23d28580d521013ddd13f52db5cc565bef39a8357633e0cb81283e1560b5a2d",
                    "sha256:365dc53e6e260750b4ba942c6e2e8fa5dcf3f86ff2272670c0ab6f4e5c237c0e",
                    "sha256:f71ae96904ecac4e64e3df1a1315b3373be2e56a95a379c780d6a80b8ad8e096",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82f1552ee2a7cf1a26c9bc2d2170d77c5805aae3f5b11233130997c5b20b025c",
                    "sha256:43e057a86fa5191ce8fa7209611331eaf9bdd249fd37680b8201253351b8d230",
                    "sha256:a2e021fa89fd3c74cfd4102780da299e080370d8d1781df8ac56975a0f061939",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5573749c24907937a91ab3d75389a5683587331d5166a8a983d54b42e91eb25b",
                    "sha256:39a664687fcbe4b7f25bbfd4c832a4008cfd54aaf677e7ce298aca699debdeb8",
                    "sha256:1f07e1ac32ca7d997510bf1712591ba065685b6c7738ec0b09f65823eb52e8b7",
                    "sha256:c46fd3ea17ce614974dfd1c87227dc034f35e07983ddb7cc65f0c1ea904c2924"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:50.994501Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:20.641319513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:54.810673851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.550777756Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.643711244Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.75756289Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.770162739Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.819007638Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:56.7808915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:56.909990889Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:21.546954757Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:21.546954757Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:50.899206135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:50.994501Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:28d4e208a7a00b359594125dd821af14aa8f202a8ec604e2e7da4bec1888529a",
                    "sha256:174f2361902e2846e389337bb3303cc4a8a7345d7adf74bd1e5dd8fdcab0197a",
                    "sha256:607ba54df1c61c1e364e4894a43eaa9e200a3380fa1c25941b9633f5cdf1bf7d",
                    "sha256:26ef1631f9bc0161ddcbd62cb40e71a79b44bf255d7e6a65264edae1987a1729",
                    "sha256:bb0a9b183b38a2276f2829317f6886c6f498d6e5c76c85228f2521da544ace8d",
                    "sha256:3736f03f6d85824da841726d8605393e73b4e677a9f550f10807b0d505161894",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e68f2c2c4acd87cec5fafd4c8914e7a2a49b05afc1d0f44b0adef78d69f7ec8",
                    "sha256:73af136dd09f5932e6899b694d0041ca6b32bfca42409e77577b14c6635fdd7e",
                    "sha256:c81b8a5b064118bf193606a219c626cea60ae2ae1eab3ab9c316a81fdc322f59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fab48beffc82031db3f779a212eb8f136c7e3ab604526698128e420f2bb20a47",
                    "sha256:3d3a3167d0f748fd33f5b43b37a758736ffb04ed380e1bdc12aa93b66dcd06d3",
                    "sha256:dcdb36631df5c5e67643b89a8b805f68091833a0d8dfbdd1495f82b7eeda937b",
                    "sha256:69b124d588acc77ab94748c7e80a40cca43b508e9af8f0d82a0c68ca4a8f9fe6"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:41.734944058Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.630612431Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.734944058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:78d10f2b61cf9455e08548a49c1a3a90ce31f87ddbb77c0a692d41c168929fad",
                    "sha256:ea3ce7759e293f3dd148d8df3ee64cd1b880fe674ad4d879d2fb66a72688fdc8",
                    "sha256:c4ab860002dbfad0ccffb63e01ff29da6e997240fdbb46d1fb4e4572fa615a9e"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:33.266065664Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:06.716105061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.930799198Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.048023972Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.206984986Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.218315588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.229745456Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:09.408107823Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:09.551150821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:59.854492337Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:59.854492337Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:33.125288086Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:33.266065664Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:316401953f8ab334a3a0a753122a2f969971e9dcd4abee42f7b9918e065a7f11",
                    "sha256:0491259f8c30013e7cf7714099e21dca2d32f765aac298423a43aa9604686a9b",
                    "sha256:d0abcd6aff176b9649a822dea6e9933981195fa944d746c0f46665914e1bf55c",
                    "sha256:3cec69d2b43b8394076870079300499babef94f37c1f4d19b29ddfcad28c6afd",
                    "sha256:4fcb8bed64266ae624da7e418e4c2e386bc3a2d7096280ac02c3611aca5efb35",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f409281d6d41299fad858a2ef832fed3abba62d1b81fca008d392bd081e76e5b",
                    "sha256:05628832807df937d8bbcf3795d3476998ec5de066b931e19af3ed2bf74dd074",
                    "sha256:30008bc6f41ad1bd8b891d21fd15037886e92a5f557d51c503023c6e55d88b25",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a5f00af0c2ab1406136894ed5f738aece00f423a69a5faa85bd3b98c0e8b07e",
                    "sha256:d6ef06325315d58f77d73989ed8bbb4d474afc6a4e80ac89ce4ca29ce061004f",
                    "sha256:be89395e8d7ed54d7d2e6ce28f2b8cd22fd3f68c9804deb7bb8ec98fcdcdf4bc",
                    "sha256:6b341b90262b54b87c61d3b8c2419758d3692c999c33be34ed63ca408e7707ab"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:09.084220435Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.125484136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.860866263Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.97464861Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.113291519Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.124304078Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.166996422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:21.185237509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:21.317621807Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.562256952Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.562256952Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.932378936Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:09.084220435Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:93ed37ecbec63b6a705c0e806bb2672dae44aad8d5ac1ce61d1321f0cdb3b2f5",
                    "sha256:6e9b582fa5384d7f7905e1c0d41a81fb810d86990661bc68a90b45a4172a1d60",
                    "sha256:0d62838d725f04884f464e5e2e954359ae5348959c790f802be10e5bfbb1af0f",
                    "sha256:c870cbd66b3ae132f982fd79f256233ad58895a69ad6cb7656a5c85baaa75400",
                    "sha256:078fb21837288ea35cca62fad5b2037af88f7844f60bd3b0a0da045770152ddc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a65fe06c07fb2b301ace1f8a684b5a1bbbae8f5a78c7a689fb7d54c63b958d82",
                    "sha256:8b0ef62688ca14ff43e0db9d1fddebbd6be8574c3e0b90bc0c3f2daaba70b737",
                    "sha256:f2a888cb5d5332bd211cdb18b49cb1acc310fb3b924bac2d62016b9501f93150",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0d54bf653780011a612c9b24b99effaf185960e5ae6cd5e6ec1b886372e34cc",
                    "sha256:6063829ab4a80876b32a58cd41ad6c69a224b1f19d9d24a43d6044989aa04fd7",
                    "sha256:eb3854288863febd0ea39cbdcfca6e25d479bf48fc79361246e0aa19cc3a12cf",
                    "sha256:b409d756752cd3b3f1932e087c96bed16ffd6c9719b571e0766e22924cf1683a"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:19.19874242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:25.771724649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.458086836Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.546498434Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.667667028Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.679330726Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.691321328Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:27.696126872Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:27.807507547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:45.315391808Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:45.315391808Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.092419286Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.19874242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:474f509cb5eea21bf0718e0380d7b13c6fde15504373de439f8909fcf3119a1a",
                    "sha256:d997c907f739fd3f9cbd31e84323d9786df4cd20263fa1e18923e0a524cd508d",
                    "sha256:51310e236ccdd0fb3ceb99b981ef90d66b5f6adbe4766235d8f40b2e8232d10f",
                    "sha256:85591a815f3842c788751e06b7190b26efb241984270087d5fc4df7f2ada659d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d638fcd3d651ed38fac496dafd38205b8b1e7e58a53cca9bcd1e96aadbe56b9b",
                    "sha256:b0ebdab6fd02d5bb8a3fd87b2a10976773d6119f67117072f121837b9706cd61",
                    "sha256:d2e675b8086f49e4aec05988dc6f28d92ee13c1a011b1c497d900c3f7b199d8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b121453fcaf90d2054ed411b1b10a207b06439f037dc717a85c88ad451d3877",
                    "sha256:55473e29375955d1b9c0f577f5740bb4d28f0a5b858a65fdcc6b3a6390f58f92",
                    "sha256:a1228f5a63b2293f0851399347d2a07290ef47b93ebd89bca8a02ad23b82f7bf",
                    "sha256:782028a862c97b69461cb57e5bef1fd8b464d8f6a777caa2a47594f570009c35"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:30.738714459Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:35.062832518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.109739047Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.202273375Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.349151053Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.421020187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.430581869Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:37.624335879Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:37.741679865Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:57.031298399Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:57.031298399Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:30.634842391Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:30.738714459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:5bfad8fe537007bc6b9ca2d485d72c1d1350e5a011dc696a7c0362f8ba861112",
                    "sha256:4d4f2e5f7d8d01cbda94e61a8436ab3badf818b0cecd15b3b6b1fd8df635a627",
                    "sha256:d4d3c43a9051d5d74f85a702e7fc34db246ecda7d2591e891828421a59a1318e",
                    "sha256:f15a352416228e68db80c4562c001ca7738916231f9098315be5431a64ba2059",
                    "sha256:b81c058305163c96461ac297f679c62cfba1d933b1bf582f8fbb11c317d353f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85eb83ebbce9dc08bcb570adc80b870e009f0a5ada812b3937a034114b18aaf2",
                    "sha256:654bbcfb2ed7e65541a7436227c0ba0db40d524b72813e24cc7d6ba4745a24ff",
                    "sha256:30c81c00f93c1a7a1469bd271c3f5b3f9c7e036ad658522d0e7d6cfae354f96d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7a879e8f80c771d0c5f1c2f6554a85ffebbaf33da1e2fe050c4051ba29f5f57",
                    "sha256:1f49247277ee50c487db2c3827352feaee1223de676f7cb30ad824faed33ce4f",
                    "sha256:4001a192cf4f27014b9a0bc38f1dedf23caa533517b831153d754eaba5d371b6",
                    "sha256:5fbddee33ed333621f6e042956b378ca6ce6b886f81157feaf68dae63c368c59"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:12.551412478Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.296400304Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.988367236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.069469162Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.199352103Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.247182835Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.257047156Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:34.332407943Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:34.453373708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:39.019510544Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:39.019510544Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:12.453710384Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:12.551412478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a12ad07276f19b162694defa2ff93fbf1e1d77b382dcd0151977e7c51ec1f15d",
                    "sha256:9f3b41a9885f7a205a6307816a2fe42718c97e11579e3b51bb3a85d6f86bb305",
                    "sha256:a1a70382e0bdafbf708dc719940f71e7a2d41faca32f3539658b752935bfe6f0",
                    "sha256:88208ae6833fa8c3e90102762e560896ce9f225f1b1307a5c463b87bb7e5079e",
                    "sha256:1d57adfe88cf51e552b23a6640a8f0d97a3a64180a01af17e974369323d4e964",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d73f55517713e73317bf9bd90bbe7480a853bce455103463336546d1ddb9f0cd",
                    "sha256:afed1f40cf422efd7d7cdae986cddde5990714f03803397b8218434c2a8aa5c4",
                    "sha256:fef90dfc6a136812006c98e71ff86f2776113f1b79c7f93a0ad4a9c22aac4120",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:91fd19bfa869b188c5148f902bdf512167880f5849d640316eb517e3a50f76c7",
                    "sha256:9f6cecfb3609c68b215452af7910ce80b9c022a367e4bf53e2714cca75aeb465",
                    "sha256:6fe096028e21aa5475c80688e7a613ddc83c0663e1e82cb92b5cfe9c8071351e",
                    "sha256:f416ad15e793af78799a663cbc5a72e7c35845d557ba8f5325d91081ed12ec00"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:45.659475593Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:11.682200983Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:11.682200983Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:45.551174851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:45.659475593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:77523e51f3fa55621d1d7966c7ed4bb2d91744027bc1cf6ab96a7ac22780df26",
                    "sha256:0b9cd83016218889c28cea29aba9377ceaa3563ce9dbf57b7cd4ed1779be0d07",
                    "sha256:5cff7b2b9a0bc6826f2a015f2920eceb221f57d4db8ab553280560e15bb9a4ef"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.763522196Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:39.930352302Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.681119982Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.768938384Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.890357763Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.922301492Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.931927895Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:41.888179766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:42.017213443Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:54.5784183Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:54.5784183Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.658351303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.763522196Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:819afa784c3e2987aef1409e05047cb7a110fcfa980ed6cab9de540fdc82f9cb",
                    "sha256:fa841c5bde2c582d4ad9966a24638ed552c5b89121feb59693bee2a1973c5750",
                    "sha256:af58095d0c29e3e0c6524925e61b55a80e862f78f072b56faac3218958e9e5da",
                    "sha256:5b5306a15e3de2fcdb1e8e5ce2d01ca5719a2f38ea79dbd382def80995d703b6",
                    "sha256:1f829424482353ffeffb2fa28ee8f61964dfcd38e52dc91ad7da0a95a2792747",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7497f5f0860673c8b3718f168710de4ddc6e095bdb37f44f3ebdb9777ab20696",
                    "sha256:09125f579dcf295dc3d0b26be9296c54bd7bbeec45aeeeb039f42e518cb7ef2c",
                    "sha256:e99946c74f0e6583d3369df6e398ecd62d8f229a44314ce82623c9977c2ddea7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5e57825de0fc482adf233a74b9e5821669479c5e91a12081d7d7ab4744e9a5",
                    "sha256:a2117d12309c363206f3038ed0923f3ee59d8025a0a412fa7c5d181a7be0d606",
                    "sha256:e5612e9842f9f05f9f2ec2103f749d64bc63bd70af903f1a359db5bed58d5ddb",
                    "sha256:7b49bc9d44e4a65b813722b82837fb372ecdf1357342d1c4e8109878976f9efe"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:50.685251557Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:30.292139599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.438460441Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.523001967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.636541653Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.662793126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.734763532Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:32.835165297Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:32.953884027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:15.592071652Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:15.592071652Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:50.57916307Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:50.685251557Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:83d700c544e1d388547184b0b58966790d564912d1572a471504bc5c89498e56",
                    "sha256:11cf76cefeaf1112139de1045639cbccd3a57a547ac337fdc588235c7d65e35f",
                    "sha256:ebafff57fd7c429daf8be6dfca41e50fe3a0b3ac7246b7fa0cf6fbbc0420b765",
                    "sha256:75b833b595252828ac5698120664faed2e15081d34a86dd73185948e45afa5ba",
                    "sha256:79788cb6c25987d985dd1de111876e880eb7490a1973770f4c240b5c1d01204e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1bf4235489d8a8aadbcb887e1272aaaa0612c18a23ca3935f00b05861807a92",
                    "sha256:aa75a553a1713912a3a007aa0fb6a8094e45dd3d27ea17974a9aaa469e251f51",
                    "sha256:a240e6900a65724d931acc7625d592d1290f8995ad3b55dced088e079a9df1c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2398f14f78d5851947025b83db3fe6bc7d6c917d203549c127e9a243d25794f6",
                    "sha256:43f0e5de4971e97f366271156f709f91caa54a2bb318f602f7866c11e9628545",
                    "sha256:a64ca149b904a4fd6f7c7ebbdf6dc99003047b00db598901be00654dc79b4e18",
                    "sha256:f5e0d1860788827f0abc25bd7a18384f473dc088da3cee9184ab75efd76868a8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:04.43914599Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.406197917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:07.095814844Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.198030688Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.323577194Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.337495487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.373912066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:08.344650615Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:08.473198876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:30.751469703Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:30.751469703Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:04.337726788Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:04.43914599Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:de0acc254098be57b25b3573d9774773ef65a4fcaa06db4ced68df3d464b75ae",
                    "sha256:6fd16f9591b7e75eda7aa82ad9ca2f2883f73c745b4ae7900094fde6f5f3a182",
                    "sha256:32c191e36568ad3e3b83655eefea02dbfd5d6e6780af68021bf9dc226b7c72b5",
                    "sha256:cacb9e9cf2327e21af2d985de21c7398d4efd1d6ed68736983f3b2dce0ac2cf6",
                    "sha256:de0414d61c5298f55bbbf238cb165da20d3deef342ea10b1027726fc4c2ead29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e6e89d7feb3328bcaee2f80f75581617e21fbefe70715097f78ca83acd939305",
                    "sha256:cc8007c4d44b0595626af5145ab4533af8050e14119ca2a75277de4aa8970ec9",
                    "sha256:5ee8ee93e17be888a2050990ae5264d65232f283f2197e2abf5f0d94eab3b592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119847f5856d27cd4e043cc362634527f7860270820fef41527fd4295815a8f1",
                    "sha256:791b90643ef3468c3aec39dd3ba72ec765120a468e216852275cf6a5008b6ab8",
                    "sha256:b4e815a2d0f9cfe8a255c63f193414d487a7406653b65260cededa664780bb59",
                    "sha256:c8b603b48f4a1f6c63030cadf22aec316ead225c06c19a8b9c67b556cabdcb81"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:50.050198606Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:22.645447635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.313658027Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.402635934Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.53747386Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.561498047Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.571843507Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:24.547695956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:24.675471591Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:15.426315581Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:15.426315581Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:49.942914234Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:50.050198606Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0f23ba39c0652dc1e8f4c7ecc5e21333a0b55fa4db5f1a6a4fb06b005ebe3bcf",
                    "sha256:ff9efbdec5ea3692c38d94cdaf146dc648591772e6309be77b19f6f2a69acd12",
                    "sha256:7fd47df956546e21f9a46974ff89a2e1520dce1b18794d1e46813d6061b62158",
                    "sha256:bb6473d71d44395d7a777fc12fcaa0f41bfb272b57bba4b8c3a96e64e660589c",
                    "sha256:8851df102d3ee94ff51037b8135be86234001503f550b1aa4a51c45708974ea0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2cdf830e7f05f8c6abcdcda9f6a2c69c99ad3dae43534d683fae8b1f927d71df",
                    "sha256:7cb1fd1921fc228059ef7088e8836717999f3d42789694598ebbb1861e7d1724",
                    "sha256:e624c62faad1811af0276668a17c9f2593a4e92140c11f89ff8cf9bcfa8bb73b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16f1112eda98e42d16b34cd4bfed296e8573ed72263e18f0012ff1134c4a7602",
                    "sha256:a23fb01948c336bb1352061dbb443a0dc18f928c92932650329d1493e64806bd",
                    "sha256:e4dc7e9eec2fbc9b5c4e369e181cd2020e5d58fa2e842bbb328548112b072a42",
                    "sha256:5a13696f3a3617985c0b5f93f8784d9ce1001375838384407c20cb845fd1fcd8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:41.734944058Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:07.179620461Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.630612431Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.734944058Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:78d10f2b61cf9455e08548a49c1a3a90ce31f87ddbb77c0a692d41c168929fad",
                    "sha256:ea3ce7759e293f3dd148d8df3ee64cd1b880fe674ad4d879d2fb66a72688fdc8",
                    "sha256:c4ab860002dbfad0ccffb63e01ff29da6e997240fdbb46d1fb4e4572fa615a9e"
                ]
            },
            "variant": "v8"
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:57.101326428Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.012778303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.101326428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:9e2c8d71e1fdd6197c11e58d33fd19278a9139b8e4e68eae540ead300129b28b",
                    "sha256:ce20d69491df064864af861d7ad40f69f90b5ba1fd0ce7b556e4b6fb3054c20e",
                    "sha256:1aab3549c847c320a1e52f024745c17d83d7a3c250b6cf9e847da37ba05f84cb"
                ]
            },
            "variant": "v8"
        },
        "build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:28.035946022Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:53.593522423Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:03.578664428Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.346536518Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.453335285Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.61096714Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.620135356Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.666915734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:05.286716179Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:05.42797061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:58.302907766Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:58.302907766Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:27.917419976Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:28.035946022Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:8a7ef35bddc112bc2b5431fcd390b9065fbda13786e903966196fc5dea6c6ff7",
                    "sha256:7cfc8e6c3d60b5caf28fa87975f88f0bce672613d3fe5e43dcba3004c1a241c2",
                    "sha256:095440987c66a3da4b60dbcb1573c3f317725bef1b582527987bcb61232897b8",
                    "sha256:fdc851e31b9f8daca232f41c4331a41ce0b7d6ae39c6934e26b3b00ea83607c2",
                    "sha256:81f5a9a1455c7edc5a2b23fb1d25cf133960a48cca8b20beec4402d4600bdbab",
                    "sha256:5072066d883433d394dd39e61d315d510d65477455d1ebbfbc975661c0e5d6e5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a927bbd12e93e3bf2e0198bcbd29fc4da974e841b35e06753ebfa5d8497c8e8",
                    "sha256:5f331de56e31b06abd6639a649c8206602181ca42a24e9e5bcd53c8cb0d95117",
                    "sha256:b88d431a371254c9fb9c2c2e740f85d47d78fdd8d630f43f25d2875280155428",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e76d16263914442ebe25f79121fb8f6e5c3bdb2fa92b42fb0299d85e1ae66db",
                    "sha256:7be07cfa38e9c91a76809982c910396adfc18fbdcbbe19ca8901a4244de7e1c7",
                    "sha256:21dc308175a66c27f1fd21cf895c5e7ad16c6a2f311d663e7b4451f234845127",
                    "sha256:a1a075d8b144f19bb02d2c4c8ffa5270aac4f56179dd2cb4bf39f3e2ab53b05b"
                ]
            },
            "variant": "v8"
        },
        "build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:10.508383559Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.517978404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:25.677995698Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.784147927Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.885450105Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.00433604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.013309924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.021080443Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:27.789559574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.935595776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.335421401Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:40.335421401Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:10.405916814Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:10.508383559Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:d1bdc2c7daa01f1a34a743e068fba88eed6cae429a78ffaf1026438559e7079a",
                    "sha256:eac3b3efd93a07317becfaedb2134d2a36d626351201f53287a9549d27fd6b1e",
                    "sha256:d9afa0523f9365ceb09cbe55188000e2926bf566515bb96b22378399794b829f",
                    "sha256:56b8f1d66272dc0cb7dcc0a6c8dc62d0dffe95a4dadca792aea661ffa657e9b6",
                    "sha256:41f19aa4c6a781766a40b89056880de7381f82b80e25e911bed681c262b50808",
                    "sha256:114bbb7284a385061a40b3318241707806b11718e8429d2530403a1e1af396ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c36bb5822245b307f3f5cb02d270ef7b054e4c8c0c5a19b9afe2f700e7a0c8e7",
                    "sha256:12c4d981b996ad6f0694ea3bfc642bd029c189166382a03510961af463a6ad6c",
                    "sha256:cc297fa682932c85eb7e47d6065e550836e86b822afa332454fe5f26065d5a90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fcca4139646935ce3cc12873f462c82729def6262014ec15b614cbdc62973fb3",
                    "sha256:a4265575fdf1dcd718636f8fc09ec74f857517960332e213c12f3988a3e769cc",
                    "sha256:30ad313badcf92ccc7183148e07902ecca502c816dad73259585073c37d0384a",
                    "sha256:9c31d64d524dcf5bad80d1049e55d151fe035132088bc1457c51f007c8d7992e"
                ]
            },
            "variant": "v8"
        },
        "build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.243123668Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:18.48032328Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:29.733050906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.46634935Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.552360377Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.683110102Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.743003008Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.754119398Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:31.344858628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:31.464992595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:39.139036576Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:39.139036576Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.152019948Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.243123668Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:cfec8dc9675f1e7619cbfb27645cb2cece178566824212487b746a0ede92ffee",
                    "sha256:2724a7dd652ba165ac374bcbe1860c24553c9f3aebff4d66ad2ac127b333f978",
                    "sha256:65a14a718d427e7364a3e89eb98c0ed1a72d6dbfee605a93e7a27e3718ef2638",
                    "sha256:131acd714ec7176998398a67bb88983aec4768336e426a62c5402f4f9b0d4c63",
                    "sha256:c1106c57741bc52e2de61538583d82986fc689e99e5f63e4e5e644c3b547d398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0dbeb1c535388174228b102c48591e56d8d448b4ad149c16aaac0a995717a15",
                    "sha256:bd064ab2393e57585a3c1adeb6bb53a305af4fb4403c06184441d4002582d7e3",
                    "sha256:fc5cbf0c19b36eb461d982a340a21e334c2f9cc58516775e307abf559c20bf06",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:617b08cc28ac11075c97b20a72084cc361d5ca3832a625b99b5d9e2f13086af6",
                    "sha256:bbbbf916759e89cfc196f879d28bde5bc4fc603a6dbbe6bfe3bd19dc42cb88f2",
                    "sha256:3d2c456b8bf41f9b13fc3dded861facdd42a06fcb3d6ded7ddbdeb5b8ca50433",
                    "sha256:b585500dc650c468c3080f7f5057d182dc9b8ec3167ede5424768c0bcc080c55"
                ]
            },
            "variant": "v8"
        },
        "build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:29.470823275Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:29.245783563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:41.546976334Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.289886613Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.379547722Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.520074185Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.571982732Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.58238599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:43.179794438Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:43.297796316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:59.699815262Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:59.699815262Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:29.379435709Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:29.470823275Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:5b97ef633d062667252ac892f9a1ce68a2cb725edb1e0c284cb1770298e976bd",
                    "sha256:790337396924c5628e9dc010d9782d9d5b95551ccc10b248efe6bab82c824591",
                    "sha256:821a76bd989a560faf7bcf222b61bfcaa31aecc8e57b4775fc537133bbea6eba",
                    "sha256:d223892836322619baad183eccbf309657c7860d70afcd305a6042aefd1f5e6a",
                    "sha256:bf6be2c324807a030b5f3ec09ed6c5de269924db993ec3197327ce2954b115e3",
                    "sha256:bc3ee1f23e85c7a98cebf0445864891d0a0498becb1c4737ea1585a1658e5449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1f0c0f6899ee6ed82434ec530cd50409a3bfb73446cecfc94ec8348e3f6114d",
                    "sha256:11567a5a2dcda33387d4726465290138c2e2316fffb61cf0e166187db41f12fc",
                    "sha256:c5d5dba74ff3b7dbedd230f49db99e1dd15fb9ebe6f6c9683bb076daa2a9e957",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9cf6e219b3954f213e7fb6420806c6b66a738dbb0f746104f3a939409f5c8fce",
                    "sha256:5e467954618500862205de4abcdfc36ac693d9c9f3d2e480fa7c806a23ce2617",
                    "sha256:94dd0164cfb832ed3f26762bac6e41ce59f1a1f3cccfb7e17d2b5c3d6b89bf3c",
                    "sha256:b3126a3f20af24132d53f6c7f750b0e1e4aaaa9e34ffb56a51ee928f4a4406ed"
                ]
            },
            "variant": "v8"
        },
        "build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:11.553334561Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:19.594197447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.121877758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.842173236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.925821388Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.038421369Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.048575517Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.058735555Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:33.679211525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.805687062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:41.943526649Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:41.943526649Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:11.467844648Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:11.553334561Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:6a4f4bec2884881d645ed43ca1dbb9618a162907b280048d4ea679a4d769cb8c",
                    "sha256:ea990f59d187379cb7fc6d90d63db1c2bc13645f29665d18a270c086c935a0aa",
                    "sha256:69fead2cd05696e8a1d34b2d74fcfb35a0dc12e2e80cfcf219e9d0eaeac4f98f",
                    "sha256:e55005ed90f3fea99d88c503dbef56615f4128da5a849f869d8dd2e9da61d668",
                    "sha256:1a0474a6ff95afc1337c3250daf4d364f8210ad0a9142e0cabe71d85413c217c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de4954d1ae82c61cf470bd812ef6979451beac1b20a7bae2ee7ba13b2cd6bf41",
                    "sha256:526050c42b9c5c8cb4ac7336163e5bc710cdb925839b6a773b884648cf96d98a",
                    "sha256:5f94905656bf80058a4304b82b7ba8c0649a26d58e16b5a354505b091af89d70",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb9e0cb11ba93b5b05bce4341b4209e75fb04841f7a7f1584b31b1ae21f8a96a",
                    "sha256:395424aab06ef365301ac701e4bb30a4edb744d8723a88d5742dc30d59a5454b",
                    "sha256:7290e3a00dd0a2f708f374ff48387ab321b0a3eee2ded86649e5adc6f9c43fd6",
                    "sha256:40f4af5fc3ed65192c80da09fbc43f68ab202da09c149eb558d9244cdb9f41e8"
                ]
            },
            "variant": "v8"
        },
        "build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:37.624955893Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:08.180120595Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:08.180120595Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:37.537874563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:37.624955893Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:b05935aea3d0220cc86f8377d250ccfabf37c31812e8fa8715e7ed9f22ca0336",
                    "sha256:799ac97b71ba4db9362b2e83bd74954eb139be2f7d99853be4d19b036d511526",
                    "sha256:9829438abec014964df3e20ddb0f68595bc28df0d108e084dc231480b9a96c9b"
                ]
            },
            "variant": "v8"
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:29.714961775Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:00.344027231Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:00.344027231Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.626802096Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.714961775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:21adcf7642b36da30a60d1473d3df0b5c22a00f6364833fdddfd4d166896a0f2",
                    "sha256:17ec4926a7c55d6060461b149668d40e74b5ea0ca181e1c8e7f5c6051adaab14",
                    "sha256:2755162f95488bb5197926ba09d118107d4baf6504add099de503b6be7e0a1e0"
                ]
            },
            "variant": "v8"
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:05.674047764Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:32.132176393Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:32.132176393Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:05.580949838Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:05.674047764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:e2b910c792f6a2fecb965ba36981c1e11d921798ae9b6f95f29991c911675db9",
                    "sha256:8025f4bf8088fdae984c5ffced40386dcfaef7c8761e3a7ec908689b28d3f10a",
                    "sha256:722fcb5ecf0216aa38d8145bc9ee2fd7ae09048cdb7d2e173d4de776f5f1eea8"
                ]
            },
            "variant": "v8"
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:39.791995269Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.363136187Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:22:10.363136187Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:39.707815884Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:39.791995269Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:4cca39fc1778d12e666971b061e2b4fe78f50957e292a6f080b65439ed1ee9a3",
                    "sha256:868a79d5f435da59416f6f8e3ac55c1a3eb68d56539cecaa2e6dd208f87f4361",
                    "sha256:5b188c4f7fc4a38674ef543ea2a19a300cc7182a2eda57df244b33a0dc0ef0d9"
                ]
            },
            "variant": "v8"
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:43.986501696Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.673508907Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:14.673508907Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:43.902647384Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:43.986501696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:7ce38ad85be32139773a828f506100155e3ba7fd76194e33dd71046da7357515",
                    "sha256:99d4d5f8de6847da5da50fb401bceb28989c9be2c30c86de1d5fd12def7d3c8d",
                    "sha256:3e9a880c5b3d9b781052272f1e257327ce46faac6d3b5fa08240fc6036b3af8a"
                ]
            },
            "variant": "v8"
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:57.101326428Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.012778303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.101326428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:9e2c8d71e1fdd6197c11e58d33fd19278a9139b8e4e68eae540ead300129b28b",
                    "sha256:ce20d69491df064864af861d7ad40f69f90b5ba1fd0ce7b556e4b6fb3054c20e",
                    "sha256:1aab3549c847c320a1e52f024745c17d83d7a3c250b6cf9e847da37ba05f84cb"
                ]
            },
            "variant": "v8"
        },
        "bullseye": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.352584415Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.208454071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.352584415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:5d53eab09d84cc152ec2a314c91e3bf8793dfa4a73070ac53e3151f73d005048",
                    "sha256:abb873b4d6ec619e5d934d5605fb06266074eb7901200f52b1f07bb33869d9a2",
                    "sha256:5429722fd18763d8cd5b48100342688f0928e4678d071a04f0d2727738f85f6a"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:08.713095109Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.558377971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.713095109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:7d5dc5c1c282391c2be187e828a7f5faa1dcb7a3979a70a2fae1330f45233484",
                    "sha256:77ed872cac29e01f7fb28045b7e4c209d7c8791e8347681245d10b343d5f0e55",
                    "sha256:3e6379912ace1ef448e3357378e7ccf9be7cb64ff46346dc9a68006a60c14571"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.184213533Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.084213282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.184213533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:bc545dc1b82e2bce00c8feda9632052f597036acd909b46ecb2763eab38d63e8",
                    "sha256:2d2fb1d8ce33a878c2e11f05b49d8644cbab05fc882e4b0e79ff043f277bb7e7",
                    "sha256:84a4a36632376f3dbde45f61a3ee931fa8af7d7751e7491fb18bf618861e9b3c"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:21.398307242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.29462966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.398307242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:f642dbd3132a7218700d496991fa569282469d5635a4c58fc21285d09d91cf65",
                    "sha256:3a80cffbb950b70699dd58975390dc93dccdc7859996db818b7eedfbf3a8e45b",
                    "sha256:5ea70f295f1d0b2e4ab49b9576f01a8ba8a025f5028bff1dd891e7c8beae6a2b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:17.411324525Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.31053864Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.411324525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:8d115c312525ed7acadf15d4a924006e7aad6aab50c47a2a27b7c0727c11e90c",
                    "sha256:72632b4c06dd8d99219f760078e2ca52e0ea25a334dcaa1719260734d24a8850",
                    "sha256:35af128ddc50e9598df94c3e1648be49e5590c6f301ae6dfbc916fd5e128026b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:38.457561963Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.349203723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.457561963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:1a7aaacf679b474c9ddd03796772695e0e9eb8a63acbca68fd2df22837bc53c4",
                    "sha256:8603d023289e2ae0d869d64c09fa5ed2f9d6df6ec18e0f70ce4fb66f057155b9",
                    "sha256:6d6aa2a2610176829648fe52276dcd08f805b3f433d13e0f4af7fbd53a5fb182"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.5221638Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.417051734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.5221638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:ba1f9e8f930b8a3f9edcbdcb1ddcabef6dbea7bbe90810fff72c67b7c6fcdd29",
                    "sha256:ad26600a3fb40130e56f8be1e7bb28a3b3a5874bf5bc6648c571d89535a60c75",
                    "sha256:d0ce5cdae4691a1f4da62f9a5134bd486224e312a24ec1b6f3e601f4a7e3ce59"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.737161871Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.635497882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.737161871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:f72e944e459fc19ff4121ae01748da64e74cad323ca694d61e4e40c60e7cde40",
                    "sha256:6166d793ae14dc7d2aa454975240b08e52d4f41262c1272887b80b1ddf46c648",
                    "sha256:1bd4582c17fd269910d1a5ce63267d6e2f9b6e1628b964daeeb89961a7ab1072"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.206833314Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.10688511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.206833314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:d6fa15f231e5f573b4217b8ad6dcead87ec9fb148cdd9a841cc0a269755360b1",
                    "sha256:5434aed8d8ebc71937029db6f870941f41f0b7741d6b12db5cae06f4306a2dc3",
                    "sha256:dd29935feea8f1f4c602ddf1210f5e2550c4ee6b895cfbb1bdb911bf72eca3f7"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:36.234636766Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.131701783Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.234636766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:ebaed2655d9f063e9a73eff43ae86b058a01b55b3335e9510a01dca49a627846",
                    "sha256:5686c9bfd0b08109bf65e508151e416bf72569887d9425af83cd497cf5df70c6",
                    "sha256:737e359f10ad5da0512f6f04f053ed2461891e20f26d381ac1119979e7fb8b35"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:57.101326428Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.012778303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.101326428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:9e2c8d71e1fdd6197c11e58d33fd19278a9139b8e4e68eae540ead300129b28b",
                    "sha256:ce20d69491df064864af861d7ad40f69f90b5ba1fd0ce7b556e4b6fb3054c20e",
                    "sha256:1aab3549c847c320a1e52f024745c17d83d7a3c250b6cf9e847da37ba05f84cb"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:28.035946022Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:53.593522423Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:03.578664428Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.346536518Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.453335285Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.61096714Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.620135356Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.666915734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:05.286716179Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:05.42797061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:58.302907766Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:58.302907766Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:27.917419976Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:28.035946022Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:8a7ef35bddc112bc2b5431fcd390b9065fbda13786e903966196fc5dea6c6ff7",
                    "sha256:7cfc8e6c3d60b5caf28fa87975f88f0bce672613d3fe5e43dcba3004c1a241c2",
                    "sha256:095440987c66a3da4b60dbcb1573c3f317725bef1b582527987bcb61232897b8",
                    "sha256:fdc851e31b9f8daca232f41c4331a41ce0b7d6ae39c6934e26b3b00ea83607c2",
                    "sha256:81f5a9a1455c7edc5a2b23fb1d25cf133960a48cca8b20beec4402d4600bdbab",
                    "sha256:5072066d883433d394dd39e61d315d510d65477455d1ebbfbc975661c0e5d6e5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a927bbd12e93e3bf2e0198bcbd29fc4da974e841b35e06753ebfa5d8497c8e8",
                    "sha256:5f331de56e31b06abd6639a649c8206602181ca42a24e9e5bcd53c8cb0d95117",
                    "sha256:b88d431a371254c9fb9c2c2e740f85d47d78fdd8d630f43f25d2875280155428",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e76d16263914442ebe25f79121fb8f6e5c3bdb2fa92b42fb0299d85e1ae66db",
                    "sha256:7be07cfa38e9c91a76809982c910396adfc18fbdcbbe19ca8901a4244de7e1c7",
                    "sha256:21dc308175a66c27f1fd21cf895c5e7ad16c6a2f311d663e7b4451f234845127",
                    "sha256:a1a075d8b144f19bb02d2c4c8ffa5270aac4f56179dd2cb4bf39f3e2ab53b05b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:10.508383559Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.517978404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:25.677995698Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.784147927Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.885450105Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.00433604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.013309924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.021080443Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:27.789559574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.935595776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.335421401Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:40.335421401Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:10.405916814Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:10.508383559Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:d1bdc2c7daa01f1a34a743e068fba88eed6cae429a78ffaf1026438559e7079a",
                    "sha256:eac3b3efd93a07317becfaedb2134d2a36d626351201f53287a9549d27fd6b1e",
                    "sha256:d9afa0523f9365ceb09cbe55188000e2926bf566515bb96b22378399794b829f",
                    "sha256:56b8f1d66272dc0cb7dcc0a6c8dc62d0dffe95a4dadca792aea661ffa657e9b6",
                    "sha256:41f19aa4c6a781766a40b89056880de7381f82b80e25e911bed681c262b50808",
                    "sha256:114bbb7284a385061a40b3318241707806b11718e8429d2530403a1e1af396ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c36bb5822245b307f3f5cb02d270ef7b054e4c8c0c5a19b9afe2f700e7a0c8e7",
                    "sha256:12c4d981b996ad6f0694ea3bfc642bd029c189166382a03510961af463a6ad6c",
                    "sha256:cc297fa682932c85eb7e47d6065e550836e86b822afa332454fe5f26065d5a90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fcca4139646935ce3cc12873f462c82729def6262014ec15b614cbdc62973fb3",
                    "sha256:a4265575fdf1dcd718636f8fc09ec74f857517960332e213c12f3988a3e769cc",
                    "sha256:30ad313badcf92ccc7183148e07902ecca502c816dad73259585073c37d0384a",
                    "sha256:9c31d64d524dcf5bad80d1049e55d151fe035132088bc1457c51f007c8d7992e"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.243123668Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:18.48032328Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:29.733050906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.46634935Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.552360377Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.683110102Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.743003008Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.754119398Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:31.344858628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:31.464992595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:39.139036576Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:39.139036576Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.152019948Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.243123668Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:cfec8dc9675f1e7619cbfb27645cb2cece178566824212487b746a0ede92ffee",
                    "sha256:2724a7dd652ba165ac374bcbe1860c24553c9f3aebff4d66ad2ac127b333f978",
                    "sha256:65a14a718d427e7364a3e89eb98c0ed1a72d6dbfee605a93e7a27e3718ef2638",
                    "sha256:131acd714ec7176998398a67bb88983aec4768336e426a62c5402f4f9b0d4c63",
                    "sha256:c1106c57741bc52e2de61538583d82986fc689e99e5f63e4e5e644c3b547d398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0dbeb1c535388174228b102c48591e56d8d448b4ad149c16aaac0a995717a15",
                    "sha256:bd064ab2393e57585a3c1adeb6bb53a305af4fb4403c06184441d4002582d7e3",
                    "sha256:fc5cbf0c19b36eb461d982a340a21e334c2f9cc58516775e307abf559c20bf06",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:617b08cc28ac11075c97b20a72084cc361d5ca3832a625b99b5d9e2f13086af6",
                    "sha256:bbbbf916759e89cfc196f879d28bde5bc4fc603a6dbbe6bfe3bd19dc42cb88f2",
                    "sha256:3d2c456b8bf41f9b13fc3dded861facdd42a06fcb3d6ded7ddbdeb5b8ca50433",
                    "sha256:b585500dc650c468c3080f7f5057d182dc9b8ec3167ede5424768c0bcc080c55"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:29.470823275Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:29.245783563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:41.546976334Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.289886613Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.379547722Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.520074185Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.571982732Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.58238599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:43.179794438Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:43.297796316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:59.699815262Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:59.699815262Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:29.379435709Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:29.470823275Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:5b97ef633d062667252ac892f9a1ce68a2cb725edb1e0c284cb1770298e976bd",
                    "sha256:790337396924c5628e9dc010d9782d9d5b95551ccc10b248efe6bab82c824591",
                    "sha256:821a76bd989a560faf7bcf222b61bfcaa31aecc8e57b4775fc537133bbea6eba",
                    "sha256:d223892836322619baad183eccbf309657c7860d70afcd305a6042aefd1f5e6a",
                    "sha256:bf6be2c324807a030b5f3ec09ed6c5de269924db993ec3197327ce2954b115e3",
                    "sha256:bc3ee1f23e85c7a98cebf0445864891d0a0498becb1c4737ea1585a1658e5449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1f0c0f6899ee6ed82434ec530cd50409a3bfb73446cecfc94ec8348e3f6114d",
                    "sha256:11567a5a2dcda33387d4726465290138c2e2316fffb61cf0e166187db41f12fc",
                    "sha256:c5d5dba74ff3b7dbedd230f49db99e1dd15fb9ebe6f6c9683bb076daa2a9e957",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9cf6e219b3954f213e7fb6420806c6b66a738dbb0f746104f3a939409f5c8fce",
                    "sha256:5e467954618500862205de4abcdfc36ac693d9c9f3d2e480fa7c806a23ce2617",
                    "sha256:94dd0164cfb832ed3f26762bac6e41ce59f1a1f3cccfb7e17d2b5c3d6b89bf3c",
                    "sha256:b3126a3f20af24132d53f6c7f750b0e1e4aaaa9e34ffb56a51ee928f4a4406ed"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:11.553334561Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:19.594197447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.121877758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.842173236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.925821388Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.038421369Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.048575517Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.058735555Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:33.679211525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.805687062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:41.943526649Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:41.943526649Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:11.467844648Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:11.553334561Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:6a4f4bec2884881d645ed43ca1dbb9618a162907b280048d4ea679a4d769cb8c",
                    "sha256:ea990f59d187379cb7fc6d90d63db1c2bc13645f29665d18a270c086c935a0aa",
                    "sha256:69fead2cd05696e8a1d34b2d74fcfb35a0dc12e2e80cfcf219e9d0eaeac4f98f",
                    "sha256:e55005ed90f3fea99d88c503dbef56615f4128da5a849f869d8dd2e9da61d668",
                    "sha256:1a0474a6ff95afc1337c3250daf4d364f8210ad0a9142e0cabe71d85413c217c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de4954d1ae82c61cf470bd812ef6979451beac1b20a7bae2ee7ba13b2cd6bf41",
                    "sha256:526050c42b9c5c8cb4ac7336163e5bc710cdb925839b6a773b884648cf96d98a",
                    "sha256:5f94905656bf80058a4304b82b7ba8c0649a26d58e16b5a354505b091af89d70",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb9e0cb11ba93b5b05bce4341b4209e75fb04841f7a7f1584b31b1ae21f8a96a",
                    "sha256:395424aab06ef365301ac701e4bb30a4edb744d8723a88d5742dc30d59a5454b",
                    "sha256:7290e3a00dd0a2f708f374ff48387ab321b0a3eee2ded86649e5adc6f9c43fd6",
                    "sha256:40f4af5fc3ed65192c80da09fbc43f68ab202da09c149eb558d9244cdb9f41e8"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:37.624955893Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:08.180120595Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:08.180120595Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:37.537874563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:37.624955893Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:b05935aea3d0220cc86f8377d250ccfabf37c31812e8fa8715e7ed9f22ca0336",
                    "sha256:799ac97b71ba4db9362b2e83bd74954eb139be2f7d99853be4d19b036d511526",
                    "sha256:9829438abec014964df3e20ddb0f68595bc28df0d108e084dc231480b9a96c9b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:29.714961775Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:00.344027231Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:00.344027231Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.626802096Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.714961775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:21adcf7642b36da30a60d1473d3df0b5c22a00f6364833fdddfd4d166896a0f2",
                    "sha256:17ec4926a7c55d6060461b149668d40e74b5ea0ca181e1c8e7f5c6051adaab14",
                    "sha256:2755162f95488bb5197926ba09d118107d4baf6504add099de503b6be7e0a1e0"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:05.674047764Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:32.132176393Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:32.132176393Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:05.580949838Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:05.674047764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:e2b910c792f6a2fecb965ba36981c1e11d921798ae9b6f95f29991c911675db9",
                    "sha256:8025f4bf8088fdae984c5ffced40386dcfaef7c8761e3a7ec908689b28d3f10a",
                    "sha256:722fcb5ecf0216aa38d8145bc9ee2fd7ae09048cdb7d2e173d4de776f5f1eea8"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:39.791995269Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.363136187Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:22:10.363136187Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:39.707815884Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:39.791995269Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:4cca39fc1778d12e666971b061e2b4fe78f50957e292a6f080b65439ed1ee9a3",
                    "sha256:868a79d5f435da59416f6f8e3ac55c1a3eb68d56539cecaa2e6dd208f87f4361",
                    "sha256:5b188c4f7fc4a38674ef543ea2a19a300cc7182a2eda57df244b33a0dc0ef0d9"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:43.986501696Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.673508907Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:14.673508907Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:43.902647384Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:43.986501696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:7ce38ad85be32139773a828f506100155e3ba7fd76194e33dd71046da7357515",
                    "sha256:99d4d5f8de6847da5da50fb401bceb28989c9be2c30c86de1d5fd12def7d3c8d",
                    "sha256:3e9a880c5b3d9b781052272f1e257327ce46faac6d3b5fa08240fc6036b3af8a"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:57.101326428Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.012778303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.101326428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:9e2c8d71e1fdd6197c11e58d33fd19278a9139b8e4e68eae540ead300129b28b",
                    "sha256:ce20d69491df064864af861d7ad40f69f90b5ba1fd0ce7b556e4b6fb3054c20e",
                    "sha256:1aab3549c847c320a1e52f024745c17d83d7a3c250b6cf9e847da37ba05f84cb"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.352584415Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.208454071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.352584415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:5d53eab09d84cc152ec2a314c91e3bf8793dfa4a73070ac53e3151f73d005048",
                    "sha256:abb873b4d6ec619e5d934d5605fb06266074eb7901200f52b1f07bb33869d9a2",
                    "sha256:5429722fd18763d8cd5b48100342688f0928e4678d071a04f0d2727738f85f6a"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:08.713095109Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.558377971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.713095109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:7d5dc5c1c282391c2be187e828a7f5faa1dcb7a3979a70a2fae1330f45233484",
                    "sha256:77ed872cac29e01f7fb28045b7e4c209d7c8791e8347681245d10b343d5f0e55",
                    "sha256:3e6379912ace1ef448e3357378e7ccf9be7cb64ff46346dc9a68006a60c14571"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.184213533Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.084213282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.184213533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:bc545dc1b82e2bce00c8feda9632052f597036acd909b46ecb2763eab38d63e8",
                    "sha256:2d2fb1d8ce33a878c2e11f05b49d8644cbab05fc882e4b0e79ff043f277bb7e7",
                    "sha256:84a4a36632376f3dbde45f61a3ee931fa8af7d7751e7491fb18bf618861e9b3c"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:21.398307242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.29462966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.398307242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:f642dbd3132a7218700d496991fa569282469d5635a4c58fc21285d09d91cf65",
                    "sha256:3a80cffbb950b70699dd58975390dc93dccdc7859996db818b7eedfbf3a8e45b",
                    "sha256:5ea70f295f1d0b2e4ab49b9576f01a8ba8a025f5028bff1dd891e7c8beae6a2b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:17.411324525Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.31053864Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.411324525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:8d115c312525ed7acadf15d4a924006e7aad6aab50c47a2a27b7c0727c11e90c",
                    "sha256:72632b4c06dd8d99219f760078e2ca52e0ea25a334dcaa1719260734d24a8850",
                    "sha256:35af128ddc50e9598df94c3e1648be49e5590c6f301ae6dfbc916fd5e128026b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:38.457561963Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.349203723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.457561963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:1a7aaacf679b474c9ddd03796772695e0e9eb8a63acbca68fd2df22837bc53c4",
                    "sha256:8603d023289e2ae0d869d64c09fa5ed2f9d6df6ec18e0f70ce4fb66f057155b9",
                    "sha256:6d6aa2a2610176829648fe52276dcd08f805b3f433d13e0f4af7fbd53a5fb182"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.5221638Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.417051734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.5221638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:ba1f9e8f930b8a3f9edcbdcb1ddcabef6dbea7bbe90810fff72c67b7c6fcdd29",
                    "sha256:ad26600a3fb40130e56f8be1e7bb28a3b3a5874bf5bc6648c571d89535a60c75",
                    "sha256:d0ce5cdae4691a1f4da62f9a5134bd486224e312a24ec1b6f3e601f4a7e3ce59"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.737161871Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.635497882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.737161871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:f72e944e459fc19ff4121ae01748da64e74cad323ca694d61e4e40c60e7cde40",
                    "sha256:6166d793ae14dc7d2aa454975240b08e52d4f41262c1272887b80b1ddf46c648",
                    "sha256:1bd4582c17fd269910d1a5ce63267d6e2f9b6e1628b964daeeb89961a7ab1072"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.206833314Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.10688511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.206833314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:d6fa15f231e5f573b4217b8ad6dcead87ec9fb148cdd9a841cc0a269755360b1",
                    "sha256:5434aed8d8ebc71937029db6f870941f41f0b7741d6b12db5cae06f4306a2dc3",
                    "sha256:dd29935feea8f1f4c602ddf1210f5e2550c4ee6b895cfbb1bdb911bf72eca3f7"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:36.234636766Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.131701783Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.234636766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:ebaed2655d9f063e9a73eff43ae86b058a01b55b3335e9510a01dca49a627846",
                    "sha256:5686c9bfd0b08109bf65e508151e416bf72569887d9425af83cd497cf5df70c6",
                    "sha256:737e359f10ad5da0512f6f04f053ed2461891e20f26d381ac1119979e7fb8b35"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "buster": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:45.472220808Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.36595893Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.472220808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:021a37c4d70345ffbc66d63ae4cf2ac563544a488e7325558a7d51510b0238a2",
                    "sha256:15734b1841de90ca6b1abcdf22beab13c2e9ff6d0ab441c008a30d585e4b7907",
                    "sha256:879111528f2ebf4f8cd3144147fdd07eb9a5e2dbf68eded9a3496e9d44917d5e"
                ]
            },
            "variant": "v8"
        },
        "buster-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:38.733211976Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:55.464611292Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.175637552Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.265434925Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.379534812Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.388358474Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.396129991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:57.011330178Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:57.129002331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:01.815654213Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:01.815654213Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:38.592525797Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:38.733211976Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:61acbe232cc383f45ae0f242e3a1c3b044cf8f41734ab5c8d5ce4993e4e3dba5",
                    "sha256:f64b741d550631e9f8b5cce58dc90f34cec56cf7bccadae57955d4eb76732a70",
                    "sha256:ec3195ade3dea7221e271c9aebf52782a34ab13e83d0f715f9c1c340f9d634b0",
                    "sha256:a44c2272725a5c13968a0e4dbca40630b5eebc5a0635c08b766e00209d835b8a",
                    "sha256:dbe9e9f443597353ebb4b0bfab43cf3cd86cab44a9b262883d1406ad939f474b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c696a556843095fd60c2ba3a547087f613f5a6c857edc988fb77c06b03bb7b6",
                    "sha256:3e5209c8a681d22499721063ce36fd1c6e1f780583260ea9864e5f02aa3bb5ec",
                    "sha256:15ff42dbb181be1af16798438c134f322c548d8d81021f1c53c83c74e00559ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac9507ad5a25b3bc9ff80471388523d5a499523762be7491f687526ae04cd14b",
                    "sha256:66f8def60bd76ac926c889e7d7b69a742b4d4d33bf4a2e723b64f3197e144830",
                    "sha256:8ec4e895b51ce4f7a5a028418337383630c0d8aee5deaabe9bf2c3b9508db624",
                    "sha256:c6f2842e271d171977821a5fbeac9e794500c1665fbcef52d9aed02a53756279"
                ]
            },
            "variant": "v8"
        },
        "buster-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:19.311583617Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.191120326Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.957570467Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.051555456Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.237355092Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.246097145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.254003784Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:13.887024396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.031525593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:42.188148265Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:42.188148265Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:19.171383709Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:19.311583617Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:451b8ffffee9f8506833158d79dbade97c675d277f7a6ec567da48c1d51d61b8",
                    "sha256:887f00e3039b3f4900ce590e16e4a79c68f499414ac260b5e15c30710ed3f2ca",
                    "sha256:96dba296bc32b32211a9a15854bee92962655e32c8b3dd63b67bce0d7877eebc",
                    "sha256:f46f15220d0a34b9e7777594720590a4e06ec743a9b7d27ebd8b6f262dccbb0c",
                    "sha256:2dd7e8a42ca9de9888af6676f97a1971d1d45d9d23e5040f82e9bedc49ad6cf8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:be2e1a79cbda0044e0f33834afca89e76b0ea21743f935b142ae8d62f3ca32d9",
                    "sha256:cfd745522c22fa0b8d56045c33cb9bb867fa1cb08e78de950980b773ee266956",
                    "sha256:c58f1cbae9187ef47e2cf809105138a5bc02b4d18255a5b4c70afd59812197dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0030fa92bf7aaa822bf9dcd52fc4ed951e7b4c27c622598171772ccef8a36165",
                    "sha256:5a4679e86c26fe679102d03e1efa5f70a0318ce6abf33184e4a86e04f9d5089e",
                    "sha256:d525b4e446f9ec028f49d513b31fbb2682deaf37820644ece36784022cc615ff",
                    "sha256:6cbcea344b637a8a2c8c71bfd20dc49ce7b7a687507f11c914239c36cfa5e6f9"
                ]
            },
            "variant": "v8"
        },
        "buster-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:19.841343198Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:19.88668639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.548785628Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.622793661Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.738479962Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.747877063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.756409Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:21.389329746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:21.50701353Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:43.823883786Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:43.823883786Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.736670702Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.841343198Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:ba46c9028aa7674523e38ac780676a3076306a397f02a421eb21a348f9bd2fe2",
                    "sha256:1ff8a9cf2891cfde0660f8660adfc23770420afade9c26788dc7a2f0e6cff5f5",
                    "sha256:86be0f974d3e3fe0a5917c4ebbef38d2ab10b3fbdaa77cff64542bac9695a442",
                    "sha256:8cfd72b823a6982b9801bf8e93cc7bb963f0d6eceec2c2a77e1f9c908b8d3cf0",
                    "sha256:888e1ca85508d079641196f87819357e9c4123d69b9e96b74c48a71ec750cef5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b4487904f0bd97cae16bf2303d03e93919b2f4584e94d28b6dfcbbf046b191b",
                    "sha256:6352f688e29cb01b59680ed8bb1ca7fe5ed62b740c8284d5fd5385ffc13bf8ba",
                    "sha256:efb425c6768f2365ee09041df09964fb1e0ee52137157a06b35881b74020d488",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b2ae898a37ac25f4d831c9c3816614aee65125625ed0dd7a32dae2e24fbe019",
                    "sha256:2d7a0a18e204932c2cbce522d78a8370b363fe5d82b54cf835646b47c9573fb2",
                    "sha256:d1ef09265f8cbc2ed3608c512371997fcb78ceba614dabd35ee98b77097e515f",
                    "sha256:69ea0d89ac71d74f7b5ee9075f85a4f50923e1fd6132ca79c4026908cdac8eb2"
                ]
            },
            "variant": "v8"
        },
        "buster-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:35.958176194Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.069961947Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.738752729Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.816608091Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.923412005Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.934806877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.968250381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:18.528439354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:18.648690815Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:59.819638003Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:59.819638003Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:35.860696817Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:35.958176194Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:5c7e1e272f19dd29f9f46757a7c76a894d654dc498c4d847f806d17b944a0dee",
                    "sha256:b2d052daaebc4d1bf1f6b2f4020caf7145ecb5529c92620ac13b49a66590910a",
                    "sha256:69a5aba8ec206f81819760e4bea2e093f77093175087124f3812352d69511347",
                    "sha256:818895baff25299f57cedc83cab4cbfc0291342661beb0f861a5a34edb8cd239",
                    "sha256:dfb090e17c7a0a34d9bcfbe267ee6ce3bb49f76d405a99379d0a5578df422ae3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bc04aafcd62dbd3218ecc8df7e6987eca747f3ba2e678e92ac4ae49794fb2e72",
                    "sha256:7e55cece18e33523cb26737a8d62ffbba864a0bafba8f5146932ce38f532be09",
                    "sha256:b040c6a579b8f9260cb98130cb32ce2e2f5b7851cb1e50c314cead14c9dff101",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:681de681ae2dda038cf895625f7585829a3a6de7a51f6890750b6b0e4ad18ed7",
                    "sha256:111ad7a69c27c0de12fead953e74db997d9292a44befd8293e45d531251c37e2",
                    "sha256:815f66da047ee50271e93c4f5fa9e94874d875241c3ee9317307fac90ede35b5",
                    "sha256:95a3834c54b749303598167c9c98444a71e357a1205ef05494c69fa1385d912c"
                ]
            },
            "variant": "v8"
        },
        "buster-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:15.580671797Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:28.519195181Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.652350826Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.732008111Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.847937493Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.856529027Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.885941565Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:30.480265417Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:30.609538155Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:38.54986149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:38.54986149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:15.470496432Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:15.580671797Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:3972a045f3866b7456b0e94a9ab4c870706dceab1e16236e834cee1d9fbd1630",
                    "sha256:18dec0fd1e834501b7d2f138843b6fb5b57160aee0a24c3e92fccf5da2db323b",
                    "sha256:13d006a7b7882ee42d1f19cf794c4193a16b5931b2893a9c9155a581d62afef5",
                    "sha256:8cfe72fd4573263941028461fcb59095d124ffc7bda51117a3d8c2b273d88a9f",
                    "sha256:3a22e2e4427c0fd0f15a64bb92f6ad1758a9af281d827ec8b4e6edfab18c299a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b936e5993fa53c82e5ab880ce782227c9cdc3940fbff37d2826d8bc34605b022",
                    "sha256:108143e801bbe691a90e9184218a587e75855630431edb4ce93138fd99b27fb7",
                    "sha256:483c521f9cdf812d79d1090eb69b48450597de777c1939f10d16bd29c7d394b1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1796eab314253027fe59611b94065a80cf3f8f8ffe6f3aa2cd4ebfff782c0311",
                    "sha256:53c7990a1c291a85134d4919189c03f8005cd782027e5aedbada89ef179e3065",
                    "sha256:40b7f052404917497bb5eefad65ad3386f75ef8c4f43fa6dc1a99e7395c796d0",
                    "sha256:5193388964ead6bd4e48cc10b9e3ee8db653824969cbd9bd0e2465c269509520"
                ]
            },
            "variant": "v8"
        },
        "buster-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:52.075515521Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:14.294054532Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:14.294054532Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:51.967750053Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:52.075515521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:862c188c3c4950b8cf2f5bbd5d8971e93ea32371e7ac01d6b25e1c9cc1bd6559",
                    "sha256:0aafbdbf209ede08731011468f86a1cb37b5d5642b5ff90dd40393e66c3381e6",
                    "sha256:b150d74a85a878332e62937fddb8463162ce1da2590cb2092e713106e8809757"
                ]
            },
            "variant": "v8"
        },
        "buster-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:44.991568169Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.341738469Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.06965774Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.148051312Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.255785689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.265654245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.283258079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.921396647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:35.056925015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:08.575266535Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:08.575266535Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:44.887116359Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:44.991568169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:14d1b16b913edcb6e374ad911eb8a78c95fc068e5a679810dd57abc6253eb4fb",
                    "sha256:96ab9d2c17973eeef04268583375793e136fafd5eb03eea349b25f42616df5ad",
                    "sha256:5d3f391e169dbaca51d1a3a645fca5eecedfe8bfbd5180553be4546776a47ec6",
                    "sha256:aefd933866e4321e224ef844e38f5adf5a8887aaf4a9eaa98a656554bb7ff8a4",
                    "sha256:1eab6fb8eb3d730ae5093688afa5ba3ab43f046408eab222d027b66f502df98d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:398934f37feb07325fbfff2a1f0904f40919bf8d63582ddff8f1600d93d4e0a5",
                    "sha256:e9ec797cfcec4be78cec5aac408134f03bfa55c194fb540201a3d71425e896b2",
                    "sha256:705ae3611f17b2fb0cc363de116e17074a27187b8a3155e1f2a589a6f383b461",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b561a4c5da54fc916c73fa182d8dd0eb904033e917d66d4682cb445ecdddf42d",
                    "sha256:304b2cafa3f83834a92857a9903b6bb63e55efb7d08b43baf32a97abd8918306",
                    "sha256:42493e257829418c0abc91e3826c02465c00c2d63d4b273eb9a4307a39c92c0b",
                    "sha256:6d70d006bf0cf6ab9ccbc57fa5d81588ea5316aaf019bbee6122c92550324003"
                ]
            },
            "variant": "v8"
        },
        "buster-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:55.261260435Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:31.92811446Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.001212821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.09994039Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.213963358Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.225289874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.25981882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.96930786Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:34.10268171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:17.309272604Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:17.309272604Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:55.15327977Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:55.261260435Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:959f47d59254072ce02e886b00cde7d294b2d7981aa4984cba5288cad830ba72",
                    "sha256:d17c410fa6f698a182a45cc74212055a61b521874fcef1af2f39e341ba6bdb83",
                    "sha256:0cd206a03975038b1b7bb7dd5f9cf4daac0a33a8e97a3939383e637e9a1be45c",
                    "sha256:4a9d5e6ecdaab0bf5d5768ff2bc1c0c7afcaab2873c4405bcad103e0f1e2d952",
                    "sha256:891fc4fbd97a494a81189d0a395580075c87502de3c65992e66ee690a6b370b0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:122e109ce76a1397a3342083493ebf205d24923cce42dbc32cce0516dd64fc7b",
                    "sha256:0ca013a72afe6ffa351b48a50a76ec9cf4bb516aa2cb125f4d20af4d57a9fd49",
                    "sha256:f9e1994a5e113cdad592781be8287712029653c9ddb1c9122c6422cb7128f3ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27cd25e8c7f418d7b31d552410b9319e3e873281224cb5bef4e16b86692d65b3",
                    "sha256:e1ae1d680590f9314af8080063ee188ab309d6f36f3d201132a31e93db37fab5",
                    "sha256:c06443c2b903cb6be611c8e64532f446563240902fd5c398d62a20cb51670750",
                    "sha256:2269723006bbe31e47e6615ece35beb78b5e963ae00bc4c43afdbfffadde5b32"
                ]
            },
            "variant": "v8"
        },
        "buster-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.747356864Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:35.720788962Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.338217232Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.432805206Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.551892522Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.562123104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.604765219Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:37.159112058Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:37.282597476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:34.525114791Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:34.525114791Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.650877198Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.747356864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:960983cc0a3bb2f61698359bb8f9cbc8fbd2766293219d50b4354eefe3c4d3e7",
                    "sha256:29a6bcb6f166ef3ed97d319b2e9bf37a75f247e5ca1e5a847bf50ef37d9777a5",
                    "sha256:3c33bf028bcdb28b31c820c9f35fb1227bbcacc496899206b89ec914194e8cc7",
                    "sha256:c9a6c8eb8acb5842ce755b08beb4b8816f965da772c45a1f95641bb5fbc19086",
                    "sha256:95fa78911b8769bf8a9394cba57919630c544b1f8194fe33896cfeb0baa8c657",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:809baad34543e9ce78ca187c6bc44c7c886cd13966040c3350522ebd7b57c55d",
                    "sha256:7603ab81332aa002a982a0ad5a3890b62a9b0836867b7d6c5a0a9055784409d1",
                    "sha256:76772dfe739308052c1cf53ced9def39c4631cc633f8c9d7d33f4c120220479f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c58a19ddc1136bafacc7ed08d32fbf9722ffc37b641b7f79a35b9e6234d16938",
                    "sha256:46e9f0496cbf16bbe7f90a4afb827596c0d941abea4e8ffb868ba42e400f5da3",
                    "sha256:e2de271b1e50f76e08d40dd1347637e02c938b34c68efbe0c35c24c1f639ec51",
                    "sha256:a6d803ce06ae32f3e55b45a6adcca32ab3fd8c02f50654fbd14d2b1338dff54d"
                ]
            },
            "variant": "v8"
        },
        "buster-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:49.251535093Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:26.479258758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.43638791Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.531691693Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.649243392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.675293651Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.723390648Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:28.34054638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:28.467024475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:13.226277665Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:13.226277665Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:49.154321367Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:49.251535093Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:8e273a8f93effd59553a4a31f5c7229ec2e16e01444284ea97daf932ab9d0d63",
                    "sha256:8c0566b447b5ec12362ff50ba0ce88967215d95b7e9f2ad334c603ecdb8435ca",
                    "sha256:7834afd8a758b2941d565a3592f4ab65a4cd2de41f19769132d0e357e882f15f",
                    "sha256:b4ea6ac278174f2a0b223d3ccc6a797ac2f091da944936e46544b1c48318f459",
                    "sha256:cd2b62f7a338d065f76532c443babf37cc00b3a4963490a61293cc4ef1ea743a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60ccadccf558f03e50caaf1f2a9d6d741d20f83c71e794e1a9241c6f2315ee5d",
                    "sha256:9f919f5997f4e9927817d9b057abfd137f52c6764c0cada86333097be36d4c28",
                    "sha256:0a531293b84afc04eab37e450f83f367919d1b6a7215a0166673c1684ffa35e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a4df97b13cdbcb05d806c48aa3c03eeb9029bbabc4129c1a532ce09894fe13f",
                    "sha256:99ac8dc267e69af51321f65c2c841721531002012a8292b2e70206607964e855",
                    "sha256:4056c9c1b156983dafe77e484f2bac49773ce68e63a3ac96269cebe8c31a7eed",
                    "sha256:a9a8062c92e01d5d08c8d67da1eb198395de71784a19cfdfca19f2f45084ef8a"
                ]
            },
            "variant": "v8"
        },
        "buster-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:45.472220808Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.36595893Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.472220808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:021a37c4d70345ffbc66d63ae4cf2ac563544a488e7325558a7d51510b0238a2",
                    "sha256:15734b1841de90ca6b1abcdf22beab13c2e9ff6d0ab441c008a30d585e4b7907",
                    "sha256:879111528f2ebf4f8cd3144147fdd07eb9a5e2dbf68eded9a3496e9d44917d5e"
                ]
            },
            "variant": "v8"
        },
        "buster-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:58.862456257Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.066819565Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:18.920158375Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.089821396Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.180293941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.297773545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.306398153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.314409136Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:21.093856096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:21.208979982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.568881033Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.568881033Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:58.771172966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:58.862456257Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:b68528658e05ffc98d8dcfed1bc08af5f6c80aee662bacad115c6e81e646b02d",
                    "sha256:e680b67f6e2e37636a3810df963b97612febef96b17a1a83c71bd42d8fc83a46",
                    "sha256:e16849ebf7aa27328e38161674734295b43eb6b807b0c23f8c684ffc44aa4b68",
                    "sha256:280367c9a37e3236a7d439c5093ab121093a31931c3fe70f0c287ab05a9ce322",
                    "sha256:5ed22cba7aa9002c98a9a906a94aefbdee2a3d1d545f4695f6e8a6d25a81694f",
                    "sha256:2798d612330c766827116cc001cff81155fecafed480594a43c5c96eeabca015",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eaf6f4c245a14e422c66a43cd196dcb9dd011cac75ab8772cdb502332b9326c",
                    "sha256:9738a6d816dbd2199fa0e779518f059e5052709ea0eb884d7cabe97c15c42f70",
                    "sha256:ce7c63474d5cd9357a22f6f4927b840466b27125915c27b4c1d3d1fbdfe3d909",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71880a6d135176b5ec3eaf3e468da95421047a70462246357f5a99e837607051",
                    "sha256:9d74dbe8af0eeda19e43951ca45c5c6591127e500c82067e14dddc0e1e73a825",
                    "sha256:57c4f9d1565bbaeda3ef4d6ac3b6ae7f3e3e53c49765ecf32bf5405a130696dd",
                    "sha256:f90aea668a8efba70210b8a4706edacc9b2bb9effedfb43bb6306b2b025d2bda"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:41.861180604Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:20.899641489Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:20.899641489Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:20.899641489Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.707284772Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:51.025556913Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:52.088649819Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.193152222Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.343844432Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.365663308Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.375306914Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.384306374Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.384306374Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:52.903850238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:53.052998775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:09.407114547Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:09.407114547Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:41.76870805Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:41.861180604Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:663d431480fff55f2c9ae934edc32a50049c577b48c5d30ab9d70f7927e10bb5",
                    "sha256:d25b094e8e918aabcebcdc6af57b08be30ea8dedc672a8abbb86817a677fe7eb",
                    "sha256:16ffdfc19236efd4cc3d4471a12f7116d0a7408f0792661d78918240e112f1f2",
                    "sha256:7569d0ee4e01089cc669bb951ad02d3360d6bce3657fd43fb8400f7fcbe2ecff",
                    "sha256:1985aadf6f691fd206738f5d3cabe40d450864295f86a2235490d5403ac48a9b",
                    "sha256:ba351082e79aa2a448e215616d6ae0e189eb98e526bebf97a2ce285f34da6556",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0136431193aa3b9456f889d6b68d8763e72dec997ddffe8adfbc950d3c2fa36d",
                    "sha256:272acdfd41922784076d48cfa2c2ed28ed8c943a99d4dde3d1b8a71d89e9a799",
                    "sha256:18427e545fc2637848498fa4ff31bcf44f4165a4d30db7550c825908d3559e4c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:467db0d4aa41e9b3693ffcf1afe58934e53230f593d7e69bfe1ffbe7106fcab7",
                    "sha256:0c1230d34171331b5c5873eb769184517c9edd2624b81553e738ae7e72e83e1c",
                    "sha256:45fa6625f15a5e8e1c5035bab5863be0c4e2b925de6932bf960d2e3284f5b66b",
                    "sha256:0ac9fbd5691262d915b8e25f5c05ec4011c71af7d06ef996fbcad69c411cf055"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:16.781120227Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.636831778Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.636831778Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.636831778Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:17.085556371Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:13.192674948Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:14.170392999Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.289035005Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.412016807Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.422762818Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.43210199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.44234928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.44234928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:15.109317321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:15.248240619Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:44.52309849Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:44.52309849Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:16.689822971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:16.781120227Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:ad5c50cf6e2148edc847c9204ca6ff9c23e54540906662ca7ed5201df68ab243",
                    "sha256:eb7ee9e203b58ab3b17635d5a85931fb17f955f6e6247e2442f0a6f16be866be",
                    "sha256:ed78747885af47eccdd508fb6427af1a4d1a28cbfdbe543a9e4ff941a3634259",
                    "sha256:7a4307cb16079e2639037f70289d3afbb0984ebe44007089f035bd925ff88167",
                    "sha256:a47c095dabc86f634c0993ca67785fd0713eb1323fd131dbe459e004fc2f52c2",
                    "sha256:7f20cda495df22ddaa30c5d004cd89907d1af89b6e177d2ee07bc096d9503972",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:74763a507d6e82809d8cd5c4fa6e30a48aeaf282398f7fb5d43886cf313964e6",
                    "sha256:0244b418c7efe06f110928a7f5857904b191086f507d1c9e0781848ddc907be5",
                    "sha256:f276e2f618f6b3b9df4e5f916893414fb7f124230f50ea96504cb4dbcbcdfe8a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0dcd339246e422104c259ad8a33b5f0123adcfb6508bfaed23e56bae34586375",
                    "sha256:ed09804225e8fa7b33eb83223f5d732326d2d04afafe90154259a948cf1b44cb",
                    "sha256:7e9cde32f6d7b4c5f510ef0be95abb2e506f9c2e6f640751733b0e77d1b22c11",
                    "sha256:dd4afb0b652b4af2307b11719a41006873dcdcd8de887046f569a58b2bbbd1fd"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:12.979237719Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.547452109Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.547452109Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.547452109Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:17.950504686Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:12.670193824Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:13.391331741Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.476226941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.596794613Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.623567601Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.671482703Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.68077557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.68077557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:14.182157272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:14.302077759Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:40.682160102Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:40.682160102Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:12.894763531Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:12.979237719Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:775ca23a77ca1942c1169d254803bb281cfc2662577839618d2e7a523bc2ccc4",
                    "sha256:d78285a246be6ecb2675fc4bd24fd3405f761e3ac5728f96961564ae9998c85c",
                    "sha256:661c0f2510c3d027c4a72069394a20008e11fc800debc8e7907f2c61ffae9db3",
                    "sha256:2e4d8030c5c0ae98a1779c1fb6ef99424dab6f9b530638306a316d275ec88c7b",
                    "sha256:014395463410272b75b0a571940fed25bd13de64383b467047cba876927689e5",
                    "sha256:d579878e336e97d3c880bc8f5278518be75db6581ce2fc947d6c0b536368a17d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d175e60471d5057b4e4ce7b2bc4b517299bee1a0e9213f7ce5d82049cbd37903",
                    "sha256:5a56f2fe8e62ee3072e43f2daeb17c8f2d7d47b30a2167f818f5daa6e41c5d74",
                    "sha256:b8625fc2c525f1ee70ba18c57fdf03e1d958560304cc17de718f3a1b3c5022b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:80164e06dfa259e5f8c2c01659f513c276ea77d9379fd0061e60ca37383fc05f",
                    "sha256:fd34aed22d8a35e3e2ecfcdae7ced4c3536910f14bb9d561200c8f8de1af94a8",
                    "sha256:5e5f990dd95f08a6ef4f879d139a73ce109e9c86533a7dc6fb21901993bd8d8e",
                    "sha256:762180facfdb75077e49351d1919ad308fa5c8c9a38fa21d2d5eae7db3436b65"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:28.626922688Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:51.561013109Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:51.561013109Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:51.561013109Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:27.963478773Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:26.865700188Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:27.966529339Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.060976967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.165064112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.174685689Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.229860004Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.239271559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.239271559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:28.765502939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.877933515Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:55.876338673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:55.876338673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:28.530501274Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:28.626922688Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:cc17b4af85a49459a9699f58e90a9c2c3c5a8f4234ab51ffc6c574887d63d3fe",
                    "sha256:e382c0fb00e0337ca2b2990ad96934b5c18877d64b116eae56f8bed49d3ca848",
                    "sha256:2f18292610a5e2b8c20ea37e361e5b77acc5056f1b385c60ce2f65ada08ebec4",
                    "sha256:86095e8a591204c11618c095f959e7691df5b060e4588ebe1cbc2299ccd7700d",
                    "sha256:930d6f4638387df15023f418a04231fc9da8ed5da509671d707b93d9ff47ee30",
                    "sha256:868014a47eeea74dba10782f24f74cefac1c40c78a19874bdf3c9ff5faa9b2ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a208bd3d30af9428c16827c1ea1f1fabc97a4944491fb0998b440e4b0e4c804a",
                    "sha256:30d17597d3a685d9b20369aeaa0ea6065ac489f3bae8bf59f3e3e5440ea08e14",
                    "sha256:51952ca8ebd5b8b43258dbc48f9b00e0c2f874df057db63c92cf2033cd530e37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cb1d317da51ebddaf5fa8672ee8a87240fcbe24b4e2c1d157108c63c85ddaf6",
                    "sha256:86a0e9aa48edb15f4c269889466a6c9fd511835407f20c2676e7fac075043d1e",
                    "sha256:355e4fd587d6551a75c28534bcfcfa526e91207ed3776ff2a6bda066d94ce4da",
                    "sha256:5ee0f84157288753fda57cb50bc32f45908dbefe146d075acb4bd41d2fa7ce5f"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:09.796457228Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.538579983Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.538579983Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.538579983Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.039448219Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:21.939711886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.158791143Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.247188568Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.354168939Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.364272067Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.373906079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.384195653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.384195653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.88713414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:24.001748331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:37.817809944Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:37.817809944Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:09.711650555Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:09.796457228Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:33b94dc64bff8b357d5ea5ac78fd10b1448602b0c18e26f09e8274919f4e1a40",
                    "sha256:81e715114d9df619c1abba51200716d2ea52dba08ccb358165e7ac1bfd798cf1",
                    "sha256:838864abedbb0dbdaa86660cc14daf61fc56775c2609bdf720381da5d482648d",
                    "sha256:8688758797bea5cc8d42ab49b3ebe1098eef1a4381016dab68330981dfddc2fe",
                    "sha256:ce725462c2937e8eb639a3f218290b58c44e7336daf2f6edcdbe9dff7cb9203f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e93cffa85150860f2e798d98caacaa532a99ab232ef88d0fa933823438b9bde",
                    "sha256:911d8763e2b106980f6a3a180cf8e893f5d1ac205a11d73fede3c6f5086f599d",
                    "sha256:1ee550237dcfcaab61f889ad8de0425a5af7c38383a5854d55a7e2d6747351de",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d58174102c513caacc65c91fefed247131c935988fca6ac746eaf90d1b3db96",
                    "sha256:9b236a407c94cab0506b2b59a9c6f5309b3c97eb77f4715203ab85825bbd87dd",
                    "sha256:b32b391666eec05a3afc5e630b7096335da03811bbcd70d5379725a424d2d15f",
                    "sha256:522dda0eea93a2f12399bf569acfd059c2cf1af1760a17d135e4b0a3f269e5de"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:44.123531892Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:02.080878171Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:00.730108488Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.6373298Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.726081355Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.843716447Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.853871198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.889100994Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:02.518508129Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:02.641876532Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:10.84447274Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:10.84447274Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:44.031688894Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:44.123531892Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:bfd3b7513138ecde418dc9c1954baef6538803a0bc918a573b2129d300beb824",
                    "sha256:619f66a8664bf98fff4ffb0925bb1bce6d84187b9b5e7c1e13781b19317c1341",
                    "sha256:27fe588fdb860fa6186c5e60633a00bdb5bd7be38ebc8cd7a14bca0d37e974e1",
                    "sha256:5ff02d000baf9397c7634a8a164e1b2faeaffe6577bb97eeb5c4293528593229",
                    "sha256:0e8e4d9ce0ce1e7018a5d960053edee92c80dcbcf3f40fc8ffe804df3f7388f9",
                    "sha256:f919ca613be98068f8e1d71170471405ebcd105a72c7652cb5224274ab40586b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:da15a00a582d89918c29e5c3af955e210fd6ca1678d4824c1cd3669ddcbb3728",
                    "sha256:9c0e56da42e0d3a0cff795c7ff8eb4d9f55974100f3bbf38bbc3a9f078695ad9",
                    "sha256:af01aaa8d6429eb082ef35ec5f868ba4c53330a4b93a05a4c2a57d1eef63a7bd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ed8825067405a4357cbcd06bed8c8424169584aa3eef730e0b6f0b50a47957c3",
                    "sha256:2d7f593a00539e72648b15ef1882b3e393bcfc59f99fb57adf683c6e11e22ac8",
                    "sha256:044325a7a37d55d35c833fc1f08dfd391bee3bea9d9cfeb5b6a508dba389fe96",
                    "sha256:dd9b06f4a98d8e7f01f1524e30124e3b5238ceaad50202b2ee62ddf7f1946320"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:46.369871446Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.623356129Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:35.285777748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.248177335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.321125203Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.435978221Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.445850901Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.485723422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.495059969Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.495059969Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:37.112799936Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:37.232755366Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:13.979923551Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:13.979923551Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:46.271601025Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:46.369871446Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:24fb88b45bc91c912b602a42d6733f0071d4a4aebea02fe430f22406b2b90a88",
                    "sha256:4999626c6eb61bd558eb5f9e19da741786584333e1d33be6c27eab10d836cc10",
                    "sha256:e34e20be7a8dbeaf385b05be7a76cd222388a96925b449c1832e788282af745a",
                    "sha256:d92db7827a3867f9f077235ba942dfdd1b107befd7e63a56f44947717009bcff",
                    "sha256:6777d12ae1fb045d6c3858d096c642c5ea8047b454260909c7274319f701c7ab",
                    "sha256:119c8f5daeac78104f977c9bc3ebbd25540df03165a93bfe60beda27a1dad449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:43858c92eeba765c832cfd74c635694cc1fbdc84568b0564486047ab4757de55",
                    "sha256:c4036174b531f2c568d919ef7dd016f782ef2692899081723b82cdb84ec8a8ff",
                    "sha256:497a99c246d69e1b20f4acc7bdcfa574dd72726f02d6db3414e838b4b482efd2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57fa20d8291fd47e29caecf6d5b97b4bda4b5fbab2a75520f9f7625d364a76fb",
                    "sha256:090e35575e05fc046f21100ee06ea92fed39458fea56505b5a14ff7e586d9fed",
                    "sha256:4b63e451cd0fae637d29f9765b8e74d1ea24d547efe9628181a93e8e7c14c98b",
                    "sha256:ee6fcf661e6459ad461db087cec2ca326c4575f00290e6b81fe7ad97414a897e"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:01.377806965Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:28.461808725Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:26.245036143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.408609106Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.507560774Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.628377274Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.642286284Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.676700208Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.686697105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.686697105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:28.196729081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:28.321647032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:28.964466542Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:28.964466542Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:01.284788505Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:01.377806965Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:9fd34b510abf214c4867027968d660bd642c08430e97cb28ccbe9cc8937e75ad",
                    "sha256:bdd37b91483a1421d57a76dddf0ed03a368aaa181732695d5406693f7326d0c0",
                    "sha256:70b1fee0c1e3684fbcf920cf7325e45bb85612e5a12224291ed59fd4b14362da",
                    "sha256:a41b7aead45637d0ee36b280f180580f345d8f3621431d99fb7e7384c48b405a",
                    "sha256:9f07c26266c466eee3306bf5b277b02724c0860a1572057f6d10045ed24c534f",
                    "sha256:3e39672680358e3c8c13a6c34c3d0f0c3fa11dc21655fe95b781d840bcff3f62",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:765814db0bfc6b36a4242de3e0ddb04e11fca9236efcf54f980149c1f28bf863",
                    "sha256:8d676623bcd3c71604dd591ada8767fc76d28a3bd5a2a75b29494f3b3e3795ce",
                    "sha256:9d9a9c94c0edbe7cdfd578737375f9abe98f50b7a05eb4b6d0262212fdcafe98",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec137555f62c59e4f2f2cc3a849ef6c291cfc43ec6c1d4871a896431e6ecc383",
                    "sha256:93f03e9d40fa08eb6ec47ce21df57fdc22ffa667c6f3914d4c88229da11bd56d",
                    "sha256:c6f91edfb19496a8d3d52ed33684c973b1a9579fd7101a4890191d5e503b2120",
                    "sha256:223a8c6981d95d701e1d08ca89eebb43c5f0a54fd57b8d46e0e19477ba9dadb0"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:16.744806478Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:08.069852926Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.18555576Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:07.076720674Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.156824471Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.266984689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.298368503Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.346409368Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.356208481Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.356208481Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:07.965956635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:08.086792896Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:44.408555811Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:44.408555811Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:16.665052058Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:16.744806478Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:d17e9b189c1a5a4c64d7870b7b9a1a0110e63eb6451629f2c92b5050c6b76690",
                    "sha256:d974555cad55706dce172322835601f67d07a2a479c94ec11d3b8e19550d8af8",
                    "sha256:381e1d974890c3063dd43e21beabc70acd6b1058fc1156025d8b92bcb2e9901e",
                    "sha256:43be4b47a746357a75b855c0bd4317711b4532de73eca21a415c89793c6a3387",
                    "sha256:d192c50f88ea8dffb41cbcb09244b4a39cf2f100adc6f3a89f426ed982043f30",
                    "sha256:b92fc39dc5c793eba74b83506c3e55b3e226e250c3119564769ea02500aea19b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6a7ca6e600a0aa1c22047176d2f31aa48e320e445cd71b1ea0038749408a161e",
                    "sha256:c3a4615cd0d94c547336c2f41f79bbab4d18713c36e57678508ec33e0fb630fd",
                    "sha256:5ae45b54aa1f320b18dfbf523afc32a85cac30397637ad69e150eb031dfa678e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dbb22bf5e1c40b9171bce7d12bbb237ba1551d3f8e4f4ff0b25e777d10e30c32",
                    "sha256:681255db836a8a98b5a1455ead4e3eeb9c1b644906767836a350095062b60141",
                    "sha256:cd6587678ea20d9680320c777f80c323411800d89ad88a66b73434ec477d5104",
                    "sha256:d56565ea52777f15939f77dcfb230089ab7a6fb073a84050ab995ad6bbff37d4"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:53.142756241Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:16.626552183Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.01177144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.698280163Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.772235781Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.896379269Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.906740466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.915608611Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.946554518Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.946554518Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:17.493922103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:17.605909111Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:20.731701006Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:20.731701006Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:53.057061596Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:53.142756241Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:c2085f329c3cca62a0c600b9ba4a733a0b33d040ecbf4de1d7ce01959c479919",
                    "sha256:4c745b9e5ff78d1d9fc37d4833b50d0f9c2447dd800d3d026450c39f8ff74e4c",
                    "sha256:68f99f242f279803c6fb8d66fcd1b51cbb028ff21fe54faf44ae85b1d4743839",
                    "sha256:5b49272b856dd4b79e288a48f746ca47d706014f670b8ebf34c87e731534b4b7",
                    "sha256:119a82bcf0bb432117e542114491827ef347c71ee6c2e4e8e036bd61afd6c140",
                    "sha256:c84a449f20482b8f9ff9459a3b232db6daae72c1140cd3522fc4a5eb0ab1d82b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1bffe48d22eb41acbe7cf17bc40cf1d9dcae8f14ba4e4bcd236e9e4347cbc13b",
                    "sha256:deb495121f51277a1d6dc88c2c84e7f802ffd6fa9255654e9ebc68d60645d792",
                    "sha256:71d5320d34b1168dee5b754d0d4e2ba7da8d1ae34fb9f197ac9aa04cb5abaa72",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:59b0a66b819c5ba6adc4c076b9625c4df3ee147a8c9715e1f31b9b955e022089",
                    "sha256:a0c308398e1c0479b9841e34a9e68d82700496ae38f70c29dc51210c9f5b492a",
                    "sha256:85362e83510cb83412fd56536c7c5cdb24bf8c5a7cabd974140ba3d4c86b307c",
                    "sha256:8aff3c235c111833f6b9eb73871168743ccc4e30d76092455087dccb5c8309c2"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:58.862456257Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.066819565Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:18.920158375Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.089821396Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.180293941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.297773545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.306398153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.314409136Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:21.093856096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:21.208979982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.568881033Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.568881033Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:58.771172966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:58.862456257Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:b68528658e05ffc98d8dcfed1bc08af5f6c80aee662bacad115c6e81e646b02d",
                    "sha256:e680b67f6e2e37636a3810df963b97612febef96b17a1a83c71bd42d8fc83a46",
                    "sha256:e16849ebf7aa27328e38161674734295b43eb6b807b0c23f8c684ffc44aa4b68",
                    "sha256:280367c9a37e3236a7d439c5093ab121093a31931c3fe70f0c287ab05a9ce322",
                    "sha256:5ed22cba7aa9002c98a9a906a94aefbdee2a3d1d545f4695f6e8a6d25a81694f",
                    "sha256:2798d612330c766827116cc001cff81155fecafed480594a43c5c96eeabca015",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eaf6f4c245a14e422c66a43cd196dcb9dd011cac75ab8772cdb502332b9326c",
                    "sha256:9738a6d816dbd2199fa0e779518f059e5052709ea0eb884d7cabe97c15c42f70",
                    "sha256:ce7c63474d5cd9357a22f6f4927b840466b27125915c27b4c1d3d1fbdfe3d909",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71880a6d135176b5ec3eaf3e468da95421047a70462246357f5a99e837607051",
                    "sha256:9d74dbe8af0eeda19e43951ca45c5c6591127e500c82067e14dddc0e1e73a825",
                    "sha256:57c4f9d1565bbaeda3ef4d6ac3b6ae7f3e3e53c49765ecf32bf5405a130696dd",
                    "sha256:f90aea668a8efba70210b8a4706edacc9b2bb9effedfb43bb6306b2b025d2bda"
                ]
            },
            "variant": "v8"
        },
        "buster-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:45.472220808Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.36595893Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.472220808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:021a37c4d70345ffbc66d63ae4cf2ac563544a488e7325558a7d51510b0238a2",
                    "sha256:15734b1841de90ca6b1abcdf22beab13c2e9ff6d0ab441c008a30d585e4b7907",
                    "sha256:879111528f2ebf4f8cd3144147fdd07eb9a5e2dbf68eded9a3496e9d44917d5e"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:38.733211976Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:55.464611292Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.175637552Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.265434925Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.379534812Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.388358474Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.396129991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:57.011330178Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:57.129002331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:01.815654213Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:01.815654213Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:38.592525797Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:38.733211976Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:61acbe232cc383f45ae0f242e3a1c3b044cf8f41734ab5c8d5ce4993e4e3dba5",
                    "sha256:f64b741d550631e9f8b5cce58dc90f34cec56cf7bccadae57955d4eb76732a70",
                    "sha256:ec3195ade3dea7221e271c9aebf52782a34ab13e83d0f715f9c1c340f9d634b0",
                    "sha256:a44c2272725a5c13968a0e4dbca40630b5eebc5a0635c08b766e00209d835b8a",
                    "sha256:dbe9e9f443597353ebb4b0bfab43cf3cd86cab44a9b262883d1406ad939f474b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c696a556843095fd60c2ba3a547087f613f5a6c857edc988fb77c06b03bb7b6",
                    "sha256:3e5209c8a681d22499721063ce36fd1c6e1f780583260ea9864e5f02aa3bb5ec",
                    "sha256:15ff42dbb181be1af16798438c134f322c548d8d81021f1c53c83c74e00559ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac9507ad5a25b3bc9ff80471388523d5a499523762be7491f687526ae04cd14b",
                    "sha256:66f8def60bd76ac926c889e7d7b69a742b4d4d33bf4a2e723b64f3197e144830",
                    "sha256:8ec4e895b51ce4f7a5a028418337383630c0d8aee5deaabe9bf2c3b9508db624",
                    "sha256:c6f2842e271d171977821a5fbeac9e794500c1665fbcef52d9aed02a53756279"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:19.311583617Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.191120326Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.957570467Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.051555456Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.237355092Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.246097145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.254003784Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:13.887024396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.031525593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:42.188148265Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:42.188148265Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:19.171383709Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:19.311583617Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:451b8ffffee9f8506833158d79dbade97c675d277f7a6ec567da48c1d51d61b8",
                    "sha256:887f00e3039b3f4900ce590e16e4a79c68f499414ac260b5e15c30710ed3f2ca",
                    "sha256:96dba296bc32b32211a9a15854bee92962655e32c8b3dd63b67bce0d7877eebc",
                    "sha256:f46f15220d0a34b9e7777594720590a4e06ec743a9b7d27ebd8b6f262dccbb0c",
                    "sha256:2dd7e8a42ca9de9888af6676f97a1971d1d45d9d23e5040f82e9bedc49ad6cf8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:be2e1a79cbda0044e0f33834afca89e76b0ea21743f935b142ae8d62f3ca32d9",
                    "sha256:cfd745522c22fa0b8d56045c33cb9bb867fa1cb08e78de950980b773ee266956",
                    "sha256:c58f1cbae9187ef47e2cf809105138a5bc02b4d18255a5b4c70afd59812197dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0030fa92bf7aaa822bf9dcd52fc4ed951e7b4c27c622598171772ccef8a36165",
                    "sha256:5a4679e86c26fe679102d03e1efa5f70a0318ce6abf33184e4a86e04f9d5089e",
                    "sha256:d525b4e446f9ec028f49d513b31fbb2682deaf37820644ece36784022cc615ff",
                    "sha256:6cbcea344b637a8a2c8c71bfd20dc49ce7b7a687507f11c914239c36cfa5e6f9"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:19.841343198Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:19.88668639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.548785628Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.622793661Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.738479962Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.747877063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.756409Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:21.389329746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:21.50701353Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:43.823883786Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:43.823883786Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.736670702Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:19.841343198Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:ba46c9028aa7674523e38ac780676a3076306a397f02a421eb21a348f9bd2fe2",
                    "sha256:1ff8a9cf2891cfde0660f8660adfc23770420afade9c26788dc7a2f0e6cff5f5",
                    "sha256:86be0f974d3e3fe0a5917c4ebbef38d2ab10b3fbdaa77cff64542bac9695a442",
                    "sha256:8cfd72b823a6982b9801bf8e93cc7bb963f0d6eceec2c2a77e1f9c908b8d3cf0",
                    "sha256:888e1ca85508d079641196f87819357e9c4123d69b9e96b74c48a71ec750cef5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b4487904f0bd97cae16bf2303d03e93919b2f4584e94d28b6dfcbbf046b191b",
                    "sha256:6352f688e29cb01b59680ed8bb1ca7fe5ed62b740c8284d5fd5385ffc13bf8ba",
                    "sha256:efb425c6768f2365ee09041df09964fb1e0ee52137157a06b35881b74020d488",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b2ae898a37ac25f4d831c9c3816614aee65125625ed0dd7a32dae2e24fbe019",
                    "sha256:2d7a0a18e204932c2cbce522d78a8370b363fe5d82b54cf835646b47c9573fb2",
                    "sha256:d1ef09265f8cbc2ed3608c512371997fcb78ceba614dabd35ee98b77097e515f",
                    "sha256:69ea0d89ac71d74f7b5ee9075f85a4f50923e1fd6132ca79c4026908cdac8eb2"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:35.958176194Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.069961947Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.738752729Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.816608091Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.923412005Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.934806877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.968250381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:18.528439354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:18.648690815Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:59.819638003Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:59.819638003Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:35.860696817Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:35.958176194Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:5c7e1e272f19dd29f9f46757a7c76a894d654dc498c4d847f806d17b944a0dee",
                    "sha256:b2d052daaebc4d1bf1f6b2f4020caf7145ecb5529c92620ac13b49a66590910a",
                    "sha256:69a5aba8ec206f81819760e4bea2e093f77093175087124f3812352d69511347",
                    "sha256:818895baff25299f57cedc83cab4cbfc0291342661beb0f861a5a34edb8cd239",
                    "sha256:dfb090e17c7a0a34d9bcfbe267ee6ce3bb49f76d405a99379d0a5578df422ae3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bc04aafcd62dbd3218ecc8df7e6987eca747f3ba2e678e92ac4ae49794fb2e72",
                    "sha256:7e55cece18e33523cb26737a8d62ffbba864a0bafba8f5146932ce38f532be09",
                    "sha256:b040c6a579b8f9260cb98130cb32ce2e2f5b7851cb1e50c314cead14c9dff101",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:681de681ae2dda038cf895625f7585829a3a6de7a51f6890750b6b0e4ad18ed7",
                    "sha256:111ad7a69c27c0de12fead953e74db997d9292a44befd8293e45d531251c37e2",
                    "sha256:815f66da047ee50271e93c4f5fa9e94874d875241c3ee9317307fac90ede35b5",
                    "sha256:95a3834c54b749303598167c9c98444a71e357a1205ef05494c69fa1385d912c"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:15.580671797Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:28.519195181Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.652350826Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.732008111Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.847937493Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.856529027Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.885941565Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:30.480265417Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:30.609538155Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:38.54986149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:38.54986149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:15.470496432Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:15.580671797Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:3972a045f3866b7456b0e94a9ab4c870706dceab1e16236e834cee1d9fbd1630",
                    "sha256:18dec0fd1e834501b7d2f138843b6fb5b57160aee0a24c3e92fccf5da2db323b",
                    "sha256:13d006a7b7882ee42d1f19cf794c4193a16b5931b2893a9c9155a581d62afef5",
                    "sha256:8cfe72fd4573263941028461fcb59095d124ffc7bda51117a3d8c2b273d88a9f",
                    "sha256:3a22e2e4427c0fd0f15a64bb92f6ad1758a9af281d827ec8b4e6edfab18c299a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b936e5993fa53c82e5ab880ce782227c9cdc3940fbff37d2826d8bc34605b022",
                    "sha256:108143e801bbe691a90e9184218a587e75855630431edb4ce93138fd99b27fb7",
                    "sha256:483c521f9cdf812d79d1090eb69b48450597de777c1939f10d16bd29c7d394b1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1796eab314253027fe59611b94065a80cf3f8f8ffe6f3aa2cd4ebfff782c0311",
                    "sha256:53c7990a1c291a85134d4919189c03f8005cd782027e5aedbada89ef179e3065",
                    "sha256:40b7f052404917497bb5eefad65ad3386f75ef8c4f43fa6dc1a99e7395c796d0",
                    "sha256:5193388964ead6bd4e48cc10b9e3ee8db653824969cbd9bd0e2465c269509520"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:52.075515521Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:14.294054532Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:14.294054532Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:51.967750053Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:52.075515521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:862c188c3c4950b8cf2f5bbd5d8971e93ea32371e7ac01d6b25e1c9cc1bd6559",
                    "sha256:0aafbdbf209ede08731011468f86a1cb37b5d5642b5ff90dd40393e66c3381e6",
                    "sha256:b150d74a85a878332e62937fddb8463162ce1da2590cb2092e713106e8809757"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:44.991568169Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.341738469Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.06965774Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.148051312Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.255785689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.265654245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.283258079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.921396647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:35.056925015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:08.575266535Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:08.575266535Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:44.887116359Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:44.991568169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:14d1b16b913edcb6e374ad911eb8a78c95fc068e5a679810dd57abc6253eb4fb",
                    "sha256:96ab9d2c17973eeef04268583375793e136fafd5eb03eea349b25f42616df5ad",
                    "sha256:5d3f391e169dbaca51d1a3a645fca5eecedfe8bfbd5180553be4546776a47ec6",
                    "sha256:aefd933866e4321e224ef844e38f5adf5a8887aaf4a9eaa98a656554bb7ff8a4",
                    "sha256:1eab6fb8eb3d730ae5093688afa5ba3ab43f046408eab222d027b66f502df98d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:398934f37feb07325fbfff2a1f0904f40919bf8d63582ddff8f1600d93d4e0a5",
                    "sha256:e9ec797cfcec4be78cec5aac408134f03bfa55c194fb540201a3d71425e896b2",
                    "sha256:705ae3611f17b2fb0cc363de116e17074a27187b8a3155e1f2a589a6f383b461",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b561a4c5da54fc916c73fa182d8dd0eb904033e917d66d4682cb445ecdddf42d",
                    "sha256:304b2cafa3f83834a92857a9903b6bb63e55efb7d08b43baf32a97abd8918306",
                    "sha256:42493e257829418c0abc91e3826c02465c00c2d63d4b273eb9a4307a39c92c0b",
                    "sha256:6d70d006bf0cf6ab9ccbc57fa5d81588ea5316aaf019bbee6122c92550324003"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:55.261260435Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:31.92811446Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.001212821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.09994039Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.213963358Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.225289874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.25981882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.96930786Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:34.10268171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:17.309272604Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:17.309272604Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:55.15327977Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:55.261260435Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:959f47d59254072ce02e886b00cde7d294b2d7981aa4984cba5288cad830ba72",
                    "sha256:d17c410fa6f698a182a45cc74212055a61b521874fcef1af2f39e341ba6bdb83",
                    "sha256:0cd206a03975038b1b7bb7dd5f9cf4daac0a33a8e97a3939383e637e9a1be45c",
                    "sha256:4a9d5e6ecdaab0bf5d5768ff2bc1c0c7afcaab2873c4405bcad103e0f1e2d952",
                    "sha256:891fc4fbd97a494a81189d0a395580075c87502de3c65992e66ee690a6b370b0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:122e109ce76a1397a3342083493ebf205d24923cce42dbc32cce0516dd64fc7b",
                    "sha256:0ca013a72afe6ffa351b48a50a76ec9cf4bb516aa2cb125f4d20af4d57a9fd49",
                    "sha256:f9e1994a5e113cdad592781be8287712029653c9ddb1c9122c6422cb7128f3ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27cd25e8c7f418d7b31d552410b9319e3e873281224cb5bef4e16b86692d65b3",
                    "sha256:e1ae1d680590f9314af8080063ee188ab309d6f36f3d201132a31e93db37fab5",
                    "sha256:c06443c2b903cb6be611c8e64532f446563240902fd5c398d62a20cb51670750",
                    "sha256:2269723006bbe31e47e6615ece35beb78b5e963ae00bc4c43afdbfffadde5b32"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.747356864Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:35.720788962Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.338217232Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.432805206Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.551892522Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.562123104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.604765219Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:37.159112058Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:37.282597476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:34.525114791Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:34.525114791Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.650877198Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.747356864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:960983cc0a3bb2f61698359bb8f9cbc8fbd2766293219d50b4354eefe3c4d3e7",
                    "sha256:29a6bcb6f166ef3ed97d319b2e9bf37a75f247e5ca1e5a847bf50ef37d9777a5",
                    "sha256:3c33bf028bcdb28b31c820c9f35fb1227bbcacc496899206b89ec914194e8cc7",
                    "sha256:c9a6c8eb8acb5842ce755b08beb4b8816f965da772c45a1f95641bb5fbc19086",
                    "sha256:95fa78911b8769bf8a9394cba57919630c544b1f8194fe33896cfeb0baa8c657",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:809baad34543e9ce78ca187c6bc44c7c886cd13966040c3350522ebd7b57c55d",
                    "sha256:7603ab81332aa002a982a0ad5a3890b62a9b0836867b7d6c5a0a9055784409d1",
                    "sha256:76772dfe739308052c1cf53ced9def39c4631cc633f8c9d7d33f4c120220479f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c58a19ddc1136bafacc7ed08d32fbf9722ffc37b641b7f79a35b9e6234d16938",
                    "sha256:46e9f0496cbf16bbe7f90a4afb827596c0d941abea4e8ffb868ba42e400f5da3",
                    "sha256:e2de271b1e50f76e08d40dd1347637e02c938b34c68efbe0c35c24c1f639ec51",
                    "sha256:a6d803ce06ae32f3e55b45a6adcca32ab3fd8c02f50654fbd14d2b1338dff54d"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:49.251535093Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:26.479258758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.43638791Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.531691693Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.649243392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.675293651Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.723390648Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:28.34054638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:28.467024475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:13.226277665Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:13.226277665Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:49.154321367Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:49.251535093Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:8e273a8f93effd59553a4a31f5c7229ec2e16e01444284ea97daf932ab9d0d63",
                    "sha256:8c0566b447b5ec12362ff50ba0ce88967215d95b7e9f2ad334c603ecdb8435ca",
                    "sha256:7834afd8a758b2941d565a3592f4ab65a4cd2de41f19769132d0e357e882f15f",
                    "sha256:b4ea6ac278174f2a0b223d3ccc6a797ac2f091da944936e46544b1c48318f459",
                    "sha256:cd2b62f7a338d065f76532c443babf37cc00b3a4963490a61293cc4ef1ea743a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60ccadccf558f03e50caaf1f2a9d6d741d20f83c71e794e1a9241c6f2315ee5d",
                    "sha256:9f919f5997f4e9927817d9b057abfd137f52c6764c0cada86333097be36d4c28",
                    "sha256:0a531293b84afc04eab37e450f83f367919d1b6a7215a0166673c1684ffa35e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a4df97b13cdbcb05d806c48aa3c03eeb9029bbabc4129c1a532ce09894fe13f",
                    "sha256:99ac8dc267e69af51321f65c2c841721531002012a8292b2e70206607964e855",
                    "sha256:4056c9c1b156983dafe77e484f2bac49773ce68e63a3ac96269cebe8c31a7eed",
                    "sha256:a9a8062c92e01d5d08c8d67da1eb198395de71784a19cfdfca19f2f45084ef8a"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:45.472220808Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:08.960397737Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.36595893Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:45.472220808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:021a37c4d70345ffbc66d63ae4cf2ac563544a488e7325558a7d51510b0238a2",
                    "sha256:15734b1841de90ca6b1abcdf22beab13c2e9ff6d0ab441c008a30d585e4b7907",
                    "sha256:879111528f2ebf4f8cd3144147fdd07eb9a5e2dbf68eded9a3496e9d44917d5e"
                ]
            },
            "variant": "v8"
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "latest-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.352584415Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.208454071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.352584415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:5d53eab09d84cc152ec2a314c91e3bf8793dfa4a73070ac53e3151f73d005048",
                    "sha256:abb873b4d6ec619e5d934d5605fb06266074eb7901200f52b1f07bb33869d9a2",
                    "sha256:5429722fd18763d8cd5b48100342688f0928e4678d071a04f0d2727738f85f6a"
                ]
            },
            "variant": "v8"
        },
        "latest-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:08.713095109Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.558377971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.713095109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:7d5dc5c1c282391c2be187e828a7f5faa1dcb7a3979a70a2fae1330f45233484",
                    "sha256:77ed872cac29e01f7fb28045b7e4c209d7c8791e8347681245d10b343d5f0e55",
                    "sha256:3e6379912ace1ef448e3357378e7ccf9be7cb64ff46346dc9a68006a60c14571"
                ]
            },
            "variant": "v8"
        },
        "latest-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.184213533Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.084213282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.184213533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:bc545dc1b82e2bce00c8feda9632052f597036acd909b46ecb2763eab38d63e8",
                    "sha256:2d2fb1d8ce33a878c2e11f05b49d8644cbab05fc882e4b0e79ff043f277bb7e7",
                    "sha256:84a4a36632376f3dbde45f61a3ee931fa8af7d7751e7491fb18bf618861e9b3c"
                ]
            },
            "variant": "v8"
        },
        "latest-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:21.398307242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.29462966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.398307242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:f642dbd3132a7218700d496991fa569282469d5635a4c58fc21285d09d91cf65",
                    "sha256:3a80cffbb950b70699dd58975390dc93dccdc7859996db818b7eedfbf3a8e45b",
                    "sha256:5ea70f295f1d0b2e4ab49b9576f01a8ba8a025f5028bff1dd891e7c8beae6a2b"
                ]
            },
            "variant": "v8"
        },
        "latest-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:17.411324525Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.31053864Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.411324525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:8d115c312525ed7acadf15d4a924006e7aad6aab50c47a2a27b7c0727c11e90c",
                    "sha256:72632b4c06dd8d99219f760078e2ca52e0ea25a334dcaa1719260734d24a8850",
                    "sha256:35af128ddc50e9598df94c3e1648be49e5590c6f301ae6dfbc916fd5e128026b"
                ]
            },
            "variant": "v8"
        },
        "latest-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:38.457561963Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.349203723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.457561963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:1a7aaacf679b474c9ddd03796772695e0e9eb8a63acbca68fd2df22837bc53c4",
                    "sha256:8603d023289e2ae0d869d64c09fa5ed2f9d6df6ec18e0f70ce4fb66f057155b9",
                    "sha256:6d6aa2a2610176829648fe52276dcd08f805b3f433d13e0f4af7fbd53a5fb182"
                ]
            },
            "variant": "v8"
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.5221638Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.417051734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.5221638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:ba1f9e8f930b8a3f9edcbdcb1ddcabef6dbea7bbe90810fff72c67b7c6fcdd29",
                    "sha256:ad26600a3fb40130e56f8be1e7bb28a3b3a5874bf5bc6648c571d89535a60c75",
                    "sha256:d0ce5cdae4691a1f4da62f9a5134bd486224e312a24ec1b6f3e601f4a7e3ce59"
                ]
            },
            "variant": "v8"
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.737161871Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.635497882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.737161871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:f72e944e459fc19ff4121ae01748da64e74cad323ca694d61e4e40c60e7cde40",
                    "sha256:6166d793ae14dc7d2aa454975240b08e52d4f41262c1272887b80b1ddf46c648",
                    "sha256:1bd4582c17fd269910d1a5ce63267d6e2f9b6e1628b964daeeb89961a7ab1072"
                ]
            },
            "variant": "v8"
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.206833314Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.10688511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.206833314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:d6fa15f231e5f573b4217b8ad6dcead87ec9fb148cdd9a841cc0a269755360b1",
                    "sha256:5434aed8d8ebc71937029db6f870941f41f0b7741d6b12db5cae06f4306a2dc3",
                    "sha256:dd29935feea8f1f4c602ddf1210f5e2550c4ee6b895cfbb1bdb911bf72eca3f7"
                ]
            },
            "variant": "v8"
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:36.234636766Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.131701783Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.234636766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:ebaed2655d9f063e9a73eff43ae86b058a01b55b3335e9510a01dca49a627846",
                    "sha256:5686c9bfd0b08109bf65e508151e416bf72569887d9425af83cd497cf5df70c6",
                    "sha256:737e359f10ad5da0512f6f04f053ed2461891e20f26d381ac1119979e7fb8b35"
                ]
            },
            "variant": "v8"
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:57.101326428Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.012778303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.101326428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:9e2c8d71e1fdd6197c11e58d33fd19278a9139b8e4e68eae540ead300129b28b",
                    "sha256:ce20d69491df064864af861d7ad40f69f90b5ba1fd0ce7b556e4b6fb3054c20e",
                    "sha256:1aab3549c847c320a1e52f024745c17d83d7a3c250b6cf9e847da37ba05f84cb"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:28.035946022Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:53.593522423Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:03.578664428Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.346536518Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.453335285Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.61096714Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.620135356Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.666915734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:05.286716179Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:05.42797061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:58.302907766Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:58.302907766Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:27.917419976Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:28.035946022Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:8a7ef35bddc112bc2b5431fcd390b9065fbda13786e903966196fc5dea6c6ff7",
                    "sha256:7cfc8e6c3d60b5caf28fa87975f88f0bce672613d3fe5e43dcba3004c1a241c2",
                    "sha256:095440987c66a3da4b60dbcb1573c3f317725bef1b582527987bcb61232897b8",
                    "sha256:fdc851e31b9f8daca232f41c4331a41ce0b7d6ae39c6934e26b3b00ea83607c2",
                    "sha256:81f5a9a1455c7edc5a2b23fb1d25cf133960a48cca8b20beec4402d4600bdbab",
                    "sha256:5072066d883433d394dd39e61d315d510d65477455d1ebbfbc975661c0e5d6e5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a927bbd12e93e3bf2e0198bcbd29fc4da974e841b35e06753ebfa5d8497c8e8",
                    "sha256:5f331de56e31b06abd6639a649c8206602181ca42a24e9e5bcd53c8cb0d95117",
                    "sha256:b88d431a371254c9fb9c2c2e740f85d47d78fdd8d630f43f25d2875280155428",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e76d16263914442ebe25f79121fb8f6e5c3bdb2fa92b42fb0299d85e1ae66db",
                    "sha256:7be07cfa38e9c91a76809982c910396adfc18fbdcbbe19ca8901a4244de7e1c7",
                    "sha256:21dc308175a66c27f1fd21cf895c5e7ad16c6a2f311d663e7b4451f234845127",
                    "sha256:a1a075d8b144f19bb02d2c4c8ffa5270aac4f56179dd2cb4bf39f3e2ab53b05b"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:10.508383559Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.517978404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:25.677995698Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.784147927Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.885450105Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.00433604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.013309924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.021080443Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:27.789559574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.935595776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.335421401Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:40.335421401Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:10.405916814Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:10.508383559Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:d1bdc2c7daa01f1a34a743e068fba88eed6cae429a78ffaf1026438559e7079a",
                    "sha256:eac3b3efd93a07317becfaedb2134d2a36d626351201f53287a9549d27fd6b1e",
                    "sha256:d9afa0523f9365ceb09cbe55188000e2926bf566515bb96b22378399794b829f",
                    "sha256:56b8f1d66272dc0cb7dcc0a6c8dc62d0dffe95a4dadca792aea661ffa657e9b6",
                    "sha256:41f19aa4c6a781766a40b89056880de7381f82b80e25e911bed681c262b50808",
                    "sha256:114bbb7284a385061a40b3318241707806b11718e8429d2530403a1e1af396ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c36bb5822245b307f3f5cb02d270ef7b054e4c8c0c5a19b9afe2f700e7a0c8e7",
                    "sha256:12c4d981b996ad6f0694ea3bfc642bd029c189166382a03510961af463a6ad6c",
                    "sha256:cc297fa682932c85eb7e47d6065e550836e86b822afa332454fe5f26065d5a90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fcca4139646935ce3cc12873f462c82729def6262014ec15b614cbdc62973fb3",
                    "sha256:a4265575fdf1dcd718636f8fc09ec74f857517960332e213c12f3988a3e769cc",
                    "sha256:30ad313badcf92ccc7183148e07902ecca502c816dad73259585073c37d0384a",
                    "sha256:9c31d64d524dcf5bad80d1049e55d151fe035132088bc1457c51f007c8d7992e"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.243123668Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:18.48032328Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:29.733050906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.46634935Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.552360377Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.683110102Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.743003008Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.754119398Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:31.344858628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:31.464992595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:39.139036576Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:39.139036576Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.152019948Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.243123668Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:cfec8dc9675f1e7619cbfb27645cb2cece178566824212487b746a0ede92ffee",
                    "sha256:2724a7dd652ba165ac374bcbe1860c24553c9f3aebff4d66ad2ac127b333f978",
                    "sha256:65a14a718d427e7364a3e89eb98c0ed1a72d6dbfee605a93e7a27e3718ef2638",
                    "sha256:131acd714ec7176998398a67bb88983aec4768336e426a62c5402f4f9b0d4c63",
                    "sha256:c1106c57741bc52e2de61538583d82986fc689e99e5f63e4e5e644c3b547d398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0dbeb1c535388174228b102c48591e56d8d448b4ad149c16aaac0a995717a15",
                    "sha256:bd064ab2393e57585a3c1adeb6bb53a305af4fb4403c06184441d4002582d7e3",
                    "sha256:fc5cbf0c19b36eb461d982a340a21e334c2f9cc58516775e307abf559c20bf06",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:617b08cc28ac11075c97b20a72084cc361d5ca3832a625b99b5d9e2f13086af6",
                    "sha256:bbbbf916759e89cfc196f879d28bde5bc4fc603a6dbbe6bfe3bd19dc42cb88f2",
                    "sha256:3d2c456b8bf41f9b13fc3dded861facdd42a06fcb3d6ded7ddbdeb5b8ca50433",
                    "sha256:b585500dc650c468c3080f7f5057d182dc9b8ec3167ede5424768c0bcc080c55"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:29.470823275Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:29.245783563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:41.546976334Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.289886613Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.379547722Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.520074185Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.571982732Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.58238599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:43.179794438Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:43.297796316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:59.699815262Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:59.699815262Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:29.379435709Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:29.470823275Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:5b97ef633d062667252ac892f9a1ce68a2cb725edb1e0c284cb1770298e976bd",
                    "sha256:790337396924c5628e9dc010d9782d9d5b95551ccc10b248efe6bab82c824591",
                    "sha256:821a76bd989a560faf7bcf222b61bfcaa31aecc8e57b4775fc537133bbea6eba",
                    "sha256:d223892836322619baad183eccbf309657c7860d70afcd305a6042aefd1f5e6a",
                    "sha256:bf6be2c324807a030b5f3ec09ed6c5de269924db993ec3197327ce2954b115e3",
                    "sha256:bc3ee1f23e85c7a98cebf0445864891d0a0498becb1c4737ea1585a1658e5449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1f0c0f6899ee6ed82434ec530cd50409a3bfb73446cecfc94ec8348e3f6114d",
                    "sha256:11567a5a2dcda33387d4726465290138c2e2316fffb61cf0e166187db41f12fc",
                    "sha256:c5d5dba74ff3b7dbedd230f49db99e1dd15fb9ebe6f6c9683bb076daa2a9e957",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9cf6e219b3954f213e7fb6420806c6b66a738dbb0f746104f3a939409f5c8fce",
                    "sha256:5e467954618500862205de4abcdfc36ac693d9c9f3d2e480fa7c806a23ce2617",
                    "sha256:94dd0164cfb832ed3f26762bac6e41ce59f1a1f3cccfb7e17d2b5c3d6b89bf3c",
                    "sha256:b3126a3f20af24132d53f6c7f750b0e1e4aaaa9e34ffb56a51ee928f4a4406ed"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:11.553334561Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:19.594197447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.121877758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.842173236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.925821388Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.038421369Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.048575517Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.058735555Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:33.679211525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.805687062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:41.943526649Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:41.943526649Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:11.467844648Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:11.553334561Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:6a4f4bec2884881d645ed43ca1dbb9618a162907b280048d4ea679a4d769cb8c",
                    "sha256:ea990f59d187379cb7fc6d90d63db1c2bc13645f29665d18a270c086c935a0aa",
                    "sha256:69fead2cd05696e8a1d34b2d74fcfb35a0dc12e2e80cfcf219e9d0eaeac4f98f",
                    "sha256:e55005ed90f3fea99d88c503dbef56615f4128da5a849f869d8dd2e9da61d668",
                    "sha256:1a0474a6ff95afc1337c3250daf4d364f8210ad0a9142e0cabe71d85413c217c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de4954d1ae82c61cf470bd812ef6979451beac1b20a7bae2ee7ba13b2cd6bf41",
                    "sha256:526050c42b9c5c8cb4ac7336163e5bc710cdb925839b6a773b884648cf96d98a",
                    "sha256:5f94905656bf80058a4304b82b7ba8c0649a26d58e16b5a354505b091af89d70",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb9e0cb11ba93b5b05bce4341b4209e75fb04841f7a7f1584b31b1ae21f8a96a",
                    "sha256:395424aab06ef365301ac701e4bb30a4edb744d8723a88d5742dc30d59a5454b",
                    "sha256:7290e3a00dd0a2f708f374ff48387ab321b0a3eee2ded86649e5adc6f9c43fd6",
                    "sha256:40f4af5fc3ed65192c80da09fbc43f68ab202da09c149eb558d9244cdb9f41e8"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:37.624955893Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:08.180120595Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:08.180120595Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:37.537874563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:37.624955893Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:b05935aea3d0220cc86f8377d250ccfabf37c31812e8fa8715e7ed9f22ca0336",
                    "sha256:799ac97b71ba4db9362b2e83bd74954eb139be2f7d99853be4d19b036d511526",
                    "sha256:9829438abec014964df3e20ddb0f68595bc28df0d108e084dc231480b9a96c9b"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:29.714961775Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:00.344027231Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:00.344027231Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.626802096Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:29.714961775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:21adcf7642b36da30a60d1473d3df0b5c22a00f6364833fdddfd4d166896a0f2",
                    "sha256:17ec4926a7c55d6060461b149668d40e74b5ea0ca181e1c8e7f5c6051adaab14",
                    "sha256:2755162f95488bb5197926ba09d118107d4baf6504add099de503b6be7e0a1e0"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:05.674047764Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:32.132176393Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:32.132176393Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:05.580949838Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:05.674047764Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:e2b910c792f6a2fecb965ba36981c1e11d921798ae9b6f95f29991c911675db9",
                    "sha256:8025f4bf8088fdae984c5ffced40386dcfaef7c8761e3a7ec908689b28d3f10a",
                    "sha256:722fcb5ecf0216aa38d8145bc9ee2fd7ae09048cdb7d2e173d4de776f5f1eea8"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:39.791995269Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.363136187Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:22:10.363136187Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:39.707815884Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:39.791995269Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:4cca39fc1778d12e666971b061e2b4fe78f50957e292a6f080b65439ed1ee9a3",
                    "sha256:868a79d5f435da59416f6f8e3ac55c1a3eb68d56539cecaa2e6dd208f87f4361",
                    "sha256:5b188c4f7fc4a38674ef543ea2a19a300cc7182a2eda57df244b33a0dc0ef0d9"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:43.986501696Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.673508907Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:14.673508907Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:43.902647384Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:43.986501696Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:7ce38ad85be32139773a828f506100155e3ba7fd76194e33dd71046da7357515",
                    "sha256:99d4d5f8de6847da5da50fb401bceb28989c9be2c30c86de1d5fd12def7d3c8d",
                    "sha256:3e9a880c5b3d9b781052272f1e257327ce46faac6d3b5fa08240fc6036b3af8a"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:57.101326428Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:26.038496329Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.012778303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:57.101326428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:9e2c8d71e1fdd6197c11e58d33fd19278a9139b8e4e68eae540ead300129b28b",
                    "sha256:ce20d69491df064864af861d7ad40f69f90b5ba1fd0ce7b556e4b6fb3054c20e",
                    "sha256:1aab3549c847c320a1e52f024745c17d83d7a3c250b6cf9e847da37ba05f84cb"
                ]
            },
            "variant": "v8"
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.352584415Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.208454071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.352584415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:5d53eab09d84cc152ec2a314c91e3bf8793dfa4a73070ac53e3151f73d005048",
                    "sha256:abb873b4d6ec619e5d934d5605fb06266074eb7901200f52b1f07bb33869d9a2",
                    "sha256:5429722fd18763d8cd5b48100342688f0928e4678d071a04f0d2727738f85f6a"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:08.713095109Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.558377971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.713095109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:7d5dc5c1c282391c2be187e828a7f5faa1dcb7a3979a70a2fae1330f45233484",
                    "sha256:77ed872cac29e01f7fb28045b7e4c209d7c8791e8347681245d10b343d5f0e55",
                    "sha256:3e6379912ace1ef448e3357378e7ccf9be7cb64ff46346dc9a68006a60c14571"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.184213533Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.084213282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.184213533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:bc545dc1b82e2bce00c8feda9632052f597036acd909b46ecb2763eab38d63e8",
                    "sha256:2d2fb1d8ce33a878c2e11f05b49d8644cbab05fc882e4b0e79ff043f277bb7e7",
                    "sha256:84a4a36632376f3dbde45f61a3ee931fa8af7d7751e7491fb18bf618861e9b3c"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:21.398307242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.29462966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.398307242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:f642dbd3132a7218700d496991fa569282469d5635a4c58fc21285d09d91cf65",
                    "sha256:3a80cffbb950b70699dd58975390dc93dccdc7859996db818b7eedfbf3a8e45b",
                    "sha256:5ea70f295f1d0b2e4ab49b9576f01a8ba8a025f5028bff1dd891e7c8beae6a2b"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:17.411324525Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.31053864Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.411324525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:8d115c312525ed7acadf15d4a924006e7aad6aab50c47a2a27b7c0727c11e90c",
                    "sha256:72632b4c06dd8d99219f760078e2ca52e0ea25a334dcaa1719260734d24a8850",
                    "sha256:35af128ddc50e9598df94c3e1648be49e5590c6f301ae6dfbc916fd5e128026b"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:38.457561963Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.349203723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.457561963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:1a7aaacf679b474c9ddd03796772695e0e9eb8a63acbca68fd2df22837bc53c4",
                    "sha256:8603d023289e2ae0d869d64c09fa5ed2f9d6df6ec18e0f70ce4fb66f057155b9",
                    "sha256:6d6aa2a2610176829648fe52276dcd08f805b3f433d13e0f4af7fbd53a5fb182"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.5221638Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.417051734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.5221638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:ba1f9e8f930b8a3f9edcbdcb1ddcabef6dbea7bbe90810fff72c67b7c6fcdd29",
                    "sha256:ad26600a3fb40130e56f8be1e7bb28a3b3a5874bf5bc6648c571d89535a60c75",
                    "sha256:d0ce5cdae4691a1f4da62f9a5134bd486224e312a24ec1b6f3e601f4a7e3ce59"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.737161871Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.635497882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.737161871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:f72e944e459fc19ff4121ae01748da64e74cad323ca694d61e4e40c60e7cde40",
                    "sha256:6166d793ae14dc7d2aa454975240b08e52d4f41262c1272887b80b1ddf46c648",
                    "sha256:1bd4582c17fd269910d1a5ce63267d6e2f9b6e1628b964daeeb89961a7ab1072"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.206833314Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.10688511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.206833314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:d6fa15f231e5f573b4217b8ad6dcead87ec9fb148cdd9a841cc0a269755360b1",
                    "sha256:5434aed8d8ebc71937029db6f870941f41f0b7741d6b12db5cae06f4306a2dc3",
                    "sha256:dd29935feea8f1f4c602ddf1210f5e2550c4ee6b895cfbb1bdb911bf72eca3f7"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:36.234636766Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.131701783Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.234636766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:ebaed2655d9f063e9a73eff43ae86b058a01b55b3335e9510a01dca49a627846",
                    "sha256:5686c9bfd0b08109bf65e508151e416bf72569887d9425af83cd497cf5df70c6",
                    "sha256:737e359f10ad5da0512f6f04f053ed2461891e20f26d381ac1119979e7fb8b35"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.352584415Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:52.767091418Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.208454071Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.352584415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:5d53eab09d84cc152ec2a314c91e3bf8793dfa4a73070ac53e3151f73d005048",
                    "sha256:abb873b4d6ec619e5d934d5605fb06266074eb7901200f52b1f07bb33869d9a2",
                    "sha256:5429722fd18763d8cd5b48100342688f0928e4678d071a04f0d2727738f85f6a"
                ]
            },
            "variant": "v8"
        },
        "run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:08.713095109Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:35.023872456Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.558377971Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:08.713095109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:7d5dc5c1c282391c2be187e828a7f5faa1dcb7a3979a70a2fae1330f45233484",
                    "sha256:77ed872cac29e01f7fb28045b7e4c209d7c8791e8347681245d10b343d5f0e55",
                    "sha256:3e6379912ace1ef448e3357378e7ccf9be7cb64ff46346dc9a68006a60c14571"
                ]
            },
            "variant": "v8"
        },
        "run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:09.184213533Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:34.992959868Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.084213282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:09.184213533Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:bc545dc1b82e2bce00c8feda9632052f597036acd909b46ecb2763eab38d63e8",
                    "sha256:2d2fb1d8ce33a878c2e11f05b49d8644cbab05fc882e4b0e79ff043f277bb7e7",
                    "sha256:84a4a36632376f3dbde45f61a3ee931fa8af7d7751e7491fb18bf618861e9b3c"
                ]
            },
            "variant": "v8"
        },
        "run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:21.398307242Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:47.331612673Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.29462966Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:21.398307242Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:f642dbd3132a7218700d496991fa569282469d5635a4c58fc21285d09d91cf65",
                    "sha256:3a80cffbb950b70699dd58975390dc93dccdc7859996db818b7eedfbf3a8e45b",
                    "sha256:5ea70f295f1d0b2e4ab49b9576f01a8ba8a025f5028bff1dd891e7c8beae6a2b"
                ]
            },
            "variant": "v8"
        },
        "run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:17.411324525Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:43.393992185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.31053864Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:17.411324525Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:8d115c312525ed7acadf15d4a924006e7aad6aab50c47a2a27b7c0727c11e90c",
                    "sha256:72632b4c06dd8d99219f760078e2ca52e0ea25a334dcaa1719260734d24a8850",
                    "sha256:35af128ddc50e9598df94c3e1648be49e5590c6f301ae6dfbc916fd5e128026b"
                ]
            },
            "variant": "v8"
        },
        "run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:38.457561963Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:04.20586149Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.349203723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:38.457561963Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:1a7aaacf679b474c9ddd03796772695e0e9eb8a63acbca68fd2df22837bc53c4",
                    "sha256:8603d023289e2ae0d869d64c09fa5ed2f9d6df6ec18e0f70ce4fb66f057155b9",
                    "sha256:6d6aa2a2610176829648fe52276dcd08f805b3f433d13e0f4af7fbd53a5fb182"
                ]
            },
            "variant": "v8"
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:27.5221638Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:07:53.519788132Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.417051734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:27.5221638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:ba1f9e8f930b8a3f9edcbdcb1ddcabef6dbea7bbe90810fff72c67b7c6fcdd29",
                    "sha256:ad26600a3fb40130e56f8be1e7bb28a3b3a5874bf5bc6648c571d89535a60c75",
                    "sha256:d0ce5cdae4691a1f4da62f9a5134bd486224e312a24ec1b6f3e601f4a7e3ce59"
                ]
            },
            "variant": "v8"
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:48.737161871Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.665898806Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.635497882Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:48.737161871Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:f72e944e459fc19ff4121ae01748da64e74cad323ca694d61e4e40c60e7cde40",
                    "sha256:6166d793ae14dc7d2aa454975240b08e52d4f41262c1272887b80b1ddf46c648",
                    "sha256:1bd4582c17fd269910d1a5ce63267d6e2f9b6e1628b964daeeb89961a7ab1072"
                ]
            },
            "variant": "v8"
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:10.206833314Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:35.976739462Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.10688511Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:10.206833314Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:d6fa15f231e5f573b4217b8ad6dcead87ec9fb148cdd9a841cc0a269755360b1",
                    "sha256:5434aed8d8ebc71937029db6f870941f41f0b7741d6b12db5cae06f4306a2dc3",
                    "sha256:dd29935feea8f1f4c602ddf1210f5e2550c4ee6b895cfbb1bdb911bf72eca3f7"
                ]
            },
            "variant": "v8"
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:36.234636766Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:02.887154524Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.131701783Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:36.234636766Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:ebaed2655d9f063e9a73eff43ae86b058a01b55b3335e9510a01dca49a627846",
                    "sha256:5686c9bfd0b08109bf65e508151e416bf72569887d9425af83cd497cf5df70c6",
                    "sha256:737e359f10ad5da0512f6f04f053ed2461891e20f26d381ac1119979e7fb8b35"
                ]
            },
            "variant": "v8"
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:48.45480843Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.967404186Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.355140543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:48.45480843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:441f29f8baf648bbe78c793da4d64226fb697249d92e8c2bdc01884bd6d3ede8",
                    "sha256:097b21321434309fcf083868868b48ed84d546ecae0a34ed9a84725c3c72fed6",
                    "sha256:66f1f110bb5956d20b4dce70455552c08aa62ee30b8f68eb36a62fafe17f3c27"
                ]
            },
            "variant": "v8"
        },
        "sid": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:56.777604875Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.671179687Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.777604875Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:4219acedb452a4fbbb30d8a53236c83ea7c10995f3a426d5ec4b1d6c8574802d",
                    "sha256:e2ae1bc61856a489ffd77d28ccb98c4b4cf23668e431e2e7280ad6b24f382aa7",
                    "sha256:14a25c345dd3eb7b8e6e6aa20934c8b4774994ce99130728898805bf38978eff"
                ]
            },
            "variant": "v8"
        },
        "sid-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:40:17.758583645Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:51.381449321Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.646272684Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.757385708Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.902782372Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.931877359Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.971842121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:54.884832282Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:55.050519517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:59.138515004Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:59.138515004Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:17.612547912Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:17.758583645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:6d08810a1dedfd66ee906213e2bee9fd49e15a9cae2c424502adf14bb0412e1b",
                    "sha256:ac476feecd719a11ea7bc02dd6fb737fda88d4a091e9e17537839476eec9eade",
                    "sha256:24399c1a2c767b4a0e835b127efcb9e960c6643060ef5550a30d4113f06afd18",
                    "sha256:fc27773c4d33d54205385456bff597530e89257f65f3184bf03b0e44748d71c9",
                    "sha256:c118693f04c0063f41694e1d07fb5a30a88346eadeda635ac9f249432b36204f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:985eea47b1c37db7d1fae5d089edecb0e6e6a0f7fe4baa8f8afec541f80db279",
                    "sha256:84b6ba60f3fefb3b87de0e05ce98a717fcfa09cd94d671ec3594e06c44dd5e61",
                    "sha256:c02c210e437435a571ebf8c6eda2e49cf67f946135e8752d387ade4efbbc17b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d9fa925072e1b3230361ad4e367563f12b9ef58df53e86bb190e5f6eb81e9919",
                    "sha256:924dc769defa4a771d247d6ff60314ae69e6b9fb75d7e059089b578b62efa2fa",
                    "sha256:c03f696b28920c9f28dc9c4aeae3af7b19ba7d53fcf12fd3591596085f607777",
                    "sha256:a38baa8df342428d0dc934946f7679ddfdb0a3037cc4a0a8f10b41ba2c958ab9"
                ]
            },
            "variant": "v8"
        },
        "sid-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:12:01.90081037Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:18.538174217Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.31347439Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.409655654Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.562308675Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.570760343Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.578661103Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:21.168235704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:21.300453839Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:43.223282229Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:43.223282229Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:12:01.763049457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:12:01.90081037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7e2330a459d2671d1e02b3766a3adbfc668995b941240adfc059983703565906",
                    "sha256:61b8d351ea9601238a57597e74dae9bbd24b65eb67e49b6a19b307873c8e3dbe",
                    "sha256:f8a649475b8e264f6ab3b1b6c6d3206f4c668b988508ecde63bce54b59f9223f",
                    "sha256:be1317d4842ccd06c8f11cc25913e9a84780f3d933e2461b9928cc7fc1701d46",
                    "sha256:09341cdd42ed071bff6ffc9616069b68575ea3e5387d58dc1bf86f76dbbb11c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d67a6c9f64b6e848a905d9ce533409c7295aead01d797ec4edbf1fec3651ef3",
                    "sha256:2eb172fd58ec86a0255b004e1f9216ba3d91018f8360ef7ed15122c5d51d1606",
                    "sha256:1c1a88009afb339f6e58d3a085d13e0c422718f2a9181375c22d37e6283fb4f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:63a2ddf0f2792977d2aff1f1709d1ddf303694c5e1ca856745431c27e7293f24",
                    "sha256:085f00bcdf42d0ce2834bb0c2c62ce2e35e633264a8cc99842973c6e77a9444a",
                    "sha256:e765f5c3d81042e2680d3b890c0242809425b9829a79f0c7d3e3b38f408aa974",
                    "sha256:d8fae0b35750a49eb0e0a697927572f3bf8c2bd034d57ccb6dcfbcdecdf6c847"
                ]
            },
            "variant": "v8"
        },
        "sid-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:59.906981662Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.046043631Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.686286857Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.784004493Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.924002974Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.963996778Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.974260081Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:20.515553304Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:20.660112651Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:43.080972657Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:43.080972657Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:59.769958697Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:59.906981662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:dd97a1c1be3575d4c4e4c291416fb404538fb09e23c40c0c322f2e56077b6fde",
                    "sha256:ea4cc0f208420cfec860bd0ee0048e614b33c17b2cf83491322ab1f31d0e8e25",
                    "sha256:1b56705331f46e72b538c3b1514cde105103972c23ea9c8d8e1a8aca31f7c8a3",
                    "sha256:39874499c48465ea85373af3255a1fa3c2d71e008b6b0ad47d3cd355bb84d912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a472f646dd37e8f907b9e285a43c73a18d93c76f4431ef3eb89f2e211e72287",
                    "sha256:1c6428f23e3224a2083ed9ca96b09e6b8d8499275ccd4f02cfd265b80cacb3f5",
                    "sha256:f7d586a15ebefc6793ec74a036b28de3d993eaaab14d4a15f55c7762e9f01dc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa3556a7812f045fc25911a5d66ab7295cba58532377711cf0fb9cdd2e56664a",
                    "sha256:8d0e17c8582a5635321f0a61ded83333cdf73186fb76ab758cd729f0e22b77d0",
                    "sha256:925e9d21991cfad8997f0e6786b1fd84028f08b4a5200e3b4ac1f0bef9f97a5d",
                    "sha256:c50f33dc67112ab42c31e6dec10860ab7dd6ec91b49e348dfeb8d517ee4893fd"
                ]
            },
            "variant": "v8"
        },
        "sid-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:23:14.818632779Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.161712714Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.815026825Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.900797018Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.013367999Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.024694045Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.045276788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:15.597160732Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:15.712267169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:58.19507422Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:58.19507422Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:23:14.72224635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:23:14.818632779Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:768243a0f0fd3fe4770c5a5996e8518789e02897b309aa9469bc53e151de3131",
                    "sha256:b8fa6592e8cd705d4e647ea3036f9d9f94923ba8bd01b60a17829650073be55a",
                    "sha256:83a4d104825b6755af8ee16fba9f57cca55e01e47c703f365709439cfbf4beb8",
                    "sha256:a3a8acd80267f5fe0044a0f957eb05e7161a96f55fc239855b8f370c5091f3fc",
                    "sha256:b672a6422020617c530257ae3d37f0fcacedf4537ba992cc437b5c6579875683",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aca9f10ee7fa3894eff21e00c4fdad1f10699a7d5fe9e735198da79a602f1e22",
                    "sha256:569765eaea52a01bdcc35e59e7c260f063a18de5da78de2859543547138b0dc7",
                    "sha256:f07f78d45b019498d722ccd318f59062193e75e795349f5c643a3aced643bfcb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1e0e86e2601673d46b13d030362111c831871b57eacc63b924d45b8483f92b5d",
                    "sha256:f75984e4951bbbd63047c7f356e01b85622a446375899a5737a142b836c70d08",
                    "sha256:03e7c38bb7c6d0a7e8a69d37e235ad7864cc84bd115895ed4aa50db0800ecc47",
                    "sha256:c8d7ff4537ec602e42b59cbd005a137c82dab758005b3695954e5a5583280e96"
                ]
            },
            "variant": "v8"
        },
        "sid-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:57.212342338Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:24.829060013Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.485137412Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.566658591Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.690309431Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.713401075Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.757367126Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:27.3123863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:27.43183628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:36.886294188Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:36.886294188Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:57.105516412Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:57.212342338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:e0c665897629d49338dd976bdf2c8227652531b5a21965b7020cd3c1817c37f8",
                    "sha256:f6387863feebfbf2d4d3625017cc68624341239a4a32ab6ff3752934024ce1eb",
                    "sha256:c36be7ec2803c3519b5c512c7c1be8e04bbfae5e2259e016db140da54a94d0e2",
                    "sha256:07ef3a4c92324c7b943d00ae38c3b20355f1cc5e94ccb917f98cff270fba6927",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fc2a4faf93a5cfb355bb9868a4b2013ba665de8aee67f46fd312e41526a7b6e4",
                    "sha256:6fb33811229b7c63ebe73e4ad757961db37ebed7e409d5365e6420dcc9767e64",
                    "sha256:1e11cbef07312b1220400ec0b5811cfe24fe12eb6a42e3b7bf81f4ee0c78d285",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b65d92a183bfa656d30400bc4187478477939671ddf9d4b9650e7a69f722e9a2",
                    "sha256:80a8af39454a25699b6c813ca573c71bc606e4950c67ea229c2e57fd7850d8f3",
                    "sha256:3581bde7650b8d9f061b00094e94ad14b8e9eeaecb529adf83fe8214b7152666",
                    "sha256:6c43079ac550cf0e24a63b9fded66364dd6bdbebd5be42fcbd91b43138f62fdb"
                ]
            },
            "variant": "v8"
        },
        "sid-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:34.87071509Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:15.982072902Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:15.982072902Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:34.766606142Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:34.87071509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:0b9ce36ae2c129bd70e31645b4d4970e7497a25c8a2e3c3900bb44acd2428c99",
                    "sha256:71b40f181b2e3dad13db7174d0c337ad8a9e820b4703aa47a07a1bf5c4c4cff6",
                    "sha256:755cd9b7d6f4b45ceb89b1b95ac8e374a30fdb1ae5182935e1536738aa10c6f9"
                ]
            },
            "variant": "v8"
        },
        "sid-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:09:21.461813411Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:19.618704135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.278888116Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.371147367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.512017328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.547809396Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.558442816Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:22.151449583Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:22.26936068Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:06.131082755Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:06.131082755Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:21.353619396Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:21.461813411Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:e9e6853672a2970e38c9888492638eef6ad56962f74c18600d29cb2a86570649",
                    "sha256:b40d1d1caf10abda5930e85015d96a22c3dfa64d47d82f35be4a2f6183b13f2e",
                    "sha256:06b98a02a22f071505d6be98ea829c27247ff0dc141dbb0fb2943702e092af59",
                    "sha256:8187f996a8db65a72444f4a36770d0bf6d3a3d314358eefb683b24ed4d3a4e91",
                    "sha256:60ab886784832860bb31a0278868645d8089b5eb651d99c25341bb4e3ddf2a02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39587871f11cb4433b34c0cf8361197422183998de3e5d78d27ed15976e976d3",
                    "sha256:270db374ec8346792d1095479fc9636d5b8b86bc7b6750b376b972c1096d9270",
                    "sha256:5261b5ac040425531992ecc29ea60a5470c906b08127f35365778a9568229d34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9af9cf531c57a3ef41f87618689b5c484507edf21a6c4e59b1a5cd67e85d6ea9",
                    "sha256:3ad89a6ed42d36e8adea15bbf46d686eeb3c77bae9a5c83e9615b3f9a7b900e4",
                    "sha256:5d9b354430be5ad27102d0d3fbad81430102bdc5087480cb5664444ee443028a",
                    "sha256:af5f6da58e6da9cd01146c37ce955b55b0aafaa6aa31a1a49fc46afc9631e608"
                ]
            },
            "variant": "v8"
        },
        "sid-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:44.893752376Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.75478048Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.435777962Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.522438412Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.638196364Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.648544997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.687212348Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:07.335540496Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:07.45302794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:25.490161199Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:25.490161199Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:44.788532883Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:44.893752376Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:50d2a0a3945dc9c8c5467074aa71080c817c5fe615727383825f03e7ac559c6b",
                    "sha256:0187b4463836ee4d50726fac3d6027508efd2b7cdaa7e9c5524481569929089d",
                    "sha256:f1833770787ec1190b1a76f092c0325dfae8f80dbe568911aaa36eefcad66586",
                    "sha256:63f8596acb3cba5d3b5819ccb2c250d5be580e21a92b3ddbc4f7d6ef060dea7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:987e0eb53e78e8ed04be665707e9b3e03320faa467729cfec7fb75fd45ae48df",
                    "sha256:097115b2dee01ffbacc8913f9e8c5242d0090497b9530c50251d08595f386ee0",
                    "sha256:497398cfb7038e71d858fa80cb140e912cf26e08a744905d4a483c8f62b30788",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37e5bb2f19ac31b98b6fcfb877e24b4e2a9b03068fcd0fc541649ae3e670e1dc",
                    "sha256:a02eeb3175fed549718b735c47e47d5dab5c0a8e4f9bb5b808c410d9f845f34c",
                    "sha256:f9c79d2ccafdeea5421df1c0164d8fd236112a340b6c623be5311f06ca6d8c3d",
                    "sha256:639349d61369c9bb038492460aecbf2b23caba4fdd059827a494581bf057d715"
                ]
            },
            "variant": "v8"
        },
        "sid-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:52.388176539Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:30.734417352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.391413657Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.472194476Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.616112719Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.660036125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.66935303Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:33.261807476Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:33.378867874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:32.880783296Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:32.880783296Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:52.2843702Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:52.388176539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:21a499b362d1e69fe14f4bbf239d71b304f325e506988993eff8dbc2bcb8d9fb",
                    "sha256:08b0c4079b2097326a452c280cd17b5a3e2fe0a87acf5fc6479b6cff495a5608",
                    "sha256:8f3b87227fde99f7c074caff5b8bd0b1f5eedd46c0d2a648a7ec5d37291df352",
                    "sha256:09b0ae2f710df1f1dfe8baa1d90f9332478e8c1c9c53d820a823b9b7f743c87c",
                    "sha256:02b108f1473fe61b3b9e537da30ad471164cd2d3fdc762e408f6de0843738ebf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7bc96e7361581ef0315f0d50235bfae2d6e6de9f13a5b821963b5b6475380c8",
                    "sha256:ab6073fffae2a300096ca07b8f883f13ecf8a442967f5a461779ce1260bf3d79",
                    "sha256:d9d289ecb10d221723e06edb9ba13a75c06d46d7858196c409931e08b42eedc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fed66ee707abf3b5e1c8d61a0ae45186c2c17f386110ab7d155dc925ba3fc425",
                    "sha256:97e56e28cb577223e8483144dbb4acce08e1e44bf69be17c9d8757d2a41bdd7a",
                    "sha256:1fc2e639d76bb397d08e0c4386214cc7d64a354c203383bb3830974c22e2214e",
                    "sha256:fb66169b82e088f687df8220ca60451df50d23d76f0bcc40847d23fc155fc50a"
                ]
            },
            "variant": "v8"
        },
        "sid-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:18:40.541674862Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:37.929365647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.622493586Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.713383634Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.86440518Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.904376089Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.915460785Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:40.241916774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:40.365158356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:17.197616627Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:17.197616627Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:40.433751022Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:40.541674862Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:e478c6e0380e9a6132a7b7595bdfdaa69afbff7a59589b5aa61ed9034934ea8d",
                    "sha256:6311f1da69cd036e597129cc2f028e7dc015cdeb084a113953d65fa7c6aa44b3",
                    "sha256:cc33373bf50b19f19fd773424ea43726dba236a24654efe53d644de99b9c7e92",
                    "sha256:d79a55f9d489f679a91d8ba40933b7b9a95ee64ef3fe4fba82cc0c68be2b23fc",
                    "sha256:ce60876772934b93095da76edac9e7dfb43757bcd16c9707c674df8a9a2dc616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e73359ffaa50388b28e656b20344334a03cbc4098b800e1c4d01d8170e827a46",
                    "sha256:7f16b9d269c15ab1868a29df18371fb142d8dcdc46d96d6a0f9c8f966f6ca0c2",
                    "sha256:10582767685d8caa5283790f703f75daf9e2d69d0483cd6168d4da798e4db138",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c7f3e7e22e3e169f50791f8b0d4f60a6be2e72976fce852dc748b0d25a0e8f3",
                    "sha256:8b728b68ee28aaedbf6fddeb066f70bfd9f94b9c4868607d55a80494b05c58c4",
                    "sha256:a532980f5eac5e41d2cc2300d12030eca7c82c55ad3f6749d7edef69a42de5bd",
                    "sha256:4f3c6dd46fc825778700af0e1aafad0c128fd1f83a04232c2bdd3927181bc562"
                ]
            },
            "variant": "v8"
        },
        "sid-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:56.777604875Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.671179687Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.777604875Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:4219acedb452a4fbbb30d8a53236c83ea7c10995f3a426d5ec4b1d6c8574802d",
                    "sha256:e2ae1bc61856a489ffd77d28ccb98c4b4cf23668e431e2e7280ad6b24f382aa7",
                    "sha256:14a25c345dd3eb7b8e6e6aa20934c8b4774994ce99130728898805bf38978eff"
                ]
            },
            "variant": "v8"
        },
        "sid-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:49.54757081Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:34.136809299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:13.279155064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.484950386Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.580819739Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.701658215Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.716123681Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.757179902Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:16.257806296Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:16.384235703Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:33.275756694Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:33.275756694Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:49.46048549Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:49.54757081Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:89ca9b3c86afe3f160757936e3ad9f8c828ba55bcd5f4da8ba3eadc793625cbd",
                    "sha256:cd55c4e9bb37c3b1ab5c7753c9d17b56a7d023f9c715e51510082bf87d728ec5",
                    "sha256:5ff1d32dc7a12eee967a2076490cb7977d55b6ff29ab48c7f6cd53de235bab3c",
                    "sha256:48c3a98f2fcf54a4b97e6ae0a4916691049da33cb0bcf0efd6264eb801d9ea02",
                    "sha256:8179347e11ea633f4cdc9e902d567a3052e4f40f9e849d4748b6bb9b6b686f08",
                    "sha256:1e83b1b94b9f2b54ef744345756707ca590701db481d14f1b2de57e79f3a6592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dfb2b6ef345c5ff05de875ccbf85d6975a31f0a2598e11627cbeec1d71c149b9",
                    "sha256:e1c964431f0ee49a10165c6a76e281914b971c8a41c2c2e046669b374c254935",
                    "sha256:1faf5c460615b75e4d3c51ddbcfce375ac228cfa706b81bb8d1648d332514dd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e401cb908f7db6f0d079c4936850d486f68b92bf8bffa4f33baa8edd95aafbed",
                    "sha256:f9440c630d92b09def7761cee7a2fedae40bc14fab2a429f4d6f0553df28db3a",
                    "sha256:8dbdedee6f77915ecd9006fb08b677824871efac98f8b4e115ddaa078e43f6e1",
                    "sha256:e61e169cd3289b8a12d17ca94cb7f3e2b2e0a621ffbdb89a822c705ee4745dc2"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:40:16.70730646Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:23.642010041Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:23.642010041Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:23.642010041Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:58.971057149Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:43.138568353Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:44.051421088Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.149707684Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.280935567Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.290857029Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.299677132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.308908952Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.308908952Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:45.944766626Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:46.085237002Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:04.218588622Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:04.218588622Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:16.600852245Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:16.70730646Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7818b6fb00157b3a560bb5729fbba0ea5351cc30c1b8f4a898136529a944e6a7",
                    "sha256:f4d9f8e47f10d88a593caaa60391a710dd54e5520e57855044c2518334656e76",
                    "sha256:8d1ca26352a82764b9ea6f335a756d3d9b81696eb458db9119e97dd54c3f301a",
                    "sha256:5441816436622ac7dfb779846bfd157ce08b0dbe29d89b7c0a1b654a2508bd07",
                    "sha256:8fe4dbc675c8b7c4009c9354bccad646e5591dd6c1711536b1d947474e5dba14",
                    "sha256:5b77afcef02ff94894176bafd2478bf4798d2cc799a94df88fb66da006f64c34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aa2feaf71c10b77845dd0bae6dfa0c2068f07d22181b807cbb49f7b2c13f7f4b",
                    "sha256:6099277078dcfe2daf2e42b2b799057e8f97621a2b8ad290af4b50c7c0a9aad6",
                    "sha256:73f0c3ccd5e50f83f5a2ac95e80ea2d42d6849263351f51921e325e0b2a26ee2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6e332c28703c1233ad76d955ce144a14588398c067ce61176ed10683ec5ebd14",
                    "sha256:20e2ffdf74ca2cafcb9007283e0fd613c85278fc0e736beac73068db214fca37",
                    "sha256:6b665222cee3fb575d8a4503ef5175bf4562ed4fc26d30948eabfa91be11437b",
                    "sha256:5ca2cd0d13c71ed72532f31e8bbbc9fee56db61c9472a5e17536fec8f5f59123"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:12:01.281438825Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.576427468Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.576427468Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.576427468Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.737605223Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:28.095635674Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:28.992135308Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.093522562Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.226777477Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.238113145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.248919373Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.258303323Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.258303323Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:30.879220622Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:31.031031634Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:48.10485952Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:48.10485952Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:12:01.169958227Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:12:01.281438825Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7e2330a459d2671d1e02b3766a3adbfc668995b941240adfc059983703565906",
                    "sha256:53b9dd3e4736ad0746b1bf23fc11d3aa72045b5faf14daabf303e5a9d6bc9a58",
                    "sha256:d34619e975ff5c86a5b5e664dad62113ab67bb447005fbae6de2ce29e6925f3a",
                    "sha256:dffa7d2312f4aec87f1baf646fcc433591f6bd13fa2b8366038ba3a1a3f7a16f",
                    "sha256:30f1786ec038dded7b34d3c56c46c93b2710ad5f84387d24cecad1503dd8792f",
                    "sha256:5f642a3dd5c4c2728909ad921159aaea7c89243d19affcea0e7d8ff7d690c2bc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e4dc90b9ea2b55b382aaf37c8bb3c6d275254399efe77cf0b553b90e11d8a51b",
                    "sha256:4bb21c9e0d50be8a7898be9f1525139950c2643a258708dfdd609702b7fe1e01",
                    "sha256:be00d711c8e3b756677a5d9f9d12ff8a4ef4e8a411d78950b4214b0b38dfdc16",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:62dad3978c07a1a74b14403755ae1a38aed8044368f9343e7dbd06d5472112c6",
                    "sha256:910e45274d2f1e987d1dad592b610a5408816cded7ec7ebd159368226c5c4f58",
                    "sha256:d91802642bb11b5a0fc2479814c987bf3d72b19efeda8f64650898e4c8df067e",
                    "sha256:fc1e1e96439a8496f5fd5440d3e7d4a6f2b153fa9b992d13a665f1ba9cdad7c7"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:31:08.628158834Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.29373107Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.29373107Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.29373107Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:17.940727821Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:19.865140021Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:20.707254857Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.801652367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.921774114Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.93626186Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.969467426Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.981210141Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.981210141Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:22.594038399Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:22.720997808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:54.918828155Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:54.918828155Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:08.536890265Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:08.628158834Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:4a8b6bcdddee4fb700f03db9b736e84401b1b4916698127811f45e4690623706",
                    "sha256:2d0d444284493d431d8379db529fc8ebc0b67d5960df04790ea65c63543273f9",
                    "sha256:ea6c96ec2889611f36a3e7301bf5827b402454b9300c15e69f69ba8991776409",
                    "sha256:54f83f9425e47bf15ed520844a45eeb8c675bbbff3fbd52e21c0bf24e418ce11",
                    "sha256:2ffadb24a8a54ff619aac491952ede0aa5af548b7e6992fc6aaada801a3335e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d7e72f2be87cc8484a85b384f5ead7f2f04575f12c7054ed4aed353ea00379a",
                    "sha256:ff3c9d6917b8fe865a11c469a1d5d206893436d1e5fb7d03e743a5bb9bfccdcd",
                    "sha256:b60e0abe26f08e795fe9358194c6e3883f4ab54302ef5fe41c90b9c6e830911e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc3375d8e78631b7dc8852422240679dbdd3472e190969c1339d3ad125eec3b4",
                    "sha256:a49d6bc411bfa7e21cd0df613ef4f4475f63d29675363656fd0f1317a351b641",
                    "sha256:02415ec98a0b0f3d2ead8a673893d8ebeae27169963e5d7ca93fd9ff66644f9b",
                    "sha256:3b44278bb5615f19275c5080b09b716db27b95ea92beee75f28fcba3ac07bc73"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:23:13.7262198Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:44.708958619Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:44.708958619Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:44.708958619Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:23.839896938Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:43.153597847Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:44.62032058Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.709176974Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.832016413Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.871414073Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.882625268Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.893874907Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.893874907Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:46.633172628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:46.762423442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.197387491Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.197387491Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:23:13.639722625Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:23:13.7262198Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:2a8b34f86b54241b1df0867cccacf5df1798e6e0f440c1857c2ca35afcda5656",
                    "sha256:d575724e457bc0adae73f4daac9695f82ad16b825cd8fe407e3f1b7ccc1ae332",
                    "sha256:5107276da57736f1e4ff85afc8756af1e5cab6f3201b4033952ea08f988c0325",
                    "sha256:f7a860f40c3d10c4d26cb752269229377fd3c8c96ad485fb92ce69ae4164686d",
                    "sha256:df999ecf08abefe6af9895073ac1947b71bc0e4f1f62219df080fd9a0ae13332",
                    "sha256:cd0698236e11cbec50f506798142e8050efe7f1f78b9ef971c4b9a806b86585d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4fc203daa17a03ea6ffe12b28d3ec48bfd5b13069c867fa7d3e4ab3e279abc9",
                    "sha256:206a8bdae77c4b1a51b58dd6a5cd4a289b4336384b316bf59f47e324bbe4970f",
                    "sha256:7240e790621b7629a55a8c6d3bb68fb471340487a8666588fa37eee1dd772a8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8cf4bc6a25ea2455910757886e2b81c0ce5725e1e9303109cb972ff5a0b2b3fa",
                    "sha256:f81867d33ca66fec8397905d7f70cc106c14b98e3857d60bd78b4ebfe70829be",
                    "sha256:605b3d6b663516029492bd876c38487f66bdfa2f74c6573e53cb11e17aade0c4",
                    "sha256:77e46e3de4a1a6f84436bc2ddb048a347ac2f0edfc9282d0631740cde7fbc1da"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:33:04.895989562Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.378274579Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.378274579Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.378274579Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:31.611252192Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:37.014812717Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:38.186012722Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.265553706Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.380805Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.392774463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.404769056Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.437570402Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.437570402Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:40.157814784Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:40.284047569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:52.019256227Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:52.019256227Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:04.803858091Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:04.895989562Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:ae8d66c1c1149d3e25d4dac24281c534893c5bb9cc87c4fe76e9eb097e10ead5",
                    "sha256:f5e8b32679675a864bb54f9a46e935cf64103e88e4a5e00580847e4326880c59",
                    "sha256:1aa31094792b40c0b493e62192d66e7b233b4b0255988632504a31ecde7c66e1",
                    "sha256:2b25768531d7d0bf86fb01422710bcef804f4095d49fa3da494b448dc7fd7d69",
                    "sha256:d30df9b177b5870c2f8ffafd4ff53afce2d8a0882700d4f766bea8683c7744f7",
                    "sha256:7a4d9b883cd2e681d6efc68f4ea0dbc78957d9ea523f52065a9c0e0d1d8b8fba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37f3b35e9766f54f4e0353f07721cc391374617388f812ec55aadecf76802afc",
                    "sha256:91e6b51aab7e906c723d835cacf91c9431a17fd3bb408d6594895b13122ccfd3",
                    "sha256:b625e24a107421692180e3706edd0ccd1535167e2d024dd970bf52e5791e3cbe",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:23faa26c5c2fc79eead75c7c8835af69ab29a69eaa5c14cbaacb3aaeb75d3721",
                    "sha256:9689150446250b44a4c0f84e806271ef4fbe2f9268b5a758074c11256d9cabf1",
                    "sha256:9bcfe9b0ce52e7e028136a866b15420964af6b7b6bb9efcc6f84c072a0476ae7",
                    "sha256:47ec5a89d67efcbe2af718e54194c62fe7683ccfa6c1ffc02f680ca6b4094dbc"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:32.524314716Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:06.150734064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:21.109900957Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.419576145Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.507475525Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.629382955Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.645509288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.658485381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:24.339793595Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:24.460102976Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:18.590938229Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:18.590938229Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:32.444298941Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:32.524314716Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:2e55ad6098929cea35d055f04be64d1d009cb2b08e4e7580918581b8e76d45bd",
                    "sha256:e862b13ee21fc6d00626ed800baa54b8925bacd5b148828b7b5746f415ce7924",
                    "sha256:53fd770dfb8390e3e28d5fe8d4e3f4127337754535bca52f03aa45c5f8c16f08",
                    "sha256:2549c1a2afae7cabbcd2cef9f837eecc9b4021c24c59ca15926be5e1a522fff4",
                    "sha256:81830960cbbf8cae2626763432ebcd9c9d0b9ee977d8508e2d8cdf4484f33c08",
                    "sha256:fceb0a4eb81c9eeb4d392f6d79e7ae149a4523f4bcbbd20e8256c186ef9c2a09",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9626b9f9e8ee00f46397995cd06c96ea8ec61172b0e8c78ebb445c68ca724d6d",
                    "sha256:821d03340820d4ee95ef41f347c1c5e6945e07f7ef41d0aa68091d35c2c57f10",
                    "sha256:dee50a91b3e7bdebd2f0c5eda064a548a26d2aba5607f3f147046079fa287bba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ddb0cf29e702d83a54375162d94ac1dd3b5aa2e7ef773088f4760a944b4d6682",
                    "sha256:1f6aaac8f3a1c93897f8ca2b9778165c77a4f2636124505bfd3aee360ec23c62",
                    "sha256:90681f29f00a277f52e30018c1dba04235bee54a2153719739777e074d6d30b8",
                    "sha256:8b610821cb1492329be7c38a191072a84a1b48700bdf9a1c0525e2595064a624"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:09:34.558052212Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:24.702054985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:03.683944436Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:05.036907008Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.124744323Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.240567147Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.250185612Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.258588575Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.293909559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.293909559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:07.024584641Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:07.144436399Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:19.381237185Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:19.381237185Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:34.453952593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:34.558052212Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:6124e0ef078177c96769fe59dd5d1c4388364eaed36d0a41820ec1540ee7f7a9",
                    "sha256:e88fb7f32458386d70ce4ea605541bd50e841aa3659c9cf3f48b359b8f881073",
                    "sha256:8718054879ae26dbe2cf59e15d38ee47ce1b425fc0142c3eb1fdf4d4fddbe679",
                    "sha256:0421b78184bedb272930db29251f461007042b0f06ef779cadaf5dcbbe0c6ef7",
                    "sha256:ff55801f3816d08a5a0c696cf5f4c714370be31479ab31078c4620ce4130f3b6",
                    "sha256:3a7383ac5e661a1b582d5404a71d58e68a90b7f6e5e454d19fe67e262dc5369a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85560bc6d1617f5788b44b92d46fa83b608d90bcafd724fdc5415e66bb45fc4e",
                    "sha256:6d2e212ac896f4196f6bdc0dd05f524c6b5520e88bf374f6e4120bcbace698f6",
                    "sha256:657f5ca344c6b0f7c457540315bcc480e75e681035e6f79ad484bc7dc6f303eb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3bd5f62a5c2b87364594fb0fa9cdb8de6a270bd98c16bafd012e032293aff31d",
                    "sha256:e8e2e0daff64fa00e697b86959fc0387d02029d48c1e30acc2a564282bab2a76",
                    "sha256:73261725eb4f886013684c5ad3e07bb3b728bc4ef12ff9952151aa7eee823b5c",
                    "sha256:8ec14cddb6c95b1b567f3177578f7a4c6d0f8511ea01d7bb6ba9c5278b8a0fbe"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:49.282396608Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.873802481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:27.503744636Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.326274161Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.430472776Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.544556086Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.553685489Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.561670361Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.594391478Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.594391478Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:30.236574932Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:30.364605757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:33.225170739Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:33.225170739Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:49.193362988Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:49.282396608Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:7d4f7982334e1f907718a483851602439207f7ec70b3f0a8559614f9dd255d30",
                    "sha256:b13b33e795933c4688327e8254b3a4aaa2c6064c705e5be93fdf242466d9c618",
                    "sha256:fd70fca9f465edc329fdee69f86026569f6e78d73e7feb61b297f4b53ff2777f",
                    "sha256:78b532aeda69743c326326e486330070bec1d5e0132ea997acdedf63efe5fd83",
                    "sha256:46b49611bceb8bf3122cc8751f39686e2fc4f6dccc434a5ea1d85b40f253c9db",
                    "sha256:a0194bd4b898b4690eba8393bf0d5b0c63aaeec2c99f2728563b89e93d418325",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b8015cf0de3f3d63d47d152896ccd1df2e389ccfea04ffbfdefdb32b8506f9dc",
                    "sha256:41a2d1eba37067517544de349e287e46a82e507561c2894f45a4c6e839e7719b",
                    "sha256:f2af847b7f5dd6fe8f30fe4d7850f68005a0e3d3e08857a5ed1b6bdd41425768",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3119b4ef5945dbffeb51f1f62d720e1ce343473795fc48a08353cd3f04367dea",
                    "sha256:274edc6757d65775d254cd0b439b2a4968fd36b861ec063ae66ce629695d62cd",
                    "sha256:bfba1eeeec9a760babbaed436a509c7fc7112cd7fe04d7d3b7fef426c4b57169",
                    "sha256:f40466892660fe649e77dd7288eb52daba9879735274c3749c2cc41bc2f82285"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:01.628497762Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:32.721625308Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:40.444204213Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.210595639Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.295834461Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.435598931Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.471503791Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.483495254Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.496057201Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.496057201Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:43.156053533Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:43.282803146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:46.352581796Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:46.352581796Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:01.546607054Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:01.628497762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:86ae7b0949bcbead5e76b4afadc9df92ea698fbbc77cecbcf5caeee4f6afde4b",
                    "sha256:0ab88cdea47afd7291e46c7ea22e50292220a395e01da3193c7b70946245bfbd",
                    "sha256:066d020b41897ea4d4ffa5e233cf03ffeea5dea8a636a25796530761db3d0981",
                    "sha256:e0d8c550891749f7eeab062114d3bb54bc521ed09ec47ed90612e5fdc1688f1a",
                    "sha256:12edb9da32c7c7f14d4f6150e2ad2219636e0056ca387e9ed81fcf4ae10f997a",
                    "sha256:fe7728bedee4c718f9bd6c370a8510a432fccf53a76ee43d286c98ddd7144ea4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fbf1169163e775d22c5e0942182d7d2eb74a3046c74a1dad7af374fb15220c23",
                    "sha256:12deb041a7e48969050866d4b4b27f777cb69cccf0921c4fb6c91f6042b728fb",
                    "sha256:fa68d8ff867c49381a7d88491a9edfa09da241733a1880fa6c6acd3b111ab9d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3fa65e3d6deb051faf8998afe1e4b3c1ca65d03110483781b44f50bee59a6966",
                    "sha256:d5a89ce40f04701c7d990c72dde57b36e18650f2b8a6e22ebd12460313944f8b",
                    "sha256:04b297ce036e3f4a3632085170950eea7e3b359583b9bae9eb6a11ccacf194cd",
                    "sha256:734173b7dbdadd4d94217433791fdc19aa2385d4c0f6ac2497f1ab1b0d6636b3"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:18:36.75729527Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:33.754138635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:54.926154667Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.207622712Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.287944727Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.411270965Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.421782799Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.452576845Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.462270928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.462270928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:57.855892581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:58.008648987Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:20.215897335Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:20.215897335Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:36.665676081Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:36.75729527Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:6eaa333c979825dda7016737e8809208f1e2f20184370fe199235cee48f1299d",
                    "sha256:23b25ff3ecca36fc0112555fccae30e604fbfe8252ed60bbe37b173192aed241",
                    "sha256:666b72c346d6d5652dbe86040f0057b944d0f68716cd481e8016852058adb3e8",
                    "sha256:1692fc77852e6f7524e6c9bea077a8ae74ec6e2814f6245bfc574f0340843386",
                    "sha256:b187d423d040e942b55cc1de9fe09b0b16395b4f1373b400907abff7f44849a3",
                    "sha256:e64b704b9da29ee9601d7d7ba78b5df42ee3f43df9acde471d7bace19f74c045",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:314d83d41e395d075ca112d082b5afe583f54f1102fd36e2c5e0fbe08715440b",
                    "sha256:95e34243bfeecb67ef34046456751ee58c8473a3289f7893eb7fc5da705cc9f9",
                    "sha256:52614d0cefa66c14e5410dba3c397ecc2fd0f4cecd582e478203cceb7c5eae60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6db02f02e38f328332fbd48ea663ccae779d8ee47be95c5f3a8b378ec75d0ce8",
                    "sha256:708c98d7fc53ffb4c9687266460cc32c9514d87302ed3dc0398fd0c69dafc420",
                    "sha256:0d420b65bdabc36628d7cef29517ffa3ea284a624c8d56f266faef8b6349a96f",
                    "sha256:2c8f74a111fd78d080e79bc1d17bb65c86950d058898e3cd50258622521de791"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:49.54757081Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:34.136809299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:13.279155064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.484950386Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.580819739Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.701658215Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.716123681Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.757179902Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:16.257806296Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:16.384235703Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:33.275756694Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:33.275756694Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:49.46048549Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:49.54757081Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:89ca9b3c86afe3f160757936e3ad9f8c828ba55bcd5f4da8ba3eadc793625cbd",
                    "sha256:cd55c4e9bb37c3b1ab5c7753c9d17b56a7d023f9c715e51510082bf87d728ec5",
                    "sha256:5ff1d32dc7a12eee967a2076490cb7977d55b6ff29ab48c7f6cd53de235bab3c",
                    "sha256:48c3a98f2fcf54a4b97e6ae0a4916691049da33cb0bcf0efd6264eb801d9ea02",
                    "sha256:8179347e11ea633f4cdc9e902d567a3052e4f40f9e849d4748b6bb9b6b686f08",
                    "sha256:1e83b1b94b9f2b54ef744345756707ca590701db481d14f1b2de57e79f3a6592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dfb2b6ef345c5ff05de875ccbf85d6975a31f0a2598e11627cbeec1d71c149b9",
                    "sha256:e1c964431f0ee49a10165c6a76e281914b971c8a41c2c2e046669b374c254935",
                    "sha256:1faf5c460615b75e4d3c51ddbcfce375ac228cfa706b81bb8d1648d332514dd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e401cb908f7db6f0d079c4936850d486f68b92bf8bffa4f33baa8edd95aafbed",
                    "sha256:f9440c630d92b09def7761cee7a2fedae40bc14fab2a429f4d6f0553df28db3a",
                    "sha256:8dbdedee6f77915ecd9006fb08b677824871efac98f8b4e115ddaa078e43f6e1",
                    "sha256:e61e169cd3289b8a12d17ca94cb7f3e2b2e0a621ffbdb89a822c705ee4745dc2"
                ]
            },
            "variant": "v8"
        },
        "sid-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:56.777604875Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.671179687Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.777604875Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:4219acedb452a4fbbb30d8a53236c83ea7c10995f3a426d5ec4b1d6c8574802d",
                    "sha256:e2ae1bc61856a489ffd77d28ccb98c4b4cf23668e431e2e7280ad6b24f382aa7",
                    "sha256:14a25c345dd3eb7b8e6e6aa20934c8b4774994ce99130728898805bf38978eff"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:40:17.758583645Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:51.381449321Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.646272684Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.757385708Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.902782372Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.931877359Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.971842121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:54.884832282Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:55.050519517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:38:59.138515004Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:38:59.138515004Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:17.612547912Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:17.758583645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:6d08810a1dedfd66ee906213e2bee9fd49e15a9cae2c424502adf14bb0412e1b",
                    "sha256:ac476feecd719a11ea7bc02dd6fb737fda88d4a091e9e17537839476eec9eade",
                    "sha256:24399c1a2c767b4a0e835b127efcb9e960c6643060ef5550a30d4113f06afd18",
                    "sha256:fc27773c4d33d54205385456bff597530e89257f65f3184bf03b0e44748d71c9",
                    "sha256:c118693f04c0063f41694e1d07fb5a30a88346eadeda635ac9f249432b36204f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:985eea47b1c37db7d1fae5d089edecb0e6e6a0f7fe4baa8f8afec541f80db279",
                    "sha256:84b6ba60f3fefb3b87de0e05ce98a717fcfa09cd94d671ec3594e06c44dd5e61",
                    "sha256:c02c210e437435a571ebf8c6eda2e49cf67f946135e8752d387ade4efbbc17b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d9fa925072e1b3230361ad4e367563f12b9ef58df53e86bb190e5f6eb81e9919",
                    "sha256:924dc769defa4a771d247d6ff60314ae69e6b9fb75d7e059089b578b62efa2fa",
                    "sha256:c03f696b28920c9f28dc9c4aeae3af7b19ba7d53fcf12fd3591596085f607777",
                    "sha256:a38baa8df342428d0dc934946f7679ddfdb0a3037cc4a0a8f10b41ba2c958ab9"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:12:01.90081037Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:18.538174217Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.31347439Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.409655654Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.562308675Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.570760343Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.578661103Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:21.168235704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:21.300453839Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:43.223282229Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:43.223282229Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:12:01.763049457Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:12:01.90081037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7e2330a459d2671d1e02b3766a3adbfc668995b941240adfc059983703565906",
                    "sha256:61b8d351ea9601238a57597e74dae9bbd24b65eb67e49b6a19b307873c8e3dbe",
                    "sha256:f8a649475b8e264f6ab3b1b6c6d3206f4c668b988508ecde63bce54b59f9223f",
                    "sha256:be1317d4842ccd06c8f11cc25913e9a84780f3d933e2461b9928cc7fc1701d46",
                    "sha256:09341cdd42ed071bff6ffc9616069b68575ea3e5387d58dc1bf86f76dbbb11c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d67a6c9f64b6e848a905d9ce533409c7295aead01d797ec4edbf1fec3651ef3",
                    "sha256:2eb172fd58ec86a0255b004e1f9216ba3d91018f8360ef7ed15122c5d51d1606",
                    "sha256:1c1a88009afb339f6e58d3a085d13e0c422718f2a9181375c22d37e6283fb4f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:63a2ddf0f2792977d2aff1f1709d1ddf303694c5e1ca856745431c27e7293f24",
                    "sha256:085f00bcdf42d0ce2834bb0c2c62ce2e35e633264a8cc99842973c6e77a9444a",
                    "sha256:e765f5c3d81042e2680d3b890c0242809425b9829a79f0c7d3e3b38f408aa974",
                    "sha256:d8fae0b35750a49eb0e0a697927572f3bf8c2bd034d57ccb6dcfbcdecdf6c847"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:59.906981662Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.046043631Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.686286857Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.784004493Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.924002974Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.963996778Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.974260081Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:20.515553304Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:20.660112651Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:29:43.080972657Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:29:43.080972657Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:59.769958697Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:59.906981662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:dd97a1c1be3575d4c4e4c291416fb404538fb09e23c40c0c322f2e56077b6fde",
                    "sha256:ea4cc0f208420cfec860bd0ee0048e614b33c17b2cf83491322ab1f31d0e8e25",
                    "sha256:1b56705331f46e72b538c3b1514cde105103972c23ea9c8d8e1a8aca31f7c8a3",
                    "sha256:39874499c48465ea85373af3255a1fa3c2d71e008b6b0ad47d3cd355bb84d912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a472f646dd37e8f907b9e285a43c73a18d93c76f4431ef3eb89f2e211e72287",
                    "sha256:1c6428f23e3224a2083ed9ca96b09e6b8d8499275ccd4f02cfd265b80cacb3f5",
                    "sha256:f7d586a15ebefc6793ec74a036b28de3d993eaaab14d4a15f55c7762e9f01dc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa3556a7812f045fc25911a5d66ab7295cba58532377711cf0fb9cdd2e56664a",
                    "sha256:8d0e17c8582a5635321f0a61ded83333cdf73186fb76ab758cd729f0e22b77d0",
                    "sha256:925e9d21991cfad8997f0e6786b1fd84028f08b4a5200e3b4ac1f0bef9f97a5d",
                    "sha256:c50f33dc67112ab42c31e6dec10860ab7dd6ec91b49e348dfeb8d517ee4893fd"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:23:14.818632779Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.161712714Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.815026825Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.900797018Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.013367999Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.024694045Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.045276788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:15.597160732Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:15.712267169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:58.19507422Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:58.19507422Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:23:14.72224635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:23:14.818632779Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:768243a0f0fd3fe4770c5a5996e8518789e02897b309aa9469bc53e151de3131",
                    "sha256:b8fa6592e8cd705d4e647ea3036f9d9f94923ba8bd01b60a17829650073be55a",
                    "sha256:83a4d104825b6755af8ee16fba9f57cca55e01e47c703f365709439cfbf4beb8",
                    "sha256:a3a8acd80267f5fe0044a0f957eb05e7161a96f55fc239855b8f370c5091f3fc",
                    "sha256:b672a6422020617c530257ae3d37f0fcacedf4537ba992cc437b5c6579875683",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aca9f10ee7fa3894eff21e00c4fdad1f10699a7d5fe9e735198da79a602f1e22",
                    "sha256:569765eaea52a01bdcc35e59e7c260f063a18de5da78de2859543547138b0dc7",
                    "sha256:f07f78d45b019498d722ccd318f59062193e75e795349f5c643a3aced643bfcb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1e0e86e2601673d46b13d030362111c831871b57eacc63b924d45b8483f92b5d",
                    "sha256:f75984e4951bbbd63047c7f356e01b85622a446375899a5737a142b836c70d08",
                    "sha256:03e7c38bb7c6d0a7e8a69d37e235ad7864cc84bd115895ed4aa50db0800ecc47",
                    "sha256:c8d7ff4537ec602e42b59cbd005a137c82dab758005b3695954e5a5583280e96"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:57.212342338Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:24.829060013Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.485137412Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.566658591Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.690309431Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.713401075Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.757367126Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:27.3123863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:27.43183628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:31:36.886294188Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:31:36.886294188Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:57.105516412Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:57.212342338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:e0c665897629d49338dd976bdf2c8227652531b5a21965b7020cd3c1817c37f8",
                    "sha256:f6387863feebfbf2d4d3625017cc68624341239a4a32ab6ff3752934024ce1eb",
                    "sha256:c36be7ec2803c3519b5c512c7c1be8e04bbfae5e2259e016db140da54a94d0e2",
                    "sha256:07ef3a4c92324c7b943d00ae38c3b20355f1cc5e94ccb917f98cff270fba6927",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fc2a4faf93a5cfb355bb9868a4b2013ba665de8aee67f46fd312e41526a7b6e4",
                    "sha256:6fb33811229b7c63ebe73e4ad757961db37ebed7e409d5365e6420dcc9767e64",
                    "sha256:1e11cbef07312b1220400ec0b5811cfe24fe12eb6a42e3b7bf81f4ee0c78d285",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b65d92a183bfa656d30400bc4187478477939671ddf9d4b9650e7a69f722e9a2",
                    "sha256:80a8af39454a25699b6c813ca573c71bc606e4950c67ea229c2e57fd7850d8f3",
                    "sha256:3581bde7650b8d9f061b00094e94ad14b8e9eeaecb529adf83fe8214b7152666",
                    "sha256:6c43079ac550cf0e24a63b9fded66364dd6bdbebd5be42fcbd91b43138f62fdb"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:34.87071509Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:15.982072902Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:15.982072902Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.3 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:34.766606142Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:34.87071509Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:0b9ce36ae2c129bd70e31645b4d4970e7497a25c8a2e3c3900bb44acd2428c99",
                    "sha256:71b40f181b2e3dad13db7174d0c337ad8a9e820b4703aa47a07a1bf5c4c4cff6",
                    "sha256:755cd9b7d6f4b45ceb89b1b95ac8e374a30fdb1ae5182935e1536738aa10c6f9"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:09:21.461813411Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:19.618704135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.278888116Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.371147367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.512017328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.547809396Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.558442816Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:22.151449583Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:22.26936068Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:06.131082755Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:06.131082755Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:21.353619396Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:21.461813411Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:e9e6853672a2970e38c9888492638eef6ad56962f74c18600d29cb2a86570649",
                    "sha256:b40d1d1caf10abda5930e85015d96a22c3dfa64d47d82f35be4a2f6183b13f2e",
                    "sha256:06b98a02a22f071505d6be98ea829c27247ff0dc141dbb0fb2943702e092af59",
                    "sha256:8187f996a8db65a72444f4a36770d0bf6d3a3d314358eefb683b24ed4d3a4e91",
                    "sha256:60ab886784832860bb31a0278868645d8089b5eb651d99c25341bb4e3ddf2a02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39587871f11cb4433b34c0cf8361197422183998de3e5d78d27ed15976e976d3",
                    "sha256:270db374ec8346792d1095479fc9636d5b8b86bc7b6750b376b972c1096d9270",
                    "sha256:5261b5ac040425531992ecc29ea60a5470c906b08127f35365778a9568229d34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9af9cf531c57a3ef41f87618689b5c484507edf21a6c4e59b1a5cd67e85d6ea9",
                    "sha256:3ad89a6ed42d36e8adea15bbf46d686eeb3c77bae9a5c83e9615b3f9a7b900e4",
                    "sha256:5d9b354430be5ad27102d0d3fbad81430102bdc5087480cb5664444ee443028a",
                    "sha256:af5f6da58e6da9cd01146c37ce955b55b0aafaa6aa31a1a49fc46afc9631e608"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:44.893752376Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.75478048Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.435777962Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.522438412Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.638196364Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.648544997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.687212348Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:07.335540496Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:07.45302794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:25.490161199Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:25.490161199Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:44.788532883Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:44.893752376Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:50d2a0a3945dc9c8c5467074aa71080c817c5fe615727383825f03e7ac559c6b",
                    "sha256:0187b4463836ee4d50726fac3d6027508efd2b7cdaa7e9c5524481569929089d",
                    "sha256:f1833770787ec1190b1a76f092c0325dfae8f80dbe568911aaa36eefcad66586",
                    "sha256:63f8596acb3cba5d3b5819ccb2c250d5be580e21a92b3ddbc4f7d6ef060dea7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:987e0eb53e78e8ed04be665707e9b3e03320faa467729cfec7fb75fd45ae48df",
                    "sha256:097115b2dee01ffbacc8913f9e8c5242d0090497b9530c50251d08595f386ee0",
                    "sha256:497398cfb7038e71d858fa80cb140e912cf26e08a744905d4a483c8f62b30788",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37e5bb2f19ac31b98b6fcfb877e24b4e2a9b03068fcd0fc541649ae3e670e1dc",
                    "sha256:a02eeb3175fed549718b735c47e47d5dab5c0a8e4f9bb5b808c410d9f845f34c",
                    "sha256:f9c79d2ccafdeea5421df1c0164d8fd236112a340b6c623be5311f06ca6d8c3d",
                    "sha256:639349d61369c9bb038492460aecbf2b23caba4fdd059827a494581bf057d715"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:22:52.388176539Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:30.734417352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.391413657Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.472194476Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.616112719Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.660036125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.66935303Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:33.261807476Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:33.378867874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:21:32.880783296Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:21:32.880783296Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:52.2843702Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:22:52.388176539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:21a499b362d1e69fe14f4bbf239d71b304f325e506988993eff8dbc2bcb8d9fb",
                    "sha256:08b0c4079b2097326a452c280cd17b5a3e2fe0a87acf5fc6479b6cff495a5608",
                    "sha256:8f3b87227fde99f7c074caff5b8bd0b1f5eedd46c0d2a648a7ec5d37291df352",
                    "sha256:09b0ae2f710df1f1dfe8baa1d90f9332478e8c1c9c53d820a823b9b7f743c87c",
                    "sha256:02b108f1473fe61b3b9e537da30ad471164cd2d3fdc762e408f6de0843738ebf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7bc96e7361581ef0315f0d50235bfae2d6e6de9f13a5b821963b5b6475380c8",
                    "sha256:ab6073fffae2a300096ca07b8f883f13ecf8a442967f5a461779ce1260bf3d79",
                    "sha256:d9d289ecb10d221723e06edb9ba13a75c06d46d7858196c409931e08b42eedc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fed66ee707abf3b5e1c8d61a0ae45186c2c17f386110ab7d155dc925ba3fc425",
                    "sha256:97e56e28cb577223e8483144dbb4acce08e1e44bf69be17c9d8757d2a41bdd7a",
                    "sha256:1fc2e639d76bb397d08e0c4386214cc7d64a354c203383bb3830974c22e2214e",
                    "sha256:fb66169b82e088f687df8220ca60451df50d23d76f0bcc40847d23fc155fc50a"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:18:40.541674862Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:37.929365647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.622493586Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.713383634Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.86440518Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.904376089Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.915460785Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:40.241916774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:40.365158356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:17.197616627Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:17:17.197616627Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:40.433751022Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:18:40.541674862Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:e478c6e0380e9a6132a7b7595bdfdaa69afbff7a59589b5aa61ed9034934ea8d",
                    "sha256:6311f1da69cd036e597129cc2f028e7dc015cdeb084a113953d65fa7c6aa44b3",
                    "sha256:cc33373bf50b19f19fd773424ea43726dba236a24654efe53d644de99b9c7e92",
                    "sha256:d79a55f9d489f679a91d8ba40933b7b9a95ee64ef3fe4fba82cc0c68be2b23fc",
                    "sha256:ce60876772934b93095da76edac9e7dfb43757bcd16c9707c674df8a9a2dc616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e73359ffaa50388b28e656b20344334a03cbc4098b800e1c4d01d8170e827a46",
                    "sha256:7f16b9d269c15ab1868a29df18371fb142d8dcdc46d96d6a0f9c8f966f6ca0c2",
                    "sha256:10582767685d8caa5283790f703f75daf9e2d69d0483cd6168d4da798e4db138",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c7f3e7e22e3e169f50791f8b0d4f60a6be2e72976fce852dc748b0d25a0e8f3",
                    "sha256:8b728b68ee28aaedbf6fddeb066f70bfd9f94b9c4868607d55a80494b05c58c4",
                    "sha256:a532980f5eac5e41d2cc2300d12030eca7c82c55ad3f6749d7edef69a42de5bd",
                    "sha256:4f3c6dd46fc825778700af0e1aafad0c128fd1f83a04232c2bdd3927181bc562"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nano-devkit-nvme",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:56.777604875Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nano-devkit-nvme",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:22.955707841Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.671179687Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:56.777604875Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:4219acedb452a4fbbb30d8a53236c83ea7c10995f3a426d5ec4b1d6c8574802d",
                    "sha256:e2ae1bc61856a489ffd77d28ccb98c4b4cf23668e431e2e7280ad6b24f382aa7",
                    "sha256:14a25c345dd3eb7b8e6e6aa20934c8b4774994ce99130728898805bf38978eff"
                ]
            },
            "variant": "v8"
        }
    }
}